

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Thu Jul  7 06:18:58 2022

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og9 
     1                           	processor	16F1938
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBIGRAM,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     6                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     7                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,noexec
     8                           	psect	nvBANK2,global,class=BANK2,space=1,delta=1,noexec
     9                           	psect	cinit,global,class=CODE,merge=1,delta=2
    10                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    13                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    14                           	psect	inittext,global,class=CODE,delta=2
    15                           	psect	clrtext,global,class=CODE,delta=2
    16                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    17                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    18                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    19                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    20                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    23                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    24                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    25                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    26                           	psect	text7,local,class=CODE,merge=1,delta=2
    27                           	psect	text8,local,class=CODE,merge=1,delta=2
    28                           	psect	text9,local,class=CODE,merge=1,delta=2
    29                           	psect	text10,local,class=CODE,merge=1,delta=2
    30                           	psect	text11,local,class=CODE,merge=1,delta=2
    31                           	psect	text12,local,class=CODE,merge=1,delta=2
    32                           	psect	text13,local,class=CODE,merge=1,delta=2
    33                           	psect	text14,local,class=CODE,merge=1,delta=2
    34                           	psect	text15,local,class=CODE,merge=1,delta=2
    35                           	psect	text16,local,class=CODE,merge=1,delta=2
    36                           	psect	text17,local,class=CODE,merge=1,delta=2
    37                           	psect	text18,local,class=CODE,merge=1,delta=2
    38                           	psect	text19,local,class=CODE,merge=1,delta=2
    39                           	psect	text20,local,class=CODE,merge=1,delta=2
    40                           	psect	text21,local,class=CODE,merge=1,delta=2
    41                           	psect	text22,local,class=CODE,merge=1,delta=2
    42                           	psect	text23,local,class=CODE,merge=1,delta=2
    43                           	psect	text24,local,class=CODE,merge=1,delta=2
    44                           	psect	text25,local,class=CODE,merge=1,delta=2
    45                           	psect	text26,local,class=CODE,merge=1,delta=2
    46                           	psect	text27,local,class=CODE,merge=1,delta=2
    47                           	psect	text28,local,class=CODE,merge=1,delta=2
    48                           	psect	text29,local,class=CODE,merge=1,delta=2
    49                           	psect	text30,local,class=CODE,merge=1,delta=2
    50                           	psect	text31,local,class=CODE,merge=1,delta=2
    51                           	psect	text32,local,class=CODE,merge=1,delta=2
    52                           	psect	text33,local,class=CODE,merge=1,delta=2
    53                           	psect	text34,local,class=CODE,merge=1,delta=2
    54                           	psect	text35,local,class=CODE,merge=1,delta=2
    55                           	psect	text36,local,class=CODE,merge=1,delta=2
    56                           	psect	text37,local,class=CODE,merge=1,delta=2
    57                           	psect	text38,local,class=CODE,merge=1,delta=2
    58                           	psect	text39,local,class=CODE,merge=1,delta=2
    59                           	psect	text40,local,class=CODE,merge=1,delta=2
    60                           	psect	text41,local,class=CODE,merge=1,delta=2
    61                           	psect	text42,local,class=CODE,merge=1,delta=2
    62                           	psect	text43,local,class=CODE,merge=1,delta=2
    63                           	psect	text44,local,class=CODE,merge=1,delta=2
    64                           	psect	text45,local,class=CODE,merge=1,delta=2
    65                           	psect	text46,local,class=CODE,merge=1,inline,delta=2
    66                           	psect	text47,local,class=CODE,merge=1,delta=2
    67                           	psect	text48,local,class=CODE,merge=1,delta=2
    68                           	psect	text49,local,class=CODE,merge=1,delta=2
    69                           	psect	text50,local,class=CODE,merge=1,delta=2,group=2
    70                           	psect	text51,local,class=CODE,merge=1,inline,delta=2
    71                           	psect	text52,local,class=CODE,merge=1,inline,delta=2
    72                           	psect	text53,local,class=CODE,merge=1,delta=2
    73                           	psect	text54,local,class=CODE,merge=1,delta=2
    74                           	psect	text55,local,class=CODE,merge=1,delta=2
    75                           	psect	text56,local,class=CODE,merge=1,delta=2
    76                           	psect	text57,local,class=CODE,merge=1,delta=2
    77                           	psect	text58,local,class=CODE,merge=1,delta=2
    78                           	psect	text59,local,class=CODE,merge=1,delta=2
    79                           	psect	text60,local,class=CODE,merge=1,delta=2
    80                           	psect	text61,local,class=CODE,merge=1,delta=2
    81                           	psect	text62,local,class=CODE,merge=1,delta=2
    82                           	psect	text63,local,class=CODE,merge=1,delta=2
    83                           	psect	text64,local,class=CODE,merge=1,delta=2
    84                           	psect	text65,local,class=CODE,merge=1,delta=2
    85                           	psect	text66,local,class=CODE,merge=1,delta=2
    86                           	psect	text67,local,class=CODE,merge=1,delta=2
    87                           	psect	text68,local,class=CODE,merge=1,delta=2
    88                           	psect	text69,local,class=CODE,merge=1,delta=2
    89                           	psect	text70,local,class=CODE,merge=1,delta=2
    90                           	psect	text71,local,class=CODE,merge=1,delta=2
    91                           	psect	text72,local,class=CODE,merge=1,delta=2
    92                           	psect	text73,local,class=CODE,merge=1,delta=2
    93                           	psect	text74,local,class=CODE,merge=1,delta=2
    94                           	psect	text75,local,class=CODE,merge=1,delta=2
    95                           	psect	text76,local,class=CODE,merge=1,delta=2
    96                           	psect	text77,local,class=CODE,merge=1,delta=2
    97                           	psect	text78,local,class=CODE,merge=1,delta=2
    98                           	psect	text79,local,class=CODE,merge=1,delta=2
    99                           	psect	text80,local,class=CODE,merge=1,delta=2
   100                           	psect	text81,local,class=CODE,merge=1,delta=2
   101                           	psect	text82,local,class=CODE,merge=1,delta=2
   102                           	psect	text83,local,class=CODE,merge=1,delta=2
   103                           	psect	text84,local,class=CODE,merge=1,delta=2
   104                           	psect	text85,local,class=CODE,merge=1,delta=2
   105                           	psect	text86,local,class=CODE,merge=1,delta=2
   106                           	psect	text87,local,class=CODE,merge=1,delta=2
   107                           	psect	text88,local,class=CODE,merge=1,delta=2
   108                           	psect	text89,local,class=CODE,merge=1,inline,delta=2
   109                           	psect	text90,local,class=CODE,merge=1,delta=2
   110                           	psect	text91,local,class=CODE,merge=1,delta=2
   111                           	psect	text92,local,class=CODE,merge=1,delta=2,group=2
   112                           	psect	text93,local,class=CODE,merge=1,delta=2
   113                           	psect	text94,local,class=CODE,merge=1,delta=2
   114                           	psect	text95,local,class=CODE,merge=1,delta=2
   115                           	psect	text96,local,class=CODE,merge=1,delta=2
   116                           	psect	text97,local,class=CODE,merge=1,delta=2
   117                           	psect	text98,local,class=CODE,merge=1,delta=2
   118                           	psect	text99,local,class=CODE,merge=1,delta=2
   119                           	psect	text100,local,class=CODE,merge=1,delta=2
   120                           	psect	text101,local,class=CODE,merge=1,delta=2
   121                           	psect	text102,local,class=CODE,merge=1,delta=2
   122                           	psect	text103,local,class=CODE,merge=1,delta=2
   123                           	psect	text104,local,class=CODE,merge=1,delta=2
   124                           	psect	text105,local,class=CODE,merge=1,delta=2
   125                           	psect	text106,local,class=CODE,merge=1,delta=2
   126                           	psect	text107,local,class=CODE,merge=1,delta=2
   127                           	psect	text108,local,class=CODE,merge=1,delta=2
   128                           	psect	text109,local,class=CODE,merge=1,delta=2
   129                           	psect	text110,local,class=CODE,merge=1,delta=2
   130                           	psect	text111,local,class=CODE,merge=1,inline,delta=2
   131                           	psect	text112,local,class=CODE,merge=1,delta=2
   132                           	psect	text113,local,class=CODE,merge=1,delta=2
   133                           	psect	text114,local,class=CODE,merge=1,delta=2
   134                           	psect	text115,local,class=CODE,merge=1,delta=2
   135                           	psect	text116,local,class=CODE,merge=1,delta=2
   136                           	psect	text117,local,class=CODE,merge=1,delta=2,group=1
   137                           	psect	text118,local,class=CODE,merge=1,delta=2
   138                           	psect	text119,local,class=CODE,merge=1,inline,delta=2
   139                           	psect	text120,local,class=CODE,merge=1,delta=2
   140                           	psect	text121,local,class=CODE,merge=1,delta=2
   141                           	psect	intentry,global,class=CODE,delta=2
   142                           	psect	text123,local,class=CODE,merge=1,delta=2
   143                           	psect	text124,local,class=CODE,merge=1,delta=2
   144                           	psect	text125,local,class=CODE,merge=1,delta=2
   145                           	psect	text126,local,class=CODE,merge=1,delta=2
   146                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
   147                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
   148                           	dabs	1,0x620,48
   149                           	dabs	1,0x5CB,37
   150                           	dabs	1,0x5A0,43
   151                           	dabs	1,0x538,56
   152                           	dabs	1,0x239B,0,_mtouch_button
   153                           	dabs	1,0x2338,0,_mtouch_sensor
   154                           	dabs	1,0x7E,2
   155  0000                     
   156                           ; Version 2.40
   157                           ; Generated 17/11/2021 GMT
   158                           ; 
   159                           ; Copyright © 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
   160                           ; All rights reserved.
   161                           ; 
   162                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   163                           ; 
   164                           ; Redistribution and use in source and binary forms, with or without modification, are
   165                           ; permitted provided that the following conditions are met:
   166                           ; 
   167                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   168                           ;        conditions and the following disclaimer.
   169                           ; 
   170                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   171                           ;        of conditions and the following disclaimer in the documentation and/or other
   172                           ;        materials provided with the distribution. Publication is not required when
   173                           ;        this file is used in an embedded application.
   174                           ; 
   175                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   176                           ;        software without specific prior written permission.
   177                           ; 
   178                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   179                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   180                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   181                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   182                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   183                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   184                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   185                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   186                           ; 
   187                           ; 
   188                           ; Code-generator required, PIC16F1938 Definitions
   189                           ; 
   190                           ; SFR Addresses
   191  0000                     	;# 
   192  0001                     	;# 
   193  0002                     	;# 
   194  0003                     	;# 
   195  0004                     	;# 
   196  0005                     	;# 
   197  0006                     	;# 
   198  0007                     	;# 
   199  0008                     	;# 
   200  0009                     	;# 
   201  000A                     	;# 
   202  000B                     	;# 
   203  000C                     	;# 
   204  000D                     	;# 
   205  000E                     	;# 
   206  0010                     	;# 
   207  0011                     	;# 
   208  0012                     	;# 
   209  0013                     	;# 
   210  0015                     	;# 
   211  0016                     	;# 
   212  0016                     	;# 
   213  0017                     	;# 
   214  0018                     	;# 
   215  0019                     	;# 
   216  001A                     	;# 
   217  001B                     	;# 
   218  001C                     	;# 
   219  001E                     	;# 
   220  001F                     	;# 
   221  008C                     	;# 
   222  008D                     	;# 
   223  008E                     	;# 
   224  0090                     	;# 
   225  0091                     	;# 
   226  0092                     	;# 
   227  0093                     	;# 
   228  0095                     	;# 
   229  0096                     	;# 
   230  0097                     	;# 
   231  0098                     	;# 
   232  0099                     	;# 
   233  009A                     	;# 
   234  009B                     	;# 
   235  009B                     	;# 
   236  009C                     	;# 
   237  009D                     	;# 
   238  009E                     	;# 
   239  010C                     	;# 
   240  010D                     	;# 
   241  010E                     	;# 
   242  0110                     	;# 
   243  0111                     	;# 
   244  0112                     	;# 
   245  0113                     	;# 
   246  0114                     	;# 
   247  0115                     	;# 
   248  0116                     	;# 
   249  0117                     	;# 
   250  0118                     	;# 
   251  0119                     	;# 
   252  011A                     	;# 
   253  011B                     	;# 
   254  011D                     	;# 
   255  018C                     	;# 
   256  018D                     	;# 
   257  0191                     	;# 
   258  0191                     	;# 
   259  0192                     	;# 
   260  0193                     	;# 
   261  0193                     	;# 
   262  0193                     	;# 
   263  0194                     	;# 
   264  0195                     	;# 
   265  0196                     	;# 
   266  0199                     	;# 
   267  019A                     	;# 
   268  019B                     	;# 
   269  019B                     	;# 
   270  019B                     	;# 
   271  019B                     	;# 
   272  019C                     	;# 
   273  019C                     	;# 
   274  019D                     	;# 
   275  019E                     	;# 
   276  019F                     	;# 
   277  020D                     	;# 
   278  0210                     	;# 
   279  0211                     	;# 
   280  0212                     	;# 
   281  0213                     	;# 
   282  0214                     	;# 
   283  0215                     	;# 
   284  0215                     	;# 
   285  0216                     	;# 
   286  0217                     	;# 
   287  0291                     	;# 
   288  0291                     	;# 
   289  0292                     	;# 
   290  0293                     	;# 
   291  0294                     	;# 
   292  0295                     	;# 
   293  0295                     	;# 
   294  0296                     	;# 
   295  0298                     	;# 
   296  0298                     	;# 
   297  0299                     	;# 
   298  029A                     	;# 
   299  029B                     	;# 
   300  029C                     	;# 
   301  029C                     	;# 
   302  029D                     	;# 
   303  029E                     	;# 
   304  029F                     	;# 
   305  0311                     	;# 
   306  0311                     	;# 
   307  0312                     	;# 
   308  0313                     	;# 
   309  0314                     	;# 
   310  0315                     	;# 
   311  0315                     	;# 
   312  0316                     	;# 
   313  0318                     	;# 
   314  0318                     	;# 
   315  0319                     	;# 
   316  031A                     	;# 
   317  031C                     	;# 
   318  031C                     	;# 
   319  031D                     	;# 
   320  031E                     	;# 
   321  0394                     	;# 
   322  0395                     	;# 
   323  0396                     	;# 
   324  0415                     	;# 
   325  0416                     	;# 
   326  0417                     	;# 
   327  041C                     	;# 
   328  041D                     	;# 
   329  041E                     	;# 
   330  0791                     	;# 
   331  0792                     	;# 
   332  0793                     	;# 
   333  0794                     	;# 
   334  0795                     	;# 
   335  0798                     	;# 
   336  0799                     	;# 
   337  07A0                     	;# 
   338  07A1                     	;# 
   339  07A3                     	;# 
   340  07A4                     	;# 
   341  07A6                     	;# 
   342  07A7                     	;# 
   343  07A9                     	;# 
   344  07AA                     	;# 
   345  0FE4                     	;# 
   346  0FE5                     	;# 
   347  0FE6                     	;# 
   348  0FE7                     	;# 
   349  0FE8                     	;# 
   350  0FE9                     	;# 
   351  0FEA                     	;# 
   352  0FEB                     	;# 
   353  0FED                     	;# 
   354  0FEE                     	;# 
   355  0FEF                     	;# 
   356  0000                     	;# 
   357  0001                     	;# 
   358  0002                     	;# 
   359  0003                     	;# 
   360  0004                     	;# 
   361  0005                     	;# 
   362  0006                     	;# 
   363  0007                     	;# 
   364  0008                     	;# 
   365  0009                     	;# 
   366  000A                     	;# 
   367  000B                     	;# 
   368  000C                     	;# 
   369  000D                     	;# 
   370  000E                     	;# 
   371  0010                     	;# 
   372  0011                     	;# 
   373  0012                     	;# 
   374  0013                     	;# 
   375  0015                     	;# 
   376  0016                     	;# 
   377  0016                     	;# 
   378  0017                     	;# 
   379  0018                     	;# 
   380  0019                     	;# 
   381  001A                     	;# 
   382  001B                     	;# 
   383  001C                     	;# 
   384  001E                     	;# 
   385  001F                     	;# 
   386  008C                     	;# 
   387  008D                     	;# 
   388  008E                     	;# 
   389  0090                     	;# 
   390  0091                     	;# 
   391  0092                     	;# 
   392  0093                     	;# 
   393  0095                     	;# 
   394  0096                     	;# 
   395  0097                     	;# 
   396  0098                     	;# 
   397  0099                     	;# 
   398  009A                     	;# 
   399  009B                     	;# 
   400  009B                     	;# 
   401  009C                     	;# 
   402  009D                     	;# 
   403  009E                     	;# 
   404  010C                     	;# 
   405  010D                     	;# 
   406  010E                     	;# 
   407  0110                     	;# 
   408  0111                     	;# 
   409  0112                     	;# 
   410  0113                     	;# 
   411  0114                     	;# 
   412  0115                     	;# 
   413  0116                     	;# 
   414  0117                     	;# 
   415  0118                     	;# 
   416  0119                     	;# 
   417  011A                     	;# 
   418  011B                     	;# 
   419  011D                     	;# 
   420  018C                     	;# 
   421  018D                     	;# 
   422  0191                     	;# 
   423  0191                     	;# 
   424  0192                     	;# 
   425  0193                     	;# 
   426  0193                     	;# 
   427  0193                     	;# 
   428  0194                     	;# 
   429  0195                     	;# 
   430  0196                     	;# 
   431  0199                     	;# 
   432  019A                     	;# 
   433  019B                     	;# 
   434  019B                     	;# 
   435  019B                     	;# 
   436  019B                     	;# 
   437  019C                     	;# 
   438  019C                     	;# 
   439  019D                     	;# 
   440  019E                     	;# 
   441  019F                     	;# 
   442  020D                     	;# 
   443  0210                     	;# 
   444  0211                     	;# 
   445  0212                     	;# 
   446  0213                     	;# 
   447  0214                     	;# 
   448  0215                     	;# 
   449  0215                     	;# 
   450  0216                     	;# 
   451  0217                     	;# 
   452  0291                     	;# 
   453  0291                     	;# 
   454  0292                     	;# 
   455  0293                     	;# 
   456  0294                     	;# 
   457  0295                     	;# 
   458  0295                     	;# 
   459  0296                     	;# 
   460  0298                     	;# 
   461  0298                     	;# 
   462  0299                     	;# 
   463  029A                     	;# 
   464  029B                     	;# 
   465  029C                     	;# 
   466  029C                     	;# 
   467  029D                     	;# 
   468  029E                     	;# 
   469  029F                     	;# 
   470  0311                     	;# 
   471  0311                     	;# 
   472  0312                     	;# 
   473  0313                     	;# 
   474  0314                     	;# 
   475  0315                     	;# 
   476  0315                     	;# 
   477  0316                     	;# 
   478  0318                     	;# 
   479  0318                     	;# 
   480  0319                     	;# 
   481  031A                     	;# 
   482  031C                     	;# 
   483  031C                     	;# 
   484  031D                     	;# 
   485  031E                     	;# 
   486  0394                     	;# 
   487  0395                     	;# 
   488  0396                     	;# 
   489  0415                     	;# 
   490  0416                     	;# 
   491  0417                     	;# 
   492  041C                     	;# 
   493  041D                     	;# 
   494  041E                     	;# 
   495  0791                     	;# 
   496  0792                     	;# 
   497  0793                     	;# 
   498  0794                     	;# 
   499  0795                     	;# 
   500  0798                     	;# 
   501  0799                     	;# 
   502  07A0                     	;# 
   503  07A1                     	;# 
   504  07A3                     	;# 
   505  07A4                     	;# 
   506  07A6                     	;# 
   507  07A7                     	;# 
   508  07A9                     	;# 
   509  07AA                     	;# 
   510  0FE4                     	;# 
   511  0FE5                     	;# 
   512  0FE6                     	;# 
   513  0FE7                     	;# 
   514  0FE8                     	;# 
   515  0FE9                     	;# 
   516  0FEA                     	;# 
   517  0FEB                     	;# 
   518  0FED                     	;# 
   519  0FEE                     	;# 
   520  0FEF                     	;# 
   521  0000                     	;# 
   522  0001                     	;# 
   523  0002                     	;# 
   524  0003                     	;# 
   525  0004                     	;# 
   526  0005                     	;# 
   527  0006                     	;# 
   528  0007                     	;# 
   529  0008                     	;# 
   530  0009                     	;# 
   531  000A                     	;# 
   532  000B                     	;# 
   533  000C                     	;# 
   534  000D                     	;# 
   535  000E                     	;# 
   536  0010                     	;# 
   537  0011                     	;# 
   538  0012                     	;# 
   539  0013                     	;# 
   540  0015                     	;# 
   541  0016                     	;# 
   542  0016                     	;# 
   543  0017                     	;# 
   544  0018                     	;# 
   545  0019                     	;# 
   546  001A                     	;# 
   547  001B                     	;# 
   548  001C                     	;# 
   549  001E                     	;# 
   550  001F                     	;# 
   551  008C                     	;# 
   552  008D                     	;# 
   553  008E                     	;# 
   554  0090                     	;# 
   555  0091                     	;# 
   556  0092                     	;# 
   557  0093                     	;# 
   558  0095                     	;# 
   559  0096                     	;# 
   560  0097                     	;# 
   561  0098                     	;# 
   562  0099                     	;# 
   563  009A                     	;# 
   564  009B                     	;# 
   565  009B                     	;# 
   566  009C                     	;# 
   567  009D                     	;# 
   568  009E                     	;# 
   569  010C                     	;# 
   570  010D                     	;# 
   571  010E                     	;# 
   572  0110                     	;# 
   573  0111                     	;# 
   574  0112                     	;# 
   575  0113                     	;# 
   576  0114                     	;# 
   577  0115                     	;# 
   578  0116                     	;# 
   579  0117                     	;# 
   580  0118                     	;# 
   581  0119                     	;# 
   582  011A                     	;# 
   583  011B                     	;# 
   584  011D                     	;# 
   585  018C                     	;# 
   586  018D                     	;# 
   587  0191                     	;# 
   588  0191                     	;# 
   589  0192                     	;# 
   590  0193                     	;# 
   591  0193                     	;# 
   592  0193                     	;# 
   593  0194                     	;# 
   594  0195                     	;# 
   595  0196                     	;# 
   596  0199                     	;# 
   597  019A                     	;# 
   598  019B                     	;# 
   599  019B                     	;# 
   600  019B                     	;# 
   601  019B                     	;# 
   602  019C                     	;# 
   603  019C                     	;# 
   604  019D                     	;# 
   605  019E                     	;# 
   606  019F                     	;# 
   607  020D                     	;# 
   608  0210                     	;# 
   609  0211                     	;# 
   610  0212                     	;# 
   611  0213                     	;# 
   612  0214                     	;# 
   613  0215                     	;# 
   614  0215                     	;# 
   615  0216                     	;# 
   616  0217                     	;# 
   617  0291                     	;# 
   618  0291                     	;# 
   619  0292                     	;# 
   620  0293                     	;# 
   621  0294                     	;# 
   622  0295                     	;# 
   623  0295                     	;# 
   624  0296                     	;# 
   625  0298                     	;# 
   626  0298                     	;# 
   627  0299                     	;# 
   628  029A                     	;# 
   629  029B                     	;# 
   630  029C                     	;# 
   631  029C                     	;# 
   632  029D                     	;# 
   633  029E                     	;# 
   634  029F                     	;# 
   635  0311                     	;# 
   636  0311                     	;# 
   637  0312                     	;# 
   638  0313                     	;# 
   639  0314                     	;# 
   640  0315                     	;# 
   641  0315                     	;# 
   642  0316                     	;# 
   643  0318                     	;# 
   644  0318                     	;# 
   645  0319                     	;# 
   646  031A                     	;# 
   647  031C                     	;# 
   648  031C                     	;# 
   649  031D                     	;# 
   650  031E                     	;# 
   651  0394                     	;# 
   652  0395                     	;# 
   653  0396                     	;# 
   654  0415                     	;# 
   655  0416                     	;# 
   656  0417                     	;# 
   657  041C                     	;# 
   658  041D                     	;# 
   659  041E                     	;# 
   660  0791                     	;# 
   661  0792                     	;# 
   662  0793                     	;# 
   663  0794                     	;# 
   664  0795                     	;# 
   665  0798                     	;# 
   666  0799                     	;# 
   667  07A0                     	;# 
   668  07A1                     	;# 
   669  07A3                     	;# 
   670  07A4                     	;# 
   671  07A6                     	;# 
   672  07A7                     	;# 
   673  07A9                     	;# 
   674  07AA                     	;# 
   675  0FE4                     	;# 
   676  0FE5                     	;# 
   677  0FE6                     	;# 
   678  0FE7                     	;# 
   679  0FE8                     	;# 
   680  0FE9                     	;# 
   681  0FEA                     	;# 
   682  0FEB                     	;# 
   683  0FED                     	;# 
   684  0FEE                     	;# 
   685  0FEF                     	;# 
   686  0000                     	;# 
   687  0001                     	;# 
   688  0002                     	;# 
   689  0003                     	;# 
   690  0004                     	;# 
   691  0005                     	;# 
   692  0006                     	;# 
   693  0007                     	;# 
   694  0008                     	;# 
   695  0009                     	;# 
   696  000A                     	;# 
   697  000B                     	;# 
   698  000C                     	;# 
   699  000D                     	;# 
   700  000E                     	;# 
   701  0010                     	;# 
   702  0011                     	;# 
   703  0012                     	;# 
   704  0013                     	;# 
   705  0015                     	;# 
   706  0016                     	;# 
   707  0016                     	;# 
   708  0017                     	;# 
   709  0018                     	;# 
   710  0019                     	;# 
   711  001A                     	;# 
   712  001B                     	;# 
   713  001C                     	;# 
   714  001E                     	;# 
   715  001F                     	;# 
   716  008C                     	;# 
   717  008D                     	;# 
   718  008E                     	;# 
   719  0090                     	;# 
   720  0091                     	;# 
   721  0092                     	;# 
   722  0093                     	;# 
   723  0095                     	;# 
   724  0096                     	;# 
   725  0097                     	;# 
   726  0098                     	;# 
   727  0099                     	;# 
   728  009A                     	;# 
   729  009B                     	;# 
   730  009B                     	;# 
   731  009C                     	;# 
   732  009D                     	;# 
   733  009E                     	;# 
   734  010C                     	;# 
   735  010D                     	;# 
   736  010E                     	;# 
   737  0110                     	;# 
   738  0111                     	;# 
   739  0112                     	;# 
   740  0113                     	;# 
   741  0114                     	;# 
   742  0115                     	;# 
   743  0116                     	;# 
   744  0117                     	;# 
   745  0118                     	;# 
   746  0119                     	;# 
   747  011A                     	;# 
   748  011B                     	;# 
   749  011D                     	;# 
   750  018C                     	;# 
   751  018D                     	;# 
   752  0191                     	;# 
   753  0191                     	;# 
   754  0192                     	;# 
   755  0193                     	;# 
   756  0193                     	;# 
   757  0193                     	;# 
   758  0194                     	;# 
   759  0195                     	;# 
   760  0196                     	;# 
   761  0199                     	;# 
   762  019A                     	;# 
   763  019B                     	;# 
   764  019B                     	;# 
   765  019B                     	;# 
   766  019B                     	;# 
   767  019C                     	;# 
   768  019C                     	;# 
   769  019D                     	;# 
   770  019E                     	;# 
   771  019F                     	;# 
   772  020D                     	;# 
   773  0210                     	;# 
   774  0211                     	;# 
   775  0212                     	;# 
   776  0213                     	;# 
   777  0214                     	;# 
   778  0215                     	;# 
   779  0215                     	;# 
   780  0216                     	;# 
   781  0217                     	;# 
   782  0291                     	;# 
   783  0291                     	;# 
   784  0292                     	;# 
   785  0293                     	;# 
   786  0294                     	;# 
   787  0295                     	;# 
   788  0295                     	;# 
   789  0296                     	;# 
   790  0298                     	;# 
   791  0298                     	;# 
   792  0299                     	;# 
   793  029A                     	;# 
   794  029B                     	;# 
   795  029C                     	;# 
   796  029C                     	;# 
   797  029D                     	;# 
   798  029E                     	;# 
   799  029F                     	;# 
   800  0311                     	;# 
   801  0311                     	;# 
   802  0312                     	;# 
   803  0313                     	;# 
   804  0314                     	;# 
   805  0315                     	;# 
   806  0315                     	;# 
   807  0316                     	;# 
   808  0318                     	;# 
   809  0318                     	;# 
   810  0319                     	;# 
   811  031A                     	;# 
   812  031C                     	;# 
   813  031C                     	;# 
   814  031D                     	;# 
   815  031E                     	;# 
   816  0394                     	;# 
   817  0395                     	;# 
   818  0396                     	;# 
   819  0415                     	;# 
   820  0416                     	;# 
   821  0417                     	;# 
   822  041C                     	;# 
   823  041D                     	;# 
   824  041E                     	;# 
   825  0791                     	;# 
   826  0792                     	;# 
   827  0793                     	;# 
   828  0794                     	;# 
   829  0795                     	;# 
   830  0798                     	;# 
   831  0799                     	;# 
   832  07A0                     	;# 
   833  07A1                     	;# 
   834  07A3                     	;# 
   835  07A4                     	;# 
   836  07A6                     	;# 
   837  07A7                     	;# 
   838  07A9                     	;# 
   839  07AA                     	;# 
   840  0FE4                     	;# 
   841  0FE5                     	;# 
   842  0FE6                     	;# 
   843  0FE7                     	;# 
   844  0FE8                     	;# 
   845  0FE9                     	;# 
   846  0FEA                     	;# 
   847  0FEB                     	;# 
   848  0FED                     	;# 
   849  0FEE                     	;# 
   850  0FEF                     	;# 
   851  0000                     	;# 
   852  0001                     	;# 
   853  0002                     	;# 
   854  0003                     	;# 
   855  0004                     	;# 
   856  0005                     	;# 
   857  0006                     	;# 
   858  0007                     	;# 
   859  0008                     	;# 
   860  0009                     	;# 
   861  000A                     	;# 
   862  000B                     	;# 
   863  000C                     	;# 
   864  000D                     	;# 
   865  000E                     	;# 
   866  0010                     	;# 
   867  0011                     	;# 
   868  0012                     	;# 
   869  0013                     	;# 
   870  0015                     	;# 
   871  0016                     	;# 
   872  0016                     	;# 
   873  0017                     	;# 
   874  0018                     	;# 
   875  0019                     	;# 
   876  001A                     	;# 
   877  001B                     	;# 
   878  001C                     	;# 
   879  001E                     	;# 
   880  001F                     	;# 
   881  008C                     	;# 
   882  008D                     	;# 
   883  008E                     	;# 
   884  0090                     	;# 
   885  0091                     	;# 
   886  0092                     	;# 
   887  0093                     	;# 
   888  0095                     	;# 
   889  0096                     	;# 
   890  0097                     	;# 
   891  0098                     	;# 
   892  0099                     	;# 
   893  009A                     	;# 
   894  009B                     	;# 
   895  009B                     	;# 
   896  009C                     	;# 
   897  009D                     	;# 
   898  009E                     	;# 
   899  010C                     	;# 
   900  010D                     	;# 
   901  010E                     	;# 
   902  0110                     	;# 
   903  0111                     	;# 
   904  0112                     	;# 
   905  0113                     	;# 
   906  0114                     	;# 
   907  0115                     	;# 
   908  0116                     	;# 
   909  0117                     	;# 
   910  0118                     	;# 
   911  0119                     	;# 
   912  011A                     	;# 
   913  011B                     	;# 
   914  011D                     	;# 
   915  018C                     	;# 
   916  018D                     	;# 
   917  0191                     	;# 
   918  0191                     	;# 
   919  0192                     	;# 
   920  0193                     	;# 
   921  0193                     	;# 
   922  0193                     	;# 
   923  0194                     	;# 
   924  0195                     	;# 
   925  0196                     	;# 
   926  0199                     	;# 
   927  019A                     	;# 
   928  019B                     	;# 
   929  019B                     	;# 
   930  019B                     	;# 
   931  019B                     	;# 
   932  019C                     	;# 
   933  019C                     	;# 
   934  019D                     	;# 
   935  019E                     	;# 
   936  019F                     	;# 
   937  020D                     	;# 
   938  0210                     	;# 
   939  0211                     	;# 
   940  0212                     	;# 
   941  0213                     	;# 
   942  0214                     	;# 
   943  0215                     	;# 
   944  0215                     	;# 
   945  0216                     	;# 
   946  0217                     	;# 
   947  0291                     	;# 
   948  0291                     	;# 
   949  0292                     	;# 
   950  0293                     	;# 
   951  0294                     	;# 
   952  0295                     	;# 
   953  0295                     	;# 
   954  0296                     	;# 
   955  0298                     	;# 
   956  0298                     	;# 
   957  0299                     	;# 
   958  029A                     	;# 
   959  029B                     	;# 
   960  029C                     	;# 
   961  029C                     	;# 
   962  029D                     	;# 
   963  029E                     	;# 
   964  029F                     	;# 
   965  0311                     	;# 
   966  0311                     	;# 
   967  0312                     	;# 
   968  0313                     	;# 
   969  0314                     	;# 
   970  0315                     	;# 
   971  0315                     	;# 
   972  0316                     	;# 
   973  0318                     	;# 
   974  0318                     	;# 
   975  0319                     	;# 
   976  031A                     	;# 
   977  031C                     	;# 
   978  031C                     	;# 
   979  031D                     	;# 
   980  031E                     	;# 
   981  0394                     	;# 
   982  0395                     	;# 
   983  0396                     	;# 
   984  0415                     	;# 
   985  0416                     	;# 
   986  0417                     	;# 
   987  041C                     	;# 
   988  041D                     	;# 
   989  041E                     	;# 
   990  0791                     	;# 
   991  0792                     	;# 
   992  0793                     	;# 
   993  0794                     	;# 
   994  0795                     	;# 
   995  0798                     	;# 
   996  0799                     	;# 
   997  07A0                     	;# 
   998  07A1                     	;# 
   999  07A3                     	;# 
  1000  07A4                     	;# 
  1001  07A6                     	;# 
  1002  07A7                     	;# 
  1003  07A9                     	;# 
  1004  07AA                     	;# 
  1005  0FE4                     	;# 
  1006  0FE5                     	;# 
  1007  0FE6                     	;# 
  1008  0FE7                     	;# 
  1009  0FE8                     	;# 
  1010  0FE9                     	;# 
  1011  0FEA                     	;# 
  1012  0FEB                     	;# 
  1013  0FED                     	;# 
  1014  0FEE                     	;# 
  1015  0FEF                     	;# 
  1016  0000                     	;# 
  1017  0001                     	;# 
  1018  0002                     	;# 
  1019  0003                     	;# 
  1020  0004                     	;# 
  1021  0005                     	;# 
  1022  0006                     	;# 
  1023  0007                     	;# 
  1024  0008                     	;# 
  1025  0009                     	;# 
  1026  000A                     	;# 
  1027  000B                     	;# 
  1028  000C                     	;# 
  1029  000D                     	;# 
  1030  000E                     	;# 
  1031  0010                     	;# 
  1032  0011                     	;# 
  1033  0012                     	;# 
  1034  0013                     	;# 
  1035  0015                     	;# 
  1036  0016                     	;# 
  1037  0016                     	;# 
  1038  0017                     	;# 
  1039  0018                     	;# 
  1040  0019                     	;# 
  1041  001A                     	;# 
  1042  001B                     	;# 
  1043  001C                     	;# 
  1044  001E                     	;# 
  1045  001F                     	;# 
  1046  008C                     	;# 
  1047  008D                     	;# 
  1048  008E                     	;# 
  1049  0090                     	;# 
  1050  0091                     	;# 
  1051  0092                     	;# 
  1052  0093                     	;# 
  1053  0095                     	;# 
  1054  0096                     	;# 
  1055  0097                     	;# 
  1056  0098                     	;# 
  1057  0099                     	;# 
  1058  009A                     	;# 
  1059  009B                     	;# 
  1060  009B                     	;# 
  1061  009C                     	;# 
  1062  009D                     	;# 
  1063  009E                     	;# 
  1064  010C                     	;# 
  1065  010D                     	;# 
  1066  010E                     	;# 
  1067  0110                     	;# 
  1068  0111                     	;# 
  1069  0112                     	;# 
  1070  0113                     	;# 
  1071  0114                     	;# 
  1072  0115                     	;# 
  1073  0116                     	;# 
  1074  0117                     	;# 
  1075  0118                     	;# 
  1076  0119                     	;# 
  1077  011A                     	;# 
  1078  011B                     	;# 
  1079  011D                     	;# 
  1080  018C                     	;# 
  1081  018D                     	;# 
  1082  0191                     	;# 
  1083  0191                     	;# 
  1084  0192                     	;# 
  1085  0193                     	;# 
  1086  0193                     	;# 
  1087  0193                     	;# 
  1088  0194                     	;# 
  1089  0195                     	;# 
  1090  0196                     	;# 
  1091  0199                     	;# 
  1092  019A                     	;# 
  1093  019B                     	;# 
  1094  019B                     	;# 
  1095  019B                     	;# 
  1096  019B                     	;# 
  1097  019C                     	;# 
  1098  019C                     	;# 
  1099  019D                     	;# 
  1100  019E                     	;# 
  1101  019F                     	;# 
  1102  020D                     	;# 
  1103  0210                     	;# 
  1104  0211                     	;# 
  1105  0212                     	;# 
  1106  0213                     	;# 
  1107  0214                     	;# 
  1108  0215                     	;# 
  1109  0215                     	;# 
  1110  0216                     	;# 
  1111  0217                     	;# 
  1112  0291                     	;# 
  1113  0291                     	;# 
  1114  0292                     	;# 
  1115  0293                     	;# 
  1116  0294                     	;# 
  1117  0295                     	;# 
  1118  0295                     	;# 
  1119  0296                     	;# 
  1120  0298                     	;# 
  1121  0298                     	;# 
  1122  0299                     	;# 
  1123  029A                     	;# 
  1124  029B                     	;# 
  1125  029C                     	;# 
  1126  029C                     	;# 
  1127  029D                     	;# 
  1128  029E                     	;# 
  1129  029F                     	;# 
  1130  0311                     	;# 
  1131  0311                     	;# 
  1132  0312                     	;# 
  1133  0313                     	;# 
  1134  0314                     	;# 
  1135  0315                     	;# 
  1136  0315                     	;# 
  1137  0316                     	;# 
  1138  0318                     	;# 
  1139  0318                     	;# 
  1140  0319                     	;# 
  1141  031A                     	;# 
  1142  031C                     	;# 
  1143  031C                     	;# 
  1144  031D                     	;# 
  1145  031E                     	;# 
  1146  0394                     	;# 
  1147  0395                     	;# 
  1148  0396                     	;# 
  1149  0415                     	;# 
  1150  0416                     	;# 
  1151  0417                     	;# 
  1152  041C                     	;# 
  1153  041D                     	;# 
  1154  041E                     	;# 
  1155  0791                     	;# 
  1156  0792                     	;# 
  1157  0793                     	;# 
  1158  0794                     	;# 
  1159  0795                     	;# 
  1160  0798                     	;# 
  1161  0799                     	;# 
  1162  07A0                     	;# 
  1163  07A1                     	;# 
  1164  07A3                     	;# 
  1165  07A4                     	;# 
  1166  07A6                     	;# 
  1167  07A7                     	;# 
  1168  07A9                     	;# 
  1169  07AA                     	;# 
  1170  0FE4                     	;# 
  1171  0FE5                     	;# 
  1172  0FE6                     	;# 
  1173  0FE7                     	;# 
  1174  0FE8                     	;# 
  1175  0FE9                     	;# 
  1176  0FEA                     	;# 
  1177  0FEB                     	;# 
  1178  0FED                     	;# 
  1179  0FEE                     	;# 
  1180  0FEF                     	;# 
  1181  0000                     	;# 
  1182  0001                     	;# 
  1183  0002                     	;# 
  1184  0003                     	;# 
  1185  0004                     	;# 
  1186  0005                     	;# 
  1187  0006                     	;# 
  1188  0007                     	;# 
  1189  0008                     	;# 
  1190  0009                     	;# 
  1191  000A                     	;# 
  1192  000B                     	;# 
  1193  000C                     	;# 
  1194  000D                     	;# 
  1195  000E                     	;# 
  1196  0010                     	;# 
  1197  0011                     	;# 
  1198  0012                     	;# 
  1199  0013                     	;# 
  1200  0015                     	;# 
  1201  0016                     	;# 
  1202  0016                     	;# 
  1203  0017                     	;# 
  1204  0018                     	;# 
  1205  0019                     	;# 
  1206  001A                     	;# 
  1207  001B                     	;# 
  1208  001C                     	;# 
  1209  001E                     	;# 
  1210  001F                     	;# 
  1211  008C                     	;# 
  1212  008D                     	;# 
  1213  008E                     	;# 
  1214  0090                     	;# 
  1215  0091                     	;# 
  1216  0092                     	;# 
  1217  0093                     	;# 
  1218  0095                     	;# 
  1219  0096                     	;# 
  1220  0097                     	;# 
  1221  0098                     	;# 
  1222  0099                     	;# 
  1223  009A                     	;# 
  1224  009B                     	;# 
  1225  009B                     	;# 
  1226  009C                     	;# 
  1227  009D                     	;# 
  1228  009E                     	;# 
  1229  010C                     	;# 
  1230  010D                     	;# 
  1231  010E                     	;# 
  1232  0110                     	;# 
  1233  0111                     	;# 
  1234  0112                     	;# 
  1235  0113                     	;# 
  1236  0114                     	;# 
  1237  0115                     	;# 
  1238  0116                     	;# 
  1239  0117                     	;# 
  1240  0118                     	;# 
  1241  0119                     	;# 
  1242  011A                     	;# 
  1243  011B                     	;# 
  1244  011D                     	;# 
  1245  018C                     	;# 
  1246  018D                     	;# 
  1247  0191                     	;# 
  1248  0191                     	;# 
  1249  0192                     	;# 
  1250  0193                     	;# 
  1251  0193                     	;# 
  1252  0193                     	;# 
  1253  0194                     	;# 
  1254  0195                     	;# 
  1255  0196                     	;# 
  1256  0199                     	;# 
  1257  019A                     	;# 
  1258  019B                     	;# 
  1259  019B                     	;# 
  1260  019B                     	;# 
  1261  019B                     	;# 
  1262  019C                     	;# 
  1263  019C                     	;# 
  1264  019D                     	;# 
  1265  019E                     	;# 
  1266  019F                     	;# 
  1267  020D                     	;# 
  1268  0210                     	;# 
  1269  0211                     	;# 
  1270  0212                     	;# 
  1271  0213                     	;# 
  1272  0214                     	;# 
  1273  0215                     	;# 
  1274  0215                     	;# 
  1275  0216                     	;# 
  1276  0217                     	;# 
  1277  0291                     	;# 
  1278  0291                     	;# 
  1279  0292                     	;# 
  1280  0293                     	;# 
  1281  0294                     	;# 
  1282  0295                     	;# 
  1283  0295                     	;# 
  1284  0296                     	;# 
  1285  0298                     	;# 
  1286  0298                     	;# 
  1287  0299                     	;# 
  1288  029A                     	;# 
  1289  029B                     	;# 
  1290  029C                     	;# 
  1291  029C                     	;# 
  1292  029D                     	;# 
  1293  029E                     	;# 
  1294  029F                     	;# 
  1295  0311                     	;# 
  1296  0311                     	;# 
  1297  0312                     	;# 
  1298  0313                     	;# 
  1299  0314                     	;# 
  1300  0315                     	;# 
  1301  0315                     	;# 
  1302  0316                     	;# 
  1303  0318                     	;# 
  1304  0318                     	;# 
  1305  0319                     	;# 
  1306  031A                     	;# 
  1307  031C                     	;# 
  1308  031C                     	;# 
  1309  031D                     	;# 
  1310  031E                     	;# 
  1311  0394                     	;# 
  1312  0395                     	;# 
  1313  0396                     	;# 
  1314  0415                     	;# 
  1315  0416                     	;# 
  1316  0417                     	;# 
  1317  041C                     	;# 
  1318  041D                     	;# 
  1319  041E                     	;# 
  1320  0791                     	;# 
  1321  0792                     	;# 
  1322  0793                     	;# 
  1323  0794                     	;# 
  1324  0795                     	;# 
  1325  0798                     	;# 
  1326  0799                     	;# 
  1327  07A0                     	;# 
  1328  07A1                     	;# 
  1329  07A3                     	;# 
  1330  07A4                     	;# 
  1331  07A6                     	;# 
  1332  07A7                     	;# 
  1333  07A9                     	;# 
  1334  07AA                     	;# 
  1335  0FE4                     	;# 
  1336  0FE5                     	;# 
  1337  0FE6                     	;# 
  1338  0FE7                     	;# 
  1339  0FE8                     	;# 
  1340  0FE9                     	;# 
  1341  0FEA                     	;# 
  1342  0FEB                     	;# 
  1343  0FED                     	;# 
  1344  0FEE                     	;# 
  1345  0FEF                     	;# 
  1346  0000                     	;# 
  1347  0001                     	;# 
  1348  0002                     	;# 
  1349  0003                     	;# 
  1350  0004                     	;# 
  1351  0005                     	;# 
  1352  0006                     	;# 
  1353  0007                     	;# 
  1354  0008                     	;# 
  1355  0009                     	;# 
  1356  000A                     	;# 
  1357  000B                     	;# 
  1358  000C                     	;# 
  1359  000D                     	;# 
  1360  000E                     	;# 
  1361  0010                     	;# 
  1362  0011                     	;# 
  1363  0012                     	;# 
  1364  0013                     	;# 
  1365  0015                     	;# 
  1366  0016                     	;# 
  1367  0016                     	;# 
  1368  0017                     	;# 
  1369  0018                     	;# 
  1370  0019                     	;# 
  1371  001A                     	;# 
  1372  001B                     	;# 
  1373  001C                     	;# 
  1374  001E                     	;# 
  1375  001F                     	;# 
  1376  008C                     	;# 
  1377  008D                     	;# 
  1378  008E                     	;# 
  1379  0090                     	;# 
  1380  0091                     	;# 
  1381  0092                     	;# 
  1382  0093                     	;# 
  1383  0095                     	;# 
  1384  0096                     	;# 
  1385  0097                     	;# 
  1386  0098                     	;# 
  1387  0099                     	;# 
  1388  009A                     	;# 
  1389  009B                     	;# 
  1390  009B                     	;# 
  1391  009C                     	;# 
  1392  009D                     	;# 
  1393  009E                     	;# 
  1394  010C                     	;# 
  1395  010D                     	;# 
  1396  010E                     	;# 
  1397  0110                     	;# 
  1398  0111                     	;# 
  1399  0112                     	;# 
  1400  0113                     	;# 
  1401  0114                     	;# 
  1402  0115                     	;# 
  1403  0116                     	;# 
  1404  0117                     	;# 
  1405  0118                     	;# 
  1406  0119                     	;# 
  1407  011A                     	;# 
  1408  011B                     	;# 
  1409  011D                     	;# 
  1410  018C                     	;# 
  1411  018D                     	;# 
  1412  0191                     	;# 
  1413  0191                     	;# 
  1414  0192                     	;# 
  1415  0193                     	;# 
  1416  0193                     	;# 
  1417  0193                     	;# 
  1418  0194                     	;# 
  1419  0195                     	;# 
  1420  0196                     	;# 
  1421  0199                     	;# 
  1422  019A                     	;# 
  1423  019B                     	;# 
  1424  019B                     	;# 
  1425  019B                     	;# 
  1426  019B                     	;# 
  1427  019C                     	;# 
  1428  019C                     	;# 
  1429  019D                     	;# 
  1430  019E                     	;# 
  1431  019F                     	;# 
  1432  020D                     	;# 
  1433  0210                     	;# 
  1434  0211                     	;# 
  1435  0212                     	;# 
  1436  0213                     	;# 
  1437  0214                     	;# 
  1438  0215                     	;# 
  1439  0215                     	;# 
  1440  0216                     	;# 
  1441  0217                     	;# 
  1442  0291                     	;# 
  1443  0291                     	;# 
  1444  0292                     	;# 
  1445  0293                     	;# 
  1446  0294                     	;# 
  1447  0295                     	;# 
  1448  0295                     	;# 
  1449  0296                     	;# 
  1450  0298                     	;# 
  1451  0298                     	;# 
  1452  0299                     	;# 
  1453  029A                     	;# 
  1454  029B                     	;# 
  1455  029C                     	;# 
  1456  029C                     	;# 
  1457  029D                     	;# 
  1458  029E                     	;# 
  1459  029F                     	;# 
  1460  0311                     	;# 
  1461  0311                     	;# 
  1462  0312                     	;# 
  1463  0313                     	;# 
  1464  0314                     	;# 
  1465  0315                     	;# 
  1466  0315                     	;# 
  1467  0316                     	;# 
  1468  0318                     	;# 
  1469  0318                     	;# 
  1470  0319                     	;# 
  1471  031A                     	;# 
  1472  031C                     	;# 
  1473  031C                     	;# 
  1474  031D                     	;# 
  1475  031E                     	;# 
  1476  0394                     	;# 
  1477  0395                     	;# 
  1478  0396                     	;# 
  1479  0415                     	;# 
  1480  0416                     	;# 
  1481  0417                     	;# 
  1482  041C                     	;# 
  1483  041D                     	;# 
  1484  041E                     	;# 
  1485  0791                     	;# 
  1486  0792                     	;# 
  1487  0793                     	;# 
  1488  0794                     	;# 
  1489  0795                     	;# 
  1490  0798                     	;# 
  1491  0799                     	;# 
  1492  07A0                     	;# 
  1493  07A1                     	;# 
  1494  07A3                     	;# 
  1495  07A4                     	;# 
  1496  07A6                     	;# 
  1497  07A7                     	;# 
  1498  07A9                     	;# 
  1499  07AA                     	;# 
  1500  0FE4                     	;# 
  1501  0FE5                     	;# 
  1502  0FE6                     	;# 
  1503  0FE7                     	;# 
  1504  0FE8                     	;# 
  1505  0FE9                     	;# 
  1506  0FEA                     	;# 
  1507  0FEB                     	;# 
  1508  0FED                     	;# 
  1509  0FEE                     	;# 
  1510  0FEF                     	;# 
  1511  0000                     	;# 
  1512  0001                     	;# 
  1513  0002                     	;# 
  1514  0003                     	;# 
  1515  0004                     	;# 
  1516  0005                     	;# 
  1517  0006                     	;# 
  1518  0007                     	;# 
  1519  0008                     	;# 
  1520  0009                     	;# 
  1521  000A                     	;# 
  1522  000B                     	;# 
  1523  000C                     	;# 
  1524  000D                     	;# 
  1525  000E                     	;# 
  1526  0010                     	;# 
  1527  0011                     	;# 
  1528  0012                     	;# 
  1529  0013                     	;# 
  1530  0015                     	;# 
  1531  0016                     	;# 
  1532  0016                     	;# 
  1533  0017                     	;# 
  1534  0018                     	;# 
  1535  0019                     	;# 
  1536  001A                     	;# 
  1537  001B                     	;# 
  1538  001C                     	;# 
  1539  001E                     	;# 
  1540  001F                     	;# 
  1541  008C                     	;# 
  1542  008D                     	;# 
  1543  008E                     	;# 
  1544  0090                     	;# 
  1545  0091                     	;# 
  1546  0092                     	;# 
  1547  0093                     	;# 
  1548  0095                     	;# 
  1549  0096                     	;# 
  1550  0097                     	;# 
  1551  0098                     	;# 
  1552  0099                     	;# 
  1553  009A                     	;# 
  1554  009B                     	;# 
  1555  009B                     	;# 
  1556  009C                     	;# 
  1557  009D                     	;# 
  1558  009E                     	;# 
  1559  010C                     	;# 
  1560  010D                     	;# 
  1561  010E                     	;# 
  1562  0110                     	;# 
  1563  0111                     	;# 
  1564  0112                     	;# 
  1565  0113                     	;# 
  1566  0114                     	;# 
  1567  0115                     	;# 
  1568  0116                     	;# 
  1569  0117                     	;# 
  1570  0118                     	;# 
  1571  0119                     	;# 
  1572  011A                     	;# 
  1573  011B                     	;# 
  1574  011D                     	;# 
  1575  018C                     	;# 
  1576  018D                     	;# 
  1577  0191                     	;# 
  1578  0191                     	;# 
  1579  0192                     	;# 
  1580  0193                     	;# 
  1581  0193                     	;# 
  1582  0193                     	;# 
  1583  0194                     	;# 
  1584  0195                     	;# 
  1585  0196                     	;# 
  1586  0199                     	;# 
  1587  019A                     	;# 
  1588  019B                     	;# 
  1589  019B                     	;# 
  1590  019B                     	;# 
  1591  019B                     	;# 
  1592  019C                     	;# 
  1593  019C                     	;# 
  1594  019D                     	;# 
  1595  019E                     	;# 
  1596  019F                     	;# 
  1597  020D                     	;# 
  1598  0210                     	;# 
  1599  0211                     	;# 
  1600  0212                     	;# 
  1601  0213                     	;# 
  1602  0214                     	;# 
  1603  0215                     	;# 
  1604  0215                     	;# 
  1605  0216                     	;# 
  1606  0217                     	;# 
  1607  0291                     	;# 
  1608  0291                     	;# 
  1609  0292                     	;# 
  1610  0293                     	;# 
  1611  0294                     	;# 
  1612  0295                     	;# 
  1613  0295                     	;# 
  1614  0296                     	;# 
  1615  0298                     	;# 
  1616  0298                     	;# 
  1617  0299                     	;# 
  1618  029A                     	;# 
  1619  029B                     	;# 
  1620  029C                     	;# 
  1621  029C                     	;# 
  1622  029D                     	;# 
  1623  029E                     	;# 
  1624  029F                     	;# 
  1625  0311                     	;# 
  1626  0311                     	;# 
  1627  0312                     	;# 
  1628  0313                     	;# 
  1629  0314                     	;# 
  1630  0315                     	;# 
  1631  0315                     	;# 
  1632  0316                     	;# 
  1633  0318                     	;# 
  1634  0318                     	;# 
  1635  0319                     	;# 
  1636  031A                     	;# 
  1637  031C                     	;# 
  1638  031C                     	;# 
  1639  031D                     	;# 
  1640  031E                     	;# 
  1641  0394                     	;# 
  1642  0395                     	;# 
  1643  0396                     	;# 
  1644  0415                     	;# 
  1645  0416                     	;# 
  1646  0417                     	;# 
  1647  041C                     	;# 
  1648  041D                     	;# 
  1649  041E                     	;# 
  1650  0791                     	;# 
  1651  0792                     	;# 
  1652  0793                     	;# 
  1653  0794                     	;# 
  1654  0795                     	;# 
  1655  0798                     	;# 
  1656  0799                     	;# 
  1657  07A0                     	;# 
  1658  07A1                     	;# 
  1659  07A3                     	;# 
  1660  07A4                     	;# 
  1661  07A6                     	;# 
  1662  07A7                     	;# 
  1663  07A9                     	;# 
  1664  07AA                     	;# 
  1665  0FE4                     	;# 
  1666  0FE5                     	;# 
  1667  0FE6                     	;# 
  1668  0FE7                     	;# 
  1669  0FE8                     	;# 
  1670  0FE9                     	;# 
  1671  0FEA                     	;# 
  1672  0FEB                     	;# 
  1673  0FED                     	;# 
  1674  0FEE                     	;# 
  1675  0FEF                     	;# 
  1676  0000                     	;# 
  1677  0001                     	;# 
  1678  0002                     	;# 
  1679  0003                     	;# 
  1680  0004                     	;# 
  1681  0005                     	;# 
  1682  0006                     	;# 
  1683  0007                     	;# 
  1684  0008                     	;# 
  1685  0009                     	;# 
  1686  000A                     	;# 
  1687  000B                     	;# 
  1688  000C                     	;# 
  1689  000D                     	;# 
  1690  000E                     	;# 
  1691  0010                     	;# 
  1692  0011                     	;# 
  1693  0012                     	;# 
  1694  0013                     	;# 
  1695  0015                     	;# 
  1696  0016                     	;# 
  1697  0016                     	;# 
  1698  0017                     	;# 
  1699  0018                     	;# 
  1700  0019                     	;# 
  1701  001A                     	;# 
  1702  001B                     	;# 
  1703  001C                     	;# 
  1704  001E                     	;# 
  1705  001F                     	;# 
  1706  008C                     	;# 
  1707  008D                     	;# 
  1708  008E                     	;# 
  1709  0090                     	;# 
  1710  0091                     	;# 
  1711  0092                     	;# 
  1712  0093                     	;# 
  1713  0095                     	;# 
  1714  0096                     	;# 
  1715  0097                     	;# 
  1716  0098                     	;# 
  1717  0099                     	;# 
  1718  009A                     	;# 
  1719  009B                     	;# 
  1720  009B                     	;# 
  1721  009C                     	;# 
  1722  009D                     	;# 
  1723  009E                     	;# 
  1724  010C                     	;# 
  1725  010D                     	;# 
  1726  010E                     	;# 
  1727  0110                     	;# 
  1728  0111                     	;# 
  1729  0112                     	;# 
  1730  0113                     	;# 
  1731  0114                     	;# 
  1732  0115                     	;# 
  1733  0116                     	;# 
  1734  0117                     	;# 
  1735  0118                     	;# 
  1736  0119                     	;# 
  1737  011A                     	;# 
  1738  011B                     	;# 
  1739  011D                     	;# 
  1740  018C                     	;# 
  1741  018D                     	;# 
  1742  0191                     	;# 
  1743  0191                     	;# 
  1744  0192                     	;# 
  1745  0193                     	;# 
  1746  0193                     	;# 
  1747  0193                     	;# 
  1748  0194                     	;# 
  1749  0195                     	;# 
  1750  0196                     	;# 
  1751  0199                     	;# 
  1752  019A                     	;# 
  1753  019B                     	;# 
  1754  019B                     	;# 
  1755  019B                     	;# 
  1756  019B                     	;# 
  1757  019C                     	;# 
  1758  019C                     	;# 
  1759  019D                     	;# 
  1760  019E                     	;# 
  1761  019F                     	;# 
  1762  020D                     	;# 
  1763  0210                     	;# 
  1764  0211                     	;# 
  1765  0212                     	;# 
  1766  0213                     	;# 
  1767  0214                     	;# 
  1768  0215                     	;# 
  1769  0215                     	;# 
  1770  0216                     	;# 
  1771  0217                     	;# 
  1772  0291                     	;# 
  1773  0291                     	;# 
  1774  0292                     	;# 
  1775  0293                     	;# 
  1776  0294                     	;# 
  1777  0295                     	;# 
  1778  0295                     	;# 
  1779  0296                     	;# 
  1780  0298                     	;# 
  1781  0298                     	;# 
  1782  0299                     	;# 
  1783  029A                     	;# 
  1784  029B                     	;# 
  1785  029C                     	;# 
  1786  029C                     	;# 
  1787  029D                     	;# 
  1788  029E                     	;# 
  1789  029F                     	;# 
  1790  0311                     	;# 
  1791  0311                     	;# 
  1792  0312                     	;# 
  1793  0313                     	;# 
  1794  0314                     	;# 
  1795  0315                     	;# 
  1796  0315                     	;# 
  1797  0316                     	;# 
  1798  0318                     	;# 
  1799  0318                     	;# 
  1800  0319                     	;# 
  1801  031A                     	;# 
  1802  031C                     	;# 
  1803  031C                     	;# 
  1804  031D                     	;# 
  1805  031E                     	;# 
  1806  0394                     	;# 
  1807  0395                     	;# 
  1808  0396                     	;# 
  1809  0415                     	;# 
  1810  0416                     	;# 
  1811  0417                     	;# 
  1812  041C                     	;# 
  1813  041D                     	;# 
  1814  041E                     	;# 
  1815  0791                     	;# 
  1816  0792                     	;# 
  1817  0793                     	;# 
  1818  0794                     	;# 
  1819  0795                     	;# 
  1820  0798                     	;# 
  1821  0799                     	;# 
  1822  07A0                     	;# 
  1823  07A1                     	;# 
  1824  07A3                     	;# 
  1825  07A4                     	;# 
  1826  07A6                     	;# 
  1827  07A7                     	;# 
  1828  07A9                     	;# 
  1829  07AA                     	;# 
  1830  0FE4                     	;# 
  1831  0FE5                     	;# 
  1832  0FE6                     	;# 
  1833  0FE7                     	;# 
  1834  0FE8                     	;# 
  1835  0FE9                     	;# 
  1836  0FEA                     	;# 
  1837  0FEB                     	;# 
  1838  0FED                     	;# 
  1839  0FEE                     	;# 
  1840  0FEF                     	;# 
  1841  0000                     	;# 
  1842  0001                     	;# 
  1843  0002                     	;# 
  1844  0003                     	;# 
  1845  0004                     	;# 
  1846  0005                     	;# 
  1847  0006                     	;# 
  1848  0007                     	;# 
  1849  0008                     	;# 
  1850  0009                     	;# 
  1851  000A                     	;# 
  1852  000B                     	;# 
  1853  000C                     	;# 
  1854  000D                     	;# 
  1855  000E                     	;# 
  1856  0010                     	;# 
  1857  0011                     	;# 
  1858  0012                     	;# 
  1859  0013                     	;# 
  1860  0015                     	;# 
  1861  0016                     	;# 
  1862  0016                     	;# 
  1863  0017                     	;# 
  1864  0018                     	;# 
  1865  0019                     	;# 
  1866  001A                     	;# 
  1867  001B                     	;# 
  1868  001C                     	;# 
  1869  001E                     	;# 
  1870  001F                     	;# 
  1871  008C                     	;# 
  1872  008D                     	;# 
  1873  008E                     	;# 
  1874  0090                     	;# 
  1875  0091                     	;# 
  1876  0092                     	;# 
  1877  0093                     	;# 
  1878  0095                     	;# 
  1879  0096                     	;# 
  1880  0097                     	;# 
  1881  0098                     	;# 
  1882  0099                     	;# 
  1883  009A                     	;# 
  1884  009B                     	;# 
  1885  009B                     	;# 
  1886  009C                     	;# 
  1887  009D                     	;# 
  1888  009E                     	;# 
  1889  010C                     	;# 
  1890  010D                     	;# 
  1891  010E                     	;# 
  1892  0110                     	;# 
  1893  0111                     	;# 
  1894  0112                     	;# 
  1895  0113                     	;# 
  1896  0114                     	;# 
  1897  0115                     	;# 
  1898  0116                     	;# 
  1899  0117                     	;# 
  1900  0118                     	;# 
  1901  0119                     	;# 
  1902  011A                     	;# 
  1903  011B                     	;# 
  1904  011D                     	;# 
  1905  018C                     	;# 
  1906  018D                     	;# 
  1907  0191                     	;# 
  1908  0191                     	;# 
  1909  0192                     	;# 
  1910  0193                     	;# 
  1911  0193                     	;# 
  1912  0193                     	;# 
  1913  0194                     	;# 
  1914  0195                     	;# 
  1915  0196                     	;# 
  1916  0199                     	;# 
  1917  019A                     	;# 
  1918  019B                     	;# 
  1919  019B                     	;# 
  1920  019B                     	;# 
  1921  019B                     	;# 
  1922  019C                     	;# 
  1923  019C                     	;# 
  1924  019D                     	;# 
  1925  019E                     	;# 
  1926  019F                     	;# 
  1927  020D                     	;# 
  1928  0210                     	;# 
  1929  0211                     	;# 
  1930  0212                     	;# 
  1931  0213                     	;# 
  1932  0214                     	;# 
  1933  0215                     	;# 
  1934  0215                     	;# 
  1935  0216                     	;# 
  1936  0217                     	;# 
  1937  0291                     	;# 
  1938  0291                     	;# 
  1939  0292                     	;# 
  1940  0293                     	;# 
  1941  0294                     	;# 
  1942  0295                     	;# 
  1943  0295                     	;# 
  1944  0296                     	;# 
  1945  0298                     	;# 
  1946  0298                     	;# 
  1947  0299                     	;# 
  1948  029A                     	;# 
  1949  029B                     	;# 
  1950  029C                     	;# 
  1951  029C                     	;# 
  1952  029D                     	;# 
  1953  029E                     	;# 
  1954  029F                     	;# 
  1955  0311                     	;# 
  1956  0311                     	;# 
  1957  0312                     	;# 
  1958  0313                     	;# 
  1959  0314                     	;# 
  1960  0315                     	;# 
  1961  0315                     	;# 
  1962  0316                     	;# 
  1963  0318                     	;# 
  1964  0318                     	;# 
  1965  0319                     	;# 
  1966  031A                     	;# 
  1967  031C                     	;# 
  1968  031C                     	;# 
  1969  031D                     	;# 
  1970  031E                     	;# 
  1971  0394                     	;# 
  1972  0395                     	;# 
  1973  0396                     	;# 
  1974  0415                     	;# 
  1975  0416                     	;# 
  1976  0417                     	;# 
  1977  041C                     	;# 
  1978  041D                     	;# 
  1979  041E                     	;# 
  1980  0791                     	;# 
  1981  0792                     	;# 
  1982  0793                     	;# 
  1983  0794                     	;# 
  1984  0795                     	;# 
  1985  0798                     	;# 
  1986  0799                     	;# 
  1987  07A0                     	;# 
  1988  07A1                     	;# 
  1989  07A3                     	;# 
  1990  07A4                     	;# 
  1991  07A6                     	;# 
  1992  07A7                     	;# 
  1993  07A9                     	;# 
  1994  07AA                     	;# 
  1995  0FE4                     	;# 
  1996  0FE5                     	;# 
  1997  0FE6                     	;# 
  1998  0FE7                     	;# 
  1999  0FE8                     	;# 
  2000  0FE9                     	;# 
  2001  0FEA                     	;# 
  2002  0FEB                     	;# 
  2003  0FED                     	;# 
  2004  0FEE                     	;# 
  2005  0FEF                     	;# 
  2006  0000                     	;# 
  2007  0001                     	;# 
  2008  0002                     	;# 
  2009  0003                     	;# 
  2010  0004                     	;# 
  2011  0005                     	;# 
  2012  0006                     	;# 
  2013  0007                     	;# 
  2014  0008                     	;# 
  2015  0009                     	;# 
  2016  000A                     	;# 
  2017  000B                     	;# 
  2018  000C                     	;# 
  2019  000D                     	;# 
  2020  000E                     	;# 
  2021  0010                     	;# 
  2022  0011                     	;# 
  2023  0012                     	;# 
  2024  0013                     	;# 
  2025  0015                     	;# 
  2026  0016                     	;# 
  2027  0016                     	;# 
  2028  0017                     	;# 
  2029  0018                     	;# 
  2030  0019                     	;# 
  2031  001A                     	;# 
  2032  001B                     	;# 
  2033  001C                     	;# 
  2034  001E                     	;# 
  2035  001F                     	;# 
  2036  008C                     	;# 
  2037  008D                     	;# 
  2038  008E                     	;# 
  2039  0090                     	;# 
  2040  0091                     	;# 
  2041  0092                     	;# 
  2042  0093                     	;# 
  2043  0095                     	;# 
  2044  0096                     	;# 
  2045  0097                     	;# 
  2046  0098                     	;# 
  2047  0099                     	;# 
  2048  009A                     	;# 
  2049  009B                     	;# 
  2050  009B                     	;# 
  2051  009C                     	;# 
  2052  009D                     	;# 
  2053  009E                     	;# 
  2054  010C                     	;# 
  2055  010D                     	;# 
  2056  010E                     	;# 
  2057  0110                     	;# 
  2058  0111                     	;# 
  2059  0112                     	;# 
  2060  0113                     	;# 
  2061  0114                     	;# 
  2062  0115                     	;# 
  2063  0116                     	;# 
  2064  0117                     	;# 
  2065  0118                     	;# 
  2066  0119                     	;# 
  2067  011A                     	;# 
  2068  011B                     	;# 
  2069  011D                     	;# 
  2070  018C                     	;# 
  2071  018D                     	;# 
  2072  0191                     	;# 
  2073  0191                     	;# 
  2074  0192                     	;# 
  2075  0193                     	;# 
  2076  0193                     	;# 
  2077  0193                     	;# 
  2078  0194                     	;# 
  2079  0195                     	;# 
  2080  0196                     	;# 
  2081  0199                     	;# 
  2082  019A                     	;# 
  2083  019B                     	;# 
  2084  019B                     	;# 
  2085  019B                     	;# 
  2086  019B                     	;# 
  2087  019C                     	;# 
  2088  019C                     	;# 
  2089  019D                     	;# 
  2090  019E                     	;# 
  2091  019F                     	;# 
  2092  020D                     	;# 
  2093  0210                     	;# 
  2094  0211                     	;# 
  2095  0212                     	;# 
  2096  0213                     	;# 
  2097  0214                     	;# 
  2098  0215                     	;# 
  2099  0215                     	;# 
  2100  0216                     	;# 
  2101  0217                     	;# 
  2102  0291                     	;# 
  2103  0291                     	;# 
  2104  0292                     	;# 
  2105  0293                     	;# 
  2106  0294                     	;# 
  2107  0295                     	;# 
  2108  0295                     	;# 
  2109  0296                     	;# 
  2110  0298                     	;# 
  2111  0298                     	;# 
  2112  0299                     	;# 
  2113  029A                     	;# 
  2114  029B                     	;# 
  2115  029C                     	;# 
  2116  029C                     	;# 
  2117  029D                     	;# 
  2118  029E                     	;# 
  2119  029F                     	;# 
  2120  0311                     	;# 
  2121  0311                     	;# 
  2122  0312                     	;# 
  2123  0313                     	;# 
  2124  0314                     	;# 
  2125  0315                     	;# 
  2126  0315                     	;# 
  2127  0316                     	;# 
  2128  0318                     	;# 
  2129  0318                     	;# 
  2130  0319                     	;# 
  2131  031A                     	;# 
  2132  031C                     	;# 
  2133  031C                     	;# 
  2134  031D                     	;# 
  2135  031E                     	;# 
  2136  0394                     	;# 
  2137  0395                     	;# 
  2138  0396                     	;# 
  2139  0415                     	;# 
  2140  0416                     	;# 
  2141  0417                     	;# 
  2142  041C                     	;# 
  2143  041D                     	;# 
  2144  041E                     	;# 
  2145  0791                     	;# 
  2146  0792                     	;# 
  2147  0793                     	;# 
  2148  0794                     	;# 
  2149  0795                     	;# 
  2150  0798                     	;# 
  2151  0799                     	;# 
  2152  07A0                     	;# 
  2153  07A1                     	;# 
  2154  07A3                     	;# 
  2155  07A4                     	;# 
  2156  07A6                     	;# 
  2157  07A7                     	;# 
  2158  07A9                     	;# 
  2159  07AA                     	;# 
  2160  0FE4                     	;# 
  2161  0FE5                     	;# 
  2162  0FE6                     	;# 
  2163  0FE7                     	;# 
  2164  0FE8                     	;# 
  2165  0FE9                     	;# 
  2166  0FEA                     	;# 
  2167  0FEB                     	;# 
  2168  0FED                     	;# 
  2169  0FEE                     	;# 
  2170  0FEF                     	;# 
  2171  0000                     	;# 
  2172  0001                     	;# 
  2173  0002                     	;# 
  2174  0003                     	;# 
  2175  0004                     	;# 
  2176  0005                     	;# 
  2177  0006                     	;# 
  2178  0007                     	;# 
  2179  0008                     	;# 
  2180  0009                     	;# 
  2181  000A                     	;# 
  2182  000B                     	;# 
  2183  000C                     	;# 
  2184  000D                     	;# 
  2185  000E                     	;# 
  2186  0010                     	;# 
  2187  0011                     	;# 
  2188  0012                     	;# 
  2189  0013                     	;# 
  2190  0015                     	;# 
  2191  0016                     	;# 
  2192  0016                     	;# 
  2193  0017                     	;# 
  2194  0018                     	;# 
  2195  0019                     	;# 
  2196  001A                     	;# 
  2197  001B                     	;# 
  2198  001C                     	;# 
  2199  001E                     	;# 
  2200  001F                     	;# 
  2201  008C                     	;# 
  2202  008D                     	;# 
  2203  008E                     	;# 
  2204  0090                     	;# 
  2205  0091                     	;# 
  2206  0092                     	;# 
  2207  0093                     	;# 
  2208  0095                     	;# 
  2209  0096                     	;# 
  2210  0097                     	;# 
  2211  0098                     	;# 
  2212  0099                     	;# 
  2213  009A                     	;# 
  2214  009B                     	;# 
  2215  009B                     	;# 
  2216  009C                     	;# 
  2217  009D                     	;# 
  2218  009E                     	;# 
  2219  010C                     	;# 
  2220  010D                     	;# 
  2221  010E                     	;# 
  2222  0110                     	;# 
  2223  0111                     	;# 
  2224  0112                     	;# 
  2225  0113                     	;# 
  2226  0114                     	;# 
  2227  0115                     	;# 
  2228  0116                     	;# 
  2229  0117                     	;# 
  2230  0118                     	;# 
  2231  0119                     	;# 
  2232  011A                     	;# 
  2233  011B                     	;# 
  2234  011D                     	;# 
  2235  018C                     	;# 
  2236  018D                     	;# 
  2237  0191                     	;# 
  2238  0191                     	;# 
  2239  0192                     	;# 
  2240  0193                     	;# 
  2241  0193                     	;# 
  2242  0193                     	;# 
  2243  0194                     	;# 
  2244  0195                     	;# 
  2245  0196                     	;# 
  2246  0199                     	;# 
  2247  019A                     	;# 
  2248  019B                     	;# 
  2249  019B                     	;# 
  2250  019B                     	;# 
  2251  019B                     	;# 
  2252  019C                     	;# 
  2253  019C                     	;# 
  2254  019D                     	;# 
  2255  019E                     	;# 
  2256  019F                     	;# 
  2257  020D                     	;# 
  2258  0210                     	;# 
  2259  0211                     	;# 
  2260  0212                     	;# 
  2261  0213                     	;# 
  2262  0214                     	;# 
  2263  0215                     	;# 
  2264  0215                     	;# 
  2265  0216                     	;# 
  2266  0217                     	;# 
  2267  0291                     	;# 
  2268  0291                     	;# 
  2269  0292                     	;# 
  2270  0293                     	;# 
  2271  0294                     	;# 
  2272  0295                     	;# 
  2273  0295                     	;# 
  2274  0296                     	;# 
  2275  0298                     	;# 
  2276  0298                     	;# 
  2277  0299                     	;# 
  2278  029A                     	;# 
  2279  029B                     	;# 
  2280  029C                     	;# 
  2281  029C                     	;# 
  2282  029D                     	;# 
  2283  029E                     	;# 
  2284  029F                     	;# 
  2285  0311                     	;# 
  2286  0311                     	;# 
  2287  0312                     	;# 
  2288  0313                     	;# 
  2289  0314                     	;# 
  2290  0315                     	;# 
  2291  0315                     	;# 
  2292  0316                     	;# 
  2293  0318                     	;# 
  2294  0318                     	;# 
  2295  0319                     	;# 
  2296  031A                     	;# 
  2297  031C                     	;# 
  2298  031C                     	;# 
  2299  031D                     	;# 
  2300  031E                     	;# 
  2301  0394                     	;# 
  2302  0395                     	;# 
  2303  0396                     	;# 
  2304  0415                     	;# 
  2305  0416                     	;# 
  2306  0417                     	;# 
  2307  041C                     	;# 
  2308  041D                     	;# 
  2309  041E                     	;# 
  2310  0791                     	;# 
  2311  0792                     	;# 
  2312  0793                     	;# 
  2313  0794                     	;# 
  2314  0795                     	;# 
  2315  0798                     	;# 
  2316  0799                     	;# 
  2317  07A0                     	;# 
  2318  07A1                     	;# 
  2319  07A3                     	;# 
  2320  07A4                     	;# 
  2321  07A6                     	;# 
  2322  07A7                     	;# 
  2323  07A9                     	;# 
  2324  07AA                     	;# 
  2325  0FE4                     	;# 
  2326  0FE5                     	;# 
  2327  0FE6                     	;# 
  2328  0FE7                     	;# 
  2329  0FE8                     	;# 
  2330  0FE9                     	;# 
  2331  0FEA                     	;# 
  2332  0FEB                     	;# 
  2333  0FED                     	;# 
  2334  0FEE                     	;# 
  2335  0FEF                     	;# 
  2336  0000                     	;# 
  2337  0001                     	;# 
  2338  0002                     	;# 
  2339  0003                     	;# 
  2340  0004                     	;# 
  2341  0005                     	;# 
  2342  0006                     	;# 
  2343  0007                     	;# 
  2344  0008                     	;# 
  2345  0009                     	;# 
  2346  000A                     	;# 
  2347  000B                     	;# 
  2348  000C                     	;# 
  2349  000D                     	;# 
  2350  000E                     	;# 
  2351  0010                     	;# 
  2352  0011                     	;# 
  2353  0012                     	;# 
  2354  0013                     	;# 
  2355  0015                     	;# 
  2356  0016                     	;# 
  2357  0016                     	;# 
  2358  0017                     	;# 
  2359  0018                     	;# 
  2360  0019                     	;# 
  2361  001A                     	;# 
  2362  001B                     	;# 
  2363  001C                     	;# 
  2364  001E                     	;# 
  2365  001F                     	;# 
  2366  008C                     	;# 
  2367  008D                     	;# 
  2368  008E                     	;# 
  2369  0090                     	;# 
  2370  0091                     	;# 
  2371  0092                     	;# 
  2372  0093                     	;# 
  2373  0095                     	;# 
  2374  0096                     	;# 
  2375  0097                     	;# 
  2376  0098                     	;# 
  2377  0099                     	;# 
  2378  009A                     	;# 
  2379  009B                     	;# 
  2380  009B                     	;# 
  2381  009C                     	;# 
  2382  009D                     	;# 
  2383  009E                     	;# 
  2384  010C                     	;# 
  2385  010D                     	;# 
  2386  010E                     	;# 
  2387  0110                     	;# 
  2388  0111                     	;# 
  2389  0112                     	;# 
  2390  0113                     	;# 
  2391  0114                     	;# 
  2392  0115                     	;# 
  2393  0116                     	;# 
  2394  0117                     	;# 
  2395  0118                     	;# 
  2396  0119                     	;# 
  2397  011A                     	;# 
  2398  011B                     	;# 
  2399  011D                     	;# 
  2400  018C                     	;# 
  2401  018D                     	;# 
  2402  0191                     	;# 
  2403  0191                     	;# 
  2404  0192                     	;# 
  2405  0193                     	;# 
  2406  0193                     	;# 
  2407  0193                     	;# 
  2408  0194                     	;# 
  2409  0195                     	;# 
  2410  0196                     	;# 
  2411  0199                     	;# 
  2412  019A                     	;# 
  2413  019B                     	;# 
  2414  019B                     	;# 
  2415  019B                     	;# 
  2416  019B                     	;# 
  2417  019C                     	;# 
  2418  019C                     	;# 
  2419  019D                     	;# 
  2420  019E                     	;# 
  2421  019F                     	;# 
  2422  020D                     	;# 
  2423  0210                     	;# 
  2424  0211                     	;# 
  2425  0212                     	;# 
  2426  0213                     	;# 
  2427  0214                     	;# 
  2428  0215                     	;# 
  2429  0215                     	;# 
  2430  0216                     	;# 
  2431  0217                     	;# 
  2432  0291                     	;# 
  2433  0291                     	;# 
  2434  0292                     	;# 
  2435  0293                     	;# 
  2436  0294                     	;# 
  2437  0295                     	;# 
  2438  0295                     	;# 
  2439  0296                     	;# 
  2440  0298                     	;# 
  2441  0298                     	;# 
  2442  0299                     	;# 
  2443  029A                     	;# 
  2444  029B                     	;# 
  2445  029C                     	;# 
  2446  029C                     	;# 
  2447  029D                     	;# 
  2448  029E                     	;# 
  2449  029F                     	;# 
  2450  0311                     	;# 
  2451  0311                     	;# 
  2452  0312                     	;# 
  2453  0313                     	;# 
  2454  0314                     	;# 
  2455  0315                     	;# 
  2456  0315                     	;# 
  2457  0316                     	;# 
  2458  0318                     	;# 
  2459  0318                     	;# 
  2460  0319                     	;# 
  2461  031A                     	;# 
  2462  031C                     	;# 
  2463  031C                     	;# 
  2464  031D                     	;# 
  2465  031E                     	;# 
  2466  0394                     	;# 
  2467  0395                     	;# 
  2468  0396                     	;# 
  2469  0415                     	;# 
  2470  0416                     	;# 
  2471  0417                     	;# 
  2472  041C                     	;# 
  2473  041D                     	;# 
  2474  041E                     	;# 
  2475  0791                     	;# 
  2476  0792                     	;# 
  2477  0793                     	;# 
  2478  0794                     	;# 
  2479  0795                     	;# 
  2480  0798                     	;# 
  2481  0799                     	;# 
  2482  07A0                     	;# 
  2483  07A1                     	;# 
  2484  07A3                     	;# 
  2485  07A4                     	;# 
  2486  07A6                     	;# 
  2487  07A7                     	;# 
  2488  07A9                     	;# 
  2489  07AA                     	;# 
  2490  0FE4                     	;# 
  2491  0FE5                     	;# 
  2492  0FE6                     	;# 
  2493  0FE7                     	;# 
  2494  0FE8                     	;# 
  2495  0FE9                     	;# 
  2496  0FEA                     	;# 
  2497  0FEB                     	;# 
  2498  0FED                     	;# 
  2499  0FEE                     	;# 
  2500  0FEF                     	;# 
  2501  0000                     	;# 
  2502  0001                     	;# 
  2503  0002                     	;# 
  2504  0003                     	;# 
  2505  0004                     	;# 
  2506  0005                     	;# 
  2507  0006                     	;# 
  2508  0007                     	;# 
  2509  0008                     	;# 
  2510  0009                     	;# 
  2511  000A                     	;# 
  2512  000B                     	;# 
  2513  000C                     	;# 
  2514  000D                     	;# 
  2515  000E                     	;# 
  2516  0010                     	;# 
  2517  0011                     	;# 
  2518  0012                     	;# 
  2519  0013                     	;# 
  2520  0015                     	;# 
  2521  0016                     	;# 
  2522  0016                     	;# 
  2523  0017                     	;# 
  2524  0018                     	;# 
  2525  0019                     	;# 
  2526  001A                     	;# 
  2527  001B                     	;# 
  2528  001C                     	;# 
  2529  001E                     	;# 
  2530  001F                     	;# 
  2531  008C                     	;# 
  2532  008D                     	;# 
  2533  008E                     	;# 
  2534  0090                     	;# 
  2535  0091                     	;# 
  2536  0092                     	;# 
  2537  0093                     	;# 
  2538  0095                     	;# 
  2539  0096                     	;# 
  2540  0097                     	;# 
  2541  0098                     	;# 
  2542  0099                     	;# 
  2543  009A                     	;# 
  2544  009B                     	;# 
  2545  009B                     	;# 
  2546  009C                     	;# 
  2547  009D                     	;# 
  2548  009E                     	;# 
  2549  010C                     	;# 
  2550  010D                     	;# 
  2551  010E                     	;# 
  2552  0110                     	;# 
  2553  0111                     	;# 
  2554  0112                     	;# 
  2555  0113                     	;# 
  2556  0114                     	;# 
  2557  0115                     	;# 
  2558  0116                     	;# 
  2559  0117                     	;# 
  2560  0118                     	;# 
  2561  0119                     	;# 
  2562  011A                     	;# 
  2563  011B                     	;# 
  2564  011D                     	;# 
  2565  018C                     	;# 
  2566  018D                     	;# 
  2567  0191                     	;# 
  2568  0191                     	;# 
  2569  0192                     	;# 
  2570  0193                     	;# 
  2571  0193                     	;# 
  2572  0193                     	;# 
  2573  0194                     	;# 
  2574  0195                     	;# 
  2575  0196                     	;# 
  2576  0199                     	;# 
  2577  019A                     	;# 
  2578  019B                     	;# 
  2579  019B                     	;# 
  2580  019B                     	;# 
  2581  019B                     	;# 
  2582  019C                     	;# 
  2583  019C                     	;# 
  2584  019D                     	;# 
  2585  019E                     	;# 
  2586  019F                     	;# 
  2587  020D                     	;# 
  2588  0210                     	;# 
  2589  0211                     	;# 
  2590  0212                     	;# 
  2591  0213                     	;# 
  2592  0214                     	;# 
  2593  0215                     	;# 
  2594  0215                     	;# 
  2595  0216                     	;# 
  2596  0217                     	;# 
  2597  0291                     	;# 
  2598  0291                     	;# 
  2599  0292                     	;# 
  2600  0293                     	;# 
  2601  0294                     	;# 
  2602  0295                     	;# 
  2603  0295                     	;# 
  2604  0296                     	;# 
  2605  0298                     	;# 
  2606  0298                     	;# 
  2607  0299                     	;# 
  2608  029A                     	;# 
  2609  029B                     	;# 
  2610  029C                     	;# 
  2611  029C                     	;# 
  2612  029D                     	;# 
  2613  029E                     	;# 
  2614  029F                     	;# 
  2615  0311                     	;# 
  2616  0311                     	;# 
  2617  0312                     	;# 
  2618  0313                     	;# 
  2619  0314                     	;# 
  2620  0315                     	;# 
  2621  0315                     	;# 
  2622  0316                     	;# 
  2623  0318                     	;# 
  2624  0318                     	;# 
  2625  0319                     	;# 
  2626  031A                     	;# 
  2627  031C                     	;# 
  2628  031C                     	;# 
  2629  031D                     	;# 
  2630  031E                     	;# 
  2631  0394                     	;# 
  2632  0395                     	;# 
  2633  0396                     	;# 
  2634  0415                     	;# 
  2635  0416                     	;# 
  2636  0417                     	;# 
  2637  041C                     	;# 
  2638  041D                     	;# 
  2639  041E                     	;# 
  2640  0791                     	;# 
  2641  0792                     	;# 
  2642  0793                     	;# 
  2643  0794                     	;# 
  2644  0795                     	;# 
  2645  0798                     	;# 
  2646  0799                     	;# 
  2647  07A0                     	;# 
  2648  07A1                     	;# 
  2649  07A3                     	;# 
  2650  07A4                     	;# 
  2651  07A6                     	;# 
  2652  07A7                     	;# 
  2653  07A9                     	;# 
  2654  07AA                     	;# 
  2655  0FE4                     	;# 
  2656  0FE5                     	;# 
  2657  0FE6                     	;# 
  2658  0FE7                     	;# 
  2659  0FE8                     	;# 
  2660  0FE9                     	;# 
  2661  0FEA                     	;# 
  2662  0FEB                     	;# 
  2663  0FED                     	;# 
  2664  0FEE                     	;# 
  2665  0FEF                     	;_mtouch_sensor
  2666                           
  2667 ;; Function _EUSART_DefaultFramingErrorHandler is unused but had its address taken
  2668  0000                     
  2669 ;; Function _EUSART_DefaultOverrunErrorHandler is unused but had its address taken
  2670  0000                     
  2671 ;; Function _EUSART_DefaultErrorHandler is unused but had its address taken
  2672  0000                     
  2673                           	psect	idataBIGRAM
  2674  1739                     __pidataBIGRAM:
  2675                           
  2676                           ;initializer for _mtouch_sensor
  2677  1739  3400               	retlw	0
  2678  173A  3460               	retlw	low _MTOUCH_CVD_ScanA_0
  2679  173B  341E               	retlw	high _MTOUCH_CVD_ScanA_0
  2680  173C  34C0               	retlw	low _MTOUCH_CVD_ScanB_0
  2681  173D  341F               	retlw	high _MTOUCH_CVD_ScanB_0
  2682  173E  3420               	retlw	32
  2683  173F  3400               	retlw	0
  2684  1740  3400               	retlw	0
  2685  1741  3400               	retlw	0
  2686  1742  3401               	retlw	1
  2687  1743  3480               	retlw	low _MTOUCH_CVD_ScanA_1
  2688  1744  341E               	retlw	high _MTOUCH_CVD_ScanA_1
  2689  1745  34E0               	retlw	low _MTOUCH_CVD_ScanB_1
  2690  1746  341F               	retlw	high _MTOUCH_CVD_ScanB_1
  2691  1747  3420               	retlw	32
  2692  1748  3400               	retlw	0
  2693  1749  3400               	retlw	0
  2694  174A  3400               	retlw	0
  2695  174B  3402               	retlw	2
  2696  174C  34A0               	retlw	low _MTOUCH_CVD_ScanA_2
  2697  174D  341E               	retlw	high _MTOUCH_CVD_ScanA_2
  2698  174E  3405               	retlw	low _MTOUCH_CVD_ScanB_2
  2699  174F  3410               	retlw	high _MTOUCH_CVD_ScanB_2
  2700  1750  3420               	retlw	32
  2701  1751  3400               	retlw	0
  2702  1752  3400               	retlw	0
  2703  1753  3400               	retlw	0
  2704  1754  3403               	retlw	3
  2705  1755  34C0               	retlw	low _MTOUCH_CVD_ScanA_3
  2706  1756  341E               	retlw	high _MTOUCH_CVD_ScanA_3
  2707  1757  3425               	retlw	low _MTOUCH_CVD_ScanB_3
  2708  1758  3410               	retlw	high _MTOUCH_CVD_ScanB_3
  2709  1759  3420               	retlw	32
  2710  175A  3400               	retlw	0
  2711  175B  3400               	retlw	0
  2712  175C  3400               	retlw	0
  2713  175D  3404               	retlw	4
  2714  175E  34E0               	retlw	low _MTOUCH_CVD_ScanA_4
  2715  175F  341E               	retlw	high _MTOUCH_CVD_ScanA_4
  2716  1760  3445               	retlw	low _MTOUCH_CVD_ScanB_4
  2717  1761  3410               	retlw	high _MTOUCH_CVD_ScanB_4
  2718  1762  3420               	retlw	32
  2719  1763  3400               	retlw	0
  2720  1764  3400               	retlw	0
  2721  1765  3400               	retlw	0
  2722  1766  3405               	retlw	5
  2723  1767  3400               	retlw	low _MTOUCH_CVD_ScanA_5
  2724  1768  341F               	retlw	high _MTOUCH_CVD_ScanA_5
  2725  1769  3465               	retlw	low _MTOUCH_CVD_ScanB_5
  2726  176A  3410               	retlw	high _MTOUCH_CVD_ScanB_5
  2727  176B  3420               	retlw	32
  2728  176C  3400               	retlw	0
  2729  176D  3400               	retlw	0
  2730  176E  3400               	retlw	0
  2731  176F  3406               	retlw	6
  2732  1770  3420               	retlw	low _MTOUCH_CVD_ScanA_6
  2733  1771  341F               	retlw	high _MTOUCH_CVD_ScanA_6
  2734  1772  3485               	retlw	low _MTOUCH_CVD_ScanB_6
  2735  1773  3410               	retlw	high _MTOUCH_CVD_ScanB_6
  2736  1774  3420               	retlw	32
  2737  1775  3400               	retlw	0
  2738  1776  3400               	retlw	0
  2739  1777  3400               	retlw	0
  2740  1778  3407               	retlw	7
  2741  1779  3440               	retlw	low _MTOUCH_CVD_ScanA_7
  2742  177A  341F               	retlw	high _MTOUCH_CVD_ScanA_7
  2743  177B  34A5               	retlw	low _MTOUCH_CVD_ScanB_7
  2744  177C  3410               	retlw	high _MTOUCH_CVD_ScanB_7
  2745  177D  3420               	retlw	32
  2746  177E  3400               	retlw	0
  2747  177F  3400               	retlw	0
  2748  1780  3400               	retlw	0
  2749  1781  3408               	retlw	8
  2750  1782  3460               	retlw	low _MTOUCH_CVD_ScanA_8
  2751  1783  341F               	retlw	high _MTOUCH_CVD_ScanA_8
  2752  1784  34C5               	retlw	low _MTOUCH_CVD_ScanB_8
  2753  1785  3410               	retlw	high _MTOUCH_CVD_ScanB_8
  2754  1786  3420               	retlw	32
  2755  1787  3400               	retlw	0
  2756  1788  3400               	retlw	0
  2757  1789  3400               	retlw	0
  2758  178A  3409               	retlw	9
  2759  178B  3440               	retlw	low _MTOUCH_CVD_ScanA_9
  2760  178C  341E               	retlw	high _MTOUCH_CVD_ScanA_9
  2761  178D  34A0               	retlw	low _MTOUCH_CVD_ScanB_9
  2762  178E  341F               	retlw	high _MTOUCH_CVD_ScanB_9
  2763  178F  3420               	retlw	32
  2764  1790  3400               	retlw	0
  2765  1791  3400               	retlw	0
  2766  1792  3400               	retlw	0
  2767  1793  340A               	retlw	10
  2768  1794  3480               	retlw	low _MTOUCH_CVD_ScanA_10
  2769  1795  341F               	retlw	high _MTOUCH_CVD_ScanA_10
  2770  1796  34E5               	retlw	low _MTOUCH_CVD_ScanB_10
  2771  1797  3410               	retlw	high _MTOUCH_CVD_ScanB_10
  2772  1798  3420               	retlw	32
  2773  1799  3400               	retlw	0
  2774  179A  3400               	retlw	0
  2775  179B  3400               	retlw	0
  2776                           
  2777                           	psect	idataBANK1
  2778  1275                     __pidataBANK1:
  2779                           
  2780                           ;initializer for _Button_StateMachine
  2781  1275  34E3               	retlw	low _Button_State_Initializing
  2782  1276  3409               	retlw	high _Button_State_Initializing
  2783  1277  342A               	retlw	low _Button_State_NotPressed
  2784  1278  340E               	retlw	high _Button_State_NotPressed
  2785  1279  34F3               	retlw	low _Button_State_PressDebounce
  2786  127A  340C               	retlw	high _Button_State_PressDebounce
  2787  127B  34C6               	retlw	low _Button_State_Pressed
  2788  127C  3415               	retlw	high _Button_State_Pressed
  2789  127D  3454               	retlw	low _Button_State_ReleaseDebounce
  2790  127E  340A               	retlw	high _Button_State_ReleaseDebounce
  2791  127F  34D3               	retlw	low _Button_State_Suspended
  2792  1280  341C               	retlw	high _Button_State_Suspended
  2793  1281  34FB               	retlw	low _Button_State_Disabled
  2794  1282  341A               	retlw	high _Button_State_Disabled
  2795                           
  2796                           ;initializer for _callback_released
  2797  1283  34FD               	retlw	low _Slider_DefaultCallback
  2798  1284  341A               	retlw	high _Slider_DefaultCallback
  2799                           
  2800                           ;initializer for _callback_pressed@mtouch_slider$F1186
  2801  1285  34FD               	retlw	low _Slider_DefaultCallback
  2802  1286  341A               	retlw	high _Slider_DefaultCallback
  2803                           
  2804                           ;initializer for _callback_position_changed
  2805  1287  34FD               	retlw	low _Slider_DefaultCallback
  2806  1288  341A               	retlw	high _Slider_DefaultCallback
  2807                           
  2808                           ;initializer for _Sensor_scanB
  2809  1289  34C0               	retlw	low _MTOUCH_CVD_ScanB_0
  2810  128A  341F               	retlw	high _MTOUCH_CVD_ScanB_0
  2811                           
  2812                           ;initializer for _Sensor_scanA
  2813  128B  3460               	retlw	low _MTOUCH_CVD_ScanA_0
  2814  128C  341E               	retlw	high _MTOUCH_CVD_ScanA_0
  2815                           
  2816                           ;initializer for _callback_sampled
  2817  128D  34FC               	retlw	low _Sensor_DefaultCallback
  2818  128E  341A               	retlw	high _Sensor_DefaultCallback
  2819                           
  2820                           ;initializer for _callback_notPressed
  2821  128F  34FA               	retlw	low _Button_DefaultCallback
  2822  1290  341A               	retlw	high _Button_DefaultCallback
  2823                           
  2824                           ;initializer for _callback_pressed
  2825  1291  34FA               	retlw	low _Button_DefaultCallback
  2826  1292  341A               	retlw	high _Button_DefaultCallback
  2827                           
  2828                           ;initializer for _mTouchScanReload
  2829  1293  3463               	retlw	99
  2830  1294  34FF               	retlw	255
  2831                           
  2832                           ;initializer for _mtouch_slider
  2833  1295  3400               	retlw	0
  2834  1296  3400               	retlw	0
  2835  1297  3400               	retlw	0
  2836  1298  3405               	retlw	5
  2837  1299  34C0               	retlw	192
  2838  129A  340F               	retlw	15
  2839  129B  3464               	retlw	100
  2840  129C  3400               	retlw	0
  2841  129D  3400               	retlw	0
  2842  129E  3400               	retlw	0
  2843  129F  3400               	retlw	0
  2844  12A0  3400               	retlw	0
  2845  12A1  3400               	retlw	0
  2846  12A2  3400               	retlw	0
  2847  12A3  3400               	retlw	0
  2848  12A4  3400               	retlw	0
  2849  12A5  3400               	retlw	0
  2850                           
  2851                           	psect	stringtext1
  2852  1800                     __pstringtext1:
  2853  1800                     _mtouch_button_init:
  2854  1800  3400               	retlw	0
  2855  1801  3405               	retlw	5
  2856  1802  3400               	retlw	0
  2857  1803  3401               	retlw	1
  2858  1804  3400               	retlw	0
  2859  1805  3400               	retlw	0
  2860  1806  3400               	retlw	0
  2861  1807  3400               	retlw	0
  2862  1808  3400               	retlw	0
  2863  1809  3400               	retlw	0
  2864  180A  3400               	retlw	0
  2865  180B  3400               	retlw	0
  2866  180C  3400               	retlw	0
  2867  180D  3400               	retlw	0
  2868  180E  3400               	retlw	0
  2869  180F  3464               	retlw	100
  2870  1810  3401               	retlw	1
  2871  1811  3401               	retlw	1
  2872  1812  340A               	retlw	10
  2873  1813  3400               	retlw	0
  2874  1814  3401               	retlw	1
  2875  1815  3400               	retlw	0
  2876  1816  3400               	retlw	0
  2877  1817  3400               	retlw	0
  2878  1818  3400               	retlw	0
  2879  1819  3400               	retlw	0
  2880  181A  3400               	retlw	0
  2881  181B  3400               	retlw	0
  2882  181C  3400               	retlw	0
  2883  181D  3400               	retlw	0
  2884  181E  3400               	retlw	0
  2885  181F  3400               	retlw	0
  2886  1820  3464               	retlw	100
  2887  1821  3401               	retlw	1
  2888  1822  3402               	retlw	2
  2889  1823  3409               	retlw	9
  2890  1824  3400               	retlw	0
  2891  1825  3401               	retlw	1
  2892  1826  3400               	retlw	0
  2893  1827  3400               	retlw	0
  2894  1828  3400               	retlw	0
  2895  1829  3400               	retlw	0
  2896  182A  3400               	retlw	0
  2897  182B  3400               	retlw	0
  2898  182C  3400               	retlw	0
  2899  182D  3400               	retlw	0
  2900  182E  3400               	retlw	0
  2901  182F  3400               	retlw	0
  2902  1830  3400               	retlw	0
  2903  1831  3464               	retlw	100
  2904  1832  3401               	retlw	1
  2905  1833  3403               	retlw	3
  2906  1834  3408               	retlw	8
  2907  1835  3400               	retlw	0
  2908  1836  3401               	retlw	1
  2909  1837  3400               	retlw	0
  2910  1838  3400               	retlw	0
  2911  1839  3400               	retlw	0
  2912  183A  3400               	retlw	0
  2913  183B  3400               	retlw	0
  2914  183C  3400               	retlw	0
  2915  183D  3400               	retlw	0
  2916  183E  3400               	retlw	0
  2917  183F  3400               	retlw	0
  2918  1840  3400               	retlw	0
  2919  1841  3400               	retlw	0
  2920  1842  3464               	retlw	100
  2921  1843  3401               	retlw	1
  2922  1844  3404               	retlw	4
  2923  1845  3407               	retlw	7
  2924  1846  3400               	retlw	0
  2925  1847  3401               	retlw	1
  2926  1848  3400               	retlw	0
  2927  1849  3400               	retlw	0
  2928  184A  3400               	retlw	0
  2929  184B  3400               	retlw	0
  2930  184C  3400               	retlw	0
  2931  184D  3400               	retlw	0
  2932  184E  3400               	retlw	0
  2933  184F  3400               	retlw	0
  2934  1850  3400               	retlw	0
  2935  1851  3400               	retlw	0
  2936  1852  3400               	retlw	0
  2937  1853  3464               	retlw	100
  2938  1854  3401               	retlw	1
  2939  1855                     __end_of_mtouch_button_init:
  2940                           
  2941                           	psect	nvBANK1
  2942  00E1                     __pnvBANK1:
  2943  00E1                     _TMR1_InterruptHandler:
  2944  00E1                     	ds	2
  2945  00E3                     _timer1ReloadVal:
  2946  00E3                     	ds	2
  2947  00E5                     _EUSART_OverrunErrorHandler:
  2948  00E5                     	ds	2
  2949  00E7                     _EUSART_FramingErrorHandler:
  2950  00E7                     	ds	2
  2951                           
  2952                           	psect	nvBANK2
  2953  0120                     __pnvBANK2:
  2954  0120                     _EUSART_ErrorHandler:
  2955  0120                     	ds	2
  2956  0018                     _T1CONbits	set	24
  2957  0018                     _T1CON	set	24
  2958  0016                     _TMR1L	set	22
  2959  0017                     _TMR1H	set	23
  2960  0019                     _T1GCON	set	25
  2961  0011                     _PIR1bits	set	17
  2962  000B                     _INTCONbits	set	11
  2963  005F                     _GIE	set	95
  2964  009B                     _ADRES	set	155
  2965  0091                     _PIE1bits	set	145
  2966  0095                     _OPTION_REGbits	set	149
  2967  008E                     _TRISC	set	142
  2968  008D                     _TRISB	set	141
  2969  008C                     _TRISA	set	140
  2970  0090                     _TRISE	set	144
  2971  0097                     _WDTCON	set	151
  2972  0098                     _OSCTUNE	set	152
  2973  0099                     _OSCCON	set	153
  2974  009D                     _ADCON0bits	set	157
  2975  009E                     _ADCON1	set	158
  2976  009D                     _ADCON0	set	157
  2977  010E                     _LATCbits	set	270
  2978  011D                     _APFCON	set	285
  2979  010E                     _LATC	set	270
  2980  010D                     _LATB	set	269
  2981  010C                     _LATA	set	268
  2982  0110                     _LATE	set	272
  2983  0116                     _BORCON	set	278
  2984  019A                     _TXREG	set	410
  2985  019C                     _SPBRGH	set	412
  2986  019B                     _SPBRGL	set	411
  2987  019E                     _TXSTA	set	414
  2988  019D                     _RCSTA	set	413
  2989  019F                     _BAUDCON	set	415
  2990  018C                     _ANSELA	set	396
  2991  018D                     _ANSELB	set	397
  2992  020D                     _WPUB	set	525
  2993  0210                     _WPUE	set	528
  2994                           
  2995                           	psect	cinit
  2996  0014                     start_initialization:	
  2997                           ; #config settings
  2998                           
  2999  0014                     __initialization:	;BIGRAM
  3000                           
  3001                           ; Initialize objects allocated to BIGRAM
  3002  0014  3039               	movlw	low __pidataBIGRAM
  3003  0015  0084               	movwf	4
  3004  0016  3097               	movlw	(high __pidataBIGRAM)| (0+128)
  3005  0017  0085               	movwf	5
  3006  0018  3038               	movlw	low (0+9016)
  3007  0019  0086               	movwf	6
  3008  001A  3023               	movlw	high (0+9016)
  3009  001B  0087               	movwf	7
  3010  001C  3000               	movlw	0
  3011  001D  00FF               	movwf	btemp+1
  3012  001E  3063               	movlw	99
  3013  001F  319B  2364  3180   	fcall	init_ram
  3014                           
  3015                           ; Initialize objects allocated to BANK1
  3016  0022  3075               	movlw	low __pidataBANK1
  3017  0023  0084               	movwf	4
  3018  0024  3092               	movlw	(high __pidataBANK1)| (0+128)
  3019  0025  0085               	movwf	5
  3020  0026  30A0               	movlw	low __pdataBANK1
  3021  0027  0086               	movwf	6
  3022  0028  3000               	movlw	high __pdataBANK1
  3023  0029  0087               	movwf	7
  3024  002A  3000               	movlw	0
  3025  002B  00FF               	movwf	btemp+1
  3026  002C  3031               	movlw	49
  3027  002D  319B  2364  3180   	fcall	init_ram
  3028                           
  3029                           ; Clear objects allocated to BIGRAM
  3030  0030  309B               	movlw	low (0+9115)
  3031  0031  0084               	movwf	4
  3032  0032  3023               	movlw	high (0+9115)
  3033  0033  0085               	movwf	5
  3034  0034  3055               	movlw	85
  3035  0035  00FE               	movwf	btemp
  3036  0036  3000               	movlw	0
  3037  0037  00FF               	movwf	btemp+1
  3038  0038  319B  2358  3180   	fcall	clear_ram0
  3039                           
  3040                           ; Clear objects allocated to COMMON
  3041  003B  01FA               	clrf	__pbssCOMMON& (0+127)
  3042  003C  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
  3043                           
  3044                           ; Clear objects allocated to BANK0
  3045  003D  3061               	movlw	low __pbssBANK0
  3046  003E  0084               	movwf	4
  3047  003F  3000               	movlw	high __pbssBANK0
  3048  0040  0085               	movwf	5
  3049  0041  300F               	movlw	15
  3050  0042  00FE               	movwf	btemp
  3051  0043  3000               	movlw	0
  3052  0044  00FF               	movwf	btemp+1
  3053  0045  319B  2358         	fcall	clear_ram0
  3054                           
  3055                           ; Clear objects allocated to BANK1
  3056  0047  0021               	movlb	1	; select bank1
  3057  0048  01E9               	clrf	__pbssBANK1& (0+127)
  3058  0049  01EA               	clrf	(__pbssBANK1+1)& (0+127)
  3059  004A  01EB               	clrf	(__pbssBANK1+2)& (0+127)
  3060  004B  01EC               	clrf	(__pbssBANK1+3)& (0+127)
  3061  004C  01ED               	clrf	(__pbssBANK1+4)& (0+127)
  3062  004D  01EE               	clrf	(__pbssBANK1+5)& (0+127)
  3063  004E  01EF               	clrf	(__pbssBANK1+6)& (0+127)
  3064  004F                     end_of_initialization:	
  3065                           ;End of C runtime variable initialization code
  3066                           
  3067  004F                     __end_of__initialization:
  3068  004F  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  3069  0050  0020               	movlb	0
  3070  0051  318E  2EFC         	ljmp	_main	;jump to C main() function
  3071                           
  3072                           	psect	bssCOMMON
  3073  007A                     __pbssCOMMON:
  3074  007A                     MTOUCH_Random@seed:
  3075  007A                     	ds	1
  3076  007B                     _button_reburst_request:
  3077  007B                     	ds	1
  3078                           
  3079                           	psect	bssBANK0
  3080  0061                     __pbssBANK0:
  3081  0061                     _right_signal:
  3082  0061                     	ds	2
  3083  0063                     _left_signal:
  3084  0063                     	ds	2
  3085  0065                     _resol_value:
  3086  0065                     	ds	2
  3087  0067                     _middle_node:
  3088  0067                     	ds	1
  3089  0068                     _sliderGroupStatus:
  3090  0068                     	ds	1
  3091  0069                     _sample_delay:
  3092  0069                     	ds	1
  3093  006A                     _packet_counter:
  3094  006A                     	ds	1
  3095  006B                     _currentScannSensor:
  3096  006B                     	ds	1
  3097  006C                     _sensor_globalFlags:
  3098  006C                     	ds	1
  3099  006D                     _mtouch_request_init:
  3100  006D                     	ds	1
  3101  006E                     _mtouch_time_toScan:
  3102  006E                     	ds	1
  3103  006F                     _resol_bits:
  3104  006F                     	ds	1
  3105                           
  3106                           	psect	bssBANK1
  3107  00E9                     __pbssBANK1:
  3108  00E9                     _middle_signal:
  3109  00E9                     	ds	2
  3110  00EB                     _packet_sample:
  3111  00EB                     	ds	2
  3112  00ED                     _eusartRxLastError:
  3113  00ED                     	ds	1
  3114  00EE                     _wheel_sensor_middle_channel_zero:
  3115  00EE                     	ds	1
  3116  00EF                     _lowpowerActivated:
  3117  00EF                     	ds	1
  3118                           
  3119                           	psect	dataBANK1
  3120  00A0                     __pdataBANK1:
  3121  00A0                     _Button_StateMachine:
  3122  00A0                     	ds	14
  3123  00AE                     _callback_released:
  3124  00AE                     	ds	2
  3125  00B0                     _callback_pressed@mtouch_slider$F1186:
  3126  00B0                     	ds	2
  3127  00B2                     _callback_position_changed:
  3128  00B2                     	ds	2
  3129  00B4                     _Sensor_scanB:
  3130  00B4                     	ds	2
  3131  00B6                     _Sensor_scanA:
  3132  00B6                     	ds	2
  3133  00B8                     _callback_sampled:
  3134  00B8                     	ds	2
  3135  00BA                     _callback_notPressed:
  3136  00BA                     	ds	2
  3137  00BC                     _callback_pressed:
  3138  00BC                     	ds	2
  3139  00BE                     _mTouchScanReload:
  3140  00BE                     	ds	2
  3141  00C0                     _mtouch_slider:
  3142  00C0                     	ds	17
  3143                           
  3144                           	psect	inittext
  3145  1B64                     init_ram:
  3146  1B64  00FE               	movwf	126
  3147  1B65                     initloop:
  3148  1B65  0012               	moviw fsr0++
  3149  1B66  001E               	movwi fsr1++
  3150  1B67  3001               	movlw	1
  3151  1B68  02FE               	subwf	126,f
  3152  1B69  3000               	movlw	0
  3153  1B6A  3BFF               	subwfb	127,f
  3154  1B6B  087F               	movf	127,w
  3155  1B6C  047E               	iorwf	126,w
  3156  1B6D  1903               	btfsc	3,2
  3157  1B6E  3400               	retlw	0
  3158  1B6F  2B65               	goto	initloop
  3159                           
  3160                           	psect	clrtext
  3161  1B58                     clear_ram0:	
  3162                           ;	Called with FSR0 containing the base address, and
  3163                           ;	btemp/btemp+1 has the size to clear
  3164                           
  3165  1B58  0064               	clrwdt	;clear the watchdog before getting into this loop
  3166  1B59                     clrloop0:
  3167  1B59  0180               	clrf	0	;clear RAM location pointed to by FSR
  3168  1B5A  3101               	addfsr 0,1
  3169  1B5B  3001               	movlw	1
  3170  1B5C  02FE               	subwf	126,f
  3171  1B5D  3000               	movlw	0
  3172  1B5E  3BFF               	subwfb	127,f
  3173  1B5F  087F               	movf	127,w
  3174  1B60  047E               	iorwf	126,w
  3175  1B61  1903               	btfsc	3,2
  3176  1B62  3400               	retlw	0	;all done for this memory range, return
  3177  1B63  2B59               	goto	clrloop0	;have we reached the end yet?
  3178                           
  3179                           	psect	cstackBANK1
  3180  00D1                     __pcstackBANK1:
  3181  00D1                     main@map_slider:
  3182                           
  3183                           ; 4 bytes @ 0x0
  3184  00D1                     	ds	4
  3185  00D5                     main@sliderPostion:
  3186                           
  3187                           ; 2 bytes @ 0x4
  3188  00D5                     	ds	2
  3189  00D7                     main@f_slider:
  3190                           
  3191                           ; 4 bytes @ 0x6
  3192  00D7                     	ds	4
  3193  00DB                     main@ave_slider:
  3194                           
  3195                           ; 4 bytes @ 0xA
  3196  00DB                     	ds	4
  3197  00DF                     main@i:
  3198                           
  3199                           ; 2 bytes @ 0xE
  3200  00DF                     	ds	2
  3201                           
  3202                           	psect	cstackCOMMON
  3203  0070                     __pcstackCOMMON:
  3204  0070                     ?_TMR1_WriteTimer:
  3205  0070                     ?_MTOUCH_Sensor_InitializeAll:	
  3206                           ; 1 bytes @ 0x0
  3207                           
  3208  0070                     ?_MTOUCH_Button_InitializeAll:	
  3209                           ; 1 bytes @ 0x0
  3210                           
  3211  0070                     ?_MTOUCH_Slider_InitializeAll:	
  3212                           ; 1 bytes @ 0x0
  3213                           
  3214  0070                     ?_MTOUCH_Sensor_Sampled_ResetAll:	
  3215                           ; 1 bytes @ 0x0
  3216                           
  3217  0070                     ?_MTOUCH_Sensor_Scan_Initialize:	
  3218                           ; 1 bytes @ 0x0
  3219                           
  3220  0070                     ?_MTOUCH_Sensor_SampleAll:	
  3221                           ; 1 bytes @ 0x0
  3222                           
  3223  0070                     ?_MTOUCH_Button_ServiceAll:	
  3224                           ; 1 bytes @ 0x0
  3225                           
  3226  0070                     ?_MTOUCH_Slider_ServiceAll:	
  3227                           ; 1 bytes @ 0x0
  3228                           
  3229  0070                     ?_MTOUCH_needReburst:	
  3230                           ; 1 bytes @ 0x0
  3231                           
  3232  0070                     ?_MTOUCH_Tick:	
  3233                           ; 1 bytes @ 0x0
  3234                           
  3235  0070                     ?_MTOUCH_Button_Tick:	
  3236                           ; 1 bytes @ 0x0
  3237                           
  3238  0070                     ?_MTOUCH_Slider_Reburst_Service:	
  3239                           ; 1 bytes @ 0x0
  3240                           
  3241  0070                     ?_MTOUCH_Button_Reburst_Service:	
  3242                           ; 1 bytes @ 0x0
  3243                           
  3244  0070                     ?_MTOUCH_Sensor_Calibrate:	
  3245                           ; 1 bytes @ 0x0
  3246                           
  3247  0070                     ?_Button_Reburst_Clear:	
  3248                           ; 1 bytes @ 0x0
  3249                           
  3250  0070                     ?_Button_Service:	
  3251                           ; 1 bytes @ 0x0
  3252                           
  3253  0070                     ?_MTOUCH_Sensor_wasSampled:	
  3254                           ; 1 bytes @ 0x0
  3255                           
  3256  0070                     ?_MTOUCH_Sensor_isCalibrated:	
  3257                           ; 1 bytes @ 0x0
  3258                           
  3259  0070                     ?_MTOUCH_Sensor_Disable:	
  3260                           ; 1 bytes @ 0x0
  3261                           
  3262  0070                     ?_MTOUCH_Sensor_Enable:	
  3263                           ; 1 bytes @ 0x0
  3264                           
  3265  0070                     ?_MTOUCH_Sensor_isEnabled:	
  3266                           ; 1 bytes @ 0x0
  3267                           
  3268  0070                     ?_MTOUCH_Slider_isPositionChanged:	
  3269                           ; 1 bytes @ 0x0
  3270                           
  3271  0070                     ?_Sensor_Service:	
  3272                           ; 1 bytes @ 0x0
  3273                           
  3274  0070                     ?_MTOUCH_Random:	
  3275                           ; 1 bytes @ 0x0
  3276                           
  3277  0070                     ?_Sensor_Acq_ExecuteScan:	
  3278                           ; 1 bytes @ 0x0
  3279                           
  3280  0070                     ?_MTOUCH_Delay:	
  3281                           ; 1 bytes @ 0x0
  3282                           
  3283  0070                     ?_PIN_MANAGER_Initialize:	
  3284                           ; 1 bytes @ 0x0
  3285                           
  3286  0070                     ?_OSCILLATOR_Initialize:	
  3287                           ; 1 bytes @ 0x0
  3288                           
  3289  0070                     ?_WDT_Initialize:	
  3290                           ; 1 bytes @ 0x0
  3291                           
  3292  0070                     ?_TMR1_Initialize:	
  3293                           ; 1 bytes @ 0x0
  3294                           
  3295  0070                     ?_EUSART_Initialize:	
  3296                           ; 1 bytes @ 0x0
  3297                           
  3298  0070                     ?_TMR1_DefaultInterruptHandler:	
  3299                           ; 1 bytes @ 0x0
  3300                           
  3301  0070                     ??_TMR1_DefaultInterruptHandler:	
  3302                           ; 1 bytes @ 0x0
  3303                           
  3304  0070                     ?_MTOUCH_ScanScheduler:	
  3305                           ; 1 bytes @ 0x0
  3306                           
  3307  0070                     ?_MTOUCH_Initialize:	
  3308                           ; 1 bytes @ 0x0
  3309                           
  3310  0070                     ?_MTOUCH_Service_Mainloop:	
  3311                           ; 1 bytes @ 0x0
  3312                           
  3313  0070                     ?_MTOUCH_Button_Initialize:	
  3314                           ; 1 bytes @ 0x0
  3315                           
  3316  0070                     ?_MTOUCH_Button_isPressed:	
  3317                           ; 1 bytes @ 0x0
  3318                           
  3319  0070                     ?_MTOUCH_Button_Deviation_Get:	
  3320                           ; 1 bytes @ 0x0
  3321                           
  3322  0070                     ?_MTOUCH_Button_Reburst_Request:	
  3323                           ; 1 bytes @ 0x0
  3324                           
  3325  0070                     ?_MTOUCH_CVD_ScanA_0:	
  3326                           ; 1 bytes @ 0x0
  3327                           
  3328  0070                     ?_MTOUCH_CVD_ScanB_0:	
  3329                           ; 1 bytes @ 0x0
  3330                           
  3331  0070                     ?_MTOUCH_CVD_ScanA_1:	
  3332                           ; 1 bytes @ 0x0
  3333                           
  3334  0070                     ?_MTOUCH_CVD_ScanB_1:	
  3335                           ; 1 bytes @ 0x0
  3336                           
  3337  0070                     ?_MTOUCH_CVD_ScanA_2:	
  3338                           ; 1 bytes @ 0x0
  3339                           
  3340  0070                     ?_MTOUCH_CVD_ScanB_2:	
  3341                           ; 1 bytes @ 0x0
  3342                           
  3343  0070                     ?_MTOUCH_CVD_ScanA_3:	
  3344                           ; 1 bytes @ 0x0
  3345                           
  3346  0070                     ?_MTOUCH_CVD_ScanB_3:	
  3347                           ; 1 bytes @ 0x0
  3348                           
  3349  0070                     ?_MTOUCH_CVD_ScanA_4:	
  3350                           ; 1 bytes @ 0x0
  3351                           
  3352  0070                     ?_MTOUCH_CVD_ScanB_4:	
  3353                           ; 1 bytes @ 0x0
  3354                           
  3355  0070                     ?_MTOUCH_CVD_ScanA_5:	
  3356                           ; 1 bytes @ 0x0
  3357                           
  3358  0070                     ?_MTOUCH_CVD_ScanB_5:	
  3359                           ; 1 bytes @ 0x0
  3360                           
  3361  0070                     ?_MTOUCH_CVD_ScanA_6:	
  3362                           ; 1 bytes @ 0x0
  3363                           
  3364  0070                     ?_MTOUCH_CVD_ScanB_6:	
  3365                           ; 1 bytes @ 0x0
  3366                           
  3367  0070                     ?_MTOUCH_CVD_ScanA_7:	
  3368                           ; 1 bytes @ 0x0
  3369                           
  3370  0070                     ?_MTOUCH_CVD_ScanB_7:	
  3371                           ; 1 bytes @ 0x0
  3372                           
  3373  0070                     ?_MTOUCH_CVD_ScanA_8:	
  3374                           ; 1 bytes @ 0x0
  3375                           
  3376  0070                     ?_MTOUCH_CVD_ScanB_8:	
  3377                           ; 1 bytes @ 0x0
  3378                           
  3379  0070                     ?_MTOUCH_CVD_ScanA_9:	
  3380                           ; 1 bytes @ 0x0
  3381                           
  3382  0070                     ?_MTOUCH_CVD_ScanB_9:	
  3383                           ; 1 bytes @ 0x0
  3384                           
  3385  0070                     ?_MTOUCH_CVD_ScanA_10:	
  3386                           ; 1 bytes @ 0x0
  3387                           
  3388  0070                     ?_MTOUCH_CVD_ScanB_10:	
  3389                           ; 1 bytes @ 0x0
  3390                           
  3391  0070                     ?_MTOUCH_Sensor_Initialize:	
  3392                           ; 1 bytes @ 0x0
  3393                           
  3394  0070                     ?_Slider_Service:	
  3395                           ; 1 bytes @ 0x0
  3396                           
  3397  0070                     ?_Slider_Initialize:	
  3398                           ; 1 bytes @ 0x0
  3399                           
  3400  0070                     ?_MTOUCH_Slider_isPressed:	
  3401                           ; 1 bytes @ 0x0
  3402                           
  3403  0070                     ?_MTOUCH_Slider_isReburstRequest:	
  3404                           ; 1 bytes @ 0x0
  3405                           
  3406  0070                     ?_SYSTEM_Initialize:	
  3407                           ; 1 bytes @ 0x0
  3408                           
  3409  0070                     ?_EUSART_Write:	
  3410                           ; 1 bytes @ 0x0
  3411                           
  3412  0070                     ?_main:	
  3413                           ; 1 bytes @ 0x0
  3414                           
  3415  0070                     ?_TMR1_ISR:	
  3416                           ; 1 bytes @ 0x0
  3417                           
  3418  0070                     ?_INTERRUPT_InterruptManager:	
  3419                           ; 1 bytes @ 0x0
  3420                           
  3421  0070                     MTOUCH_Sensor_isCalibrated@sensor:	
  3422                           ; 1 bytes @ 0x0
  3423                           
  3424  0070                     MTOUCH_Sensor_Calibrate@sensor:	
  3425                           ; 1 bytes @ 0x0
  3426                           
  3427  0070                     TMR1_WriteTimer@timerVal:	
  3428                           ; 1 bytes @ 0x0
  3429                           
  3430                           
  3431                           ; 2 bytes @ 0x0
  3432  0070                     	ds	2
  3433  0072                     ??_TMR1_WriteTimer:
  3434  0072                     ??_MTOUCH_Sensor_Scan_Initialize:	
  3435                           ; 1 bytes @ 0x2
  3436                           
  3437  0072                     ?_TMR1_SetInterruptHandler:	
  3438                           ; 1 bytes @ 0x2
  3439                           
  3440  0072                     ??_MTOUCH_Button_Reburst_Service:	
  3441                           ; 1 bytes @ 0x2
  3442                           
  3443  0072                     ?_Button_DefaultCallback:	
  3444                           ; 1 bytes @ 0x2
  3445                           
  3446  0072                     ??_MTOUCH_Sensor_Calibrate:	
  3447                           ; 1 bytes @ 0x2
  3448                           
  3449  0072                     ??_Button_Reburst_Clear:	
  3450                           ; 1 bytes @ 0x2
  3451                           
  3452  0072                     ??_MTOUCH_Sensor_isCalibrated:	
  3453                           ; 1 bytes @ 0x2
  3454                           
  3455  0072                     ?_Button_Deviation_Update:	
  3456                           ; 1 bytes @ 0x2
  3457                           
  3458  0072                     ?_Button_Baseline_Update:	
  3459                           ; 1 bytes @ 0x2
  3460                           
  3461  0072                     ??_MTOUCH_Slider_isPositionChanged:	
  3462                           ; 1 bytes @ 0x2
  3463                           
  3464  0072                     ?_Sensor_DefaultCallback:	
  3465                           ; 1 bytes @ 0x2
  3466                           
  3467  0072                     ?_Sensor_isEnabled:	
  3468                           ; 1 bytes @ 0x2
  3469                           
  3470  0072                     ?_Sensor_RawSample_Update:	
  3471                           ; 1 bytes @ 0x2
  3472                           
  3473  0072                     ?_Sensor_setSampled:	
  3474                           ; 1 bytes @ 0x2
  3475                           
  3476  0072                     ?_Sensor_setActive:	
  3477                           ; 1 bytes @ 0x2
  3478                           
  3479  0072                     ?_Sensor_setInactive:	
  3480                           ; 1 bytes @ 0x2
  3481                           
  3482  0072                     ?_Sensor_setScanFunction:	
  3483                           ; 1 bytes @ 0x2
  3484                           
  3485  0072                     ??_MTOUCH_Random:	
  3486                           ; 1 bytes @ 0x2
  3487                           
  3488  0072                     ??_MTOUCH_Delay:	
  3489                           ; 1 bytes @ 0x2
  3490                           
  3491  0072                     ?_Slider_DefaultCallback:	
  3492                           ; 1 bytes @ 0x2
  3493                           
  3494  0072                     ??_PIN_MANAGER_Initialize:	
  3495                           ; 1 bytes @ 0x2
  3496                           
  3497  0072                     ??_OSCILLATOR_Initialize:	
  3498                           ; 1 bytes @ 0x2
  3499                           
  3500  0072                     ??_WDT_Initialize:	
  3501                           ; 1 bytes @ 0x2
  3502                           
  3503  0072                     ?_EUSART_SetFramingErrorHandler:	
  3504                           ; 1 bytes @ 0x2
  3505                           
  3506  0072                     ?_EUSART_SetOverrunErrorHandler:	
  3507                           ; 1 bytes @ 0x2
  3508                           
  3509  0072                     ?_EUSART_SetErrorHandler:	
  3510                           ; 1 bytes @ 0x2
  3511                           
  3512  0072                     ??_MTOUCH_ScanScheduler:	
  3513                           ; 1 bytes @ 0x2
  3514                           
  3515  0072                     ??_MTOUCH_CVD_ScanA_0:	
  3516                           ; 1 bytes @ 0x2
  3517                           
  3518  0072                     ??_MTOUCH_CVD_ScanB_0:	
  3519                           ; 1 bytes @ 0x2
  3520                           
  3521  0072                     ??_MTOUCH_CVD_ScanA_1:	
  3522                           ; 1 bytes @ 0x2
  3523                           
  3524  0072                     ??_MTOUCH_CVD_ScanB_1:	
  3525                           ; 1 bytes @ 0x2
  3526                           
  3527  0072                     ??_MTOUCH_CVD_ScanA_2:	
  3528                           ; 1 bytes @ 0x2
  3529                           
  3530  0072                     ??_MTOUCH_CVD_ScanB_2:	
  3531                           ; 1 bytes @ 0x2
  3532                           
  3533  0072                     ??_MTOUCH_CVD_ScanA_3:	
  3534                           ; 1 bytes @ 0x2
  3535                           
  3536  0072                     ??_MTOUCH_CVD_ScanB_3:	
  3537                           ; 1 bytes @ 0x2
  3538                           
  3539  0072                     ??_MTOUCH_CVD_ScanA_4:	
  3540                           ; 1 bytes @ 0x2
  3541                           
  3542  0072                     ??_MTOUCH_CVD_ScanB_4:	
  3543                           ; 1 bytes @ 0x2
  3544                           
  3545  0072                     ??_MTOUCH_CVD_ScanA_5:	
  3546                           ; 1 bytes @ 0x2
  3547                           
  3548  0072                     ??_MTOUCH_CVD_ScanB_5:	
  3549                           ; 1 bytes @ 0x2
  3550                           
  3551  0072                     ??_MTOUCH_CVD_ScanA_6:	
  3552                           ; 1 bytes @ 0x2
  3553                           
  3554  0072                     ??_MTOUCH_CVD_ScanB_6:	
  3555                           ; 1 bytes @ 0x2
  3556                           
  3557  0072                     ??_MTOUCH_CVD_ScanA_7:	
  3558                           ; 1 bytes @ 0x2
  3559                           
  3560  0072                     ??_MTOUCH_CVD_ScanB_7:	
  3561                           ; 1 bytes @ 0x2
  3562                           
  3563  0072                     ??_MTOUCH_CVD_ScanA_8:	
  3564                           ; 1 bytes @ 0x2
  3565                           
  3566  0072                     ??_MTOUCH_CVD_ScanB_8:	
  3567                           ; 1 bytes @ 0x2
  3568                           
  3569  0072                     ??_MTOUCH_CVD_ScanA_9:	
  3570                           ; 1 bytes @ 0x2
  3571                           
  3572  0072                     ??_MTOUCH_CVD_ScanB_9:	
  3573                           ; 1 bytes @ 0x2
  3574                           
  3575  0072                     ??_MTOUCH_CVD_ScanA_10:	
  3576                           ; 1 bytes @ 0x2
  3577                           
  3578  0072                     ??_MTOUCH_CVD_ScanB_10:	
  3579                           ; 1 bytes @ 0x2
  3580                           
  3581  0072                     ??_Slider_Initialize:	
  3582                           ; 1 bytes @ 0x2
  3583                           
  3584  0072                     ??_MTOUCH_Slider_isPressed:	
  3585                           ; 1 bytes @ 0x2
  3586                           
  3587  0072                     ??_MTOUCH_Slider_isReburstRequest:	
  3588                           ; 1 bytes @ 0x2
  3589                           
  3590  0072                     ?_DELAY_milliseconds:	
  3591                           ; 1 bytes @ 0x2
  3592                           
  3593  0072                     ??_EUSART_Write:	
  3594                           ; 1 bytes @ 0x2
  3595                           
  3596  0072                     ??_TMR1_ISR:	
  3597                           ; 1 bytes @ 0x2
  3598                           
  3599  0072                     ??_INTERRUPT_InterruptManager:	
  3600                           ; 1 bytes @ 0x2
  3601                           
  3602  0072                     ?_memcpy:	
  3603                           ; 1 bytes @ 0x2
  3604                           
  3605  0072                     ?_MTOUCH_Slider_Position_Get:	
  3606                           ; 2 bytes @ 0x2
  3607                           
  3608  0072                     ?_abs:	
  3609                           ; 2 bytes @ 0x2
  3610                           
  3611  0072                     ?__Umul8_16:	
  3612                           ; 2 bytes @ 0x2
  3613                           
  3614  0072                     ?_Button_Unscaled_Deviation_Get:	
  3615                           ; 2 bytes @ 0x2
  3616                           
  3617  0072                     ?_divide:	
  3618                           ; 2 bytes @ 0x2
  3619                           
  3620  0072                     ?_get_difference:	
  3621                           ; 2 bytes @ 0x2
  3622                           
  3623  0072                     ?___wmul:	
  3624                           ; 2 bytes @ 0x2
  3625                           
  3626  0072                     ?___fltol:	
  3627                           ; 2 bytes @ 0x2
  3628                           
  3629  0072                     ?___fldiv:	
  3630                           ; 4 bytes @ 0x2
  3631                           
  3632  0072                     ?___xxtofl:	
  3633                           ; 4 bytes @ 0x2
  3634                           
  3635  0072                     Button_DefaultCallback@button:	
  3636                           ; 4 bytes @ 0x2
  3637                           
  3638  0072                     Sensor_DefaultCallback@sensor:	
  3639                           ; 1 bytes @ 0x2
  3640                           
  3641  0072                     MTOUCH_Slider_isReburstRequest@sliderName:	
  3642                           ; 1 bytes @ 0x2
  3643                           
  3644  0072                     MTOUCH_Slider_isPositionChanged@sliderName:	
  3645                           ; 1 bytes @ 0x2
  3646                           
  3647  0072                     Slider_DefaultCallback@slider:	
  3648                           ; 1 bytes @ 0x2
  3649                           
  3650  0072                     EUSART_Write@txData:	
  3651                           ; 1 bytes @ 0x2
  3652                           
  3653  0072                     __Umul8_16@multiplicand:	
  3654                           ; 1 bytes @ 0x2
  3655                           
  3656  0072                     Button_Deviation_Update@button:	
  3657                           ; 1 bytes @ 0x2
  3658                           
  3659  0072                     Button_Unscaled_Deviation_Get@button:	
  3660                           ; 2 bytes @ 0x2
  3661                           
  3662  0072                     Button_Baseline_Update@button:	
  3663                           ; 2 bytes @ 0x2
  3664                           
  3665  0072                     Sensor_RawSample_Update@sensor:	
  3666                           ; 2 bytes @ 0x2
  3667                           
  3668  0072                     Sensor_setScanFunction@sensor:	
  3669                           ; 2 bytes @ 0x2
  3670                           
  3671  0072                     Sensor_isEnabled@sensor:	
  3672                           ; 2 bytes @ 0x2
  3673                           
  3674  0072                     Sensor_setActive@sensor:	
  3675                           ; 2 bytes @ 0x2
  3676                           
  3677  0072                     Sensor_setInactive@sensor:	
  3678                           ; 2 bytes @ 0x2
  3679                           
  3680  0072                     Sensor_setSampled@sensor:	
  3681                           ; 2 bytes @ 0x2
  3682                           
  3683  0072                     divide@numerator:	
  3684                           ; 2 bytes @ 0x2
  3685                           
  3686  0072                     get_difference@previous_position:	
  3687                           ; 2 bytes @ 0x2
  3688                           
  3689  0072                     DELAY_milliseconds@milliseconds:	
  3690                           ; 2 bytes @ 0x2
  3691                           
  3692  0072                     EUSART_SetFramingErrorHandler@interruptHandler:	
  3693                           ; 2 bytes @ 0x2
  3694                           
  3695  0072                     EUSART_SetOverrunErrorHandler@interruptHandler:	
  3696                           ; 2 bytes @ 0x2
  3697                           
  3698  0072                     EUSART_SetErrorHandler@interruptHandler:	
  3699                           ; 2 bytes @ 0x2
  3700                           
  3701  0072                     TMR1_SetInterruptHandler@InterruptHandler:	
  3702                           ; 2 bytes @ 0x2
  3703                           
  3704  0072                     ___wmul@multiplier:	
  3705                           ; 2 bytes @ 0x2
  3706                           
  3707  0072                     abs@a:	
  3708                           ; 2 bytes @ 0x2
  3709                           
  3710  0072                     memcpy@d1:	
  3711                           ; 2 bytes @ 0x2
  3712                           
  3713  0072                     ___fltol@f1:	
  3714                           ; 2 bytes @ 0x2
  3715                           
  3716  0072                     ___fldiv@a:	
  3717                           ; 4 bytes @ 0x2
  3718                           
  3719  0072                     ___xxtofl@val:	
  3720                           ; 4 bytes @ 0x2
  3721                           
  3722                           
  3723                           ; 4 bytes @ 0x2
  3724  0072                     	ds	1
  3725  0073                     ??_Button_DefaultCallback:
  3726  0073                     ??_Sensor_DefaultCallback:	
  3727                           ; 1 bytes @ 0x3
  3728                           
  3729  0073                     ??_Slider_DefaultCallback:	
  3730                           ; 1 bytes @ 0x3
  3731                           
  3732  0073                     MTOUCH_Delay@i:	
  3733                           ; 1 bytes @ 0x3
  3734                           
  3735  0073                     Slider_Initialize@sliderName:	
  3736                           ; 1 bytes @ 0x3
  3737                           
  3738  0073                     MTOUCH_Slider_isPressed@sliderName:	
  3739                           ; 1 bytes @ 0x3
  3740                           
  3741                           
  3742                           ; 1 bytes @ 0x3
  3743  0073                     	ds	1
  3744  0074                     ??_TMR1_SetInterruptHandler:
  3745  0074                     ??_Button_Baseline_Update:	
  3746                           ; 1 bytes @ 0x4
  3747                           
  3748  0074                     ??_MTOUCH_Slider_Position_Get:	
  3749                           ; 1 bytes @ 0x4
  3750                           
  3751  0074                     ??_Sensor_isEnabled:	
  3752                           ; 1 bytes @ 0x4
  3753                           
  3754  0074                     ??_Sensor_RawSample_Update:	
  3755                           ; 1 bytes @ 0x4
  3756                           
  3757  0074                     ??_Sensor_setSampled:	
  3758                           ; 1 bytes @ 0x4
  3759                           
  3760  0074                     ??_abs:	
  3761                           ; 1 bytes @ 0x4
  3762                           
  3763  0074                     ??_Sensor_setActive:	
  3764                           ; 1 bytes @ 0x4
  3765                           
  3766  0074                     ??_Sensor_setInactive:	
  3767                           ; 1 bytes @ 0x4
  3768                           
  3769  0074                     ??_Sensor_setScanFunction:	
  3770                           ; 1 bytes @ 0x4
  3771                           
  3772  0074                     ??_TMR1_Initialize:	
  3773                           ; 1 bytes @ 0x4
  3774                           
  3775  0074                     ??_EUSART_Initialize:	
  3776                           ; 1 bytes @ 0x4
  3777                           
  3778  0074                     ??_EUSART_SetFramingErrorHandler:	
  3779                           ; 1 bytes @ 0x4
  3780                           
  3781  0074                     ??_EUSART_SetOverrunErrorHandler:	
  3782                           ; 1 bytes @ 0x4
  3783                           
  3784  0074                     ??_EUSART_SetErrorHandler:	
  3785                           ; 1 bytes @ 0x4
  3786                           
  3787  0074                     ??__Umul8_16:	
  3788                           ; 1 bytes @ 0x4
  3789                           
  3790  0074                     ??_Button_Unscaled_Deviation_Get:	
  3791                           ; 1 bytes @ 0x4
  3792                           
  3793  0074                     ??_DELAY_milliseconds:	
  3794                           ; 1 bytes @ 0x4
  3795                           
  3796  0074                     Slider_Initialize@slider:	
  3797                           ; 1 bytes @ 0x4
  3798                           
  3799  0074                     MTOUCH_Slider_Position_Get@sliderName:	
  3800                           ; 1 bytes @ 0x4
  3801                           
  3802  0074                     divide@denominator:	
  3803                           ; 1 bytes @ 0x4
  3804                           
  3805  0074                     get_difference@current_position:	
  3806                           ; 2 bytes @ 0x4
  3807                           
  3808  0074                     ___wmul@multiplicand:	
  3809                           ; 2 bytes @ 0x4
  3810                           
  3811  0074                     memcpy@s1:	
  3812                           ; 2 bytes @ 0x4
  3813                           
  3814  0074                     Button_Deviation_Update@deviation:	
  3815                           ; 2 bytes @ 0x4
  3816                           
  3817                           
  3818                           ; 4 bytes @ 0x4
  3819  0074                     	ds	1
  3820  0075                     ??_MTOUCH_Slider_InitializeAll:
  3821                           
  3822                           ; 1 bytes @ 0x5
  3823  0075                     	ds	1
  3824  0076                     ??_positional_hysteresis:
  3825  0076                     ??_moving_average_filter:	
  3826                           ; 1 bytes @ 0x6
  3827                           
  3828  0076                     ??___wmul:	
  3829                           ; 1 bytes @ 0x6
  3830                           
  3831  0076                     ??___xxtofl:	
  3832                           ; 1 bytes @ 0x6
  3833                           
  3834  0076                     divide@exponent:	
  3835                           ; 1 bytes @ 0x6
  3836                           
  3837  0076                     MTOUCH_Slider_InitializeAll@slider:	
  3838                           ; 1 bytes @ 0x6
  3839                           
  3840  0076                     ___fltol@sign1:	
  3841                           ; 1 bytes @ 0x6
  3842                           
  3843  0076                     ___wmul@product:	
  3844                           ; 1 bytes @ 0x6
  3845                           
  3846  0076                     memcpy@n:	
  3847                           ; 2 bytes @ 0x6
  3848                           
  3849  0076                     ___fldiv@b:	
  3850                           ; 2 bytes @ 0x6
  3851                           
  3852                           
  3853                           ; 4 bytes @ 0x6
  3854  0076                     	ds	1
  3855  0077                     ??_divide:
  3856  0077                     ___fltol@exp1:	
  3857                           ; 1 bytes @ 0x7
  3858                           
  3859                           
  3860                           ; 1 bytes @ 0x7
  3861  0077                     	ds	1
  3862  0078                     ??_memcpy:
  3863  0078                     ?_Button_Reburst_Request:	
  3864                           ; 1 bytes @ 0x8
  3865                           
  3866  0078                     ?_Sensor_Sampled_Reset:	
  3867                           ; 1 bytes @ 0x8
  3868                           
  3869  0078                     ?_MTOUCH_Sensor_RawSample_Get:	
  3870                           ; 1 bytes @ 0x8
  3871                           
  3872  0078                     _MTOUCH_Button_isPressed$498:	
  3873                           ; 2 bytes @ 0x8
  3874                           
  3875  0078                     MTOUCH_Button_Deviation_Get@name:	
  3876                           ; 1 bytes @ 0x8
  3877                           
  3878  0078                     MTOUCH_Sensor_Disable@sensor:	
  3879                           ; 1 bytes @ 0x8
  3880                           
  3881  0078                     MTOUCH_Sensor_Enable@sensor:	
  3882                           ; 1 bytes @ 0x8
  3883                           
  3884  0078                     MTOUCH_Sensor_isEnabled@sensor:	
  3885                           ; 1 bytes @ 0x8
  3886                           
  3887  0078                     MTOUCH_Sensor_wasSampled@sensor:	
  3888                           ; 1 bytes @ 0x8
  3889                           
  3890  0078                     Button_Reburst_Request@button:	
  3891                           ; 1 bytes @ 0x8
  3892                           
  3893  0078                     Sensor_Acq_ExecuteScan@result:	
  3894                           ; 2 bytes @ 0x8
  3895                           
  3896  0078                     Sensor_Sampled_Reset@sensor:	
  3897                           ; 2 bytes @ 0x8
  3898                           
  3899  0078                     divide@result:	
  3900                           ; 2 bytes @ 0x8
  3901                           
  3902                           
  3903                           ; 2 bytes @ 0x8
  3904  0078                     	ds	1
  3905  0079                     ??_MTOUCH_Button_InitializeAll:
  3906  0079                     ??_MTOUCH_Tick:	
  3907                           ; 1 bytes @ 0x9
  3908                           
  3909  0079                     ??_Slider_FindLeft:	
  3910                           ; 1 bytes @ 0x9
  3911                           
  3912  0079                     MTOUCH_Button_isPressed@name:	
  3913                           ; 1 bytes @ 0x9
  3914                           
  3915                           
  3916                           ; 1 bytes @ 0x9
  3917  0079                     	ds	1
  3918  007A                     ??_Button_State_Suspended:
  3919  007A                     ??_Button_State_Disabled:	
  3920                           ; 1 bytes @ 0xA
  3921                           
  3922  007A                     ??_Button_Reading_Update:	
  3923                           ; 1 bytes @ 0xA
  3924                           
  3925  007A                     ??_Button_Reburst_Request:	
  3926                           ; 1 bytes @ 0xA
  3927                           
  3928  007A                     ??_Sensor_Sampled_Reset:	
  3929                           ; 1 bytes @ 0xA
  3930                           
  3931  007A                     ??_MTOUCH_Initialize:	
  3932                           ; 1 bytes @ 0xA
  3933                           
  3934  007A                     ??_SYSTEM_Initialize:	
  3935                           ; 1 bytes @ 0xA
  3936                           
  3937                           
  3938                           	psect	cstackBANK0
  3939  0020                     __pcstackBANK0:	
  3940                           ; 1 bytes @ 0xA
  3941                           
  3942  0020                     ??_MTOUCH_Sensor_Sampled_ResetAll:
  3943  0020                     ??_MTOUCH_Sensor_wasSampled:	
  3944                           ; 1 bytes @ 0x0
  3945                           
  3946  0020                     ??_Button_Deviation_Update:	
  3947                           ; 1 bytes @ 0x0
  3948                           
  3949  0020                     ??_MTOUCH_Sensor_Disable:	
  3950                           ; 1 bytes @ 0x0
  3951                           
  3952  0020                     ??_MTOUCH_Sensor_Enable:	
  3953                           ; 1 bytes @ 0x0
  3954                           
  3955  0020                     ??_MTOUCH_Sensor_RawSample_Get:	
  3956                           ; 1 bytes @ 0x0
  3957                           
  3958  0020                     ??_MTOUCH_Sensor_isEnabled:	
  3959                           ; 1 bytes @ 0x0
  3960                           
  3961  0020                     ??_Sensor_Acq_ExecuteScan:	
  3962                           ; 1 bytes @ 0x0
  3963                           
  3964  0020                     ??_MTOUCH_Button_Initialize:	
  3965                           ; 1 bytes @ 0x0
  3966                           
  3967  0020                     ??_MTOUCH_Button_isPressed:	
  3968                           ; 1 bytes @ 0x0
  3969                           
  3970  0020                     ??_MTOUCH_Button_Deviation_Get:	
  3971                           ; 1 bytes @ 0x0
  3972                           
  3973  0020                     ??_MTOUCH_Button_Reburst_Request:	
  3974                           ; 1 bytes @ 0x0
  3975                           
  3976  0020                     ??_get_difference:	
  3977                           ; 1 bytes @ 0x0
  3978                           
  3979  0020                     ??___fltol:	
  3980                           ; 1 bytes @ 0x0
  3981                           
  3982  0020                     ??___fldiv:	
  3983                           ; 1 bytes @ 0x0
  3984                           
  3985  0020                     ?_interpolate:	
  3986                           ; 1 bytes @ 0x0
  3987                           
  3988  0020                     ___xxtofl@sign:	
  3989                           ; 2 bytes @ 0x0
  3990                           
  3991  0020                     interpolate@delta1:	
  3992                           ; 1 bytes @ 0x0
  3993                           
  3994  0020                     __Umul8_16@product:	
  3995                           ; 2 bytes @ 0x0
  3996                           
  3997  0020                     memcpy@d:	
  3998                           ; 2 bytes @ 0x0
  3999                           
  4000                           
  4001                           ; 2 bytes @ 0x0
  4002  0020                     	ds	1
  4003  0021                     ___xxtofl@exp:
  4004                           
  4005                           ; 1 bytes @ 0x1
  4006  0021                     	ds	1
  4007  0022                     MTOUCH_Sensor_Sampled_ResetAll@sensor:
  4008  0022                     interpolate@delta2:	
  4009                           ; 2 bytes @ 0x2
  4010                           
  4011  0022                     __Umul8_16@word_mpld:	
  4012                           ; 2 bytes @ 0x2
  4013                           
  4014  0022                     memcpy@s:	
  4015                           ; 2 bytes @ 0x2
  4016                           
  4017  0022                     ___xxtofl@arg:	
  4018                           ; 2 bytes @ 0x2
  4019                           
  4020                           
  4021                           ; 4 bytes @ 0x2
  4022  0022                     	ds	2
  4023  0024                     ?_Button_Check_AKS_Block:
  4024  0024                     ?_Button_Tick_helper:	
  4025                           ; 1 bytes @ 0x4
  4026                           
  4027  0024                     ?_Sensor_Acq_ExecutePacket:	
  4028                           ; 1 bytes @ 0x4
  4029                           
  4030  0024                     ??_MTOUCH_Sensor_Initialize:	
  4031                           ; 1 bytes @ 0x4
  4032                           
  4033  0024                     ?_Slider_FindMiddle:	
  4034                           ; 1 bytes @ 0x4
  4035                           
  4036  0024                     ?_Slider_FindLeft:	
  4037                           ; 2 bytes @ 0x4
  4038                           
  4039  0024                     ?_Slider_FindRight:	
  4040                           ; 2 bytes @ 0x4
  4041                           
  4042  0024                     MTOUCH_Button_Initialize@name:	
  4043                           ; 2 bytes @ 0x4
  4044                           
  4045  0024                     MTOUCH_Button_Reburst_Request@button:	
  4046                           ; 1 bytes @ 0x4
  4047                           
  4048  0024                     MTOUCH_Sensor_RawSample_Get@name:	
  4049                           ; 1 bytes @ 0x4
  4050                           
  4051  0024                     __Umul8_16@multiplier:	
  4052                           ; 1 bytes @ 0x4
  4053                           
  4054  0024                     memcpy@tmp:	
  4055                           ; 1 bytes @ 0x4
  4056                           
  4057  0024                     Button_Tick_helper@button:	
  4058                           ; 1 bytes @ 0x4
  4059                           
  4060  0024                     Button_Check_AKS_Block@button:	
  4061                           ; 2 bytes @ 0x4
  4062                           
  4063  0024                     Sensor_Acq_ExecutePacket@sensor:	
  4064                           ; 2 bytes @ 0x4
  4065                           
  4066  0024                     interpolate@delta3:	
  4067                           ; 2 bytes @ 0x4
  4068                           
  4069                           
  4070                           ; 2 bytes @ 0x4
  4071  0024                     	ds	1
  4072  0025                     ??_MTOUCH_Slider_Reburst_Service:
  4073  0025                     ?_Button_Baseline_Initialize:	
  4074                           ; 1 bytes @ 0x5
  4075                           
  4076  0025                     ?_Button_Reading_Update_Helper:	
  4077                           ; 1 bytes @ 0x5
  4078                           
  4079  0025                     get_difference@slider:	
  4080                           ; 1 bytes @ 0x5
  4081                           
  4082  0025                     MTOUCH_Button_Initialize@button:	
  4083                           ; 1 bytes @ 0x5
  4084                           
  4085  0025                     Button_Reading_Update_Helper@button:	
  4086                           ; 2 bytes @ 0x5
  4087                           
  4088  0025                     Button_Baseline_Initialize@button:	
  4089                           ; 2 bytes @ 0x5
  4090                           
  4091  0025                     ___fldiv@rem:	
  4092                           ; 2 bytes @ 0x5
  4093                           
  4094                           
  4095                           ; 4 bytes @ 0x5
  4096  0025                     	ds	1
  4097  0026                     ??_Button_Check_AKS_Block:
  4098  0026                     ??_Button_Tick_helper:	
  4099                           ; 1 bytes @ 0x6
  4100                           
  4101  0026                     ??_Sensor_Acq_ExecutePacket:	
  4102                           ; 1 bytes @ 0x6
  4103                           
  4104  0026                     ??_Slider_FindMiddle:	
  4105                           ; 1 bytes @ 0x6
  4106                           
  4107  0026                     ??_Slider_FindRight:	
  4108                           ; 1 bytes @ 0x6
  4109                           
  4110  0026                     interpolate@num_bits:	
  4111                           ; 1 bytes @ 0x6
  4112                           
  4113  0026                     Slider_FindLeft@slider:	
  4114                           ; 1 bytes @ 0x6
  4115                           
  4116  0026                     MTOUCH_Slider_Reburst_Service@sliderName:	
  4117                           ; 1 bytes @ 0x6
  4118                           
  4119  0026                     get_difference@rollover_threshold:	
  4120                           ; 1 bytes @ 0x6
  4121                           
  4122                           
  4123                           ; 2 bytes @ 0x6
  4124  0026                     	ds	1
  4125  0027                     ??_MTOUCH_needReburst:
  4126  0027                     ??_Button_Baseline_Initialize:	
  4127                           ; 1 bytes @ 0x7
  4128                           
  4129  0027                     ??_Button_Reading_Update_Helper:	
  4130                           ; 1 bytes @ 0x7
  4131                           
  4132  0027                     ??_interpolate:	
  4133                           ; 1 bytes @ 0x7
  4134                           
  4135  0027                     MTOUCH_Button_InitializeAll@button:	
  4136                           ; 1 bytes @ 0x7
  4137                           
  4138  0027                     Sensor_Acq_ExecutePacket@ADCON0_temp:	
  4139                           ; 1 bytes @ 0x7
  4140                           
  4141  0027                     Slider_FindLeft@ref_node:	
  4142                           ; 1 bytes @ 0x7
  4143                           
  4144                           
  4145                           ; 1 bytes @ 0x7
  4146  0027                     	ds	1
  4147  0028                     ??_MTOUCH_Button_Tick:
  4148  0028                     MTOUCH_needReburst@needReburst:	
  4149                           ; 1 bytes @ 0x8
  4150                           
  4151  0028                     MTOUCH_Sensor_Initialize@sensor:	
  4152                           ; 1 bytes @ 0x8
  4153                           
  4154  0028                     Sensor_Acq_ExecutePacket@ADCON1_temp:	
  4155                           ; 1 bytes @ 0x8
  4156                           
  4157  0028                     Button_Check_AKS_Block@surplus_deviation_this_button:	
  4158                           ; 1 bytes @ 0x8
  4159                           
  4160  0028                     get_difference@diff:	
  4161                           ; 2 bytes @ 0x8
  4162                           
  4163                           
  4164                           ; 2 bytes @ 0x8
  4165  0028                     	ds	1
  4166  0029                     ??_MTOUCH_Sensor_InitializeAll:
  4167  0029                     ?_Button_Reading_Update:	
  4168                           ; 1 bytes @ 0x9
  4169                           
  4170  0029                     Sensor_Acq_ExecutePacket@GIE_state:	
  4171                           ; 1 bytes @ 0x9
  4172                           
  4173  0029                     ___fldiv@sign:	
  4174                           ; 1 bytes @ 0x9
  4175                           
  4176  0029                     Button_Reading_Update@button:	
  4177                           ; 1 bytes @ 0x9
  4178                           
  4179                           
  4180                           ; 2 bytes @ 0x9
  4181  0029                     	ds	1
  4182  002A                     ?_positional_hysteresis:
  4183  002A                     ?_moving_average_filter:	
  4184                           ; 2 bytes @ 0xA
  4185                           
  4186  002A                     Button_Check_AKS_Block@currentAKSGroup:	
  4187                           ; 2 bytes @ 0xA
  4188                           
  4189  002A                     MTOUCH_Sensor_InitializeAll@sensor:	
  4190                           ; 1 bytes @ 0xA
  4191                           
  4192  002A                     Sensor_Acq_ExecutePacket@error:	
  4193                           ; 1 bytes @ 0xA
  4194                           
  4195  002A                     Slider_FindRight@ref_node:	
  4196                           ; 1 bytes @ 0xA
  4197                           
  4198  002A                     positional_hysteresis@current_position:	
  4199                           ; 1 bytes @ 0xA
  4200                           
  4201  002A                     moving_average_filter@current_position:	
  4202                           ; 2 bytes @ 0xA
  4203                           
  4204  002A                     Slider_FindMiddle@channelDelta:	
  4205                           ; 2 bytes @ 0xA
  4206                           
  4207  002A                     ___fldiv@new_exp:	
  4208                           ; 2 bytes @ 0xA
  4209                           
  4210                           
  4211                           ; 2 bytes @ 0xA
  4212  002A                     	ds	1
  4213  002B                     ?_Sensor_Acquisition:
  4214  002B                     Slider_FindRight@slider:	
  4215                           ; 1 bytes @ 0xB
  4216                           
  4217  002B                     Button_Check_AKS_Block@surplus_deviation_check_button:	
  4218                           ; 1 bytes @ 0xB
  4219                           
  4220  002B                     Sensor_Acquisition@sensor:	
  4221                           ; 2 bytes @ 0xB
  4222                           
  4223  002B                     interpolate@rtnval:	
  4224                           ; 2 bytes @ 0xB
  4225                           
  4226                           
  4227                           ; 2 bytes @ 0xB
  4228  002B                     	ds	1
  4229  002C                     positional_hysteresis@previous_position:
  4230  002C                     moving_average_filter@filtered_position:	
  4231                           ; 2 bytes @ 0xC
  4232                           
  4233  002C                     Slider_FindMiddle@maximumDelta:	
  4234                           ; 2 bytes @ 0xC
  4235                           
  4236  002C                     _MTOUCH_Button_Tick$2890:	
  4237                           ; 2 bytes @ 0xC
  4238                           
  4239  002C                     ___fldiv@grs:	
  4240                           ; 2 bytes @ 0xC
  4241                           
  4242                           
  4243                           ; 4 bytes @ 0xC
  4244  002C                     	ds	1
  4245  002D                     ??_Sensor_Acquisition:
  4246  002D                     ?_calculate_raw_position:	
  4247                           ; 1 bytes @ 0xD
  4248                           
  4249  002D                     Button_Check_AKS_Block@check_button:	
  4250                           ; 2 bytes @ 0xD
  4251                           
  4252                           
  4253                           ; 2 bytes @ 0xD
  4254  002D                     	ds	1
  4255  002E                     MTOUCH_Button_Tick@i:
  4256  002E                     Sensor_Acquisition@retry:	
  4257                           ; 1 bytes @ 0xE
  4258                           
  4259  002E                     moving_average_filter@slider:	
  4260                           ; 1 bytes @ 0xE
  4261                           
  4262  002E                     Slider_FindMiddle@i:	
  4263                           ; 1 bytes @ 0xE
  4264                           
  4265  002E                     positional_hysteresis@filtered_position:	
  4266                           ; 1 bytes @ 0xE
  4267                           
  4268                           
  4269                           ; 2 bytes @ 0xE
  4270  002E                     	ds	1
  4271  002F                     ?_Button_State_Initializing:
  4272  002F                     ?_Button_State_NotPressed:	
  4273                           ; 1 bytes @ 0xF
  4274                           
  4275  002F                     ?_Button_State_PressDebounce:	
  4276                           ; 1 bytes @ 0xF
  4277                           
  4278  002F                     ?_Button_State_Pressed:	
  4279                           ; 1 bytes @ 0xF
  4280                           
  4281  002F                     ?_Button_State_ReleaseDebounce:	
  4282                           ; 1 bytes @ 0xF
  4283                           
  4284  002F                     ?_Button_State_Suspended:	
  4285                           ; 1 bytes @ 0xF
  4286                           
  4287  002F                     ?_Button_State_Disabled:	
  4288                           ; 1 bytes @ 0xF
  4289                           
  4290  002F                     ??_Sensor_Service:	
  4291                           ; 1 bytes @ 0xF
  4292                           
  4293  002F                     ??_calculate_raw_position:	
  4294                           ; 1 bytes @ 0xF
  4295                           
  4296  002F                     Slider_FindMiddle@slider:	
  4297                           ; 1 bytes @ 0xF
  4298                           
  4299  002F                     Button_State_Initializing@button:	
  4300                           ; 1 bytes @ 0xF
  4301                           
  4302  002F                     Button_State_NotPressed@button:	
  4303                           ; 2 bytes @ 0xF
  4304                           
  4305  002F                     Button_State_Pressed@button:	
  4306                           ; 2 bytes @ 0xF
  4307                           
  4308  002F                     Button_State_PressDebounce@button:	
  4309                           ; 2 bytes @ 0xF
  4310                           
  4311  002F                     Button_State_ReleaseDebounce@button:	
  4312                           ; 2 bytes @ 0xF
  4313                           
  4314  002F                     Button_State_Suspended@button:	
  4315                           ; 2 bytes @ 0xF
  4316                           
  4317  002F                     Button_State_Disabled@button:	
  4318                           ; 2 bytes @ 0xF
  4319                           
  4320  002F                     moving_average_filter@previous_position:	
  4321                           ; 2 bytes @ 0xF
  4322                           
  4323                           
  4324                           ; 2 bytes @ 0xF
  4325  002F                     	ds	1
  4326  0030                     ?_calculate_contact_size:
  4327  0030                     positional_hysteresis@hyst_width:	
  4328                           ; 2 bytes @ 0x10
  4329                           
  4330  0030                     ___fldiv@bexp:	
  4331                           ; 1 bytes @ 0x10
  4332                           
  4333                           
  4334                           ; 1 bytes @ 0x10
  4335  0030                     	ds	1
  4336  0031                     ??_Button_State_Initializing:
  4337  0031                     ??_Button_State_NotPressed:	
  4338                           ; 1 bytes @ 0x11
  4339                           
  4340  0031                     ??_Button_State_PressDebounce:	
  4341                           ; 1 bytes @ 0x11
  4342                           
  4343  0031                     ??_Button_State_Pressed:	
  4344                           ; 1 bytes @ 0x11
  4345                           
  4346  0031                     ??_Button_State_ReleaseDebounce:	
  4347                           ; 1 bytes @ 0x11
  4348                           
  4349  0031                     positional_hysteresis@polarity:	
  4350                           ; 1 bytes @ 0x11
  4351                           
  4352  0031                     ___fldiv@aexp:	
  4353                           ; 1 bytes @ 0x11
  4354                           
  4355  0031                     moving_average_filter@dist_temp:	
  4356                           ; 1 bytes @ 0x11
  4357                           
  4358                           
  4359                           ; 2 bytes @ 0x11
  4360  0031                     	ds	1
  4361  0032                     ??_calculate_contact_size:
  4362  0032                     ?___flmul:	
  4363                           ; 1 bytes @ 0x12
  4364                           
  4365  0032                     positional_hysteresis@distance:	
  4366                           ; 4 bytes @ 0x12
  4367                           
  4368  0032                     ___flmul@b:	
  4369                           ; 2 bytes @ 0x12
  4370                           
  4371                           
  4372                           ; 4 bytes @ 0x12
  4373  0032                     	ds	1
  4374  0033                     Sensor_Service@name:
  4375  0033                     moving_average_filter@distance:	
  4376                           ; 1 bytes @ 0x13
  4377                           
  4378                           
  4379                           ; 2 bytes @ 0x13
  4380  0033                     	ds	1
  4381  0034                     Sensor_Service@error:
  4382  0034                     positional_hysteresis@slider:	
  4383                           ; 1 bytes @ 0x14
  4384                           
  4385  0034                     calculate_raw_position@ref_node:	
  4386                           ; 1 bytes @ 0x14
  4387                           
  4388  0034                     calculate_contact_size@contact_size:	
  4389                           ; 1 bytes @ 0x14
  4390                           
  4391                           
  4392                           ; 2 bytes @ 0x14
  4393  0034                     	ds	1
  4394  0035                     ??_Button_Service:
  4395  0035                     Sensor_Service@sensor:	
  4396                           ; 1 bytes @ 0x15
  4397                           
  4398  0035                     calculate_raw_position@deadband_set:	
  4399                           ; 2 bytes @ 0x15
  4400                           
  4401                           
  4402                           ; 2 bytes @ 0x15
  4403  0035                     	ds	1
  4404  0036                     calculate_contact_size@slider:
  4405  0036                     ___flmul@a:	
  4406                           ; 1 bytes @ 0x16
  4407                           
  4408                           
  4409                           ; 4 bytes @ 0x16
  4410  0036                     	ds	1
  4411  0037                     ??_MTOUCH_Sensor_SampleAll:
  4412  0037                     calculate_raw_position@interpolation_scale:	
  4413                           ; 1 bytes @ 0x17
  4414                           
  4415                           
  4416                           ; 1 bytes @ 0x17
  4417  0037                     	ds	1
  4418  0038                     MTOUCH_Sensor_SampleAll@sensor:
  4419  0038                     calculate_raw_position@deadband:	
  4420                           ; 1 bytes @ 0x18
  4421                           
  4422                           
  4423                           ; 2 bytes @ 0x18
  4424  0038                     	ds	1
  4425  0039                     Button_Service@name:
  4426                           
  4427                           ; 1 bytes @ 0x19
  4428  0039                     	ds	1
  4429  003A                     ??___flmul:
  4430  003A                     calculate_raw_position@interpolation_bits:	
  4431                           ; 1 bytes @ 0x1A
  4432                           
  4433  003A                     Button_Service@button:	
  4434                           ; 1 bytes @ 0x1A
  4435                           
  4436                           
  4437                           ; 2 bytes @ 0x1A
  4438  003A                     	ds	1
  4439  003B                     calculate_raw_position@size:
  4440                           
  4441                           ; 1 bytes @ 0x1B
  4442  003B                     	ds	1
  4443  003C                     ??_MTOUCH_Button_ServiceAll:
  4444  003C                     calculate_raw_position@slider:	
  4445                           ; 1 bytes @ 0x1C
  4446                           
  4447                           
  4448                           ; 1 bytes @ 0x1C
  4449  003C                     	ds	1
  4450  003D                     MTOUCH_Button_ServiceAll@button:
  4451  003D                     calculate_raw_position@position:	
  4452                           ; 1 bytes @ 0x1D
  4453                           
  4454                           
  4455                           ; 2 bytes @ 0x1D
  4456  003D                     	ds	2
  4457  003F                     ?_calculate_position:
  4458  003F                     ___flmul@sign:	
  4459                           ; 2 bytes @ 0x1F
  4460                           
  4461                           
  4462                           ; 1 bytes @ 0x1F
  4463  003F                     	ds	1
  4464  0040                     ___flmul@aexp:
  4465                           
  4466                           ; 1 bytes @ 0x20
  4467  0040                     	ds	1
  4468  0041                     ??_calculate_position:
  4469  0041                     ___flmul@bexp:	
  4470                           ; 1 bytes @ 0x21
  4471                           
  4472                           
  4473                           ; 1 bytes @ 0x21
  4474  0041                     	ds	1
  4475  0042                     calculate_position@position:
  4476  0042                     ___flmul@grs:	
  4477                           ; 2 bytes @ 0x22
  4478                           
  4479                           
  4480                           ; 4 bytes @ 0x22
  4481  0042                     	ds	2
  4482  0044                     calculate_position@filtered_position:
  4483                           
  4484                           ; 2 bytes @ 0x24
  4485  0044                     	ds	2
  4486  0046                     calculate_position@raw_position:
  4487  0046                     ___flmul@prod:	
  4488                           ; 2 bytes @ 0x26
  4489                           
  4490                           
  4491                           ; 4 bytes @ 0x26
  4492  0046                     	ds	2
  4493  0048                     calculate_position@slider:
  4494                           
  4495                           ; 1 bytes @ 0x28
  4496  0048                     	ds	1
  4497  0049                     ??_Slider_Service:
  4498                           
  4499                           ; 1 bytes @ 0x29
  4500  0049                     	ds	1
  4501  004A                     ___flmul@temp:
  4502                           
  4503                           ; 2 bytes @ 0x2A
  4504  004A                     	ds	2
  4505  004C                     ?___fladd:
  4506  004C                     ___fladd@b:	
  4507                           ; 4 bytes @ 0x2C
  4508                           
  4509                           
  4510                           ; 4 bytes @ 0x2C
  4511  004C                     	ds	1
  4512  004D                     Slider_Service@group_status:
  4513                           
  4514                           ; 1 bytes @ 0x2D
  4515  004D                     	ds	1
  4516  004E                     Slider_Service@valid_contact_found:
  4517                           
  4518                           ; 1 bytes @ 0x2E
  4519  004E                     	ds	1
  4520  004F                     Slider_Service@position:
  4521                           
  4522                           ; 2 bytes @ 0x2F
  4523  004F                     	ds	1
  4524  0050                     ___fladd@a:
  4525                           
  4526                           ; 4 bytes @ 0x30
  4527  0050                     	ds	1
  4528  0051                     Slider_Service@status:
  4529                           
  4530                           ; 1 bytes @ 0x31
  4531  0051                     	ds	1
  4532  0052                     Slider_Service@segment:
  4533                           
  4534                           ; 2 bytes @ 0x32
  4535  0052                     	ds	2
  4536  0054                     ??___fladd:
  4537  0054                     Slider_Service@sliderName:	
  4538                           ; 1 bytes @ 0x34
  4539                           
  4540                           
  4541                           ; 1 bytes @ 0x34
  4542  0054                     	ds	1
  4543  0055                     Slider_Service@slider:
  4544                           
  4545                           ; 1 bytes @ 0x35
  4546  0055                     	ds	1
  4547  0056                     ??_MTOUCH_Slider_ServiceAll:
  4548                           
  4549                           ; 1 bytes @ 0x36
  4550  0056                     	ds	1
  4551  0057                     MTOUCH_Slider_ServiceAll@slider:
  4552                           
  4553                           ; 1 bytes @ 0x37
  4554  0057                     	ds	1
  4555  0058                     ??_MTOUCH_Service_Mainloop:
  4556                           
  4557                           ; 1 bytes @ 0x38
  4558  0058                     	ds	4
  4559  005C                     ___fladd@signs:
  4560                           
  4561                           ; 1 bytes @ 0x3C
  4562  005C                     	ds	1
  4563  005D                     ___fladd@aexp:
  4564                           
  4565                           ; 1 bytes @ 0x3D
  4566  005D                     	ds	1
  4567  005E                     ___fladd@bexp:
  4568                           
  4569                           ; 1 bytes @ 0x3E
  4570  005E                     	ds	1
  4571  005F                     ___fladd@grs:
  4572                           
  4573                           ; 1 bytes @ 0x3F
  4574  005F                     	ds	1
  4575  0060                     ??_main:
  4576                           
  4577                           ; 1 bytes @ 0x40
  4578  0060                     	ds	1
  4579                           
  4580                           	psect	maintext
  4581  0EFC                     __pmaintext:	
  4582 ;;
  4583 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  4584 ;;
  4585 ;; *************** function _main *****************
  4586 ;; Defined at:
  4587 ;;		line 54 in file "main.c"
  4588 ;; Parameters:    Size  Location     Type
  4589 ;;		None
  4590 ;; Auto vars:     Size  Location     Type
  4591 ;;  ave_slider      4   10[BANK1 ] float 
  4592 ;;  f_slider        4    6[BANK1 ] float 
  4593 ;;  map_slider      4    0[BANK1 ] float 
  4594 ;;  i               2   14[BANK1 ] int 
  4595 ;;  sliderPostio    2    4[BANK1 ] unsigned short 
  4596 ;; Return value:  Size  Location     Type
  4597 ;;                  1    wreg      void 
  4598 ;; Registers used:
  4599 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4600 ;; Tracked objects:
  4601 ;;		On entry : B1F/0
  4602 ;;		On exit  : 1F/3
  4603 ;;		Unchanged: 0/0
  4604 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4605 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4606 ;;      Locals:         0       0      16       0       0       0       0       0       0       0       0       0       
      +0       0
  4607 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4608 ;;      Totals:         0       1      16       0       0       0       0       0       0       0       0       0       
      +0       0
  4609 ;;Total ram usage:       17 bytes
  4610 ;; Hardware stack levels required when called: 11
  4611 ;; This function calls:
  4612 ;;		_DELAY_milliseconds
  4613 ;;		_EUSART_Write
  4614 ;;		_MTOUCH_Service_Mainloop
  4615 ;;		_MTOUCH_Slider_Position_Get
  4616 ;;		_MTOUCH_Slider_isPositionChanged
  4617 ;;		_MTOUCH_Slider_isPressed
  4618 ;;		_SYSTEM_Initialize
  4619 ;;		___fladd
  4620 ;;		___fldiv
  4621 ;;		___flmul
  4622 ;;		___fltol
  4623 ;;		___xxtofl
  4624 ;; This function is called by:
  4625 ;;		Startup code after reset
  4626 ;; This function uses a non-reentrant model
  4627 ;;
  4628                           
  4629                           
  4630                           ;psect for function _main
  4631  0EFC                     _main:
  4632                           
  4633                           ;main.c: 55:     int i;;main.c: 56:     uint16_t sliderPostion;;main.c: 57:     float f_
      +                          slider;;main.c: 58:     float ave_slider;;main.c: 59:     float map_slider;;main.c: 61: 
      +                              SYSTEM_Initialize();
  4634                           
  4635                           ;incstack = 0
  4636                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4637  0EFC  319C  2441  318E   	fcall	_SYSTEM_Initialize
  4638                           
  4639                           ;main.c: 67:     (INTCONbits.GIE = 1);
  4640  0EFF  178B               	bsf	11,7	;volatile
  4641                           
  4642                           ;main.c: 70:     (INTCONbits.PEIE = 1);
  4643  0F00  170B               	bsf	11,6	;volatile
  4644                           
  4645                           ;main.c: 78:     for (i = 0; i < 10; i++) {
  4646  0F01  01DF               	clrf	main@i^(0+128)
  4647  0F02  01E0               	clrf	(main@i+1)^(0+128)
  4648  0F03                     l1144:	
  4649                           ;main.c: 79:         do { LATCbits.LATC0 = 1; } while(0);
  4650                           
  4651  0F03  0022               	movlb	2	; select bank2
  4652  0F04  140E               	bsf	14,0	;volatile
  4653                           
  4654                           ;main.c: 80:         DELAY_milliseconds(50);
  4655  0F05  3032               	movlw	50
  4656  0F06  00F2               	movwf	DELAY_milliseconds@milliseconds
  4657  0F07  3000               	movlw	0
  4658  0F08  00F3               	movwf	DELAY_milliseconds@milliseconds+1
  4659  0F09  319B  23D5  318E   	fcall	_DELAY_milliseconds
  4660  0F0C  0022               	movlb	2	; select bank2
  4661  0F0D  100E               	bcf	14,0	;volatile
  4662                           
  4663                           ;main.c: 82:         DELAY_milliseconds(50);
  4664  0F0E  3032               	movlw	50
  4665  0F0F  00F2               	movwf	DELAY_milliseconds@milliseconds
  4666  0F10  3000               	movlw	0
  4667  0F11  00F3               	movwf	DELAY_milliseconds@milliseconds+1
  4668  0F12  319B  23D5  318E   	fcall	_DELAY_milliseconds
  4669                           
  4670                           ;main.c: 83:     }
  4671  0F15  3001               	movlw	1
  4672  0F16  0021               	movlb	1	; select bank1
  4673  0F17  07DF               	addwf	main@i^(0+128),f
  4674  0F18  3000               	movlw	0
  4675  0F19  3DE0               	addwfc	(main@i+1)^(0+128),f
  4676  0F1A  0860               	movf	(main@i+1)^(0+128),w
  4677  0F1B  3A80               	xorlw	128
  4678  0F1C  0020               	movlb	0	; select bank0
  4679  0F1D  00E0               	movwf	??_main
  4680  0F1E  3080               	movlw	128
  4681  0F1F  0260               	subwf	??_main,w
  4682  0F20  1D03               	skipz
  4683  0F21  2F25               	goto	u7865
  4684  0F22  300A               	movlw	10
  4685  0F23  0021               	movlb	1	; select bank1
  4686  0F24  025F               	subwf	main@i^(0+128),w
  4687  0F25                     u7865:
  4688  0F25  1C03               	skipc
  4689  0F26  2F03               	goto	l1144
  4690  0F27                     l7500:
  4691                           
  4692                           ;main.c: 89:         if (MTOUCH_Service_Mainloop()) {
  4693  0F27  3191  21D0  318E   	fcall	_MTOUCH_Service_Mainloop
  4694  0F2A  3A00               	xorlw	0
  4695  0F2B  1903               	skipnz
  4696  0F2C  2F27               	goto	l7500
  4697                           
  4698                           ;main.c: 92:             if (MTOUCH_Slider_isPositionChanged(0)) {
  4699  0F2D  3000               	movlw	0
  4700  0F2E  319C  242F  318E   	fcall	_MTOUCH_Slider_isPositionChanged
  4701  0F31  3A00               	xorlw	0
  4702  0F32  1903               	skipnz
  4703  0F33  2F50               	goto	l7508
  4704                           
  4705                           ;main.c: 93:                 sliderPostion = MTOUCH_Slider_Position_Get(0);
  4706  0F34  3000               	movlw	0
  4707  0F35  319C  241D  318E   	fcall	_MTOUCH_Slider_Position_Get
  4708  0F38  0873               	movf	?_MTOUCH_Slider_Position_Get+1,w
  4709  0F39  0021               	movlb	1	; select bank1
  4710  0F3A  00D6               	movwf	(main@sliderPostion+1)^(0+128)
  4711  0F3B  0872               	movf	?_MTOUCH_Slider_Position_Get,w
  4712  0F3C  00D5               	movwf	main@sliderPostion^(0+128)
  4713                           
  4714                           ;main.c: 94:                 f_slider = sliderPostion;
  4715  0F3D  0855               	movf	main@sliderPostion^(0+128),w
  4716  0F3E  00F2               	movwf	___xxtofl@val
  4717  0F3F  0856               	movf	(main@sliderPostion+1)^(0+128),w
  4718  0F40  00F3               	movwf	___xxtofl@val+1
  4719  0F41  01F4               	clrf	___xxtofl@val+2
  4720  0F42  01F5               	clrf	___xxtofl@val+3
  4721  0F43  3000               	movlw	0
  4722  0F44  318C  245D  318E   	fcall	___xxtofl
  4723  0F47  0875               	movf	?___xxtofl+3,w
  4724  0F48  0021               	movlb	1	; select bank1
  4725  0F49  00DA               	movwf	(main@f_slider+3)^(0+128)
  4726  0F4A  0874               	movf	?___xxtofl+2,w
  4727  0F4B  00D9               	movwf	(main@f_slider+2)^(0+128)
  4728  0F4C  0873               	movf	?___xxtofl+1,w
  4729  0F4D  00D8               	movwf	(main@f_slider+1)^(0+128)
  4730  0F4E  0872               	movf	?___xxtofl,w
  4731  0F4F  00D7               	movwf	main@f_slider^(0+128)
  4732  0F50                     l7508:
  4733                           
  4734                           ;main.c: 96:             if (!MTOUCH_Slider_isPressed(0)) {
  4735  0F50  3000               	movlw	0
  4736  0F51  319C  24BC  318E   	fcall	_MTOUCH_Slider_isPressed
  4737  0F54  3A00               	xorlw	0
  4738  0F55  1D03               	skipz
  4739  0F56  2F60               	goto	l7512
  4740                           
  4741                           ;main.c: 97:                 f_slider = 0;
  4742  0F57  3000               	movlw	0
  4743  0F58  0021               	movlb	1	; select bank1
  4744  0F59  00DA               	movwf	(main@f_slider+3)^(0+128)
  4745  0F5A  3000               	movlw	0
  4746  0F5B  00D9               	movwf	(main@f_slider+2)^(0+128)
  4747  0F5C  3000               	movlw	0
  4748  0F5D  00D8               	movwf	(main@f_slider+1)^(0+128)
  4749  0F5E  3000               	movlw	0
  4750  0F5F  00D7               	movwf	main@f_slider^(0+128)
  4751  0F60                     l7512:
  4752                           
  4753                           ;main.c: 101:             ave_slider = (ave_slider * 0.8) + (f_slider * 0.2);
  4754  0F60  303E               	movlw	62
  4755  0F61  0020               	movlb	0	; select bank0
  4756  0F62  00B5               	movwf	___flmul@b+3
  4757  0F63  304C               	movlw	76
  4758  0F64  00B4               	movwf	___flmul@b+2
  4759  0F65  30CC               	movlw	204
  4760  0F66  00B3               	movwf	___flmul@b+1
  4761  0F67  30CD               	movlw	205
  4762  0F68  00B2               	movwf	___flmul@b
  4763  0F69  0021               	movlb	1	; select bank1
  4764  0F6A  085A               	movf	(main@f_slider+3)^(0+128),w
  4765  0F6B  0020               	movlb	0	; select bank0
  4766  0F6C  00B9               	movwf	___flmul@a+3
  4767  0F6D  0021               	movlb	1	; select bank1
  4768  0F6E  0859               	movf	(main@f_slider+2)^(0+128),w
  4769  0F6F  0020               	movlb	0	; select bank0
  4770  0F70  00B8               	movwf	___flmul@a+2
  4771  0F71  0021               	movlb	1	; select bank1
  4772  0F72  0858               	movf	(main@f_slider+1)^(0+128),w
  4773  0F73  0020               	movlb	0	; select bank0
  4774  0F74  00B7               	movwf	___flmul@a+1
  4775  0F75  0021               	movlb	1	; select bank1
  4776  0F76  0857               	movf	main@f_slider^(0+128),w
  4777  0F77  0020               	movlb	0	; select bank0
  4778  0F78  00B6               	movwf	___flmul@a
  4779  0F79  3180  2053  318E   	fcall	___flmul
  4780  0F7C  0835               	movf	?___flmul+3,w
  4781  0F7D  00CF               	movwf	___fladd@b+3
  4782  0F7E  0834               	movf	?___flmul+2,w
  4783  0F7F  00CE               	movwf	___fladd@b+2
  4784  0F80  0833               	movf	?___flmul+1,w
  4785  0F81  00CD               	movwf	___fladd@b+1
  4786  0F82  0832               	movf	?___flmul,w
  4787  0F83  00CC               	movwf	___fladd@b
  4788  0F84  303F               	movlw	63
  4789  0F85  00B5               	movwf	___flmul@b+3
  4790  0F86  304C               	movlw	76
  4791  0F87  00B4               	movwf	___flmul@b+2
  4792  0F88  30CC               	movlw	204
  4793  0F89  00B3               	movwf	___flmul@b+1
  4794  0F8A  30CD               	movlw	205
  4795  0F8B  00B2               	movwf	___flmul@b
  4796  0F8C  0021               	movlb	1	; select bank1
  4797  0F8D  085E               	movf	(main@ave_slider+3)^(0+128),w
  4798  0F8E  0020               	movlb	0	; select bank0
  4799  0F8F  00B9               	movwf	___flmul@a+3
  4800  0F90  0021               	movlb	1	; select bank1
  4801  0F91  085D               	movf	(main@ave_slider+2)^(0+128),w
  4802  0F92  0020               	movlb	0	; select bank0
  4803  0F93  00B8               	movwf	___flmul@a+2
  4804  0F94  0021               	movlb	1	; select bank1
  4805  0F95  085C               	movf	(main@ave_slider+1)^(0+128),w
  4806  0F96  0020               	movlb	0	; select bank0
  4807  0F97  00B7               	movwf	___flmul@a+1
  4808  0F98  0021               	movlb	1	; select bank1
  4809  0F99  085B               	movf	main@ave_slider^(0+128),w
  4810  0F9A  0020               	movlb	0	; select bank0
  4811  0F9B  00B6               	movwf	___flmul@a
  4812  0F9C  3180  2053  318E   	fcall	___flmul
  4813  0F9F  0835               	movf	?___flmul+3,w
  4814  0FA0  00D3               	movwf	___fladd@a+3
  4815  0FA1  0834               	movf	?___flmul+2,w
  4816  0FA2  00D2               	movwf	___fladd@a+2
  4817  0FA3  0833               	movf	?___flmul+1,w
  4818  0FA4  00D1               	movwf	___fladd@a+1
  4819  0FA5  0832               	movf	?___flmul,w
  4820  0FA6  00D0               	movwf	___fladd@a
  4821  0FA7  3182  226B  318E   	fcall	___fladd
  4822  0FAA  084F               	movf	?___fladd+3,w
  4823  0FAB  0021               	movlb	1	; select bank1
  4824  0FAC  00DE               	movwf	(main@ave_slider+3)^(0+128)
  4825  0FAD  0020               	movlb	0	; select bank0
  4826  0FAE  084E               	movf	?___fladd+2,w
  4827  0FAF  0021               	movlb	1	; select bank1
  4828  0FB0  00DD               	movwf	(main@ave_slider+2)^(0+128)
  4829  0FB1  0020               	movlb	0	; select bank0
  4830  0FB2  084D               	movf	?___fladd+1,w
  4831  0FB3  0021               	movlb	1	; select bank1
  4832  0FB4  00DC               	movwf	(main@ave_slider+1)^(0+128)
  4833  0FB5  0020               	movlb	0	; select bank0
  4834  0FB6  084C               	movf	?___fladd,w
  4835  0FB7  0021               	movlb	1	; select bank1
  4836  0FB8  00DB               	movwf	main@ave_slider^(0+128)
  4837                           
  4838                           ;main.c: 103:             map_slider = (ave_slider / 4096)*100;
  4839  0FB9  3042               	movlw	66
  4840  0FBA  0020               	movlb	0	; select bank0
  4841  0FBB  00B5               	movwf	___flmul@b+3
  4842  0FBC  30C8               	movlw	200
  4843  0FBD  00B4               	movwf	___flmul@b+2
  4844  0FBE  3000               	movlw	0
  4845  0FBF  00B3               	movwf	___flmul@b+1
  4846  0FC0  3000               	movlw	0
  4847  0FC1  00B2               	movwf	___flmul@b
  4848  0FC2  3045               	movlw	69
  4849  0FC3  00F5               	movwf	___fldiv@a+3
  4850  0FC4  3080               	movlw	128
  4851  0FC5  00F4               	movwf	___fldiv@a+2
  4852  0FC6  3000               	movlw	0
  4853  0FC7  00F3               	movwf	___fldiv@a+1
  4854  0FC8  3000               	movlw	0
  4855  0FC9  00F2               	movwf	___fldiv@a
  4856  0FCA  0021               	movlb	1	; select bank1
  4857  0FCB  085E               	movf	(main@ave_slider+3)^(0+128),w
  4858  0FCC  00F9               	movwf	___fldiv@b+3
  4859  0FCD  085D               	movf	(main@ave_slider+2)^(0+128),w
  4860  0FCE  00F8               	movwf	___fldiv@b+2
  4861  0FCF  085C               	movf	(main@ave_slider+1)^(0+128),w
  4862  0FD0  00F7               	movwf	___fldiv@b+1
  4863  0FD1  085B               	movf	main@ave_slider^(0+128),w
  4864  0FD2  00F6               	movwf	___fldiv@b
  4865  0FD3  3184  244C  318E   	fcall	___fldiv
  4866  0FD6  0875               	movf	?___fldiv+3,w
  4867  0FD7  00B9               	movwf	___flmul@a+3
  4868  0FD8  0874               	movf	?___fldiv+2,w
  4869  0FD9  00B8               	movwf	___flmul@a+2
  4870  0FDA  0873               	movf	?___fldiv+1,w
  4871  0FDB  00B7               	movwf	___flmul@a+1
  4872  0FDC  0872               	movf	?___fldiv,w
  4873  0FDD  00B6               	movwf	___flmul@a
  4874  0FDE  3180  2053  318E   	fcall	___flmul
  4875  0FE1  0835               	movf	?___flmul+3,w
  4876  0FE2  0021               	movlb	1	; select bank1
  4877  0FE3  00D4               	movwf	(main@map_slider+3)^(0+128)
  4878  0FE4  0020               	movlb	0	; select bank0
  4879  0FE5  0834               	movf	?___flmul+2,w
  4880  0FE6  0021               	movlb	1	; select bank1
  4881  0FE7  00D3               	movwf	(main@map_slider+2)^(0+128)
  4882  0FE8  0020               	movlb	0	; select bank0
  4883  0FE9  0833               	movf	?___flmul+1,w
  4884  0FEA  0021               	movlb	1	; select bank1
  4885  0FEB  00D2               	movwf	(main@map_slider+1)^(0+128)
  4886  0FEC  0020               	movlb	0	; select bank0
  4887  0FED  0832               	movf	?___flmul,w
  4888  0FEE  0021               	movlb	1	; select bank1
  4889  0FEF  00D1               	movwf	main@map_slider^(0+128)
  4890                           
  4891                           ;main.c: 105:             EUSART_Write(map_slider);
  4892  0FF0  0854               	movf	(main@map_slider+3)^(0+128),w
  4893  0FF1  00F5               	movwf	___fltol@f1+3
  4894  0FF2  0853               	movf	(main@map_slider+2)^(0+128),w
  4895  0FF3  00F4               	movwf	___fltol@f1+2
  4896  0FF4  0852               	movf	(main@map_slider+1)^(0+128),w
  4897  0FF5  00F3               	movwf	___fltol@f1+1
  4898  0FF6  0851               	movf	main@map_slider^(0+128),w
  4899  0FF7  00F2               	movwf	___fltol@f1
  4900  0FF8  3188  20A6  318E   	fcall	___fltol
  4901  0FFB  0872               	movf	?___fltol,w
  4902  0FFC  319B  233D  318E   	fcall	_EUSART_Write
  4903  0FFF  2F27               	goto	l7500
  4904  1000                     __end_of_main:
  4905                           
  4906                           	psect	text1
  4907  0C5D                     __ptext1:	
  4908 ;; *************** function ___xxtofl *****************
  4909 ;; Defined at:
  4910 ;;		line 10 in file "/Applications/microchip/xc8/v2.32/pic/sources/c99/common/xxtofl.c"
  4911 ;; Parameters:    Size  Location     Type
  4912 ;;  sign            1    wreg     unsigned char 
  4913 ;;  val             4    2[COMMON] long 
  4914 ;; Auto vars:     Size  Location     Type
  4915 ;;  sign            1    0[BANK0 ] unsigned char 
  4916 ;;  arg             4    2[BANK0 ] unsigned long 
  4917 ;;  exp             1    1[BANK0 ] unsigned char 
  4918 ;; Return value:  Size  Location     Type
  4919 ;;                  4    2[COMMON] unsigned char 
  4920 ;; Registers used:
  4921 ;;		wreg, status,2, status,0
  4922 ;; Tracked objects:
  4923 ;;		On entry : 1F/1
  4924 ;;		On exit  : 1F/0
  4925 ;;		Unchanged: 0/0
  4926 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4927 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4928 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4929 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4930 ;;      Totals:         8       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4931 ;;Total ram usage:       14 bytes
  4932 ;; Hardware stack levels used: 1
  4933 ;; Hardware stack levels required when called: 4
  4934 ;; This function calls:
  4935 ;;		Nothing
  4936 ;; This function is called by:
  4937 ;;		_main
  4938 ;; This function uses a non-reentrant model
  4939 ;;
  4940                           
  4941                           
  4942                           ;psect for function ___xxtofl
  4943  0C5D                     ___xxtofl:
  4944                           
  4945                           ;incstack = 0
  4946                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  4947                           ;___xxtofl@sign stored from wreg
  4948  0C5D  0020               	movlb	0	; select bank0
  4949  0C5E  00A0               	movwf	___xxtofl@sign
  4950  0C5F  0820               	movf	___xxtofl@sign,w
  4951  0C60  1D03               	btfss	3,2
  4952  0C61  1FF5               	btfss	___xxtofl@val+3,7
  4953  0C62  2C73               	goto	l5976
  4954  0C63  0972               	comf	___xxtofl@val,w
  4955  0C64  00A2               	movwf	___xxtofl@arg
  4956  0C65  0973               	comf	___xxtofl@val+1,w
  4957  0C66  00A3               	movwf	___xxtofl@arg+1
  4958  0C67  0974               	comf	___xxtofl@val+2,w
  4959  0C68  00A4               	movwf	___xxtofl@arg+2
  4960  0C69  0975               	comf	___xxtofl@val+3,w
  4961  0C6A  00A5               	movwf	___xxtofl@arg+3
  4962  0C6B  0AA2               	incf	___xxtofl@arg,f
  4963  0C6C  1903               	skipnz
  4964  0C6D  0AA3               	incf	___xxtofl@arg+1,f
  4965  0C6E  1903               	skipnz
  4966  0C6F  0AA4               	incf	___xxtofl@arg+2,f
  4967  0C70  1903               	skipnz
  4968  0C71  0AA5               	incf	___xxtofl@arg+3,f
  4969  0C72  2C7B               	goto	l1822
  4970  0C73                     l5976:
  4971  0C73  0875               	movf	___xxtofl@val+3,w
  4972  0C74  00A5               	movwf	___xxtofl@arg+3
  4973  0C75  0874               	movf	___xxtofl@val+2,w
  4974  0C76  00A4               	movwf	___xxtofl@arg+2
  4975  0C77  0873               	movf	___xxtofl@val+1,w
  4976  0C78  00A3               	movwf	___xxtofl@arg+1
  4977  0C79  0872               	movf	___xxtofl@val,w
  4978  0C7A  00A2               	movwf	___xxtofl@arg
  4979  0C7B                     l1822:
  4980  0C7B  0875               	movf	___xxtofl@val+3,w
  4981  0C7C  0474               	iorwf	___xxtofl@val+2,w
  4982  0C7D  0473               	iorwf	___xxtofl@val+1,w
  4983  0C7E  0472               	iorwf	___xxtofl@val,w
  4984  0C7F  1D03               	skipz
  4985  0C80  2C8A               	goto	l5982
  4986  0C81  3000               	movlw	0
  4987  0C82  00F5               	movwf	?___xxtofl+3
  4988  0C83  3000               	movlw	0
  4989  0C84  00F4               	movwf	?___xxtofl+2
  4990  0C85  3000               	movlw	0
  4991  0C86  00F3               	movwf	?___xxtofl+1
  4992  0C87  3000               	movlw	0
  4993  0C88  00F2               	movwf	?___xxtofl
  4994  0C89  0008               	return
  4995  0C8A                     l5982:
  4996  0C8A  3096               	movlw	150
  4997  0C8B  00F6               	movwf	??___xxtofl
  4998  0C8C  0876               	movf	??___xxtofl,w
  4999  0C8D  00A1               	movwf	___xxtofl@exp
  5000  0C8E                     l5986:
  5001  0C8E  30FE               	movlw	254
  5002  0C8F  0525               	andwf	___xxtofl@arg+3,w
  5003  0C90  1903               	btfsc	3,2
  5004  0C91  2CB1               	goto	l1828
  5005  0C92  3001               	movlw	1
  5006  0C93  00F6               	movwf	??___xxtofl
  5007  0C94  0876               	movf	??___xxtofl,w
  5008  0C95  07A1               	addwf	___xxtofl@exp,f
  5009  0C96  3001               	movlw	1
  5010  0C97                     u5895:
  5011  0C97  36A5               	lsrf	___xxtofl@arg+3,f
  5012  0C98  0CA4               	rrf	___xxtofl@arg+2,f
  5013  0C99  0CA3               	rrf	___xxtofl@arg+1,f
  5014  0C9A  0CA2               	rrf	___xxtofl@arg,f
  5015  0C9B  0B89               	decfsz	9,f
  5016  0C9C  2C97               	goto	u5895
  5017  0C9D  2C8E               	goto	l5986
  5018  0C9E                     l5988:
  5019  0C9E  3001               	movlw	1
  5020  0C9F  00F6               	movwf	??___xxtofl
  5021  0CA0  0876               	movf	??___xxtofl,w
  5022  0CA1  07A1               	addwf	___xxtofl@exp,f
  5023  0CA2  3001               	movlw	1
  5024  0CA3  07A2               	addwf	___xxtofl@arg,f
  5025  0CA4  3000               	movlw	0
  5026  0CA5  3DA3               	addwfc	___xxtofl@arg+1,f
  5027  0CA6  3000               	movlw	0
  5028  0CA7  3DA4               	addwfc	___xxtofl@arg+2,f
  5029  0CA8  3000               	movlw	0
  5030  0CA9  3DA5               	addwfc	___xxtofl@arg+3,f
  5031  0CAA  3001               	movlw	1
  5032  0CAB                     u5915:
  5033  0CAB  36A5               	lsrf	___xxtofl@arg+3,f
  5034  0CAC  0CA4               	rrf	___xxtofl@arg+2,f
  5035  0CAD  0CA3               	rrf	___xxtofl@arg+1,f
  5036  0CAE  0CA2               	rrf	___xxtofl@arg,f
  5037  0CAF  0B89               	decfsz	9,f
  5038  0CB0  2CAB               	goto	u5915
  5039  0CB1                     l1828:
  5040  0CB1  30FF               	movlw	255
  5041  0CB2  0525               	andwf	___xxtofl@arg+3,w
  5042  0CB3  1903               	btfsc	3,2
  5043  0CB4  2CC3               	goto	l5996
  5044  0CB5  2C9E               	goto	l5988
  5045  0CB6                     l5998:
  5046  0CB6  3002               	movlw	2
  5047  0CB7  0221               	subwf	___xxtofl@exp,w
  5048  0CB8  1C03               	btfss	3,0
  5049  0CB9  2CC5               	goto	l1835
  5050  0CBA  3001               	movlw	1
  5051  0CBB  02A1               	subwf	___xxtofl@exp,f
  5052  0CBC  3001               	movlw	1
  5053  0CBD                     u5935:
  5054  0CBD  35A2               	lslf	___xxtofl@arg,f
  5055  0CBE  0DA3               	rlf	___xxtofl@arg+1,f
  5056  0CBF  0DA4               	rlf	___xxtofl@arg+2,f
  5057  0CC0  0DA5               	rlf	___xxtofl@arg+3,f
  5058  0CC1  0B89               	decfsz	9,f
  5059  0CC2  2CBD               	goto	u5935
  5060  0CC3                     l5996:
  5061  0CC3  1FA4               	btfss	___xxtofl@arg+2,7
  5062  0CC4  2CB6               	goto	l5998
  5063  0CC5                     l1835:
  5064  0CC5  1821               	btfsc	___xxtofl@exp,0
  5065  0CC6  2CCF               	goto	l1836
  5066  0CC7  30FF               	movlw	255
  5067  0CC8  05A2               	andwf	___xxtofl@arg,f
  5068  0CC9  30FF               	movlw	255
  5069  0CCA  05A3               	andwf	___xxtofl@arg+1,f
  5070  0CCB  307F               	movlw	127
  5071  0CCC  05A4               	andwf	___xxtofl@arg+2,f
  5072  0CCD  30FF               	movlw	255
  5073  0CCE  05A5               	andwf	___xxtofl@arg+3,f
  5074  0CCF                     l1836:
  5075  0CCF  1003               	clrc
  5076  0CD0  0CA1               	rrf	___xxtofl@exp,f
  5077  0CD1  0821               	movf	___xxtofl@exp,w
  5078  0CD2  00F6               	movwf	??___xxtofl
  5079  0CD3  01F7               	clrf	??___xxtofl+1
  5080  0CD4  01F8               	clrf	??___xxtofl+2
  5081  0CD5  01F9               	clrf	??___xxtofl+3
  5082  0CD6  3018               	movlw	24
  5083  0CD7                     u5975:
  5084  0CD7  35F6               	lslf	??___xxtofl,f
  5085  0CD8  0DF7               	rlf	??___xxtofl+1,f
  5086  0CD9  0DF8               	rlf	??___xxtofl+2,f
  5087  0CDA  0DF9               	rlf	??___xxtofl+3,f
  5088  0CDB  0B89               	decfsz	9,f
  5089  0CDC  2CD7               	goto	u5975
  5090  0CDD  0876               	movf	??___xxtofl,w
  5091  0CDE  04A2               	iorwf	___xxtofl@arg,f
  5092  0CDF  0877               	movf	??___xxtofl+1,w
  5093  0CE0  04A3               	iorwf	___xxtofl@arg+1,f
  5094  0CE1  0878               	movf	??___xxtofl+2,w
  5095  0CE2  04A4               	iorwf	___xxtofl@arg+2,f
  5096  0CE3  0879               	movf	??___xxtofl+3,w
  5097  0CE4  04A5               	iorwf	___xxtofl@arg+3,f
  5098  0CE5  0820               	movf	___xxtofl@sign,w
  5099  0CE6  1D03               	btfss	3,2
  5100  0CE7  1FF5               	btfss	___xxtofl@val+3,7
  5101  0CE8  2CEA               	goto	l6010
  5102  0CE9  17A5               	bsf	___xxtofl@arg+3,7
  5103  0CEA                     l6010:
  5104  0CEA  0825               	movf	___xxtofl@arg+3,w
  5105  0CEB  00F5               	movwf	?___xxtofl+3
  5106  0CEC  0824               	movf	___xxtofl@arg+2,w
  5107  0CED  00F4               	movwf	?___xxtofl+2
  5108  0CEE  0823               	movf	___xxtofl@arg+1,w
  5109  0CEF  00F3               	movwf	?___xxtofl+1
  5110  0CF0  0822               	movf	___xxtofl@arg,w
  5111  0CF1  00F2               	movwf	?___xxtofl
  5112  0CF2  0008               	return
  5113  0CF3                     __end_of___xxtofl:
  5114                           
  5115                           	psect	text2
  5116  08A6                     __ptext2:	
  5117 ;; *************** function ___fltol *****************
  5118 ;; Defined at:
  5119 ;;		line 43 in file "/Applications/microchip/xc8/v2.32/pic/sources/c99/common/fltol.c"
  5120 ;; Parameters:    Size  Location     Type
  5121 ;;  f1              4    2[COMMON] unsigned char 
  5122 ;; Auto vars:     Size  Location     Type
  5123 ;;  exp1            1    7[COMMON] unsigned char 
  5124 ;;  sign1           1    6[COMMON] unsigned char 
  5125 ;; Return value:  Size  Location     Type
  5126 ;;                  4    2[COMMON] long 
  5127 ;; Registers used:
  5128 ;;		wreg, status,2, status,0
  5129 ;; Tracked objects:
  5130 ;;		On entry : 1F/1
  5131 ;;		On exit  : 1E/0
  5132 ;;		Unchanged: 0/0
  5133 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5134 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5135 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5136 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5137 ;;      Totals:         6       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5138 ;;Total ram usage:       11 bytes
  5139 ;; Hardware stack levels used: 1
  5140 ;; Hardware stack levels required when called: 4
  5141 ;; This function calls:
  5142 ;;		Nothing
  5143 ;; This function is called by:
  5144 ;;		_main
  5145 ;; This function uses a non-reentrant model
  5146 ;;
  5147                           
  5148                           
  5149                           ;psect for function ___fltol
  5150  08A6                     ___fltol:
  5151                           
  5152                           ;incstack = 0
  5153                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  5154  08A6  1003               	clrc
  5155  08A7  0D74               	rlf	___fltol@f1+2,w
  5156  08A8  0D75               	rlf	___fltol@f1+3,w
  5157  08A9  0020               	movlb	0	; select bank0
  5158  08AA  00A0               	movwf	??___fltol
  5159  08AB  0820               	movf	??___fltol,w
  5160  08AC  00F7               	movwf	___fltol@exp1
  5161  08AD  0877               	movf	___fltol@exp1,w
  5162  08AE  1D03               	btfss	3,2
  5163  08AF  28B9               	goto	l7310
  5164  08B0                     l7306:
  5165  08B0  3000               	movlw	0
  5166  08B1  00F5               	movwf	?___fltol+3
  5167  08B2  3000               	movlw	0
  5168  08B3  00F4               	movwf	?___fltol+2
  5169  08B4  3000               	movlw	0
  5170  08B5  00F3               	movwf	?___fltol+1
  5171  08B6  3000               	movlw	0
  5172  08B7  00F2               	movwf	?___fltol
  5173  08B8  0008               	return
  5174  08B9                     l7310:
  5175  08B9  0872               	movf	___fltol@f1,w
  5176  08BA  00A0               	movwf	??___fltol
  5177  08BB  0873               	movf	___fltol@f1+1,w
  5178  08BC  00A1               	movwf	??___fltol+1
  5179  08BD  0874               	movf	___fltol@f1+2,w
  5180  08BE  00A2               	movwf	??___fltol+2
  5181  08BF  0875               	movf	___fltol@f1+3,w
  5182  08C0  00A3               	movwf	??___fltol+3
  5183  08C1  301F               	movlw	31
  5184  08C2                     u7525:
  5185  08C2  36A3               	lsrf	??___fltol+3,f
  5186  08C3  0CA2               	rrf	??___fltol+2,f
  5187  08C4  0CA1               	rrf	??___fltol+1,f
  5188  08C5  0CA0               	rrf	??___fltol,f
  5189  08C6  0B89               	decfsz	9,f
  5190  08C7  28C2               	goto	u7525
  5191  08C8  0820               	movf	??___fltol,w
  5192  08C9  00A4               	movwf	??___fltol+4
  5193  08CA  0824               	movf	??___fltol+4,w
  5194  08CB  00F6               	movwf	___fltol@sign1
  5195  08CC  17F4               	bsf	___fltol@f1+2,7
  5196  08CD  30FF               	movlw	255
  5197  08CE  05F2               	andwf	___fltol@f1,f
  5198  08CF  30FF               	movlw	255
  5199  08D0  05F3               	andwf	___fltol@f1+1,f
  5200  08D1  30FF               	movlw	255
  5201  08D2  05F4               	andwf	___fltol@f1+2,f
  5202  08D3  3000               	movlw	0
  5203  08D4  05F5               	andwf	___fltol@f1+3,f
  5204  08D5  3096               	movlw	150
  5205  08D6  02F7               	subwf	___fltol@exp1,f
  5206  08D7  1FF7               	btfss	___fltol@exp1,7
  5207  08D8  28EC               	goto	l7328
  5208  08D9  0877               	movf	___fltol@exp1,w
  5209  08DA  3A80               	xorlw	128
  5210  08DB  3E97               	addlw	151
  5211  08DC  1C03               	btfss	3,0
  5212  08DD  28B0               	goto	l7306
  5213  08DE                     l7326:
  5214  08DE  3001               	movlw	1
  5215  08DF                     u7555:
  5216  08DF  36F5               	lsrf	___fltol@f1+3,f
  5217  08E0  0CF4               	rrf	___fltol@f1+2,f
  5218  08E1  0CF3               	rrf	___fltol@f1+1,f
  5219  08E2  0CF2               	rrf	___fltol@f1,f
  5220  08E3  0B89               	decfsz	9,f
  5221  08E4  28DF               	goto	u7555
  5222  08E5  3001               	movlw	1
  5223  08E6  00A0               	movwf	??___fltol
  5224  08E7  0820               	movf	??___fltol,w
  5225  08E8  07F7               	addwf	___fltol@exp1,f
  5226  08E9  1903               	btfsc	3,2
  5227  08EA  28FD               	goto	l7336
  5228  08EB  28DE               	goto	l7326
  5229  08EC                     l7328:
  5230  08EC  3020               	movlw	32
  5231  08ED  0277               	subwf	___fltol@exp1,w
  5232  08EE  1803               	btfsc	3,0
  5233  08EF  28B0               	goto	l7306
  5234  08F0                     l1582:
  5235  08F0  0877               	movf	___fltol@exp1,w
  5236  08F1  1903               	btfsc	3,2
  5237  08F2  28FD               	goto	l7336
  5238  08F3  3001               	movlw	1
  5239  08F4                     u7585:
  5240  08F4  35F2               	lslf	___fltol@f1,f
  5241  08F5  0DF3               	rlf	___fltol@f1+1,f
  5242  08F6  0DF4               	rlf	___fltol@f1+2,f
  5243  08F7  0DF5               	rlf	___fltol@f1+3,f
  5244  08F8  0B89               	decfsz	9,f
  5245  08F9  28F4               	goto	u7585
  5246  08FA  3001               	movlw	1
  5247  08FB  02F7               	subwf	___fltol@exp1,f
  5248  08FC  28F0               	goto	l1582
  5249  08FD                     l7336:
  5250  08FD  0876               	movf	___fltol@sign1,w
  5251  08FE  1903               	btfsc	3,2
  5252  08FF  0008               	return
  5253  0900  09F2               	comf	___fltol@f1,f
  5254  0901  09F3               	comf	___fltol@f1+1,f
  5255  0902  09F4               	comf	___fltol@f1+2,f
  5256  0903  09F5               	comf	___fltol@f1+3,f
  5257  0904  0AF2               	incf	___fltol@f1,f
  5258  0905  1903               	skipnz
  5259  0906  0AF3               	incf	___fltol@f1+1,f
  5260  0907  1903               	skipnz
  5261  0908  0AF4               	incf	___fltol@f1+2,f
  5262  0909  1903               	skipnz
  5263  090A  0AF5               	incf	___fltol@f1+3,f
  5264  090B  0008               	return
  5265  090C                     __end_of___fltol:
  5266                           
  5267                           	psect	text3
  5268  0053                     __ptext3:	
  5269 ;; *************** function ___flmul *****************
  5270 ;; Defined at:
  5271 ;;		line 8 in file "/Applications/microchip/xc8/v2.32/pic/sources/c99/common/sprcmul.c"
  5272 ;; Parameters:    Size  Location     Type
  5273 ;;  b               4   18[BANK0 ] long 
  5274 ;;  a               4   22[BANK0 ] long 
  5275 ;; Auto vars:     Size  Location     Type
  5276 ;;  prod            4   38[BANK0 ] struct .
  5277 ;;  grs             4   34[BANK0 ] unsigned long 
  5278 ;;  temp            2   42[BANK0 ] struct .
  5279 ;;  bexp            1   33[BANK0 ] unsigned char 
  5280 ;;  aexp            1   32[BANK0 ] unsigned char 
  5281 ;;  sign            1   31[BANK0 ] unsigned char 
  5282 ;; Return value:  Size  Location     Type
  5283 ;;                  4   18[BANK0 ] unsigned char 
  5284 ;; Registers used:
  5285 ;;		wreg, status,2, status,0, pclath, cstack
  5286 ;; Tracked objects:
  5287 ;;		On entry : 1F/0
  5288 ;;		On exit  : 1F/0
  5289 ;;		Unchanged: 0/0
  5290 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5291 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5292 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5293 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5294 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5295 ;;Total ram usage:       26 bytes
  5296 ;; Hardware stack levels used: 1
  5297 ;; Hardware stack levels required when called: 5
  5298 ;; This function calls:
  5299 ;;		__Umul8_16
  5300 ;; This function is called by:
  5301 ;;		_main
  5302 ;; This function uses a non-reentrant model
  5303 ;;
  5304                           
  5305                           
  5306                           ;psect for function ___flmul
  5307  0053                     ___flmul:
  5308                           
  5309                           ;incstack = 0
  5310                           ; Regs used in ___flmul: [wreg+status,2+status,0+pclath+cstack]
  5311  0053  0835               	movf	___flmul@b+3,w
  5312  0054  3980               	andlw	128
  5313  0055  00BA               	movwf	??___flmul
  5314  0056  083A               	movf	??___flmul,w
  5315  0057  00BF               	movwf	___flmul@sign
  5316  0058  3535               	lslf	___flmul@b+3,w
  5317  0059  00BA               	movwf	??___flmul
  5318  005A  083A               	movf	??___flmul,w
  5319  005B  00C1               	movwf	___flmul@bexp
  5320  005C  1BB4               	btfsc	___flmul@b+2,7
  5321  005D  1441               	bsf	___flmul@bexp,0
  5322  005E  0841               	movf	___flmul@bexp,w
  5323  005F  1903               	btfsc	3,2
  5324  0060  286E               	goto	l7356
  5325  0061  0A41               	incf	___flmul@bexp,w
  5326  0062  1D03               	btfss	3,2
  5327  0063  286C               	goto	l7354
  5328  0064  3000               	movlw	0
  5329  0065  00B5               	movwf	___flmul@b+3
  5330  0066  3000               	movlw	0
  5331  0067  00B4               	movwf	___flmul@b+2
  5332  0068  3000               	movlw	0
  5333  0069  00B3               	movwf	___flmul@b+1
  5334  006A  3000               	movlw	0
  5335  006B  00B2               	movwf	___flmul@b
  5336  006C                     l7354:
  5337  006C  17B4               	bsf	___flmul@b+2,7
  5338  006D  2876               	goto	l7358
  5339  006E                     l7356:
  5340  006E  3000               	movlw	0
  5341  006F  00B5               	movwf	___flmul@b+3
  5342  0070  3000               	movlw	0
  5343  0071  00B4               	movwf	___flmul@b+2
  5344  0072  3000               	movlw	0
  5345  0073  00B3               	movwf	___flmul@b+1
  5346  0074  3000               	movlw	0
  5347  0075  00B2               	movwf	___flmul@b
  5348  0076                     l7358:
  5349  0076  0839               	movf	___flmul@a+3,w
  5350  0077  3980               	andlw	128
  5351  0078  00BA               	movwf	??___flmul
  5352  0079  083A               	movf	??___flmul,w
  5353  007A  06BF               	xorwf	___flmul@sign,f
  5354  007B  3539               	lslf	___flmul@a+3,w
  5355  007C  00BA               	movwf	??___flmul
  5356  007D  083A               	movf	??___flmul,w
  5357  007E  00C0               	movwf	___flmul@aexp
  5358  007F  1BB8               	btfsc	___flmul@a+2,7
  5359  0080  1440               	bsf	___flmul@aexp,0
  5360  0081  0840               	movf	___flmul@aexp,w
  5361  0082  1903               	btfsc	3,2
  5362  0083  2891               	goto	l7374
  5363  0084  0A40               	incf	___flmul@aexp,w
  5364  0085  1D03               	btfss	3,2
  5365  0086  288F               	goto	l7372
  5366  0087  3000               	movlw	0
  5367  0088  00B9               	movwf	___flmul@a+3
  5368  0089  3000               	movlw	0
  5369  008A  00B8               	movwf	___flmul@a+2
  5370  008B  3000               	movlw	0
  5371  008C  00B7               	movwf	___flmul@a+1
  5372  008D  3000               	movlw	0
  5373  008E  00B6               	movwf	___flmul@a
  5374  008F                     l7372:
  5375  008F  17B8               	bsf	___flmul@a+2,7
  5376  0090  2899               	goto	l7376
  5377  0091                     l7374:
  5378  0091  3000               	movlw	0
  5379  0092  00B9               	movwf	___flmul@a+3
  5380  0093  3000               	movlw	0
  5381  0094  00B8               	movwf	___flmul@a+2
  5382  0095  3000               	movlw	0
  5383  0096  00B7               	movwf	___flmul@a+1
  5384  0097  3000               	movlw	0
  5385  0098  00B6               	movwf	___flmul@a
  5386  0099                     l7376:
  5387  0099  0840               	movf	___flmul@aexp,w
  5388  009A  1D03               	btfss	3,2
  5389  009B  0841               	movf	___flmul@bexp,w
  5390  009C  1D03               	btfss	3,2
  5391  009D  28A7               	goto	l7384
  5392  009E  3000               	movlw	0
  5393  009F  00B5               	movwf	?___flmul+3
  5394  00A0  3000               	movlw	0
  5395  00A1  00B4               	movwf	?___flmul+2
  5396  00A2  3000               	movlw	0
  5397  00A3  00B3               	movwf	?___flmul+1
  5398  00A4  3000               	movlw	0
  5399  00A5  00B2               	movwf	?___flmul
  5400  00A6  0008               	return
  5401  00A7                     l7384:
  5402  00A7  0832               	movf	___flmul@b,w
  5403  00A8  00BA               	movwf	??___flmul
  5404  00A9  083A               	movf	??___flmul,w
  5405  00AA  00F2               	movwf	__Umul8_16@multiplicand
  5406  00AB  0838               	movf	___flmul@a+2,w
  5407  00AC  319E  2601  3180   	fcall	__Umul8_16
  5408  00AF  0873               	movf	?__Umul8_16+1,w
  5409  00B0  00CB               	movwf	___flmul@temp+1
  5410  00B1  0872               	movf	?__Umul8_16,w
  5411  00B2  00CA               	movwf	___flmul@temp
  5412  00B3  084A               	movf	___flmul@temp,w
  5413  00B4  00BA               	movwf	??___flmul
  5414  00B5  01BB               	clrf	??___flmul+1
  5415  00B6  01BC               	clrf	??___flmul+2
  5416  00B7  01BD               	clrf	??___flmul+3
  5417  00B8  083D               	movf	??___flmul+3,w
  5418  00B9  00C5               	movwf	___flmul@grs+3
  5419  00BA  083C               	movf	??___flmul+2,w
  5420  00BB  00C4               	movwf	___flmul@grs+2
  5421  00BC  083B               	movf	??___flmul+1,w
  5422  00BD  00C3               	movwf	___flmul@grs+1
  5423  00BE  083A               	movf	??___flmul,w
  5424  00BF  00C2               	movwf	___flmul@grs
  5425  00C0  084B               	movf	___flmul@temp+1,w
  5426  00C1  00BA               	movwf	??___flmul
  5427  00C2  01BB               	clrf	??___flmul+1
  5428  00C3  01BC               	clrf	??___flmul+2
  5429  00C4  01BD               	clrf	??___flmul+3
  5430  00C5  083D               	movf	??___flmul+3,w
  5431  00C6  00C9               	movwf	___flmul@prod+3
  5432  00C7  083C               	movf	??___flmul+2,w
  5433  00C8  00C8               	movwf	___flmul@prod+2
  5434  00C9  083B               	movf	??___flmul+1,w
  5435  00CA  00C7               	movwf	___flmul@prod+1
  5436  00CB  083A               	movf	??___flmul,w
  5437  00CC  00C6               	movwf	___flmul@prod
  5438  00CD  0833               	movf	___flmul@b+1,w
  5439  00CE  00BA               	movwf	??___flmul
  5440  00CF  083A               	movf	??___flmul,w
  5441  00D0  00F2               	movwf	__Umul8_16@multiplicand
  5442  00D1  0837               	movf	___flmul@a+1,w
  5443  00D2  319E  2601  3180   	fcall	__Umul8_16
  5444  00D5  0873               	movf	?__Umul8_16+1,w
  5445  00D6  00CB               	movwf	___flmul@temp+1
  5446  00D7  0872               	movf	?__Umul8_16,w
  5447  00D8  00CA               	movwf	___flmul@temp
  5448  00D9  084A               	movf	___flmul@temp,w
  5449  00DA  00BA               	movwf	??___flmul
  5450  00DB  01BB               	clrf	??___flmul+1
  5451  00DC  01BC               	clrf	??___flmul+2
  5452  00DD  01BD               	clrf	??___flmul+3
  5453  00DE  083A               	movf	??___flmul,w
  5454  00DF  07C2               	addwf	___flmul@grs,f
  5455  00E0  083B               	movf	??___flmul+1,w
  5456  00E1  3DC3               	addwfc	___flmul@grs+1,f
  5457  00E2  083C               	movf	??___flmul+2,w
  5458  00E3  3DC4               	addwfc	___flmul@grs+2,f
  5459  00E4  083D               	movf	??___flmul+3,w
  5460  00E5  3DC5               	addwfc	___flmul@grs+3,f
  5461  00E6  084B               	movf	___flmul@temp+1,w
  5462  00E7  00BA               	movwf	??___flmul
  5463  00E8  01BB               	clrf	??___flmul+1
  5464  00E9  01BC               	clrf	??___flmul+2
  5465  00EA  01BD               	clrf	??___flmul+3
  5466  00EB  083A               	movf	??___flmul,w
  5467  00EC  07C6               	addwf	___flmul@prod,f
  5468  00ED  083B               	movf	??___flmul+1,w
  5469  00EE  3DC7               	addwfc	___flmul@prod+1,f
  5470  00EF  083C               	movf	??___flmul+2,w
  5471  00F0  3DC8               	addwfc	___flmul@prod+2,f
  5472  00F1  083D               	movf	??___flmul+3,w
  5473  00F2  3DC9               	addwfc	___flmul@prod+3,f
  5474  00F3  0834               	movf	___flmul@b+2,w
  5475  00F4  00BA               	movwf	??___flmul
  5476  00F5  083A               	movf	??___flmul,w
  5477  00F6  00F2               	movwf	__Umul8_16@multiplicand
  5478  00F7  0836               	movf	___flmul@a,w
  5479  00F8  319E  2601  3180   	fcall	__Umul8_16
  5480  00FB  0873               	movf	?__Umul8_16+1,w
  5481  00FC  00CB               	movwf	___flmul@temp+1
  5482  00FD  0872               	movf	?__Umul8_16,w
  5483  00FE  00CA               	movwf	___flmul@temp
  5484  00FF  084A               	movf	___flmul@temp,w
  5485  0100  00BA               	movwf	??___flmul
  5486  0101  01BB               	clrf	??___flmul+1
  5487  0102  01BC               	clrf	??___flmul+2
  5488  0103  01BD               	clrf	??___flmul+3
  5489  0104  083A               	movf	??___flmul,w
  5490  0105  07C2               	addwf	___flmul@grs,f
  5491  0106  083B               	movf	??___flmul+1,w
  5492  0107  3DC3               	addwfc	___flmul@grs+1,f
  5493  0108  083C               	movf	??___flmul+2,w
  5494  0109  3DC4               	addwfc	___flmul@grs+2,f
  5495  010A  083D               	movf	??___flmul+3,w
  5496  010B  3DC5               	addwfc	___flmul@grs+3,f
  5497  010C  084B               	movf	___flmul@temp+1,w
  5498  010D  00BA               	movwf	??___flmul
  5499  010E  01BB               	clrf	??___flmul+1
  5500  010F  01BC               	clrf	??___flmul+2
  5501  0110  01BD               	clrf	??___flmul+3
  5502  0111  083A               	movf	??___flmul,w
  5503  0112  07C6               	addwf	___flmul@prod,f
  5504  0113  083B               	movf	??___flmul+1,w
  5505  0114  3DC7               	addwfc	___flmul@prod+1,f
  5506  0115  083C               	movf	??___flmul+2,w
  5507  0116  3DC8               	addwfc	___flmul@prod+2,f
  5508  0117  083D               	movf	??___flmul+3,w
  5509  0118  3DC9               	addwfc	___flmul@prod+3,f
  5510  0119  3008               	movlw	8
  5511  011A                     u7695:
  5512  011A  35C2               	lslf	___flmul@grs,f
  5513  011B  0DC3               	rlf	___flmul@grs+1,f
  5514  011C  0DC4               	rlf	___flmul@grs+2,f
  5515  011D  0DC5               	rlf	___flmul@grs+3,f
  5516  011E  0B89               	decfsz	9,f
  5517  011F  291A               	goto	u7695
  5518  0120  0833               	movf	___flmul@b+1,w
  5519  0121  00BA               	movwf	??___flmul
  5520  0122  083A               	movf	??___flmul,w
  5521  0123  00F2               	movwf	__Umul8_16@multiplicand
  5522  0124  0836               	movf	___flmul@a,w
  5523  0125  319E  2601  3180   	fcall	__Umul8_16
  5524  0128  0873               	movf	?__Umul8_16+1,w
  5525  0129  00CB               	movwf	___flmul@temp+1
  5526  012A  0872               	movf	?__Umul8_16,w
  5527  012B  00CA               	movwf	___flmul@temp
  5528  012C  084A               	movf	___flmul@temp,w
  5529  012D  07C2               	addwf	___flmul@grs,f
  5530  012E  084B               	movf	___flmul@temp+1,w
  5531  012F  3DC3               	addwfc	___flmul@grs+1,f
  5532  0130  3000               	movlw	0
  5533  0131  3DC4               	addwfc	___flmul@grs+2,f
  5534  0132  3DC5               	addwfc	___flmul@grs+3,f
  5535  0133  0832               	movf	___flmul@b,w
  5536  0134  00BA               	movwf	??___flmul
  5537  0135  083A               	movf	??___flmul,w
  5538  0136  00F2               	movwf	__Umul8_16@multiplicand
  5539  0137  0837               	movf	___flmul@a+1,w
  5540  0138  319E  2601  3180   	fcall	__Umul8_16
  5541  013B  0873               	movf	?__Umul8_16+1,w
  5542  013C  00CB               	movwf	___flmul@temp+1
  5543  013D  0872               	movf	?__Umul8_16,w
  5544  013E  00CA               	movwf	___flmul@temp
  5545  013F  084A               	movf	___flmul@temp,w
  5546  0140  07C2               	addwf	___flmul@grs,f
  5547  0141  084B               	movf	___flmul@temp+1,w
  5548  0142  3DC3               	addwfc	___flmul@grs+1,f
  5549  0143  3000               	movlw	0
  5550  0144  3DC4               	addwfc	___flmul@grs+2,f
  5551  0145  3DC5               	addwfc	___flmul@grs+3,f
  5552  0146  3008               	movlw	8
  5553  0147                     u7705:
  5554  0147  35C2               	lslf	___flmul@grs,f
  5555  0148  0DC3               	rlf	___flmul@grs+1,f
  5556  0149  0DC4               	rlf	___flmul@grs+2,f
  5557  014A  0DC5               	rlf	___flmul@grs+3,f
  5558  014B  0B89               	decfsz	9,f
  5559  014C  2947               	goto	u7705
  5560  014D  0832               	movf	___flmul@b,w
  5561  014E  00BA               	movwf	??___flmul
  5562  014F  083A               	movf	??___flmul,w
  5563  0150  00F2               	movwf	__Umul8_16@multiplicand
  5564  0151  0836               	movf	___flmul@a,w
  5565  0152  319E  2601  3180   	fcall	__Umul8_16
  5566  0155  0873               	movf	?__Umul8_16+1,w
  5567  0156  00CB               	movwf	___flmul@temp+1
  5568  0157  0872               	movf	?__Umul8_16,w
  5569  0158  00CA               	movwf	___flmul@temp
  5570  0159  084A               	movf	___flmul@temp,w
  5571  015A  07C2               	addwf	___flmul@grs,f
  5572  015B  084B               	movf	___flmul@temp+1,w
  5573  015C  3DC3               	addwfc	___flmul@grs+1,f
  5574  015D  3000               	movlw	0
  5575  015E  3DC4               	addwfc	___flmul@grs+2,f
  5576  015F  3DC5               	addwfc	___flmul@grs+3,f
  5577  0160  0833               	movf	___flmul@b+1,w
  5578  0161  00BA               	movwf	??___flmul
  5579  0162  083A               	movf	??___flmul,w
  5580  0163  00F2               	movwf	__Umul8_16@multiplicand
  5581  0164  0838               	movf	___flmul@a+2,w
  5582  0165  319E  2601  3180   	fcall	__Umul8_16
  5583  0168  0873               	movf	?__Umul8_16+1,w
  5584  0169  00CB               	movwf	___flmul@temp+1
  5585  016A  0872               	movf	?__Umul8_16,w
  5586  016B  00CA               	movwf	___flmul@temp
  5587  016C  084A               	movf	___flmul@temp,w
  5588  016D  07C6               	addwf	___flmul@prod,f
  5589  016E  084B               	movf	___flmul@temp+1,w
  5590  016F  3DC7               	addwfc	___flmul@prod+1,f
  5591  0170  3000               	movlw	0
  5592  0171  3DC8               	addwfc	___flmul@prod+2,f
  5593  0172  3DC9               	addwfc	___flmul@prod+3,f
  5594  0173  0834               	movf	___flmul@b+2,w
  5595  0174  00BA               	movwf	??___flmul
  5596  0175  083A               	movf	??___flmul,w
  5597  0176  00F2               	movwf	__Umul8_16@multiplicand
  5598  0177  0837               	movf	___flmul@a+1,w
  5599  0178  319E  2601  3180   	fcall	__Umul8_16
  5600  017B  0873               	movf	?__Umul8_16+1,w
  5601  017C  00CB               	movwf	___flmul@temp+1
  5602  017D  0872               	movf	?__Umul8_16,w
  5603  017E  00CA               	movwf	___flmul@temp
  5604  017F  084A               	movf	___flmul@temp,w
  5605  0180  07C6               	addwf	___flmul@prod,f
  5606  0181  084B               	movf	___flmul@temp+1,w
  5607  0182  3DC7               	addwfc	___flmul@prod+1,f
  5608  0183  3000               	movlw	0
  5609  0184  3DC8               	addwfc	___flmul@prod+2,f
  5610  0185  3DC9               	addwfc	___flmul@prod+3,f
  5611  0186  0834               	movf	___flmul@b+2,w
  5612  0187  00BA               	movwf	??___flmul
  5613  0188  083A               	movf	??___flmul,w
  5614  0189  00F2               	movwf	__Umul8_16@multiplicand
  5615  018A  0838               	movf	___flmul@a+2,w
  5616  018B  319E  2601  3180   	fcall	__Umul8_16
  5617  018E  0873               	movf	?__Umul8_16+1,w
  5618  018F  00CB               	movwf	___flmul@temp+1
  5619  0190  0872               	movf	?__Umul8_16,w
  5620  0191  00CA               	movwf	___flmul@temp
  5621  0192  084A               	movf	___flmul@temp,w
  5622  0193  00BA               	movwf	??___flmul
  5623  0194  084B               	movf	___flmul@temp+1,w
  5624  0195  00BB               	movwf	??___flmul+1
  5625  0196  01BC               	clrf	??___flmul+2
  5626  0197  01BD               	clrf	??___flmul+3
  5627  0198  3008               	movlw	8
  5628  0199                     u7715:
  5629  0199  35BA               	lslf	??___flmul,f
  5630  019A  0DBB               	rlf	??___flmul+1,f
  5631  019B  0DBC               	rlf	??___flmul+2,f
  5632  019C  0DBD               	rlf	??___flmul+3,f
  5633  019D  0B89               	decfsz	9,f
  5634  019E  2999               	goto	u7715
  5635  019F  083A               	movf	??___flmul,w
  5636  01A0  07C6               	addwf	___flmul@prod,f
  5637  01A1  083B               	movf	??___flmul+1,w
  5638  01A2  3DC7               	addwfc	___flmul@prod+1,f
  5639  01A3  083C               	movf	??___flmul+2,w
  5640  01A4  3DC8               	addwfc	___flmul@prod+2,f
  5641  01A5  083D               	movf	??___flmul+3,w
  5642  01A6  3DC9               	addwfc	___flmul@prod+3,f
  5643  01A7  0845               	movf	___flmul@grs+3,w
  5644  01A8  00BA               	movwf	??___flmul
  5645  01A9  01BB               	clrf	??___flmul+1
  5646  01AA  01BC               	clrf	??___flmul+2
  5647  01AB  01BD               	clrf	??___flmul+3
  5648  01AC  083A               	movf	??___flmul,w
  5649  01AD  07C6               	addwf	___flmul@prod,f
  5650  01AE  083B               	movf	??___flmul+1,w
  5651  01AF  3DC7               	addwfc	___flmul@prod+1,f
  5652  01B0  083C               	movf	??___flmul+2,w
  5653  01B1  3DC8               	addwfc	___flmul@prod+2,f
  5654  01B2  083D               	movf	??___flmul+3,w
  5655  01B3  3DC9               	addwfc	___flmul@prod+3,f
  5656  01B4  3008               	movlw	8
  5657  01B5                     u7725:
  5658  01B5  35C2               	lslf	___flmul@grs,f
  5659  01B6  0DC3               	rlf	___flmul@grs+1,f
  5660  01B7  0DC4               	rlf	___flmul@grs+2,f
  5661  01B8  0DC5               	rlf	___flmul@grs+3,f
  5662  01B9  0B89               	decfsz	9,f
  5663  01BA  29B5               	goto	u7725
  5664  01BB  0841               	movf	___flmul@bexp,w
  5665  01BC  0740               	addwf	___flmul@aexp,w
  5666  01BD  00BA               	movwf	??___flmul
  5667  01BE  01BB               	clrf	??___flmul+1
  5668  01BF  0DBB               	rlf	??___flmul+1,f
  5669  01C0  083A               	movf	??___flmul,w
  5670  01C1  3E82               	addlw	130
  5671  01C2  00CA               	movwf	___flmul@temp
  5672  01C3  30FF               	movlw	255
  5673  01C4  3D3B               	addwfc	??___flmul+1,w
  5674  01C5  00CB               	movwf	___flmul@temp+1
  5675  01C6                     l7436:
  5676  01C6  1BC8               	btfsc	___flmul@prod+2,7
  5677  01C7  29DD               	goto	l7438
  5678  01C8  3001               	movlw	1
  5679  01C9                     u7735:
  5680  01C9  35C6               	lslf	___flmul@prod,f
  5681  01CA  0DC7               	rlf	___flmul@prod+1,f
  5682  01CB  0DC8               	rlf	___flmul@prod+2,f
  5683  01CC  0DC9               	rlf	___flmul@prod+3,f
  5684  01CD  0B89               	decfsz	9,f
  5685  01CE  29C9               	goto	u7735
  5686  01CF  1BC5               	btfsc	___flmul@grs+3,7
  5687  01D0  1446               	bsf	___flmul@prod,0
  5688  01D1  3001               	movlw	1
  5689  01D2                     u7755:
  5690  01D2  35C2               	lslf	___flmul@grs,f
  5691  01D3  0DC3               	rlf	___flmul@grs+1,f
  5692  01D4  0DC4               	rlf	___flmul@grs+2,f
  5693  01D5  0DC5               	rlf	___flmul@grs+3,f
  5694  01D6  0B89               	decfsz	9,f
  5695  01D7  29D2               	goto	u7755
  5696  01D8  30FF               	movlw	255
  5697  01D9  07CA               	addwf	___flmul@temp,f
  5698  01DA  30FF               	movlw	255
  5699  01DB  3DCB               	addwfc	___flmul@temp+1,f
  5700  01DC  29C6               	goto	l7436
  5701  01DD                     l7438:
  5702  01DD  01C0               	clrf	___flmul@aexp
  5703  01DE  1FC5               	btfss	___flmul@grs+3,7
  5704  01DF  29F6               	goto	l7448
  5705  01E0  30FF               	movlw	255
  5706  01E1  0542               	andwf	___flmul@grs,w
  5707  01E2  00BA               	movwf	??___flmul
  5708  01E3  30FF               	movlw	255
  5709  01E4  0543               	andwf	___flmul@grs+1,w
  5710  01E5  00BB               	movwf	??___flmul+1
  5711  01E6  30FF               	movlw	255
  5712  01E7  0544               	andwf	___flmul@grs+2,w
  5713  01E8  00BC               	movwf	??___flmul+2
  5714  01E9  307F               	movlw	127
  5715  01EA  0545               	andwf	___flmul@grs+3,w
  5716  01EB  00BD               	movwf	??___flmul+3
  5717  01EC  083D               	movf	??___flmul+3,w
  5718  01ED  043C               	iorwf	??___flmul+2,w
  5719  01EE  043B               	iorwf	??___flmul+1,w
  5720  01EF  043A               	iorwf	??___flmul,w
  5721  01F0  1903               	skipnz
  5722  01F1  1846               	btfsc	___flmul@prod,0
  5723  01F2  29F4               	goto	l7444
  5724  01F3  29F6               	goto	l7448
  5725  01F4                     l7444:
  5726  01F4  01C0               	clrf	___flmul@aexp
  5727  01F5  0AC0               	incf	___flmul@aexp,f
  5728  01F6                     l7448:
  5729  01F6  0840               	movf	___flmul@aexp,w
  5730  01F7  1903               	btfsc	3,2
  5731  01F8  2A1F               	goto	l7458
  5732  01F9  3001               	movlw	1
  5733  01FA  07C6               	addwf	___flmul@prod,f
  5734  01FB  3000               	movlw	0
  5735  01FC  3DC7               	addwfc	___flmul@prod+1,f
  5736  01FD  3000               	movlw	0
  5737  01FE  3DC8               	addwfc	___flmul@prod+2,f
  5738  01FF  3000               	movlw	0
  5739  0200  3DC9               	addwfc	___flmul@prod+3,f
  5740  0201  1C49               	btfss	___flmul@prod+3,0
  5741  0202  2A1F               	goto	l7458
  5742  0203  0846               	movf	___flmul@prod,w
  5743  0204  00BA               	movwf	??___flmul
  5744  0205  0847               	movf	___flmul@prod+1,w
  5745  0206  00BB               	movwf	??___flmul+1
  5746  0207  0848               	movf	___flmul@prod+2,w
  5747  0208  00BC               	movwf	??___flmul+2
  5748  0209  0849               	movf	___flmul@prod+3,w
  5749  020A  00BD               	movwf	??___flmul+3
  5750  020B  3001               	movlw	1
  5751  020C  00BE               	movwf	??___flmul+4
  5752  020D                     u7825:
  5753  020D  37BD               	asrf	??___flmul+3,f
  5754  020E  0CBC               	rrf	??___flmul+2,f
  5755  020F  0CBB               	rrf	??___flmul+1,f
  5756  0210  0CBA               	rrf	??___flmul,f
  5757  0211  0BBE               	decfsz	??___flmul+4,f
  5758  0212  2A0D               	goto	u7825
  5759  0213  083D               	movf	??___flmul+3,w
  5760  0214  00C9               	movwf	___flmul@prod+3
  5761  0215  083C               	movf	??___flmul+2,w
  5762  0216  00C8               	movwf	___flmul@prod+2
  5763  0217  083B               	movf	??___flmul+1,w
  5764  0218  00C7               	movwf	___flmul@prod+1
  5765  0219  083A               	movf	??___flmul,w
  5766  021A  00C6               	movwf	___flmul@prod
  5767  021B  3001               	movlw	1
  5768  021C  07CA               	addwf	___flmul@temp,f
  5769  021D  3000               	movlw	0
  5770  021E  3DCB               	addwfc	___flmul@temp+1,f
  5771  021F                     l7458:
  5772  021F  084B               	movf	___flmul@temp+1,w
  5773  0220  3A80               	xorlw	128
  5774  0221  00BA               	movwf	??___flmul
  5775  0222  3080               	movlw	128
  5776  0223  023A               	subwf	??___flmul,w
  5777  0224  1D03               	skipz
  5778  0225  2A28               	goto	u7835
  5779  0226  30FF               	movlw	255
  5780  0227  024A               	subwf	___flmul@temp,w
  5781  0228                     u7835:
  5782  0228  1C03               	skipc
  5783  0229  2A34               	goto	l7462
  5784  022A  307F               	movlw	127
  5785  022B  0020               	movlb	0	; select bank0
  5786  022C  00C9               	movwf	___flmul@prod+3
  5787  022D  3080               	movlw	128
  5788  022E  00C8               	movwf	___flmul@prod+2
  5789  022F  3000               	movlw	0
  5790  0230  00C7               	movwf	___flmul@prod+1
  5791  0231  3000               	movlw	0
  5792  0232  00C6               	movwf	___flmul@prod
  5793  0233  2A5E               	goto	l1790
  5794  0234                     l7462:
  5795  0234  0020               	movlb	0	; select bank0
  5796  0235  084B               	movf	___flmul@temp+1,w
  5797  0236  3A80               	xorlw	128
  5798  0237  00BA               	movwf	??___flmul
  5799  0238  3080               	movlw	128
  5800  0239  023A               	subwf	??___flmul,w
  5801  023A  1D03               	skipz
  5802  023B  2A3E               	goto	u7845
  5803  023C  3001               	movlw	1
  5804  023D  024A               	subwf	___flmul@temp,w
  5805  023E                     u7845:
  5806  023E  1803               	skipnc
  5807  023F  2A4B               	goto	l7468
  5808  0240  3000               	movlw	0
  5809  0241  0020               	movlb	0	; select bank0
  5810  0242  00C9               	movwf	___flmul@prod+3
  5811  0243  3000               	movlw	0
  5812  0244  00C8               	movwf	___flmul@prod+2
  5813  0245  3000               	movlw	0
  5814  0246  00C7               	movwf	___flmul@prod+1
  5815  0247  3000               	movlw	0
  5816  0248  00C6               	movwf	___flmul@prod
  5817  0249  01BF               	clrf	___flmul@sign
  5818  024A  2A5E               	goto	l1790
  5819  024B                     l7468:
  5820  024B  0020               	movlb	0	; select bank0
  5821  024C  084A               	movf	___flmul@temp,w
  5822  024D  00BA               	movwf	??___flmul
  5823  024E  083A               	movf	??___flmul,w
  5824  024F  00C1               	movwf	___flmul@bexp
  5825  0250  30FF               	movlw	255
  5826  0251  05C6               	andwf	___flmul@prod,f
  5827  0252  30FF               	movlw	255
  5828  0253  05C7               	andwf	___flmul@prod+1,f
  5829  0254  307F               	movlw	127
  5830  0255  05C8               	andwf	___flmul@prod+2,f
  5831  0256  3000               	movlw	0
  5832  0257  05C9               	andwf	___flmul@prod+3,f
  5833  0258  1841               	btfsc	___flmul@bexp,0
  5834  0259  17C8               	bsf	___flmul@prod+2,7
  5835  025A  3641               	lsrf	___flmul@bexp,w
  5836  025B  00BA               	movwf	??___flmul
  5837  025C  083A               	movf	??___flmul,w
  5838  025D  00C9               	movwf	___flmul@prod+3
  5839  025E                     l1790:
  5840  025E  083F               	movf	___flmul@sign,w
  5841  025F  00BA               	movwf	??___flmul
  5842  0260  083A               	movf	??___flmul,w
  5843  0261  04C9               	iorwf	___flmul@prod+3,f
  5844  0262  0849               	movf	___flmul@prod+3,w
  5845  0263  00B5               	movwf	?___flmul+3
  5846  0264  0848               	movf	___flmul@prod+2,w
  5847  0265  00B4               	movwf	?___flmul+2
  5848  0266  0847               	movf	___flmul@prod+1,w
  5849  0267  00B3               	movwf	?___flmul+1
  5850  0268  0846               	movf	___flmul@prod,w
  5851  0269  00B2               	movwf	?___flmul
  5852  026A  0008               	return
  5853  026B                     __end_of___flmul:
  5854                           
  5855                           	psect	text4
  5856  1E01                     __ptext4:	
  5857 ;; *************** function __Umul8_16 *****************
  5858 ;; Defined at:
  5859 ;;		line 4 in file "/Applications/microchip/xc8/v2.32/pic/sources/c99/common/Umul8_16.c"
  5860 ;; Parameters:    Size  Location     Type
  5861 ;;  multiplier      1    wreg     unsigned char 
  5862 ;;  multiplicand    1    2[COMMON] unsigned char 
  5863 ;; Auto vars:     Size  Location     Type
  5864 ;;  multiplier      1    4[BANK0 ] unsigned char 
  5865 ;;  word_mpld       2    2[BANK0 ] unsigned int 
  5866 ;;  product         2    0[BANK0 ] unsigned int 
  5867 ;; Return value:  Size  Location     Type
  5868 ;;                  2    2[COMMON] unsigned int 
  5869 ;; Registers used:
  5870 ;;		wreg, status,2, status,0
  5871 ;; Tracked objects:
  5872 ;;		On entry : 1F/0
  5873 ;;		On exit  : 1F/0
  5874 ;;		Unchanged: 0/0
  5875 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5876 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5877 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5878 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5879 ;;      Totals:         4       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5880 ;;Total ram usage:        9 bytes
  5881 ;; Hardware stack levels used: 1
  5882 ;; Hardware stack levels required when called: 4
  5883 ;; This function calls:
  5884 ;;		Nothing
  5885 ;; This function is called by:
  5886 ;;		___flmul
  5887 ;; This function uses a non-reentrant model
  5888 ;;
  5889                           
  5890                           
  5891                           ;psect for function __Umul8_16
  5892  1E01                     __Umul8_16:
  5893                           
  5894                           ;incstack = 0
  5895                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  5896                           ;__Umul8_16@multiplier stored from wreg
  5897  1E01  00A4               	movwf	__Umul8_16@multiplier
  5898  1E02  01A0               	clrf	__Umul8_16@product
  5899  1E03  01A1               	clrf	__Umul8_16@product+1
  5900  1E04  0872               	movf	__Umul8_16@multiplicand,w
  5901  1E05  00F4               	movwf	??__Umul8_16
  5902  1E06  01F5               	clrf	??__Umul8_16+1
  5903  1E07  0874               	movf	??__Umul8_16,w
  5904  1E08  00A2               	movwf	__Umul8_16@word_mpld
  5905  1E09  0875               	movf	??__Umul8_16+1,w
  5906  1E0A  00A3               	movwf	__Umul8_16@word_mpld+1
  5907  1E0B                     l7258:
  5908  1E0B  1C24               	btfss	__Umul8_16@multiplier,0
  5909  1E0C  2E11               	goto	l1797
  5910  1E0D  0822               	movf	__Umul8_16@word_mpld,w
  5911  1E0E  07A0               	addwf	__Umul8_16@product,f
  5912  1E0F  0823               	movf	__Umul8_16@word_mpld+1,w
  5913  1E10  3DA1               	addwfc	__Umul8_16@product+1,f
  5914  1E11                     l1797:
  5915  1E11  3001               	movlw	1
  5916  1E12                     u7465:
  5917  1E12  35A2               	lslf	__Umul8_16@word_mpld,f
  5918  1E13  0DA3               	rlf	__Umul8_16@word_mpld+1,f
  5919  1E14  0B89               	decfsz	9,f
  5920  1E15  2E12               	goto	u7465
  5921  1E16  1003               	clrc
  5922  1E17  0CA4               	rrf	__Umul8_16@multiplier,f
  5923  1E18  0824               	movf	__Umul8_16@multiplier,w
  5924  1E19  1D03               	btfss	3,2
  5925  1E1A  2E0B               	goto	l7258
  5926  1E1B  0821               	movf	__Umul8_16@product+1,w
  5927  1E1C  00F3               	movwf	?__Umul8_16+1
  5928  1E1D  0820               	movf	__Umul8_16@product,w
  5929  1E1E  00F2               	movwf	?__Umul8_16
  5930  1E1F  0008               	return
  5931  1E20                     __end_of__Umul8_16:
  5932                           
  5933                           	psect	text5
  5934  044C                     __ptext5:	
  5935 ;; *************** function ___fldiv *****************
  5936 ;; Defined at:
  5937 ;;		line 8 in file "/Applications/microchip/xc8/v2.32/pic/sources/c99/common/sprcdiv.c"
  5938 ;; Parameters:    Size  Location     Type
  5939 ;;  a               4    2[COMMON] unsigned int 
  5940 ;;  b               4    6[COMMON] unsigned int 
  5941 ;; Auto vars:     Size  Location     Type
  5942 ;;  grs             4   12[BANK0 ] unsigned long 
  5943 ;;  rem             4    5[BANK0 ] unsigned long 
  5944 ;;  new_exp         2   10[BANK0 ] int 
  5945 ;;  aexp            1   17[BANK0 ] unsigned char 
  5946 ;;  bexp            1   16[BANK0 ] unsigned char 
  5947 ;;  sign            1    9[BANK0 ] unsigned char 
  5948 ;; Return value:  Size  Location     Type
  5949 ;;                  4    2[COMMON] unsigned char 
  5950 ;; Registers used:
  5951 ;;		wreg, status,2, status,0
  5952 ;; Tracked objects:
  5953 ;;		On entry : 1F/1
  5954 ;;		On exit  : 1F/0
  5955 ;;		Unchanged: 0/0
  5956 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5957 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5958 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5959 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5960 ;;      Totals:         8      18       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5961 ;;Total ram usage:       26 bytes
  5962 ;; Hardware stack levels used: 1
  5963 ;; Hardware stack levels required when called: 4
  5964 ;; This function calls:
  5965 ;;		Nothing
  5966 ;; This function is called by:
  5967 ;;		_main
  5968 ;; This function uses a non-reentrant model
  5969 ;;
  5970                           
  5971                           
  5972                           ;psect for function ___fldiv
  5973  044C                     ___fldiv:
  5974                           
  5975                           ;incstack = 0
  5976                           ; Regs used in ___fldiv: [wreg+status,2+status,0]
  5977  044C  0879               	movf	___fldiv@b+3,w
  5978  044D  3980               	andlw	128
  5979  044E  0020               	movlb	0	; select bank0
  5980  044F  00A0               	movwf	??___fldiv
  5981  0450  0820               	movf	??___fldiv,w
  5982  0451  00A9               	movwf	___fldiv@sign
  5983  0452  3579               	lslf	___fldiv@b+3,w
  5984  0453  00A0               	movwf	??___fldiv
  5985  0454  0820               	movf	??___fldiv,w
  5986  0455  00B0               	movwf	___fldiv@bexp
  5987  0456  1BF8               	btfsc	___fldiv@b+2,7
  5988  0457  1430               	bsf	___fldiv@bexp,0
  5989  0458  0830               	movf	___fldiv@bexp,w
  5990  0459  1903               	btfsc	3,2
  5991  045A  2C69               	goto	l5708
  5992  045B  0A30               	incf	___fldiv@bexp,w
  5993  045C  1D03               	btfss	3,2
  5994  045D  2C66               	goto	l5704
  5995  045E  3000               	movlw	0
  5996  045F  00F9               	movwf	___fldiv@b+3
  5997  0460  3000               	movlw	0
  5998  0461  00F8               	movwf	___fldiv@b+2
  5999  0462  3000               	movlw	0
  6000  0463  00F7               	movwf	___fldiv@b+1
  6001  0464  3000               	movlw	0
  6002  0465  00F6               	movwf	___fldiv@b
  6003  0466                     l5704:
  6004  0466  17F8               	bsf	___fldiv@b+2,7
  6005  0467  01F9               	clrf	___fldiv@b+3
  6006  0468  2C71               	goto	l5710
  6007  0469                     l5708:
  6008  0469  3000               	movlw	0
  6009  046A  00F9               	movwf	___fldiv@b+3
  6010  046B  3000               	movlw	0
  6011  046C  00F8               	movwf	___fldiv@b+2
  6012  046D  3000               	movlw	0
  6013  046E  00F7               	movwf	___fldiv@b+1
  6014  046F  3000               	movlw	0
  6015  0470  00F6               	movwf	___fldiv@b
  6016  0471                     l5710:
  6017  0471  0875               	movf	___fldiv@a+3,w
  6018  0472  3980               	andlw	128
  6019  0473  00A0               	movwf	??___fldiv
  6020  0474  0820               	movf	??___fldiv,w
  6021  0475  06A9               	xorwf	___fldiv@sign,f
  6022  0476  3575               	lslf	___fldiv@a+3,w
  6023  0477  00A0               	movwf	??___fldiv
  6024  0478  0820               	movf	??___fldiv,w
  6025  0479  00B1               	movwf	___fldiv@aexp
  6026  047A  1BF4               	btfsc	___fldiv@a+2,7
  6027  047B  1431               	bsf	___fldiv@aexp,0
  6028  047C  0831               	movf	___fldiv@aexp,w
  6029  047D  1903               	btfsc	3,2
  6030  047E  2C8D               	goto	l5728
  6031  047F  0A31               	incf	___fldiv@aexp,w
  6032  0480  1D03               	btfss	3,2
  6033  0481  2C8A               	goto	l5724
  6034  0482  3000               	movlw	0
  6035  0483  00F5               	movwf	___fldiv@a+3
  6036  0484  3000               	movlw	0
  6037  0485  00F4               	movwf	___fldiv@a+2
  6038  0486  3000               	movlw	0
  6039  0487  00F3               	movwf	___fldiv@a+1
  6040  0488  3000               	movlw	0
  6041  0489  00F2               	movwf	___fldiv@a
  6042  048A                     l5724:
  6043  048A  17F4               	bsf	___fldiv@a+2,7
  6044  048B  01F5               	clrf	___fldiv@a+3
  6045  048C  2C95               	goto	l1738
  6046  048D                     l5728:
  6047  048D  3000               	movlw	0
  6048  048E  00F5               	movwf	___fldiv@a+3
  6049  048F  3000               	movlw	0
  6050  0490  00F4               	movwf	___fldiv@a+2
  6051  0491  3000               	movlw	0
  6052  0492  00F3               	movwf	___fldiv@a+1
  6053  0493  3000               	movlw	0
  6054  0494  00F2               	movwf	___fldiv@a
  6055  0495                     l1738:
  6056  0495  0875               	movf	___fldiv@a+3,w
  6057  0496  0474               	iorwf	___fldiv@a+2,w
  6058  0497  0473               	iorwf	___fldiv@a+1,w
  6059  0498  0472               	iorwf	___fldiv@a,w
  6060  0499  1D03               	skipz
  6061  049A  2CB4               	goto	l5738
  6062  049B  3000               	movlw	0
  6063  049C  00F9               	movwf	___fldiv@b+3
  6064  049D  3000               	movlw	0
  6065  049E  00F8               	movwf	___fldiv@b+2
  6066  049F  3000               	movlw	0
  6067  04A0  00F7               	movwf	___fldiv@b+1
  6068  04A1  3000               	movlw	0
  6069  04A2  00F6               	movwf	___fldiv@b
  6070  04A3  3080               	movlw	128
  6071  04A4  04F8               	iorwf	___fldiv@b+2,f
  6072  04A5  307F               	movlw	127
  6073  04A6  04F9               	iorwf	___fldiv@b+3,f
  6074  04A7                     L1:
  6075  04A7  0829               	movf	___fldiv@sign,w
  6076  04A8  00A0               	movwf	??___fldiv
  6077  04A9  0820               	movf	??___fldiv,w
  6078  04AA  04F9               	iorwf	___fldiv@b+3,f
  6079  04AB  0879               	movf	___fldiv@b+3,w
  6080  04AC  00F5               	movwf	?___fldiv+3
  6081  04AD  0878               	movf	___fldiv@b+2,w
  6082  04AE  00F4               	movwf	?___fldiv+2
  6083  04AF  0877               	movf	___fldiv@b+1,w
  6084  04B0  00F3               	movwf	?___fldiv+1
  6085  04B1  0876               	movf	___fldiv@b,w
  6086  04B2  00F2               	movwf	?___fldiv
  6087  04B3  0008               	return
  6088  04B4                     l5738:
  6089  04B4  0830               	movf	___fldiv@bexp,w
  6090  04B5  1D03               	btfss	3,2
  6091  04B6  2CC0               	goto	l5744
  6092  04B7  3000               	movlw	0
  6093  04B8  00F5               	movwf	?___fldiv+3
  6094  04B9  3000               	movlw	0
  6095  04BA  00F4               	movwf	?___fldiv+2
  6096  04BB  3000               	movlw	0
  6097  04BC  00F3               	movwf	?___fldiv+1
  6098  04BD  3000               	movlw	0
  6099  04BE  00F2               	movwf	?___fldiv
  6100  04BF  0008               	return
  6101  04C0                     l5744:
  6102  04C0  0830               	movf	___fldiv@bexp,w
  6103  04C1  00A0               	movwf	??___fldiv
  6104  04C2  01A1               	clrf	??___fldiv+1
  6105  04C3  0821               	movf	??___fldiv+1,w
  6106  04C4  00A3               	movwf	??___fldiv+3
  6107  04C5  0831               	movf	___fldiv@aexp,w
  6108  04C6  0220               	subwf	??___fldiv,w
  6109  04C7  00A2               	movwf	??___fldiv+2
  6110  04C8  1C03               	skipc
  6111  04C9  03A3               	decf	??___fldiv+3,f
  6112  04CA  0822               	movf	??___fldiv+2,w
  6113  04CB  3E7F               	addlw	127
  6114  04CC  00AA               	movwf	___fldiv@new_exp
  6115  04CD  3000               	movlw	0
  6116  04CE  3D23               	addwfc	??___fldiv+3,w
  6117  04CF  00AB               	movwf	___fldiv@new_exp+1
  6118  04D0  0879               	movf	___fldiv@b+3,w
  6119  04D1  00A8               	movwf	___fldiv@rem+3
  6120  04D2  0878               	movf	___fldiv@b+2,w
  6121  04D3  00A7               	movwf	___fldiv@rem+2
  6122  04D4  0877               	movf	___fldiv@b+1,w
  6123  04D5  00A6               	movwf	___fldiv@rem+1
  6124  04D6  0876               	movf	___fldiv@b,w
  6125  04D7  00A5               	movwf	___fldiv@rem
  6126  04D8  3000               	movlw	0
  6127  04D9  00F9               	movwf	___fldiv@b+3
  6128  04DA  3000               	movlw	0
  6129  04DB  00F8               	movwf	___fldiv@b+2
  6130  04DC  3000               	movlw	0
  6131  04DD  00F7               	movwf	___fldiv@b+1
  6132  04DE  3000               	movlw	0
  6133  04DF  00F6               	movwf	___fldiv@b
  6134  04E0  3000               	movlw	0
  6135  04E1  00AF               	movwf	___fldiv@grs+3
  6136  04E2  3000               	movlw	0
  6137  04E3  00AE               	movwf	___fldiv@grs+2
  6138  04E4  3000               	movlw	0
  6139  04E5  00AD               	movwf	___fldiv@grs+1
  6140  04E6  3000               	movlw	0
  6141  04E7  00AC               	movwf	___fldiv@grs
  6142  04E8  01B1               	clrf	___fldiv@aexp
  6143  04E9                     l5772:
  6144  04E9  301A               	movlw	26
  6145  04EA  0231               	subwf	___fldiv@aexp,w
  6146  04EB  1803               	btfsc	3,0
  6147  04EC  2D25               	goto	l5774
  6148  04ED  0831               	movf	___fldiv@aexp,w
  6149  04EE  1903               	btfsc	3,2
  6150  04EF  2D07               	goto	l5764
  6151  04F0  3001               	movlw	1
  6152  04F1                     u5415:
  6153  04F1  35A5               	lslf	___fldiv@rem,f
  6154  04F2  0DA6               	rlf	___fldiv@rem+1,f
  6155  04F3  0DA7               	rlf	___fldiv@rem+2,f
  6156  04F4  0DA8               	rlf	___fldiv@rem+3,f
  6157  04F5  0B89               	decfsz	9,f
  6158  04F6  2CF1               	goto	u5415
  6159  04F7  3001               	movlw	1
  6160  04F8                     u5425:
  6161  04F8  35F6               	lslf	___fldiv@b,f
  6162  04F9  0DF7               	rlf	___fldiv@b+1,f
  6163  04FA  0DF8               	rlf	___fldiv@b+2,f
  6164  04FB  0DF9               	rlf	___fldiv@b+3,f
  6165  04FC  0B89               	decfsz	9,f
  6166  04FD  2CF8               	goto	u5425
  6167  04FE  1BAF               	btfsc	___fldiv@grs+3,7
  6168  04FF  1476               	bsf	___fldiv@b,0
  6169  0500  3001               	movlw	1
  6170  0501                     u5445:
  6171  0501  35AC               	lslf	___fldiv@grs,f
  6172  0502  0DAD               	rlf	___fldiv@grs+1,f
  6173  0503  0DAE               	rlf	___fldiv@grs+2,f
  6174  0504  0DAF               	rlf	___fldiv@grs+3,f
  6175  0505  0B89               	decfsz	9,f
  6176  0506  2D01               	goto	u5445
  6177  0507                     l5764:
  6178  0507  0875               	movf	___fldiv@a+3,w
  6179  0508  0228               	subwf	___fldiv@rem+3,w
  6180  0509  1D03               	skipz
  6181  050A  2D15               	goto	u5455
  6182  050B  0874               	movf	___fldiv@a+2,w
  6183  050C  0227               	subwf	___fldiv@rem+2,w
  6184  050D  1D03               	skipz
  6185  050E  2D15               	goto	u5455
  6186  050F  0873               	movf	___fldiv@a+1,w
  6187  0510  0226               	subwf	___fldiv@rem+1,w
  6188  0511  1D03               	skipz
  6189  0512  2D15               	goto	u5455
  6190  0513  0872               	movf	___fldiv@a,w
  6191  0514  0225               	subwf	___fldiv@rem,w
  6192  0515                     u5455:
  6193  0515  1C03               	skipc
  6194  0516  2D20               	goto	l5770
  6195  0517  172F               	bsf	___fldiv@grs+3,6
  6196  0518  0872               	movf	___fldiv@a,w
  6197  0519  02A5               	subwf	___fldiv@rem,f
  6198  051A  0873               	movf	___fldiv@a+1,w
  6199  051B  3BA6               	subwfb	___fldiv@rem+1,f
  6200  051C  0874               	movf	___fldiv@a+2,w
  6201  051D  3BA7               	subwfb	___fldiv@rem+2,f
  6202  051E  0875               	movf	___fldiv@a+3,w
  6203  051F  3BA8               	subwfb	___fldiv@rem+3,f
  6204  0520                     l5770:
  6205  0520  3001               	movlw	1
  6206  0521  00A0               	movwf	??___fldiv
  6207  0522  0820               	movf	??___fldiv,w
  6208  0523  07B1               	addwf	___fldiv@aexp,f
  6209  0524  2CE9               	goto	l5772
  6210  0525                     l5774:
  6211  0525  0828               	movf	___fldiv@rem+3,w
  6212  0526  0427               	iorwf	___fldiv@rem+2,w
  6213  0527  0426               	iorwf	___fldiv@rem+1,w
  6214  0528  0425               	iorwf	___fldiv@rem,w
  6215  0529  1D03               	btfss	3,2
  6216  052A  142C               	bsf	___fldiv@grs,0
  6217  052B                     l5788:
  6218  052B  1BF8               	btfsc	___fldiv@b+2,7
  6219  052C  2D42               	goto	l5790
  6220  052D  3001               	movlw	1
  6221  052E                     u5485:
  6222  052E  35F6               	lslf	___fldiv@b,f
  6223  052F  0DF7               	rlf	___fldiv@b+1,f
  6224  0530  0DF8               	rlf	___fldiv@b+2,f
  6225  0531  0DF9               	rlf	___fldiv@b+3,f
  6226  0532  0B89               	decfsz	9,f
  6227  0533  2D2E               	goto	u5485
  6228  0534  1BAF               	btfsc	___fldiv@grs+3,7
  6229  0535  1476               	bsf	___fldiv@b,0
  6230  0536  3001               	movlw	1
  6231  0537                     u5505:
  6232  0537  35AC               	lslf	___fldiv@grs,f
  6233  0538  0DAD               	rlf	___fldiv@grs+1,f
  6234  0539  0DAE               	rlf	___fldiv@grs+2,f
  6235  053A  0DAF               	rlf	___fldiv@grs+3,f
  6236  053B  0B89               	decfsz	9,f
  6237  053C  2D37               	goto	u5505
  6238  053D  30FF               	movlw	255
  6239  053E  07AA               	addwf	___fldiv@new_exp,f
  6240  053F  30FF               	movlw	255
  6241  0540  3DAB               	addwfc	___fldiv@new_exp+1,f
  6242  0541  2D2B               	goto	l5788
  6243  0542                     l5790:
  6244  0542  01B1               	clrf	___fldiv@aexp
  6245  0543  1FAF               	btfss	___fldiv@grs+3,7
  6246  0544  2D5B               	goto	l5800
  6247  0545  30FF               	movlw	255
  6248  0546  052C               	andwf	___fldiv@grs,w
  6249  0547  00A0               	movwf	??___fldiv
  6250  0548  30FF               	movlw	255
  6251  0549  052D               	andwf	___fldiv@grs+1,w
  6252  054A  00A1               	movwf	??___fldiv+1
  6253  054B  30FF               	movlw	255
  6254  054C  052E               	andwf	___fldiv@grs+2,w
  6255  054D  00A2               	movwf	??___fldiv+2
  6256  054E  307F               	movlw	127
  6257  054F  052F               	andwf	___fldiv@grs+3,w
  6258  0550  00A3               	movwf	??___fldiv+3
  6259  0551  0823               	movf	??___fldiv+3,w
  6260  0552  0422               	iorwf	??___fldiv+2,w
  6261  0553  0421               	iorwf	??___fldiv+1,w
  6262  0554  0420               	iorwf	??___fldiv,w
  6263  0555  1903               	skipnz
  6264  0556  1876               	btfsc	___fldiv@b,0
  6265  0557  2D59               	goto	l5796
  6266  0558  2D5B               	goto	l5800
  6267  0559                     l5796:
  6268  0559  01B1               	clrf	___fldiv@aexp
  6269  055A  0AB1               	incf	___fldiv@aexp,f
  6270  055B                     l5800:
  6271  055B  0831               	movf	___fldiv@aexp,w
  6272  055C  1903               	btfsc	3,2
  6273  055D  2D84               	goto	l5810
  6274  055E  3001               	movlw	1
  6275  055F  07F6               	addwf	___fldiv@b,f
  6276  0560  3000               	movlw	0
  6277  0561  3DF7               	addwfc	___fldiv@b+1,f
  6278  0562  3000               	movlw	0
  6279  0563  3DF8               	addwfc	___fldiv@b+2,f
  6280  0564  3000               	movlw	0
  6281  0565  3DF9               	addwfc	___fldiv@b+3,f
  6282  0566  1C79               	btfss	___fldiv@b+3,0
  6283  0567  2D84               	goto	l5810
  6284  0568  0876               	movf	___fldiv@b,w
  6285  0569  00A0               	movwf	??___fldiv
  6286  056A  0877               	movf	___fldiv@b+1,w
  6287  056B  00A1               	movwf	??___fldiv+1
  6288  056C  0878               	movf	___fldiv@b+2,w
  6289  056D  00A2               	movwf	??___fldiv+2
  6290  056E  0879               	movf	___fldiv@b+3,w
  6291  056F  00A3               	movwf	??___fldiv+3
  6292  0570  3001               	movlw	1
  6293  0571  00A4               	movwf	??___fldiv+4
  6294  0572                     u5575:
  6295  0572  37A3               	asrf	??___fldiv+3,f
  6296  0573  0CA2               	rrf	??___fldiv+2,f
  6297  0574  0CA1               	rrf	??___fldiv+1,f
  6298  0575  0CA0               	rrf	??___fldiv,f
  6299  0576  0BA4               	decfsz	??___fldiv+4,f
  6300  0577  2D72               	goto	u5575
  6301  0578  0823               	movf	??___fldiv+3,w
  6302  0579  00F9               	movwf	___fldiv@b+3
  6303  057A  0822               	movf	??___fldiv+2,w
  6304  057B  00F8               	movwf	___fldiv@b+2
  6305  057C  0821               	movf	??___fldiv+1,w
  6306  057D  00F7               	movwf	___fldiv@b+1
  6307  057E  0820               	movf	??___fldiv,w
  6308  057F  00F6               	movwf	___fldiv@b
  6309  0580  3001               	movlw	1
  6310  0581  07AA               	addwf	___fldiv@new_exp,f
  6311  0582  3000               	movlw	0
  6312  0583  3DAB               	addwfc	___fldiv@new_exp+1,f
  6313  0584                     l5810:
  6314  0584  082B               	movf	___fldiv@new_exp+1,w
  6315  0585  3A80               	xorlw	128
  6316  0586  00A0               	movwf	??___fldiv
  6317  0587  3080               	movlw	128
  6318  0588  0220               	subwf	??___fldiv,w
  6319  0589  1D03               	skipz
  6320  058A  2D8D               	goto	u5585
  6321  058B  30FF               	movlw	255
  6322  058C  022A               	subwf	___fldiv@new_exp,w
  6323  058D                     u5585:
  6324  058D  1C03               	skipc
  6325  058E  2D9C               	goto	l1759
  6326  058F  30FF               	movlw	255
  6327  0590  0020               	movlb	0	; select bank0
  6328  0591  00AA               	movwf	___fldiv@new_exp
  6329  0592  3000               	movlw	0
  6330  0593  00AB               	movwf	___fldiv@new_exp+1
  6331  0594  3000               	movlw	0
  6332  0595  00F9               	movwf	___fldiv@b+3
  6333  0596  3000               	movlw	0
  6334  0597  00F8               	movwf	___fldiv@b+2
  6335  0598  3000               	movlw	0
  6336  0599  00F7               	movwf	___fldiv@b+1
  6337  059A  3000               	movlw	0
  6338  059B  00F6               	movwf	___fldiv@b
  6339  059C                     l1759:
  6340  059C  0020               	movlb	0	; select bank0
  6341  059D  082B               	movf	___fldiv@new_exp+1,w
  6342  059E  3A80               	xorlw	128
  6343  059F  00A0               	movwf	??___fldiv
  6344  05A0  3080               	movlw	128
  6345  05A1  0220               	subwf	??___fldiv,w
  6346  05A2  1D03               	skipz
  6347  05A3  2DA6               	goto	u5595
  6348  05A4  3001               	movlw	1
  6349  05A5  022A               	subwf	___fldiv@new_exp,w
  6350  05A6                     u5595:
  6351  05A6  1803               	skipnc
  6352  05A7  2DB4               	goto	l1760
  6353  05A8  0020               	movlb	0	; select bank0
  6354  05A9  01AA               	clrf	___fldiv@new_exp
  6355  05AA  01AB               	clrf	___fldiv@new_exp+1
  6356  05AB  3000               	movlw	0
  6357  05AC  00F9               	movwf	___fldiv@b+3
  6358  05AD  3000               	movlw	0
  6359  05AE  00F8               	movwf	___fldiv@b+2
  6360  05AF  3000               	movlw	0
  6361  05B0  00F7               	movwf	___fldiv@b+1
  6362  05B1  3000               	movlw	0
  6363  05B2  00F6               	movwf	___fldiv@b
  6364  05B3  01A9               	clrf	___fldiv@sign
  6365  05B4                     l1760:
  6366  05B4  0020               	movlb	0	; select bank0
  6367  05B5  082A               	movf	___fldiv@new_exp,w
  6368  05B6  00A0               	movwf	??___fldiv
  6369  05B7  0820               	movf	??___fldiv,w
  6370  05B8  00B0               	movwf	___fldiv@bexp
  6371  05B9  1C30               	btfss	___fldiv@bexp,0
  6372  05BA  2DBD               	goto	l5824
  6373  05BB  17F8               	bsf	___fldiv@b+2,7
  6374  05BC  2DC1               	goto	l1762
  6375  05BD                     l5824:
  6376  05BD  307F               	movlw	127
  6377  05BE  00A0               	movwf	??___fldiv
  6378  05BF  0820               	movf	??___fldiv,w
  6379  05C0  05F8               	andwf	___fldiv@b+2,f
  6380  05C1                     l1762:
  6381  05C1  3630               	lsrf	___fldiv@bexp,w
  6382  05C2  00A0               	movwf	??___fldiv
  6383  05C3  0820               	movf	??___fldiv,w
  6384  05C4  00F9               	movwf	___fldiv@b+3
  6385  05C5  2CA7               	goto	L1
  6386  05C6                     __end_of___fldiv:
  6387                           
  6388                           	psect	text6
  6389  026B                     __ptext6:	
  6390 ;; *************** function ___fladd *****************
  6391 ;; Defined at:
  6392 ;;		line 10 in file "/Applications/microchip/xc8/v2.32/pic/sources/c99/common/sprcadd.c"
  6393 ;; Parameters:    Size  Location     Type
  6394 ;;  b               4   44[BANK0 ] unsigned char 
  6395 ;;  a               4   48[BANK0 ] unsigned char 
  6396 ;; Auto vars:     Size  Location     Type
  6397 ;;  grs             1   63[BANK0 ] unsigned char 
  6398 ;;  bexp            1   62[BANK0 ] unsigned char 
  6399 ;;  aexp            1   61[BANK0 ] unsigned char 
  6400 ;;  signs           1   60[BANK0 ] unsigned char 
  6401 ;; Return value:  Size  Location     Type
  6402 ;;                  4   44[BANK0 ] unsigned char 
  6403 ;; Registers used:
  6404 ;;		wreg, status,2, status,0
  6405 ;; Tracked objects:
  6406 ;;		On entry : 1F/0
  6407 ;;		On exit  : 1F/0
  6408 ;;		Unchanged: 0/0
  6409 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6410 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6411 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6412 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6413 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6414 ;;Total ram usage:       20 bytes
  6415 ;; Hardware stack levels used: 1
  6416 ;; Hardware stack levels required when called: 4
  6417 ;; This function calls:
  6418 ;;		Nothing
  6419 ;; This function is called by:
  6420 ;;		_main
  6421 ;; This function uses a non-reentrant model
  6422 ;;
  6423                           
  6424                           
  6425                           ;psect for function ___fladd
  6426  026B                     ___fladd:
  6427                           
  6428                           ;incstack = 0
  6429                           ; Regs used in ___fladd: [wreg+status,2+status,0]
  6430  026B  084F               	movf	___fladd@b+3,w
  6431  026C  3980               	andlw	128
  6432  026D  00D4               	movwf	??___fladd
  6433  026E  0854               	movf	??___fladd,w
  6434  026F  00DC               	movwf	___fladd@signs
  6435  0270  354F               	lslf	___fladd@b+3,w
  6436  0271  00D4               	movwf	??___fladd
  6437  0272  0854               	movf	??___fladd,w
  6438  0273  00DE               	movwf	___fladd@bexp
  6439  0274  1BCE               	btfsc	___fladd@b+2,7
  6440  0275  145E               	bsf	___fladd@bexp,0
  6441  0276  085E               	movf	___fladd@bexp,w
  6442  0277  1903               	btfsc	3,2
  6443  0278  2A87               	goto	l5514
  6444  0279  0A5E               	incf	___fladd@bexp,w
  6445  027A  1D03               	btfss	3,2
  6446  027B  2A84               	goto	l5510
  6447  027C  3000               	movlw	0
  6448  027D  00CF               	movwf	___fladd@b+3
  6449  027E  3000               	movlw	0
  6450  027F  00CE               	movwf	___fladd@b+2
  6451  0280  3000               	movlw	0
  6452  0281  00CD               	movwf	___fladd@b+1
  6453  0282  3000               	movlw	0
  6454  0283  00CC               	movwf	___fladd@b
  6455  0284                     l5510:
  6456  0284  17CE               	bsf	___fladd@b+2,7
  6457  0285  01CF               	clrf	___fladd@b+3
  6458  0286  2A8F               	goto	l5516
  6459  0287                     l5514:
  6460  0287  3000               	movlw	0
  6461  0288  00CF               	movwf	___fladd@b+3
  6462  0289  3000               	movlw	0
  6463  028A  00CE               	movwf	___fladd@b+2
  6464  028B  3000               	movlw	0
  6465  028C  00CD               	movwf	___fladd@b+1
  6466  028D  3000               	movlw	0
  6467  028E  00CC               	movwf	___fladd@b
  6468  028F                     l5516:
  6469  028F  0853               	movf	___fladd@a+3,w
  6470  0290  3980               	andlw	128
  6471  0291  00D4               	movwf	??___fladd
  6472  0292  0854               	movf	??___fladd,w
  6473  0293  00DD               	movwf	___fladd@aexp
  6474  0294  085D               	movf	___fladd@aexp,w
  6475  0295  065C               	xorwf	___fladd@signs,w
  6476  0296  1D03               	btfss	3,2
  6477  0297  175C               	bsf	___fladd@signs,6
  6478  0298  3553               	lslf	___fladd@a+3,w
  6479  0299  00D4               	movwf	??___fladd
  6480  029A  0854               	movf	??___fladd,w
  6481  029B  00DD               	movwf	___fladd@aexp
  6482  029C  1BD2               	btfsc	___fladd@a+2,7
  6483  029D  145D               	bsf	___fladd@aexp,0
  6484  029E  085D               	movf	___fladd@aexp,w
  6485  029F  1903               	btfsc	3,2
  6486  02A0  2AAF               	goto	l5538
  6487  02A1  0A5D               	incf	___fladd@aexp,w
  6488  02A2  1D03               	btfss	3,2
  6489  02A3  2AAC               	goto	l5534
  6490  02A4  3000               	movlw	0
  6491  02A5  00D3               	movwf	___fladd@a+3
  6492  02A6  3000               	movlw	0
  6493  02A7  00D2               	movwf	___fladd@a+2
  6494  02A8  3000               	movlw	0
  6495  02A9  00D1               	movwf	___fladd@a+1
  6496  02AA  3000               	movlw	0
  6497  02AB  00D0               	movwf	___fladd@a
  6498  02AC                     l5534:
  6499  02AC  17D2               	bsf	___fladd@a+2,7
  6500  02AD  01D3               	clrf	___fladd@a+3
  6501  02AE  2AB7               	goto	l1682
  6502  02AF                     l5538:
  6503  02AF  3000               	movlw	0
  6504  02B0  00D3               	movwf	___fladd@a+3
  6505  02B1  3000               	movlw	0
  6506  02B2  00D2               	movwf	___fladd@a+2
  6507  02B3  3000               	movlw	0
  6508  02B4  00D1               	movwf	___fladd@a+1
  6509  02B5  3000               	movlw	0
  6510  02B6  00D0               	movwf	___fladd@a
  6511  02B7                     l1682:
  6512  02B7  085E               	movf	___fladd@bexp,w
  6513  02B8  025D               	subwf	___fladd@aexp,w
  6514  02B9  1803               	skipnc
  6515  02BA  2AFD               	goto	l5574
  6516  02BB  1F5C               	btfss	___fladd@signs,6
  6517  02BC  2AC1               	goto	l5544
  6518  02BD  3080               	movlw	128
  6519  02BE  00D4               	movwf	??___fladd
  6520  02BF  0854               	movf	??___fladd,w
  6521  02C0  06DC               	xorwf	___fladd@signs,f
  6522  02C1                     l5544:
  6523  02C1  085E               	movf	___fladd@bexp,w
  6524  02C2  00D4               	movwf	??___fladd
  6525  02C3  0854               	movf	??___fladd,w
  6526  02C4  00DF               	movwf	___fladd@grs
  6527  02C5  085D               	movf	___fladd@aexp,w
  6528  02C6  00D4               	movwf	??___fladd
  6529  02C7  0854               	movf	??___fladd,w
  6530  02C8  00DE               	movwf	___fladd@bexp
  6531  02C9  085F               	movf	___fladd@grs,w
  6532  02CA  00D4               	movwf	??___fladd
  6533  02CB  0854               	movf	??___fladd,w
  6534  02CC  00DD               	movwf	___fladd@aexp
  6535  02CD  084C               	movf	___fladd@b,w
  6536  02CE  00D4               	movwf	??___fladd
  6537  02CF  0854               	movf	??___fladd,w
  6538  02D0  00DF               	movwf	___fladd@grs
  6539  02D1  0850               	movf	___fladd@a,w
  6540  02D2  00D4               	movwf	??___fladd
  6541  02D3  0854               	movf	??___fladd,w
  6542  02D4  00CC               	movwf	___fladd@b
  6543  02D5  085F               	movf	___fladd@grs,w
  6544  02D6  00D4               	movwf	??___fladd
  6545  02D7  0854               	movf	??___fladd,w
  6546  02D8  00D0               	movwf	___fladd@a
  6547  02D9  084D               	movf	___fladd@b+1,w
  6548  02DA  00D4               	movwf	??___fladd
  6549  02DB  0854               	movf	??___fladd,w
  6550  02DC  00DF               	movwf	___fladd@grs
  6551  02DD  0851               	movf	___fladd@a+1,w
  6552  02DE  00D4               	movwf	??___fladd
  6553  02DF  0854               	movf	??___fladd,w
  6554  02E0  00CD               	movwf	___fladd@b+1
  6555  02E1  085F               	movf	___fladd@grs,w
  6556  02E2  00D4               	movwf	??___fladd
  6557  02E3  0854               	movf	??___fladd,w
  6558  02E4  00D1               	movwf	___fladd@a+1
  6559  02E5  084E               	movf	___fladd@b+2,w
  6560  02E6  00D4               	movwf	??___fladd
  6561  02E7  0854               	movf	??___fladd,w
  6562  02E8  00DF               	movwf	___fladd@grs
  6563  02E9  0852               	movf	___fladd@a+2,w
  6564  02EA  00D4               	movwf	??___fladd
  6565  02EB  0854               	movf	??___fladd,w
  6566  02EC  00CE               	movwf	___fladd@b+2
  6567  02ED  085F               	movf	___fladd@grs,w
  6568  02EE  00D4               	movwf	??___fladd
  6569  02EF  0854               	movf	??___fladd,w
  6570  02F0  00D2               	movwf	___fladd@a+2
  6571  02F1  084F               	movf	___fladd@b+3,w
  6572  02F2  00D4               	movwf	??___fladd
  6573  02F3  0854               	movf	??___fladd,w
  6574  02F4  00DF               	movwf	___fladd@grs
  6575  02F5  0853               	movf	___fladd@a+3,w
  6576  02F6  00D4               	movwf	??___fladd
  6577  02F7  0854               	movf	??___fladd,w
  6578  02F8  00CF               	movwf	___fladd@b+3
  6579  02F9  085F               	movf	___fladd@grs,w
  6580  02FA  00D4               	movwf	??___fladd
  6581  02FB  0854               	movf	??___fladd,w
  6582  02FC  00D3               	movwf	___fladd@a+3
  6583  02FD                     l5574:
  6584  02FD  01DF               	clrf	___fladd@grs
  6585  02FE  085D               	movf	___fladd@aexp,w
  6586  02FF  00D4               	movwf	??___fladd
  6587  0300  01D5               	clrf	??___fladd+1
  6588  0301  0855               	movf	??___fladd+1,w
  6589  0302  00D7               	movwf	??___fladd+3
  6590  0303  085E               	movf	___fladd@bexp,w
  6591  0304  0254               	subwf	??___fladd,w
  6592  0305  00D6               	movwf	??___fladd+2
  6593  0306  1C03               	skipc
  6594  0307  03D7               	decf	??___fladd+3,f
  6595  0308  0857               	movf	??___fladd+3,w
  6596  0309  3A80               	xorlw	128
  6597  030A  00D8               	movwf	??___fladd+4
  6598  030B  3080               	movlw	128
  6599  030C  0258               	subwf	??___fladd+4,w
  6600  030D  1D03               	skipz
  6601  030E  2B11               	goto	u4985
  6602  030F  301A               	movlw	26
  6603  0310  0256               	subwf	??___fladd+2,w
  6604  0311                     u4985:
  6605  0311  1C03               	skipc
  6606  0312  2B45               	goto	l5592
  6607  0313  0020               	movlb	0	; select bank0
  6608  0314  084F               	movf	___fladd@b+3,w
  6609  0315  044E               	iorwf	___fladd@b+2,w
  6610  0316  044D               	iorwf	___fladd@b+1,w
  6611  0317  044C               	iorwf	___fladd@b,w
  6612  0318  1903               	btfsc	3,2
  6613  0319  2B1C               	goto	u4990
  6614  031A  3001               	movlw	1
  6615  031B  2B1D               	goto	u5000
  6616  031C                     u4990:
  6617  031C  3000               	movlw	0
  6618  031D                     u5000:
  6619  031D  00D4               	movwf	??___fladd
  6620  031E  0854               	movf	??___fladd,w
  6621  031F  00DF               	movwf	___fladd@grs
  6622  0320  3000               	movlw	0
  6623  0321  00CF               	movwf	___fladd@b+3
  6624  0322  3000               	movlw	0
  6625  0323  00CE               	movwf	___fladd@b+2
  6626  0324  3000               	movlw	0
  6627  0325  00CD               	movwf	___fladd@b+1
  6628  0326  3000               	movlw	0
  6629  0327  00CC               	movwf	___fladd@b
  6630  0328  085D               	movf	___fladd@aexp,w
  6631  0329  00D4               	movwf	??___fladd
  6632  032A  0854               	movf	??___fladd,w
  6633  032B  00DE               	movwf	___fladd@bexp
  6634  032C  2B4A               	goto	l1686
  6635  032D                     l1688:
  6636  032D  1C5F               	btfss	___fladd@grs,0
  6637  032E  2B35               	goto	l5582
  6638  032F  365F               	lsrf	___fladd@grs,w
  6639  0330  3801               	iorlw	1
  6640  0331  00D4               	movwf	??___fladd
  6641  0332  0854               	movf	??___fladd,w
  6642  0333  00DF               	movwf	___fladd@grs
  6643  0334  2B37               	goto	l5584
  6644  0335                     l5582:
  6645  0335  1003               	clrc
  6646  0336  0CDF               	rrf	___fladd@grs,f
  6647  0337                     l5584:
  6648  0337  184C               	btfsc	___fladd@b,0
  6649  0338  17DF               	bsf	___fladd@grs,7
  6650  0339  3001               	movlw	1
  6651  033A  00D4               	movwf	??___fladd
  6652  033B                     u5035:
  6653  033B  37CF               	asrf	___fladd@b+3,f
  6654  033C  0CCE               	rrf	___fladd@b+2,f
  6655  033D  0CCD               	rrf	___fladd@b+1,f
  6656  033E  0CCC               	rrf	___fladd@b,f
  6657  033F  0BD4               	decfsz	??___fladd& (0+127),f
  6658  0340  2B3B               	goto	u5035
  6659  0341  3001               	movlw	1
  6660  0342  00D4               	movwf	??___fladd
  6661  0343  0854               	movf	??___fladd,w
  6662  0344  07DE               	addwf	___fladd@bexp,f
  6663  0345                     l5592:
  6664  0345  0020               	movlb	0	; select bank0
  6665  0346  085D               	movf	___fladd@aexp,w
  6666  0347  025E               	subwf	___fladd@bexp,w
  6667  0348  1C03               	skipc
  6668  0349  2B2D               	goto	l1688
  6669  034A                     l1686:
  6670  034A  1B5C               	btfsc	___fladd@signs,6
  6671  034B  2B7B               	goto	l5618
  6672  034C  085E               	movf	___fladd@bexp,w
  6673  034D  1D03               	btfss	3,2
  6674  034E  2B58               	goto	l5600
  6675  034F  3000               	movlw	0
  6676  0350  00CF               	movwf	?___fladd+3
  6677  0351  3000               	movlw	0
  6678  0352  00CE               	movwf	?___fladd+2
  6679  0353  3000               	movlw	0
  6680  0354  00CD               	movwf	?___fladd+1
  6681  0355  3000               	movlw	0
  6682  0356  00CC               	movwf	?___fladd
  6683  0357  0008               	return
  6684  0358                     l5600:
  6685  0358  0850               	movf	___fladd@a,w
  6686  0359  07CC               	addwf	___fladd@b,f
  6687  035A  0851               	movf	___fladd@a+1,w
  6688  035B  3DCD               	addwfc	___fladd@b+1,f
  6689  035C  0852               	movf	___fladd@a+2,w
  6690  035D  3DCE               	addwfc	___fladd@b+2,f
  6691  035E  0853               	movf	___fladd@a+3,w
  6692  035F  3DCF               	addwfc	___fladd@b+3,f
  6693  0360  1C4F               	btfss	___fladd@b+3,0
  6694  0361  2BF5               	goto	l5652
  6695  0362  1C5F               	btfss	___fladd@grs,0
  6696  0363  2B6A               	goto	l5608
  6697  0364  365F               	lsrf	___fladd@grs,w
  6698  0365  3801               	iorlw	1
  6699  0366  00D4               	movwf	??___fladd
  6700  0367  0854               	movf	??___fladd,w
  6701  0368  00DF               	movwf	___fladd@grs
  6702  0369  2B6C               	goto	l5610
  6703  036A                     l5608:
  6704  036A  1003               	clrc
  6705  036B  0CDF               	rrf	___fladd@grs,f
  6706  036C                     l5610:
  6707  036C  184C               	btfsc	___fladd@b,0
  6708  036D  17DF               	bsf	___fladd@grs,7
  6709  036E  3001               	movlw	1
  6710  036F  00D4               	movwf	??___fladd
  6711  0370                     u5105:
  6712  0370  37CF               	asrf	___fladd@b+3,f
  6713  0371  0CCE               	rrf	___fladd@b+2,f
  6714  0372  0CCD               	rrf	___fladd@b+1,f
  6715  0373  0CCC               	rrf	___fladd@b,f
  6716  0374  0BD4               	decfsz	??___fladd& (0+127),f
  6717  0375  2B70               	goto	u5105
  6718  0376  3001               	movlw	1
  6719  0377  00D4               	movwf	??___fladd
  6720  0378  0854               	movf	??___fladd,w
  6721  0379  07DE               	addwf	___fladd@bexp,f
  6722  037A  2BF5               	goto	l5652
  6723  037B                     l5618:
  6724  037B  084F               	movf	___fladd@b+3,w
  6725  037C  3A80               	xorlw	128
  6726  037D  00D4               	movwf	??___fladd
  6727  037E  0853               	movf	___fladd@a+3,w
  6728  037F  3A80               	xorlw	128
  6729  0380  0254               	subwf	??___fladd,w
  6730  0381  1D03               	skipz
  6731  0382  2B8D               	goto	u5113
  6732  0383  0852               	movf	___fladd@a+2,w
  6733  0384  024E               	subwf	___fladd@b+2,w
  6734  0385  1D03               	skipz
  6735  0386  2B8D               	goto	u5113
  6736  0387  0851               	movf	___fladd@a+1,w
  6737  0388  024D               	subwf	___fladd@b+1,w
  6738  0389  1D03               	skipz
  6739  038A  2B8D               	goto	u5113
  6740  038B  0850               	movf	___fladd@a,w
  6741  038C  024C               	subwf	___fladd@b,w
  6742  038D                     u5113:
  6743  038D  1803               	skipnc
  6744  038E  2BC5               	goto	l5628
  6745  038F  30FF               	movlw	255
  6746  0390  00D4               	movwf	??___fladd
  6747  0391  30FF               	movlw	255
  6748  0392  00D5               	movwf	??___fladd+1
  6749  0393  30FF               	movlw	255
  6750  0394  00D6               	movwf	??___fladd+2
  6751  0395  30FF               	movlw	255
  6752  0396  00D7               	movwf	??___fladd+3
  6753  0397  084C               	movf	___fladd@b,w
  6754  0398  0250               	subwf	___fladd@a,w
  6755  0399  00D8               	movwf	??___fladd+4
  6756  039A  084D               	movf	___fladd@b+1,w
  6757  039B  3B51               	subwfb	___fladd@a+1,w
  6758  039C  00D9               	movwf	??___fladd+5
  6759  039D  084E               	movf	___fladd@b+2,w
  6760  039E  3B52               	subwfb	___fladd@a+2,w
  6761  039F  00DA               	movwf	??___fladd+6
  6762  03A0  084F               	movf	___fladd@b+3,w
  6763  03A1  3B53               	subwfb	___fladd@a+3,w
  6764  03A2  00DB               	movwf	??___fladd+7
  6765  03A3  0858               	movf	??___fladd+4,w
  6766  03A4  07D4               	addwf	??___fladd,f
  6767  03A5  0859               	movf	??___fladd+5,w
  6768  03A6  3DD5               	addwfc	??___fladd+1,f
  6769  03A7  085A               	movf	??___fladd+6,w
  6770  03A8  3DD6               	addwfc	??___fladd+2,f
  6771  03A9  085B               	movf	??___fladd+7,w
  6772  03AA  3DD7               	addwfc	??___fladd+3,f
  6773  03AB  0857               	movf	??___fladd+3,w
  6774  03AC  00CF               	movwf	___fladd@b+3
  6775  03AD  0856               	movf	??___fladd+2,w
  6776  03AE  00CE               	movwf	___fladd@b+2
  6777  03AF  0855               	movf	??___fladd+1,w
  6778  03B0  00CD               	movwf	___fladd@b+1
  6779  03B1  0854               	movf	??___fladd,w
  6780  03B2  00CC               	movwf	___fladd@b
  6781  03B3  3080               	movlw	128
  6782  03B4  00D4               	movwf	??___fladd
  6783  03B5  0854               	movf	??___fladd,w
  6784  03B6  06DC               	xorwf	___fladd@signs,f
  6785  03B7  09DF               	comf	___fladd@grs,f
  6786  03B8  0ADF               	incf	___fladd@grs,f
  6787  03B9  085F               	movf	___fladd@grs,w
  6788  03BA  1D03               	btfss	3,2
  6789  03BB  2BCD               	goto	l1703
  6790  03BC  3001               	movlw	1
  6791  03BD  07CC               	addwf	___fladd@b,f
  6792  03BE  3000               	movlw	0
  6793  03BF  3DCD               	addwfc	___fladd@b+1,f
  6794  03C0  3000               	movlw	0
  6795  03C1  3DCE               	addwfc	___fladd@b+2,f
  6796  03C2  3000               	movlw	0
  6797  03C3  3DCF               	addwfc	___fladd@b+3,f
  6798  03C4  2BCD               	goto	l1703
  6799  03C5                     l5628:
  6800  03C5  0850               	movf	___fladd@a,w
  6801  03C6  02CC               	subwf	___fladd@b,f
  6802  03C7  0851               	movf	___fladd@a+1,w
  6803  03C8  3BCD               	subwfb	___fladd@b+1,f
  6804  03C9  0852               	movf	___fladd@a+2,w
  6805  03CA  3BCE               	subwfb	___fladd@b+2,f
  6806  03CB  0853               	movf	___fladd@a+3,w
  6807  03CC  3BCF               	subwfb	___fladd@b+3,f
  6808  03CD                     l1703:
  6809  03CD  084F               	movf	___fladd@b+3,w
  6810  03CE  044E               	iorwf	___fladd@b+2,w
  6811  03CF  044D               	iorwf	___fladd@b+1,w
  6812  03D0  044C               	iorwf	___fladd@b,w
  6813  03D1  1D03               	skipz
  6814  03D2  2BF3               	goto	l5650
  6815  03D3  085F               	movf	___fladd@grs,w
  6816  03D4  1D03               	btfss	3,2
  6817  03D5  2BF3               	goto	l5650
  6818  03D6  3000               	movlw	0
  6819  03D7  00CF               	movwf	?___fladd+3
  6820  03D8  3000               	movlw	0
  6821  03D9  00CE               	movwf	?___fladd+2
  6822  03DA  3000               	movlw	0
  6823  03DB  00CD               	movwf	?___fladd+1
  6824  03DC  3000               	movlw	0
  6825  03DD  00CC               	movwf	?___fladd
  6826  03DE  0008               	return
  6827  03DF                     l5636:
  6828  03DF  3001               	movlw	1
  6829  03E0                     u5155:
  6830  03E0  35CC               	lslf	___fladd@b,f
  6831  03E1  0DCD               	rlf	___fladd@b+1,f
  6832  03E2  0DCE               	rlf	___fladd@b+2,f
  6833  03E3  0DCF               	rlf	___fladd@b+3,f
  6834  03E4  0B89               	decfsz	9,f
  6835  03E5  2BE0               	goto	u5155
  6836  03E6  1BDF               	btfsc	___fladd@grs,7
  6837  03E7  144C               	bsf	___fladd@b,0
  6838  03E8  1C5F               	btfss	___fladd@grs,0
  6839  03E9  2BEC               	goto	l5644
  6840  03EA  1403               	setc
  6841  03EB  2BED               	goto	L2
  6842  03EC                     l5644:
  6843  03EC  1003               	clrc
  6844  03ED                     L2:
  6845  03ED  0DDF               	rlf	___fladd@grs,f
  6846  03EE  085E               	movf	___fladd@bexp,w
  6847  03EF  1903               	btfsc	3,2
  6848  03F0  2BF3               	goto	l5650
  6849  03F1  3001               	movlw	1
  6850  03F2  02DE               	subwf	___fladd@bexp,f
  6851  03F3                     l5650:
  6852  03F3  1FCE               	btfss	___fladd@b+2,7
  6853  03F4  2BDF               	goto	l5636
  6854  03F5                     l5652:
  6855  03F5  01DD               	clrf	___fladd@aexp
  6856  03F6  1FDF               	btfss	___fladd@grs,7
  6857  03F7  2C00               	goto	l5662
  6858  03F8  085F               	movf	___fladd@grs,w
  6859  03F9  397F               	andlw	127
  6860  03FA  1903               	btfsc	3,2
  6861  03FB  184C               	btfsc	___fladd@b,0
  6862  03FC  2BFE               	goto	l5658
  6863  03FD  2C00               	goto	l5662
  6864  03FE                     l5658:
  6865  03FE  01DD               	clrf	___fladd@aexp
  6866  03FF  0ADD               	incf	___fladd@aexp,f
  6867  0400                     l5662:
  6868  0400  085D               	movf	___fladd@aexp,w
  6869  0401  1903               	btfsc	3,2
  6870  0402  2C2C               	goto	l1716
  6871  0403  3001               	movlw	1
  6872  0404  07CC               	addwf	___fladd@b,f
  6873  0405  3000               	movlw	0
  6874  0406  3DCD               	addwfc	___fladd@b+1,f
  6875  0407  3000               	movlw	0
  6876  0408  3DCE               	addwfc	___fladd@b+2,f
  6877  0409  3000               	movlw	0
  6878  040A  3DCF               	addwfc	___fladd@b+3,f
  6879  040B  1C4F               	btfss	___fladd@b+3,0
  6880  040C  2C2C               	goto	l1716
  6881  040D  084C               	movf	___fladd@b,w
  6882  040E  00D4               	movwf	??___fladd
  6883  040F  084D               	movf	___fladd@b+1,w
  6884  0410  00D5               	movwf	??___fladd+1
  6885  0411  084E               	movf	___fladd@b+2,w
  6886  0412  00D6               	movwf	??___fladd+2
  6887  0413  084F               	movf	___fladd@b+3,w
  6888  0414  00D7               	movwf	??___fladd+3
  6889  0415  3001               	movlw	1
  6890  0416  00D8               	movwf	??___fladd+4
  6891  0417                     u5255:
  6892  0417  37D7               	asrf	??___fladd+3,f
  6893  0418  0CD6               	rrf	??___fladd+2,f
  6894  0419  0CD5               	rrf	??___fladd+1,f
  6895  041A  0CD4               	rrf	??___fladd,f
  6896  041B  0BD8               	decfsz	??___fladd+4,f
  6897  041C  2C17               	goto	u5255
  6898  041D  0857               	movf	??___fladd+3,w
  6899  041E  00CF               	movwf	___fladd@b+3
  6900  041F  0856               	movf	??___fladd+2,w
  6901  0420  00CE               	movwf	___fladd@b+2
  6902  0421  0855               	movf	??___fladd+1,w
  6903  0422  00CD               	movwf	___fladd@b+1
  6904  0423  0854               	movf	??___fladd,w
  6905  0424  00CC               	movwf	___fladd@b
  6906  0425  0A5E               	incf	___fladd@bexp,w
  6907  0426  1903               	btfsc	3,2
  6908  0427  2C2C               	goto	l1716
  6909  0428  3001               	movlw	1
  6910  0429  00D4               	movwf	??___fladd
  6911  042A  0854               	movf	??___fladd,w
  6912  042B  07DE               	addwf	___fladd@bexp,f
  6913  042C                     l1716:
  6914  042C  0A5E               	incf	___fladd@bexp,w
  6915  042D  1D03               	btfss	3,2
  6916  042E  085E               	movf	___fladd@bexp,w
  6917  042F  1D03               	btfss	3,2
  6918  0430  2C3C               	goto	l5680
  6919  0431  3000               	movlw	0
  6920  0432  00CF               	movwf	___fladd@b+3
  6921  0433  3000               	movlw	0
  6922  0434  00CE               	movwf	___fladd@b+2
  6923  0435  3000               	movlw	0
  6924  0436  00CD               	movwf	___fladd@b+1
  6925  0437  3000               	movlw	0
  6926  0438  00CC               	movwf	___fladd@b
  6927  0439  085E               	movf	___fladd@bexp,w
  6928  043A  1903               	btfsc	3,2
  6929  043B  01DC               	clrf	___fladd@signs
  6930  043C                     l5680:
  6931  043C  1C5E               	btfss	___fladd@bexp,0
  6932  043D  2C40               	goto	l5684
  6933  043E  17CE               	bsf	___fladd@b+2,7
  6934  043F  2C44               	goto	l1724
  6935  0440                     l5684:
  6936  0440  307F               	movlw	127
  6937  0441  00D4               	movwf	??___fladd
  6938  0442  0854               	movf	??___fladd,w
  6939  0443  05CE               	andwf	___fladd@b+2,f
  6940  0444                     l1724:
  6941  0444  365E               	lsrf	___fladd@bexp,w
  6942  0445  00D4               	movwf	??___fladd
  6943  0446  0854               	movf	??___fladd,w
  6944  0447  00CF               	movwf	___fladd@b+3
  6945  0448  1FDC               	btfss	___fladd@signs,7
  6946  0449  0008               	return
  6947  044A  17CF               	bsf	___fladd@b+3,7
  6948  044B  0008               	return
  6949  044C                     __end_of___fladd:
  6950                           
  6951                           	psect	text7
  6952  1C41                     __ptext7:	
  6953 ;; *************** function _SYSTEM_Initialize *****************
  6954 ;; Defined at:
  6955 ;;		line 50 in file "mcc_generated_files/mcc.c"
  6956 ;; Parameters:    Size  Location     Type
  6957 ;;		None
  6958 ;; Auto vars:     Size  Location     Type
  6959 ;;		None
  6960 ;; Return value:  Size  Location     Type
  6961 ;;                  1    wreg      void 
  6962 ;; Registers used:
  6963 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6964 ;; Tracked objects:
  6965 ;;		On entry : B1F/0
  6966 ;;		On exit  : 1F/1
  6967 ;;		Unchanged: 0/0
  6968 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6969 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6970 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6971 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6972 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6973 ;;Total ram usage:        0 bytes
  6974 ;; Hardware stack levels used: 1
  6975 ;; Hardware stack levels required when called: 9
  6976 ;; This function calls:
  6977 ;;		_EUSART_Initialize
  6978 ;;		_MTOUCH_Initialize
  6979 ;;		_OSCILLATOR_Initialize
  6980 ;;		_PIN_MANAGER_Initialize
  6981 ;;		_TMR1_Initialize
  6982 ;;		_WDT_Initialize
  6983 ;; This function is called by:
  6984 ;;		_main
  6985 ;; This function uses a non-reentrant model
  6986 ;;
  6987                           
  6988                           
  6989                           ;psect for function _SYSTEM_Initialize
  6990  1C41                     _SYSTEM_Initialize:
  6991                           
  6992                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
  6993                           
  6994                           ;incstack = 0
  6995                           ; Regs used in _SYSTEM_Initialize: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6996  1C41  319D  251E  319C   	fcall	_PIN_MANAGER_Initialize
  6997                           
  6998                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
  6999  1C44  319B  2336  319C   	fcall	_OSCILLATOR_Initialize
  7000                           
  7001                           ;mcc_generated_files/mcc.c: 55:     WDT_Initialize();
  7002  1C47  319B  2305  319C   	fcall	_WDT_Initialize
  7003                           
  7004                           ;mcc_generated_files/mcc.c: 56:     TMR1_Initialize();
  7005  1C4A  319C  24EB  319C   	fcall	_TMR1_Initialize
  7006                           
  7007                           ;mcc_generated_files/mcc.c: 57:     EUSART_Initialize();
  7008  1C4D  3191  2167  319C   	fcall	_EUSART_Initialize
  7009                           
  7010                           ;mcc_generated_files/mcc.c: 58:     MTOUCH_Initialize();
  7011  1C50  319C  248F         	fcall	_MTOUCH_Initialize
  7012  1C52  0008               	return
  7013  1C53                     __end_of_SYSTEM_Initialize:
  7014                           
  7015                           	psect	text8
  7016  1B05                     __ptext8:	
  7017 ;; *************** function _WDT_Initialize *****************
  7018 ;; Defined at:
  7019 ;;		line 71 in file "mcc_generated_files/mcc.c"
  7020 ;; Parameters:    Size  Location     Type
  7021 ;;		None
  7022 ;; Auto vars:     Size  Location     Type
  7023 ;;		None
  7024 ;; Return value:  Size  Location     Type
  7025 ;;                  1    wreg      void 
  7026 ;; Registers used:
  7027 ;;		wreg
  7028 ;; Tracked objects:
  7029 ;;		On entry : B1F/2
  7030 ;;		On exit  : B1F/1
  7031 ;;		Unchanged: B00/0
  7032 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7033 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7034 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7035 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7036 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7037 ;;Total ram usage:        0 bytes
  7038 ;; Hardware stack levels used: 1
  7039 ;; Hardware stack levels required when called: 4
  7040 ;; This function calls:
  7041 ;;		Nothing
  7042 ;; This function is called by:
  7043 ;;		_SYSTEM_Initialize
  7044 ;; This function uses a non-reentrant model
  7045 ;;
  7046                           
  7047                           
  7048                           ;psect for function _WDT_Initialize
  7049  1B05                     _WDT_Initialize:
  7050                           
  7051                           ;mcc_generated_files/mcc.c: 74:     WDTCON = 0x16;
  7052                           
  7053                           ;incstack = 0
  7054                           ; Regs used in _WDT_Initialize: [wreg]
  7055  1B05  3016               	movlw	22
  7056  1B06  0021               	movlb	1	; select bank1
  7057  1B07  0097               	movwf	23	;volatile
  7058  1B08  0008               	return
  7059  1B09                     __end_of_WDT_Initialize:
  7060                           
  7061                           	psect	text9
  7062  1CEB                     __ptext9:	
  7063 ;; *************** function _TMR1_Initialize *****************
  7064 ;; Defined at:
  7065 ;;		line 64 in file "mcc_generated_files/tmr1.c"
  7066 ;; Parameters:    Size  Location     Type
  7067 ;;		None
  7068 ;; Auto vars:     Size  Location     Type
  7069 ;;		None
  7070 ;; Return value:  Size  Location     Type
  7071 ;;                  1    wreg      void 
  7072 ;; Registers used:
  7073 ;;		wreg, status,2, status,0, pclath, cstack
  7074 ;; Tracked objects:
  7075 ;;		On entry : B1F/1
  7076 ;;		On exit  : 1F/0
  7077 ;;		Unchanged: 0/0
  7078 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7079 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7080 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7081 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7082 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7083 ;;Total ram usage:        0 bytes
  7084 ;; Hardware stack levels used: 1
  7085 ;; Hardware stack levels required when called: 5
  7086 ;; This function calls:
  7087 ;;		_TMR1_SetInterruptHandler
  7088 ;; This function is called by:
  7089 ;;		_SYSTEM_Initialize
  7090 ;; This function uses a non-reentrant model
  7091 ;;
  7092                           
  7093                           
  7094                           ;psect for function _TMR1_Initialize
  7095  1CEB                     _TMR1_Initialize:
  7096                           
  7097                           ;mcc_generated_files/tmr1.c: 69:     T1GCON = 0x00;
  7098                           
  7099                           ;incstack = 0
  7100                           ; Regs used in _TMR1_Initialize: [wreg+status,2+status,0+pclath+cstack]
  7101  1CEB  0020               	movlb	0	; select bank0
  7102  1CEC  0199               	clrf	25	;volatile
  7103                           
  7104                           ;mcc_generated_files/tmr1.c: 72:     TMR1H = 0xFF;
  7105  1CED  30FF               	movlw	255
  7106  1CEE  0097               	movwf	23	;volatile
  7107                           
  7108                           ;mcc_generated_files/tmr1.c: 75:     TMR1L = 0x65;
  7109  1CEF  3065               	movlw	101
  7110  1CF0  0096               	movwf	22	;volatile
  7111                           
  7112                           ;mcc_generated_files/tmr1.c: 78:     PIR1bits.TMR1IF = 0;
  7113  1CF1  1011               	bcf	17,0	;volatile
  7114                           
  7115                           ;mcc_generated_files/tmr1.c: 81:     timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
  7116  1CF2  0817               	movf	23,w	;volatile
  7117  1CF3  0021               	movlb	1	; select bank1
  7118  1CF4  00E4               	movwf	(_timer1ReloadVal+1)^(0+128)	;volatile
  7119  1CF5  0020               	movlb	0	; select bank0
  7120  1CF6  0816               	movf	22,w	;volatile
  7121  1CF7  0021               	movlb	1	; select bank1
  7122  1CF8  00E3               	movwf	_timer1ReloadVal^(0+128)	;volatile
  7123                           
  7124                           ;mcc_generated_files/tmr1.c: 84:     PIE1bits.TMR1IE = 1;
  7125  1CF9  1411               	bsf	17,0	;volatile
  7126                           
  7127                           ;mcc_generated_files/tmr1.c: 87:     TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandl
      +                          er);
  7128  1CFA  30F8               	movlw	low _TMR1_DefaultInterruptHandler
  7129  1CFB  00F2               	movwf	TMR1_SetInterruptHandler@InterruptHandler
  7130  1CFC  301A               	movlw	high _TMR1_DefaultInterruptHandler
  7131  1CFD  00F3               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1
  7132  1CFE  3190  2000         	fcall	_TMR1_SetInterruptHandler
  7133                           
  7134                           ;mcc_generated_files/tmr1.c: 90:     T1CON = 0x05;
  7135  1D00  3005               	movlw	5
  7136  1D01  0020               	movlb	0	; select bank0
  7137  1D02  0098               	movwf	24	;volatile
  7138  1D03  0008               	return
  7139  1D04                     __end_of_TMR1_Initialize:
  7140                           
  7141                           	psect	text10
  7142  1D1E                     __ptext10:	
  7143 ;; *************** function _PIN_MANAGER_Initialize *****************
  7144 ;; Defined at:
  7145 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  7146 ;; Parameters:    Size  Location     Type
  7147 ;;		None
  7148 ;; Auto vars:     Size  Location     Type
  7149 ;;		None
  7150 ;; Return value:  Size  Location     Type
  7151 ;;                  1    wreg      void 
  7152 ;; Registers used:
  7153 ;;		wreg, status,2
  7154 ;; Tracked objects:
  7155 ;;		On entry : B1F/0
  7156 ;;		On exit  : B1F/2
  7157 ;;		Unchanged: B00/0
  7158 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7159 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7160 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7161 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7162 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7163 ;;Total ram usage:        0 bytes
  7164 ;; Hardware stack levels used: 1
  7165 ;; Hardware stack levels required when called: 4
  7166 ;; This function calls:
  7167 ;;		Nothing
  7168 ;; This function is called by:
  7169 ;;		_SYSTEM_Initialize
  7170 ;; This function uses a non-reentrant model
  7171 ;;
  7172                           
  7173                           
  7174                           ;psect for function _PIN_MANAGER_Initialize
  7175  1D1E                     _PIN_MANAGER_Initialize:
  7176                           
  7177                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
  7178                           
  7179                           ;incstack = 0
  7180                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  7181  1D1E  0022               	movlb	2	; select bank2
  7182  1D1F  0190               	clrf	16	;volatile
  7183                           
  7184                           ;mcc_generated_files/pin_manager.c: 61:     LATA = 0x00;
  7185  1D20  018C               	clrf	12	;volatile
  7186                           
  7187                           ;mcc_generated_files/pin_manager.c: 62:     LATB = 0x00;
  7188  1D21  018D               	clrf	13	;volatile
  7189                           
  7190                           ;mcc_generated_files/pin_manager.c: 63:     LATC = 0x00;
  7191  1D22  018E               	clrf	14	;volatile
  7192                           
  7193                           ;mcc_generated_files/pin_manager.c: 68:     TRISE = 0x08;
  7194  1D23  3008               	movlw	8
  7195  1D24  0021               	movlb	1	; select bank1
  7196  1D25  0090               	movwf	16	;volatile
  7197                           
  7198                           ;mcc_generated_files/pin_manager.c: 69:     TRISA = 0xD0;
  7199  1D26  30D0               	movlw	208
  7200  1D27  008C               	movwf	12	;volatile
  7201                           
  7202                           ;mcc_generated_files/pin_manager.c: 70:     TRISB = 0xC0;
  7203  1D28  30C0               	movlw	192
  7204  1D29  008D               	movwf	13	;volatile
  7205                           
  7206                           ;mcc_generated_files/pin_manager.c: 71:     TRISC = 0xBE;
  7207  1D2A  30BE               	movlw	190
  7208  1D2B  008E               	movwf	14	;volatile
  7209                           
  7210                           ;mcc_generated_files/pin_manager.c: 76:     ANSELB = 0x00;
  7211  1D2C  0023               	movlb	3	; select bank3
  7212  1D2D  018D               	clrf	13	;volatile
  7213                           
  7214                           ;mcc_generated_files/pin_manager.c: 77:     ANSELA = 0x10;
  7215  1D2E  3010               	movlw	16
  7216  1D2F  008C               	movwf	12	;volatile
  7217                           
  7218                           ;mcc_generated_files/pin_manager.c: 82:     WPUE = 0x00;
  7219  1D30  0024               	movlb	4	; select bank4
  7220  1D31  0190               	clrf	16	;volatile
  7221                           
  7222                           ;mcc_generated_files/pin_manager.c: 83:     WPUB = 0x00;
  7223  1D32  018D               	clrf	13	;volatile
  7224                           
  7225                           ;mcc_generated_files/pin_manager.c: 84:     OPTION_REGbits.nWPUEN = 1;
  7226  1D33  0021               	movlb	1	; select bank1
  7227  1D34  1795               	bsf	21,7	;volatile
  7228                           
  7229                           ;mcc_generated_files/pin_manager.c: 90:     APFCON = 0x00;
  7230  1D35  0022               	movlb	2	; select bank2
  7231  1D36  019D               	clrf	29	;volatile
  7232  1D37  0008               	return
  7233  1D38                     __end_of_PIN_MANAGER_Initialize:
  7234                           
  7235                           	psect	text11
  7236  1B36                     __ptext11:	
  7237 ;; *************** function _OSCILLATOR_Initialize *****************
  7238 ;; Defined at:
  7239 ;;		line 61 in file "mcc_generated_files/mcc.c"
  7240 ;; Parameters:    Size  Location     Type
  7241 ;;		None
  7242 ;; Auto vars:     Size  Location     Type
  7243 ;;		None
  7244 ;; Return value:  Size  Location     Type
  7245 ;;                  1    wreg      void 
  7246 ;; Registers used:
  7247 ;;		wreg, status,2
  7248 ;; Tracked objects:
  7249 ;;		On entry : B1F/2
  7250 ;;		On exit  : B1F/2
  7251 ;;		Unchanged: B00/0
  7252 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7253 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7254 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7255 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7256 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7257 ;;Total ram usage:        0 bytes
  7258 ;; Hardware stack levels used: 1
  7259 ;; Hardware stack levels required when called: 4
  7260 ;; This function calls:
  7261 ;;		Nothing
  7262 ;; This function is called by:
  7263 ;;		_SYSTEM_Initialize
  7264 ;; This function uses a non-reentrant model
  7265 ;;
  7266                           
  7267                           
  7268                           ;psect for function _OSCILLATOR_Initialize
  7269  1B36                     _OSCILLATOR_Initialize:
  7270                           
  7271                           ;mcc_generated_files/mcc.c: 64:     OSCCON = 0x70;
  7272                           
  7273                           ;incstack = 0
  7274                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  7275  1B36  3070               	movlw	112
  7276  1B37  0021               	movlb	1	; select bank1
  7277  1B38  0099               	movwf	25	;volatile
  7278                           
  7279                           ;mcc_generated_files/mcc.c: 66:     OSCTUNE = 0x00;
  7280  1B39  0198               	clrf	24	;volatile
  7281                           
  7282                           ;mcc_generated_files/mcc.c: 68:     BORCON = 0x00;
  7283  1B3A  0022               	movlb	2	; select bank2
  7284  1B3B  0196               	clrf	22	;volatile
  7285  1B3C  0008               	return
  7286  1B3D                     __end_of_OSCILLATOR_Initialize:
  7287                           
  7288                           	psect	text12
  7289  1167                     __ptext12:	
  7290 ;; *************** function _EUSART_Initialize *****************
  7291 ;; Defined at:
  7292 ;;		line 66 in file "mcc_generated_files/eusart.c"
  7293 ;; Parameters:    Size  Location     Type
  7294 ;;		None
  7295 ;; Auto vars:     Size  Location     Type
  7296 ;;		None
  7297 ;; Return value:  Size  Location     Type
  7298 ;;                  1    wreg      void 
  7299 ;; Registers used:
  7300 ;;		wreg, status,2, status,0, pclath, cstack
  7301 ;; Tracked objects:
  7302 ;;		On entry : 1F/0
  7303 ;;		On exit  : 1F/1
  7304 ;;		Unchanged: 0/0
  7305 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7306 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7307 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7308 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7309 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7310 ;;Total ram usage:        0 bytes
  7311 ;; Hardware stack levels used: 1
  7312 ;; Hardware stack levels required when called: 5
  7313 ;; This function calls:
  7314 ;;		_EUSART_SetErrorHandler
  7315 ;;		_EUSART_SetFramingErrorHandler
  7316 ;;		_EUSART_SetOverrunErrorHandler
  7317 ;; This function is called by:
  7318 ;;		_SYSTEM_Initialize
  7319 ;; This function uses a non-reentrant model
  7320 ;;
  7321                           
  7322                           
  7323                           ;psect for function _EUSART_Initialize
  7324  1167                     _EUSART_Initialize:
  7325                           
  7326                           ;mcc_generated_files/eusart.c: 71:     BAUDCON = 0x08;
  7327                           
  7328                           ;incstack = 0
  7329                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
  7330  1167  3008               	movlw	8
  7331  1168  0023               	movlb	3	; select bank3
  7332  1169  009F               	movwf	31	;volatile
  7333                           
  7334                           ;mcc_generated_files/eusart.c: 74:     RCSTA = 0x90;
  7335  116A  3090               	movlw	144
  7336  116B  009D               	movwf	29	;volatile
  7337                           
  7338                           ;mcc_generated_files/eusart.c: 77:     TXSTA = 0x24;
  7339  116C  3024               	movlw	36
  7340  116D  009E               	movwf	30	;volatile
  7341                           
  7342                           ;mcc_generated_files/eusart.c: 80:     SPBRGL = 0x8A;
  7343  116E  308A               	movlw	138
  7344  116F  009B               	movwf	27	;volatile
  7345                           
  7346                           ;mcc_generated_files/eusart.c: 83:     SPBRGH = 0x00;
  7347  1170  019C               	clrf	28	;volatile
  7348                           
  7349                           ;mcc_generated_files/eusart.c: 86:     EUSART_SetFramingErrorHandler(EUSART_DefaultFrami
      +                          ngErrorHandler);
  7350  1171  3000               	movlw	0
  7351  1172  00F2               	movwf	EUSART_SetFramingErrorHandler@interruptHandler
  7352  1173  3000               	movlw	0
  7353  1174  00F3               	movwf	EUSART_SetFramingErrorHandler@interruptHandler+1
  7354  1175  319B  2314  3191   	fcall	_EUSART_SetFramingErrorHandler
  7355                           
  7356                           ;mcc_generated_files/eusart.c: 87:     EUSART_SetOverrunErrorHandler(EUSART_DefaultOverr
      +                          unErrorHandler);
  7357  1178  3000               	movlw	0
  7358  1179  00F2               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler
  7359  117A  3000               	movlw	0
  7360  117B  00F3               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler+1
  7361  117C  3188  2000  3191   	fcall	_EUSART_SetOverrunErrorHandler
  7362                           
  7363                           ;mcc_generated_files/eusart.c: 88:     EUSART_SetErrorHandler(EUSART_DefaultErrorHandler
      +                          );
  7364  117F  3000               	movlw	0
  7365  1180  00F2               	movwf	EUSART_SetErrorHandler@interruptHandler
  7366  1181  3000               	movlw	0
  7367  1182  00F3               	movwf	EUSART_SetErrorHandler@interruptHandler+1
  7368  1183  319B  230E         	fcall	_EUSART_SetErrorHandler
  7369                           
  7370                           ;mcc_generated_files/eusart.c: 90:     eusartRxLastError.status = 0;
  7371  1185  0021               	movlb	1	; select bank1
  7372  1186  01ED               	clrf	_eusartRxLastError^(0+128)	;volatile
  7373  1187  0008               	return
  7374  1188                     __end_of_EUSART_Initialize:
  7375                           
  7376                           	psect	text13
  7377  0800                     __ptext13:	
  7378 ;; *************** function _EUSART_SetOverrunErrorHandler *****************
  7379 ;; Defined at:
  7380 ;;		line 161 in file "mcc_generated_files/eusart.c"
  7381 ;; Parameters:    Size  Location     Type
  7382 ;;  interruptHan    2    2[COMMON] PTR FTN()void 
  7383 ;;		 -> EUSART_DefaultOverrunErrorHandler(1), 
  7384 ;; Auto vars:     Size  Location     Type
  7385 ;;		None
  7386 ;; Return value:  Size  Location     Type
  7387 ;;                  1    wreg      void 
  7388 ;; Registers used:
  7389 ;;		wreg
  7390 ;; Tracked objects:
  7391 ;;		On entry : 1F/1
  7392 ;;		On exit  : 1F/1
  7393 ;;		Unchanged: 0/0
  7394 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7395 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7396 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7397 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7398 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7399 ;;Total ram usage:        2 bytes
  7400 ;; Hardware stack levels used: 1
  7401 ;; Hardware stack levels required when called: 4
  7402 ;; This function calls:
  7403 ;;		Nothing
  7404 ;; This function is called by:
  7405 ;;		_EUSART_Initialize
  7406 ;; This function uses a non-reentrant model
  7407 ;;
  7408                           
  7409                           
  7410                           ;psect for function _EUSART_SetOverrunErrorHandler
  7411  0800                     _EUSART_SetOverrunErrorHandler:
  7412                           
  7413                           ;mcc_generated_files/eusart.c: 162:     EUSART_OverrunErrorHandler = interruptHandler;
  7414                           
  7415                           ;incstack = 0
  7416                           ; Regs used in _EUSART_SetOverrunErrorHandler: [wreg]
  7417  0800  0873               	movf	EUSART_SetOverrunErrorHandler@interruptHandler+1,w
  7418  0801  00E6               	movwf	(_EUSART_OverrunErrorHandler+1)^(0+128)
  7419  0802  0872               	movf	EUSART_SetOverrunErrorHandler@interruptHandler,w
  7420  0803  00E5               	movwf	_EUSART_OverrunErrorHandler^(0+128)
  7421  0804  0008               	return
  7422  0805                     __end_of_EUSART_SetOverrunErrorHandler:
  7423                           
  7424                           	psect	text14
  7425  1B14                     __ptext14:	
  7426 ;; *************** function _EUSART_SetFramingErrorHandler *****************
  7427 ;; Defined at:
  7428 ;;		line 157 in file "mcc_generated_files/eusart.c"
  7429 ;; Parameters:    Size  Location     Type
  7430 ;;  interruptHan    2    2[COMMON] PTR FTN()void 
  7431 ;;		 -> EUSART_DefaultFramingErrorHandler(1), 
  7432 ;; Auto vars:     Size  Location     Type
  7433 ;;		None
  7434 ;; Return value:  Size  Location     Type
  7435 ;;                  1    wreg      void 
  7436 ;; Registers used:
  7437 ;;		wreg
  7438 ;; Tracked objects:
  7439 ;;		On entry : 1F/3
  7440 ;;		On exit  : 1F/1
  7441 ;;		Unchanged: 0/0
  7442 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7443 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7444 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7445 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7446 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7447 ;;Total ram usage:        2 bytes
  7448 ;; Hardware stack levels used: 1
  7449 ;; Hardware stack levels required when called: 4
  7450 ;; This function calls:
  7451 ;;		Nothing
  7452 ;; This function is called by:
  7453 ;;		_EUSART_Initialize
  7454 ;; This function uses a non-reentrant model
  7455 ;;
  7456                           
  7457                           
  7458                           ;psect for function _EUSART_SetFramingErrorHandler
  7459  1B14                     _EUSART_SetFramingErrorHandler:
  7460                           
  7461                           ;mcc_generated_files/eusart.c: 158:     EUSART_FramingErrorHandler = interruptHandler;
  7462                           
  7463                           ;incstack = 0
  7464                           ; Regs used in _EUSART_SetFramingErrorHandler: [wreg]
  7465  1B14  0873               	movf	EUSART_SetFramingErrorHandler@interruptHandler+1,w
  7466  1B15  0021               	movlb	1	; select bank1
  7467  1B16  00E8               	movwf	(_EUSART_FramingErrorHandler+1)^(0+128)
  7468  1B17  0872               	movf	EUSART_SetFramingErrorHandler@interruptHandler,w
  7469  1B18  00E7               	movwf	_EUSART_FramingErrorHandler^(0+128)
  7470  1B19  0008               	return
  7471  1B1A                     __end_of_EUSART_SetFramingErrorHandler:
  7472                           
  7473                           	psect	text15
  7474  1B0E                     __ptext15:	
  7475 ;; *************** function _EUSART_SetErrorHandler *****************
  7476 ;; Defined at:
  7477 ;;		line 165 in file "mcc_generated_files/eusart.c"
  7478 ;; Parameters:    Size  Location     Type
  7479 ;;  interruptHan    2    2[COMMON] PTR FTN()void 
  7480 ;;		 -> EUSART_DefaultErrorHandler(1), 
  7481 ;; Auto vars:     Size  Location     Type
  7482 ;;		None
  7483 ;; Return value:  Size  Location     Type
  7484 ;;                  1    wreg      void 
  7485 ;; Registers used:
  7486 ;;		wreg
  7487 ;; Tracked objects:
  7488 ;;		On entry : 1F/1
  7489 ;;		On exit  : 1F/2
  7490 ;;		Unchanged: 0/0
  7491 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7492 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7493 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7494 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7495 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7496 ;;Total ram usage:        2 bytes
  7497 ;; Hardware stack levels used: 1
  7498 ;; Hardware stack levels required when called: 4
  7499 ;; This function calls:
  7500 ;;		Nothing
  7501 ;; This function is called by:
  7502 ;;		_EUSART_Initialize
  7503 ;; This function uses a non-reentrant model
  7504 ;;
  7505                           
  7506                           
  7507                           ;psect for function _EUSART_SetErrorHandler
  7508  1B0E                     _EUSART_SetErrorHandler:
  7509                           
  7510                           ;mcc_generated_files/eusart.c: 166:     EUSART_ErrorHandler = interruptHandler;
  7511                           
  7512                           ;incstack = 0
  7513                           ; Regs used in _EUSART_SetErrorHandler: [wreg]
  7514  1B0E  0873               	movf	EUSART_SetErrorHandler@interruptHandler+1,w
  7515  1B0F  0022               	movlb	2	; select bank2
  7516  1B10  00A1               	movwf	(_EUSART_ErrorHandler+1)^(0+256)
  7517  1B11  0872               	movf	EUSART_SetErrorHandler@interruptHandler,w
  7518  1B12  00A0               	movwf	_EUSART_ErrorHandler^(0+256)
  7519  1B13  0008               	return
  7520  1B14                     __end_of_EUSART_SetErrorHandler:
  7521                           
  7522                           	psect	text16
  7523  1CBC                     __ptext16:	
  7524 ;; *************** function _MTOUCH_Slider_isPressed *****************
  7525 ;; Defined at:
  7526 ;;		line 843 in file "mcc_generated_files/mtouch/mtouch_slider.c"
  7527 ;; Parameters:    Size  Location     Type
  7528 ;;  sliderName      1    wreg     enum E2914
  7529 ;; Auto vars:     Size  Location     Type
  7530 ;;  sliderName      1    3[COMMON] enum E2914
  7531 ;; Return value:  Size  Location     Type
  7532 ;;                  1    wreg      _Bool 
  7533 ;; Registers used:
  7534 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7535 ;; Tracked objects:
  7536 ;;		On entry : 1E/0
  7537 ;;		On exit  : 1E/0
  7538 ;;		Unchanged: 1E/0
  7539 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7540 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7541 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7542 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7543 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7544 ;;Total ram usage:        2 bytes
  7545 ;; Hardware stack levels used: 1
  7546 ;; Hardware stack levels required when called: 4
  7547 ;; This function calls:
  7548 ;;		Nothing
  7549 ;; This function is called by:
  7550 ;;		_main
  7551 ;; This function uses a non-reentrant model
  7552 ;;
  7553                           
  7554                           
  7555                           ;psect for function _MTOUCH_Slider_isPressed
  7556  1CBC                     _MTOUCH_Slider_isPressed:
  7557                           
  7558                           ;incstack = 0
  7559                           ; Regs used in _MTOUCH_Slider_isPressed: [wreg+fsr1l+fsr1h+status,2+status,0]
  7560                           ;MTOUCH_Slider_isPressed@sliderName stored from wreg
  7561  1CBC  00F3               	movwf	MTOUCH_Slider_isPressed@sliderName
  7562                           
  7563                           ;mcc_generated_files/mtouch/mtouch_slider.c: 843: _Bool MTOUCH_Slider_isPressed(enum mto
      +                          uch_slider_names sliderName);mcc_generated_files/mtouch/mtouch_slider.c: 844: {;mcc_gene
      +                          rated_files/mtouch/mtouch_slider.c: 845:     if (sliderName < 1u)
  7564  1CBD  0873               	movf	MTOUCH_Slider_isPressed@sliderName,w
  7565  1CBE  1D03               	btfss	3,2
  7566  1CBF  2CD1               	goto	l5434
  7567                           
  7568                           ;mcc_generated_files/mtouch/mtouch_slider.c: 846:     {;mcc_generated_files/mtouch/mtouc
      +                          h_slider.c: 847:         return ((mtouch_slider[sliderName].sliderStatus & (uint8_t)((ui
      +                          nt8_t)3u<<0u)) == MTOUCH_SLIDER_STATE_pressed) ? 1 : 0;
  7569  1CC0  0E73               	swapf	MTOUCH_Slider_isPressed@sliderName,w
  7570  1CC1  39F0               	andlw	240
  7571  1CC2  0773               	addwf	MTOUCH_Slider_isPressed@sliderName,w
  7572  1CC3  3ED0               	addlw	(low ((_mtouch_slider| 0+16)))& (0+255)
  7573  1CC4  0086               	movwf	6
  7574  1CC5  0187               	clrf	7
  7575  1CC6  3003               	movlw	3
  7576  1CC7  0501               	andwf	1,w
  7577  1CC8  00F2               	movwf	??_MTOUCH_Slider_isPressed
  7578  1CC9  3002               	movlw	2
  7579  1CCA  0672               	xorwf	??_MTOUCH_Slider_isPressed,w
  7580  1CCB  1D03               	btfss	3,2
  7581  1CCC  2CCF               	goto	u4740
  7582  1CCD  3001               	movlw	1
  7583  1CCE  0008               	return
  7584  1CCF                     u4740:
  7585  1CCF  3000               	movlw	0
  7586  1CD0  0008               	return
  7587  1CD1                     l5434:
  7588                           
  7589                           ;mcc_generated_files/mtouch/mtouch_slider.c: 850:         return 0;
  7590  1CD1  3000               	movlw	0
  7591  1CD2  0008               	return
  7592  1CD3                     __end_of_MTOUCH_Slider_isPressed:
  7593                           
  7594                           	psect	text17
  7595  1C2F                     __ptext17:	
  7596 ;; *************** function _MTOUCH_Slider_isPositionChanged *****************
  7597 ;; Defined at:
  7598 ;;		line 873 in file "mcc_generated_files/mtouch/mtouch_slider.c"
  7599 ;; Parameters:    Size  Location     Type
  7600 ;;  sliderName      1    wreg     enum E2914
  7601 ;; Auto vars:     Size  Location     Type
  7602 ;;  sliderName      1    2[COMMON] enum E2914
  7603 ;; Return value:  Size  Location     Type
  7604 ;;                  1    wreg      _Bool 
  7605 ;; Registers used:
  7606 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7607 ;; Tracked objects:
  7608 ;;		On entry : 1F/0
  7609 ;;		On exit  : 1F/0
  7610 ;;		Unchanged: 1F/0
  7611 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7612 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7613 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7614 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7615 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7616 ;;Total ram usage:        1 bytes
  7617 ;; Hardware stack levels used: 1
  7618 ;; Hardware stack levels required when called: 4
  7619 ;; This function calls:
  7620 ;;		Nothing
  7621 ;; This function is called by:
  7622 ;;		_main
  7623 ;; This function uses a non-reentrant model
  7624 ;;
  7625                           
  7626                           
  7627                           ;psect for function _MTOUCH_Slider_isPositionChanged
  7628  1C2F                     _MTOUCH_Slider_isPositionChanged:
  7629                           
  7630                           ;incstack = 0
  7631                           ; Regs used in _MTOUCH_Slider_isPositionChanged: [wreg+fsr1l+fsr1h+status,2+status,0]
  7632                           ;MTOUCH_Slider_isPositionChanged@sliderName stored from wreg
  7633  1C2F  00F2               	movwf	MTOUCH_Slider_isPositionChanged@sliderName
  7634                           
  7635                           ;mcc_generated_files/mtouch/mtouch_slider.c: 873: _Bool MTOUCH_Slider_isPositionChanged(
      +                          enum mtouch_slider_names sliderName);mcc_generated_files/mtouch/mtouch_slider.c: 874: {;
      +                          mcc_generated_files/mtouch/mtouch_slider.c: 875:     if (sliderName < 1u)
  7636  1C30  0872               	movf	MTOUCH_Slider_isPositionChanged@sliderName,w
  7637  1C31  1D03               	btfss	3,2
  7638  1C32  2C3F               	goto	l5410
  7639                           
  7640                           ;mcc_generated_files/mtouch/mtouch_slider.c: 876:     {;mcc_generated_files/mtouch/mtouc
      +                          h_slider.c: 877:         return (mtouch_slider[sliderName].sliderStatus & (uint8_t)((uin
      +                          t8_t)1u<<2u)) ? 1 : 0;
  7641  1C33  0E72               	swapf	MTOUCH_Slider_isPositionChanged@sliderName,w
  7642  1C34  39F0               	andlw	240
  7643  1C35  0772               	addwf	MTOUCH_Slider_isPositionChanged@sliderName,w
  7644  1C36  3ED0               	addlw	(low ((_mtouch_slider| 0+16)))& (0+255)
  7645  1C37  0086               	movwf	6
  7646  1C38  0187               	clrf	7
  7647  1C39  1D01               	btfss	1,2
  7648  1C3A  2C3D               	goto	u4700
  7649  1C3B  3001               	movlw	1
  7650  1C3C  0008               	return
  7651  1C3D                     u4700:
  7652  1C3D  3000               	movlw	0
  7653  1C3E  0008               	return
  7654  1C3F                     l5410:
  7655                           
  7656                           ;mcc_generated_files/mtouch/mtouch_slider.c: 880:         return 0;
  7657  1C3F  3000               	movlw	0
  7658  1C40  0008               	return
  7659  1C41                     __end_of_MTOUCH_Slider_isPositionChanged:
  7660                           
  7661                           	psect	text18
  7662  1C1D                     __ptext18:	
  7663 ;; *************** function _MTOUCH_Slider_Position_Get *****************
  7664 ;; Defined at:
  7665 ;;		line 904 in file "mcc_generated_files/mtouch/mtouch_slider.c"
  7666 ;; Parameters:    Size  Location     Type
  7667 ;;  sliderName      1    wreg     enum E2914
  7668 ;; Auto vars:     Size  Location     Type
  7669 ;;  sliderName      1    4[COMMON] enum E2914
  7670 ;; Return value:  Size  Location     Type
  7671 ;;                  2    2[COMMON] unsigned short 
  7672 ;; Registers used:
  7673 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7674 ;; Tracked objects:
  7675 ;;		On entry : 1F/0
  7676 ;;		On exit  : 1F/0
  7677 ;;		Unchanged: 1F/0
  7678 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7679 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7680 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7681 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7682 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7683 ;;Total ram usage:        3 bytes
  7684 ;; Hardware stack levels used: 1
  7685 ;; Hardware stack levels required when called: 4
  7686 ;; This function calls:
  7687 ;;		Nothing
  7688 ;; This function is called by:
  7689 ;;		_main
  7690 ;; This function uses a non-reentrant model
  7691 ;;
  7692                           
  7693                           
  7694                           ;psect for function _MTOUCH_Slider_Position_Get
  7695  1C1D                     _MTOUCH_Slider_Position_Get:
  7696                           
  7697                           ;incstack = 0
  7698                           ; Regs used in _MTOUCH_Slider_Position_Get: [wreg+fsr1l+fsr1h+status,2+status,0]
  7699                           ;MTOUCH_Slider_Position_Get@sliderName stored from wreg
  7700  1C1D  00F4               	movwf	MTOUCH_Slider_Position_Get@sliderName
  7701                           
  7702                           ;mcc_generated_files/mtouch/mtouch_slider.c: 904: uint16_t MTOUCH_Slider_Position_Get(en
      +                          um mtouch_slider_names sliderName);mcc_generated_files/mtouch/mtouch_slider.c: 905: {;mc
      +                          c_generated_files/mtouch/mtouch_slider.c: 906:     if (sliderName < 1u)
  7703  1C1E  0874               	movf	MTOUCH_Slider_Position_Get@sliderName,w
  7704  1C1F  1D03               	btfss	3,2
  7705  1C20  2C2C               	goto	l5422
  7706                           
  7707                           ;mcc_generated_files/mtouch/mtouch_slider.c: 907:     {;mcc_generated_files/mtouch/mtouc
      +                          h_slider.c: 908:         return (mtouch_slider[sliderName].sliderPosition);
  7708  1C21  0E74               	swapf	MTOUCH_Slider_Position_Get@sliderName,w
  7709  1C22  39F0               	andlw	240
  7710  1C23  0774               	addwf	MTOUCH_Slider_Position_Get@sliderName,w
  7711  1C24  3ECC               	addlw	(low ((_mtouch_slider| 0+12)))& (0+255)
  7712  1C25  0086               	movwf	6
  7713  1C26  0187               	clrf	7
  7714  1C27  3F40               	moviw [0]fsr1
  7715  1C28  00F2               	movwf	?_MTOUCH_Slider_Position_Get
  7716  1C29  3F41               	moviw [1]fsr1
  7717  1C2A  00F3               	movwf	?_MTOUCH_Slider_Position_Get+1
  7718  1C2B  0008               	return
  7719  1C2C                     l5422:
  7720                           
  7721                           ;mcc_generated_files/mtouch/mtouch_slider.c: 911:         return 0u;
  7722  1C2C  01F2               	clrf	?_MTOUCH_Slider_Position_Get
  7723  1C2D  01F3               	clrf	?_MTOUCH_Slider_Position_Get+1
  7724  1C2E  0008               	return
  7725  1C2F                     __end_of_MTOUCH_Slider_Position_Get:
  7726                           
  7727                           	psect	text19
  7728  11D0                     __ptext19:	
  7729 ;; *************** function _MTOUCH_Service_Mainloop *****************
  7730 ;; Defined at:
  7731 ;;		line 118 in file "mcc_generated_files/mtouch/mtouch.c"
  7732 ;; Parameters:    Size  Location     Type
  7733 ;;		None
  7734 ;; Auto vars:     Size  Location     Type
  7735 ;;		None
  7736 ;; Return value:  Size  Location     Type
  7737 ;;                  1    wreg      _Bool 
  7738 ;; Registers used:
  7739 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7740 ;; Tracked objects:
  7741 ;;		On entry : 0/1
  7742 ;;		On exit  : 1F/0
  7743 ;;		Unchanged: 0/0
  7744 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7745 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7746 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7747 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7748 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7749 ;;Total ram usage:        1 bytes
  7750 ;; Hardware stack levels used: 1
  7751 ;; Hardware stack levels required when called: 10
  7752 ;; This function calls:
  7753 ;;		_MTOUCH_Button_ServiceAll
  7754 ;;		_MTOUCH_Initialize
  7755 ;;		_MTOUCH_Sensor_SampleAll
  7756 ;;		_MTOUCH_Sensor_Sampled_ResetAll
  7757 ;;		_MTOUCH_Slider_ServiceAll
  7758 ;;		_MTOUCH_Tick
  7759 ;;		_MTOUCH_needReburst
  7760 ;; This function is called by:
  7761 ;;		_main
  7762 ;; This function uses a non-reentrant model
  7763 ;;
  7764                           
  7765                           
  7766                           ;psect for function _MTOUCH_Service_Mainloop
  7767  11D0                     _MTOUCH_Service_Mainloop:
  7768                           
  7769                           ;mcc_generated_files/mtouch/mtouch.c: 121:     if(mtouch_request_init)
  7770                           
  7771                           ;incstack = 0
  7772                           ; Regs used in _MTOUCH_Service_Mainloop: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7773  11D0  0020               	movlb	0	; select bank0
  7774  11D1  086D               	movf	_mtouch_request_init,w
  7775  11D2  1903               	btfsc	3,2
  7776  11D3  29D9               	goto	l7274
  7777                           
  7778                           ;mcc_generated_files/mtouch/mtouch.c: 122:     {;mcc_generated_files/mtouch/mtouch.c: 12
      +                          3:         MTOUCH_Initialize();
  7779  11D4  319C  248F  3191   	fcall	_MTOUCH_Initialize
  7780                           
  7781                           ;mcc_generated_files/mtouch/mtouch.c: 124:         mtouch_request_init = 0;
  7782  11D7  0020               	movlb	0	; select bank0
  7783  11D8  01ED               	clrf	_mtouch_request_init
  7784  11D9                     l7274:
  7785                           
  7786                           ;mcc_generated_files/mtouch/mtouch.c: 128:     if(mtouch_time_toScan)
  7787  11D9  086E               	movf	_mtouch_time_toScan,w
  7788  11DA  1903               	btfsc	3,2
  7789  11DB  29E2               	goto	l7278
  7790                           
  7791                           ;mcc_generated_files/mtouch/mtouch.c: 129:     {;mcc_generated_files/mtouch/mtouch.c: 13
      +                          0:         if(MTOUCH_Sensor_SampleAll() == 0)
  7792  11DC  319C  247B  3191   	fcall	_MTOUCH_Sensor_SampleAll
  7793  11DF  3A00               	xorlw	0
  7794  11E0  1D03               	skipz
  7795  11E1  29E4               	goto	l7282
  7796  11E2                     l7278:
  7797                           
  7798                           ;mcc_generated_files/mtouch/mtouch.c: 131:             return 0;
  7799  11E2  3000               	movlw	0
  7800  11E3  0008               	return
  7801  11E4                     l7282:
  7802                           
  7803                           ;mcc_generated_files/mtouch/mtouch.c: 133:             MTOUCH_Button_ServiceAll();
  7804  11E4  319B  23F9  3191   	fcall	_MTOUCH_Button_ServiceAll
  7805                           
  7806                           ;mcc_generated_files/mtouch/mtouch.c: 134:             MTOUCH_Slider_ServiceAll();
  7807  11E7  319B  238B  3191   	fcall	_MTOUCH_Slider_ServiceAll
  7808                           
  7809                           ;mcc_generated_files/mtouch/mtouch.c: 135:             mtouch_time_toScan = MTOUCH_needR
      +                          eburst();
  7810  11EA  319B  2399  3191   	fcall	_MTOUCH_needReburst
  7811  11ED  00D8               	movwf	??_MTOUCH_Service_Mainloop
  7812  11EE  0858               	movf	??_MTOUCH_Service_Mainloop,w
  7813  11EF  00EE               	movwf	_mtouch_time_toScan
  7814                           
  7815                           ;mcc_generated_files/mtouch/mtouch.c: 136:             MTOUCH_Sensor_Sampled_ResetAll();
  7816  11F0  319D  25A8  3191   	fcall	_MTOUCH_Sensor_Sampled_ResetAll
  7817                           
  7818                           ;mcc_generated_files/mtouch/mtouch.c: 137:             MTOUCH_Tick();
  7819  11F3  3187  27FD         	fcall	_MTOUCH_Tick
  7820                           
  7821                           ;mcc_generated_files/mtouch/mtouch.c: 138:             return 1;
  7822  11F5  3001               	movlw	1
  7823  11F6  0008               	return
  7824  11F7                     __end_of_MTOUCH_Service_Mainloop:
  7825                           
  7826                           	psect	text20
  7827  1B99                     __ptext20:	
  7828 ;; *************** function _MTOUCH_needReburst *****************
  7829 ;; Defined at:
  7830 ;;		line 161 in file "mcc_generated_files/mtouch/mtouch.c"
  7831 ;; Parameters:    Size  Location     Type
  7832 ;;		None
  7833 ;; Auto vars:     Size  Location     Type
  7834 ;;  needReburst     1    8[BANK0 ] _Bool 
  7835 ;; Return value:  Size  Location     Type
  7836 ;;                  1    wreg      _Bool 
  7837 ;; Registers used:
  7838 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7839 ;; Tracked objects:
  7840 ;;		On entry : 1F/0
  7841 ;;		On exit  : 1F/0
  7842 ;;		Unchanged: 0/0
  7843 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7844 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7845 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7846 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7847 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7848 ;;Total ram usage:        2 bytes
  7849 ;; Hardware stack levels used: 1
  7850 ;; Hardware stack levels required when called: 7
  7851 ;; This function calls:
  7852 ;;		_MTOUCH_Button_Reburst_Service
  7853 ;;		_MTOUCH_Slider_Reburst_Service
  7854 ;; This function is called by:
  7855 ;;		_MTOUCH_Service_Mainloop
  7856 ;; This function uses a non-reentrant model
  7857 ;;
  7858                           
  7859                           
  7860                           ;psect for function _MTOUCH_needReburst
  7861  1B99                     _MTOUCH_needReburst:
  7862                           
  7863                           ;mcc_generated_files/mtouch/mtouch.c: 163:     _Bool needReburst = 0;
  7864                           
  7865                           ;incstack = 0
  7866                           ; Regs used in _MTOUCH_needReburst: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7867  1B99  01A8               	clrf	MTOUCH_needReburst@needReburst
  7868                           
  7869                           ;mcc_generated_files/mtouch/mtouch.c: 164:     needReburst |= MTOUCH_Slider_Reburst_Serv
      +                          ice();
  7870  1B9A  319D  256F  319B   	fcall	_MTOUCH_Slider_Reburst_Service
  7871  1B9D  00A7               	movwf	??_MTOUCH_needReburst
  7872  1B9E  0827               	movf	??_MTOUCH_needReburst,w
  7873  1B9F  04A8               	iorwf	MTOUCH_needReburst@needReburst,f
  7874                           
  7875                           ;mcc_generated_files/mtouch/mtouch.c: 165:     needReburst |= MTOUCH_Button_Reburst_Serv
      +                          ice();
  7876  1BA0  3180  2002         	fcall	_MTOUCH_Button_Reburst_Service
  7877  1BA2  00A7               	movwf	??_MTOUCH_needReburst
  7878  1BA3  0827               	movf	??_MTOUCH_needReburst,w
  7879  1BA4  04A8               	iorwf	MTOUCH_needReburst@needReburst,f
  7880                           
  7881                           ;mcc_generated_files/mtouch/mtouch.c: 167:     return needReburst;
  7882  1BA5  0828               	movf	MTOUCH_needReburst@needReburst,w
  7883  1BA6  0008               	return
  7884  1BA7                     __end_of_MTOUCH_needReburst:
  7885                           
  7886                           	psect	text21
  7887  1D6F                     __ptext21:	
  7888 ;; *************** function _MTOUCH_Slider_Reburst_Service *****************
  7889 ;; Defined at:
  7890 ;;		line 998 in file "mcc_generated_files/mtouch/mtouch_slider.c"
  7891 ;; Parameters:    Size  Location     Type
  7892 ;;		None
  7893 ;; Auto vars:     Size  Location     Type
  7894 ;;  sliderName      1    6[BANK0 ] enum E2914
  7895 ;; Return value:  Size  Location     Type
  7896 ;;                  1    wreg      _Bool 
  7897 ;; Registers used:
  7898 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7899 ;; Tracked objects:
  7900 ;;		On entry : 1F/0
  7901 ;;		On exit  : 1F/0
  7902 ;;		Unchanged: 0/0
  7903 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7904 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7905 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7906 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7907 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7908 ;;Total ram usage:        2 bytes
  7909 ;; Hardware stack levels used: 1
  7910 ;; Hardware stack levels required when called: 6
  7911 ;; This function calls:
  7912 ;;		_MTOUCH_Button_Reburst_Request
  7913 ;;		_MTOUCH_Slider_isReburstRequest
  7914 ;; This function is called by:
  7915 ;;		_MTOUCH_needReburst
  7916 ;; This function uses a non-reentrant model
  7917 ;;
  7918                           
  7919                           
  7920                           ;psect for function _MTOUCH_Slider_Reburst_Service
  7921  1D6F                     _MTOUCH_Slider_Reburst_Service:
  7922                           
  7923                           ;mcc_generated_files/mtouch/mtouch_slider.c: 1000:     enum mtouch_slider_names sliderNa
      +                          me;;mcc_generated_files/mtouch/mtouch_slider.c: 1001:     for(sliderName = 0;sliderName 
      +                          < 1u;sliderName++)
  7924                           
  7925                           ;incstack = 0
  7926                           ; Regs used in _MTOUCH_Slider_Reburst_Service: [wreg+fsr1l+fsr1h+status,2+status,0+pclat
      +                          h+cstack]
  7927  1D6F  01A6               	clrf	MTOUCH_Slider_Reburst_Service@sliderName
  7928  1D70                     l7068:
  7929                           
  7930                           ;mcc_generated_files/mtouch/mtouch_slider.c: 1002:     {;mcc_generated_files/mtouch/mtou
      +                          ch_slider.c: 1003:         if(MTOUCH_Slider_isReburstRequest(sliderName))
  7931  1D70  0826               	movf	MTOUCH_Slider_Reburst_Service@sliderName,w
  7932  1D71  319C  240B  319D   	fcall	_MTOUCH_Slider_isReburstRequest
  7933  1D74  3A00               	xorlw	0
  7934  1D75  1903               	skipnz
  7935  1D76  2D81               	goto	l7072
  7936                           
  7937                           ;mcc_generated_files/mtouch/mtouch_slider.c: 1004:         {;mcc_generated_files/mtouch/
      +                          mtouch_slider.c: 1005:             MTOUCH_Button_Reburst_Request(mtouch_slider[sliderNam
      +                          e].startSegment);
  7938  1D77  0E26               	swapf	MTOUCH_Slider_Reburst_Service@sliderName,w
  7939  1D78  39F0               	andlw	240
  7940  1D79  0726               	addwf	MTOUCH_Slider_Reburst_Service@sliderName,w
  7941  1D7A  3EC2               	addlw	(low ((_mtouch_slider| 0+2)))& (0+255)
  7942  1D7B  0086               	movwf	6
  7943  1D7C  0187               	clrf	7
  7944  1D7D  0801               	movf	1,w
  7945  1D7E  319D  2553  319D   	fcall	_MTOUCH_Button_Reburst_Request
  7946  1D81                     l7072:
  7947                           
  7948                           ;mcc_generated_files/mtouch/mtouch_slider.c: 1007:     }
  7949  1D81  3001               	movlw	1
  7950  1D82  00A5               	movwf	??_MTOUCH_Slider_Reburst_Service
  7951  1D83  0825               	movf	??_MTOUCH_Slider_Reburst_Service,w
  7952  1D84  07A6               	addwf	MTOUCH_Slider_Reburst_Service@sliderName,f
  7953  1D85  0826               	movf	MTOUCH_Slider_Reburst_Service@sliderName,w
  7954  1D86  1903               	btfsc	3,2
  7955  1D87  2D70               	goto	l7068
  7956                           
  7957                           ;mcc_generated_files/mtouch/mtouch_slider.c: 1008:     return sliderGroupStatus & (uint8
      +                          _t)((uint8_t)1u<<7u);
  7958  1D88  0868               	movf	_sliderGroupStatus,w
  7959  1D89  3980               	andlw	128
  7960  1D8A  0008               	return
  7961  1D8B                     __end_of_MTOUCH_Slider_Reburst_Service:
  7962                           
  7963                           	psect	text22
  7964  1C0B                     __ptext22:	
  7965 ;; *************** function _MTOUCH_Slider_isReburstRequest *****************
  7966 ;; Defined at:
  7967 ;;		line 858 in file "mcc_generated_files/mtouch/mtouch_slider.c"
  7968 ;; Parameters:    Size  Location     Type
  7969 ;;  sliderName      1    wreg     enum E2914
  7970 ;; Auto vars:     Size  Location     Type
  7971 ;;  sliderName      1    2[COMMON] enum E2914
  7972 ;; Return value:  Size  Location     Type
  7973 ;;                  1    wreg      _Bool 
  7974 ;; Registers used:
  7975 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7976 ;; Tracked objects:
  7977 ;;		On entry : 1F/0
  7978 ;;		On exit  : 1F/0
  7979 ;;		Unchanged: 1F/0
  7980 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7981 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7982 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7983 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7984 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7985 ;;Total ram usage:        1 bytes
  7986 ;; Hardware stack levels used: 1
  7987 ;; Hardware stack levels required when called: 4
  7988 ;; This function calls:
  7989 ;;		Nothing
  7990 ;; This function is called by:
  7991 ;;		_MTOUCH_Slider_Reburst_Service
  7992 ;; This function uses a non-reentrant model
  7993 ;;
  7994                           
  7995                           
  7996                           ;psect for function _MTOUCH_Slider_isReburstRequest
  7997  1C0B                     _MTOUCH_Slider_isReburstRequest:
  7998                           
  7999                           ;incstack = 0
  8000                           ; Regs used in _MTOUCH_Slider_isReburstRequest: [wreg+fsr1l+fsr1h+status,2+status,0]
  8001                           ;MTOUCH_Slider_isReburstRequest@sliderName stored from wreg
  8002  1C0B  00F2               	movwf	MTOUCH_Slider_isReburstRequest@sliderName
  8003                           
  8004                           ;mcc_generated_files/mtouch/mtouch_slider.c: 858: _Bool MTOUCH_Slider_isReburstRequest(e
      +                          num mtouch_slider_names sliderName);mcc_generated_files/mtouch/mtouch_slider.c: 859: {;m
      +                          cc_generated_files/mtouch/mtouch_slider.c: 860:     if (sliderName < 1u)
  8005  1C0C  0872               	movf	MTOUCH_Slider_isReburstRequest@sliderName,w
  8006  1C0D  1D03               	btfss	3,2
  8007  1C0E  2C1B               	goto	l5014
  8008                           
  8009                           ;mcc_generated_files/mtouch/mtouch_slider.c: 861:     {;mcc_generated_files/mtouch/mtouc
      +                          h_slider.c: 862:         return (mtouch_slider[sliderName].sliderStatus & (uint8_t)((uin
      +                          t8_t)1u<<7u)) ? 1 : 0;
  8010  1C0F  0E72               	swapf	MTOUCH_Slider_isReburstRequest@sliderName,w
  8011  1C10  39F0               	andlw	240
  8012  1C11  0772               	addwf	MTOUCH_Slider_isReburstRequest@sliderName,w
  8013  1C12  3ED0               	addlw	(low ((_mtouch_slider| 0+16)))& (0+255)
  8014  1C13  0086               	movwf	6
  8015  1C14  0187               	clrf	7
  8016  1C15  1F81               	btfss	1,7
  8017  1C16  2C19               	goto	u4320
  8018  1C17  3001               	movlw	1
  8019  1C18  0008               	return
  8020  1C19                     u4320:
  8021  1C19  3000               	movlw	0
  8022  1C1A  0008               	return
  8023  1C1B                     l5014:
  8024                           
  8025                           ;mcc_generated_files/mtouch/mtouch_slider.c: 865:         return 0;
  8026  1C1B  3000               	movlw	0
  8027  1C1C  0008               	return
  8028  1C1D                     __end_of_MTOUCH_Slider_isReburstRequest:
  8029                           
  8030                           	psect	text23
  8031  1D53                     __ptext23:	
  8032 ;; *************** function _MTOUCH_Button_Reburst_Request *****************
  8033 ;; Defined at:
  8034 ;;		line 769 in file "mcc_generated_files/mtouch/mtouch_button.c"
  8035 ;; Parameters:    Size  Location     Type
  8036 ;;  button          1    wreg     enum E2936
  8037 ;; Auto vars:     Size  Location     Type
  8038 ;;  button          1    4[BANK0 ] enum E2936
  8039 ;; Return value:  Size  Location     Type
  8040 ;;                  1    wreg      void 
  8041 ;; Registers used:
  8042 ;;		wreg, status,2, status,0, pclath, cstack
  8043 ;; Tracked objects:
  8044 ;;		On entry : 1F/0
  8045 ;;		On exit  : 1F/0
  8046 ;;		Unchanged: 0/0
  8047 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8048 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8049 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8050 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8051 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8052 ;;Total ram usage:        5 bytes
  8053 ;; Hardware stack levels used: 1
  8054 ;; Hardware stack levels required when called: 5
  8055 ;; This function calls:
  8056 ;;		_Button_Reburst_Request
  8057 ;;		___wmul
  8058 ;; This function is called by:
  8059 ;;		_MTOUCH_Slider_Reburst_Service
  8060 ;; This function uses a non-reentrant model
  8061 ;;
  8062                           
  8063                           
  8064                           ;psect for function _MTOUCH_Button_Reburst_Request
  8065  1D53                     _MTOUCH_Button_Reburst_Request:
  8066                           
  8067                           ;incstack = 0
  8068                           ; Regs used in _MTOUCH_Button_Reburst_Request: [wreg+status,2+status,0+pclath+cstack]
  8069                           ;MTOUCH_Button_Reburst_Request@button stored from wreg
  8070  1D53  00A4               	movwf	MTOUCH_Button_Reburst_Request@button
  8071                           
  8072                           ;mcc_generated_files/mtouch/mtouch_button.c: 769: void MTOUCH_Button_Reburst_Request(enu
      +                          m mtouch_button_names button);mcc_generated_files/mtouch/mtouch_button.c: 770: {;mcc_gen
      +                          erated_files/mtouch/mtouch_button.c: 771:     Button_Reburst_Request(&mtouch_button[butt
      +                          on]);
  8073  1D54  0824               	movf	MTOUCH_Button_Reburst_Request@button,w
  8074  1D55  00A0               	movwf	??_MTOUCH_Button_Reburst_Request
  8075  1D56  01A1               	clrf	??_MTOUCH_Button_Reburst_Request+1
  8076  1D57  0820               	movf	??_MTOUCH_Button_Reburst_Request,w
  8077  1D58  00F2               	movwf	___wmul@multiplier
  8078  1D59  0821               	movf	??_MTOUCH_Button_Reburst_Request+1,w
  8079  1D5A  00F3               	movwf	___wmul@multiplier+1
  8080  1D5B  3011               	movlw	17
  8081  1D5C  00F4               	movwf	___wmul@multiplicand
  8082  1D5D  3000               	movlw	0
  8083  1D5E  00F5               	movwf	___wmul@multiplicand+1
  8084  1D5F  319D  2538  319D   	fcall	___wmul
  8085  1D62  309B               	movlw	155
  8086  1D63  00A2               	movwf	??_MTOUCH_Button_Reburst_Request+2
  8087  1D64  3023               	movlw	35
  8088  1D65  00A3               	movwf	??_MTOUCH_Button_Reburst_Request+3
  8089  1D66  0872               	movf	?___wmul,w
  8090  1D67  0722               	addwf	??_MTOUCH_Button_Reburst_Request+2,w
  8091  1D68  00F8               	movwf	Button_Reburst_Request@button
  8092  1D69  0873               	movf	?___wmul+1,w
  8093  1D6A  3D23               	addwfc	??_MTOUCH_Button_Reburst_Request+3,w
  8094  1D6B  00F9               	movwf	Button_Reburst_Request@button+1
  8095  1D6C  319B  2302         	fcall	_Button_Reburst_Request
  8096  1D6E  0008               	return
  8097  1D6F                     __end_of_MTOUCH_Button_Reburst_Request:
  8098                           
  8099                           	psect	text24
  8100  0002                     __ptext24:	
  8101 ;; *************** function _MTOUCH_Button_Reburst_Service *****************
  8102 ;; Defined at:
  8103 ;;		line 774 in file "mcc_generated_files/mtouch/mtouch_button.c"
  8104 ;; Parameters:    Size  Location     Type
  8105 ;;		None
  8106 ;; Auto vars:     Size  Location     Type
  8107 ;;		None
  8108 ;; Return value:  Size  Location     Type
  8109 ;;                  1    wreg      _Bool 
  8110 ;; Registers used:
  8111 ;;		wreg
  8112 ;; Tracked objects:
  8113 ;;		On entry : 1F/0
  8114 ;;		On exit  : 1F/0
  8115 ;;		Unchanged: 1F/0
  8116 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8117 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8118 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8119 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8120 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8121 ;;Total ram usage:        0 bytes
  8122 ;; Hardware stack levels used: 1
  8123 ;; Hardware stack levels required when called: 4
  8124 ;; This function calls:
  8125 ;;		Nothing
  8126 ;; This function is called by:
  8127 ;;		_MTOUCH_needReburst
  8128 ;; This function uses a non-reentrant model
  8129 ;;
  8130                           
  8131                           
  8132                           ;psect for function _MTOUCH_Button_Reburst_Service
  8133  0002                     _MTOUCH_Button_Reburst_Service:
  8134                           
  8135                           ;mcc_generated_files/mtouch/mtouch_button.c: 776:     return button_reburst_request;
  8136                           
  8137                           ;incstack = 0
  8138                           ; Regs used in _MTOUCH_Button_Reburst_Service: [wreg]
  8139  0002  087B               	movf	_button_reburst_request,w
  8140  0003  0008               	return
  8141  0004                     __end_of_MTOUCH_Button_Reburst_Service:
  8142                           
  8143                           	psect	text25
  8144  07FD                     __ptext25:	
  8145 ;; *************** function _MTOUCH_Tick *****************
  8146 ;; Defined at:
  8147 ;;		line 151 in file "mcc_generated_files/mtouch/mtouch.c"
  8148 ;; Parameters:    Size  Location     Type
  8149 ;;		None
  8150 ;; Auto vars:     Size  Location     Type
  8151 ;;		None
  8152 ;; Return value:  Size  Location     Type
  8153 ;;                  1    wreg      void 
  8154 ;; Registers used:
  8155 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8156 ;; Tracked objects:
  8157 ;;		On entry : 1F/0
  8158 ;;		On exit  : 1F/0
  8159 ;;		Unchanged: 0/0
  8160 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8161 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8162 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8163 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8164 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8165 ;;Total ram usage:        0 bytes
  8166 ;; Hardware stack levels used: 1
  8167 ;; Hardware stack levels required when called: 8
  8168 ;; This function calls:
  8169 ;;		_MTOUCH_Button_Tick
  8170 ;; This function is called by:
  8171 ;;		_MTOUCH_Service_Mainloop
  8172 ;; This function uses a non-reentrant model
  8173 ;;
  8174                           
  8175                           
  8176                           ;psect for function _MTOUCH_Tick
  8177  07FD                     _MTOUCH_Tick:
  8178                           
  8179                           ;mcc_generated_files/mtouch/mtouch.c: 153:     MTOUCH_Button_Tick();
  8180                           
  8181                           ;incstack = 0
  8182                           ; Regs used in _MTOUCH_Tick: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8183  07FD  3192  221F         	fcall	_MTOUCH_Button_Tick
  8184  07FF  0008               	return
  8185  0800                     __end_of_MTOUCH_Tick:
  8186                           
  8187                           	psect	text26
  8188  121F                     __ptext26:	
  8189 ;; *************** function _MTOUCH_Button_Tick *****************
  8190 ;; Defined at:
  8191 ;;		line 428 in file "mcc_generated_files/mtouch/mtouch_button.c"
  8192 ;; Parameters:    Size  Location     Type
  8193 ;;		None
  8194 ;; Auto vars:     Size  Location     Type
  8195 ;;  i               1   14[BANK0 ] unsigned char 
  8196 ;; Return value:  Size  Location     Type
  8197 ;;                  1    wreg      void 
  8198 ;; Registers used:
  8199 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8200 ;; Tracked objects:
  8201 ;;		On entry : 1F/0
  8202 ;;		On exit  : 1F/0
  8203 ;;		Unchanged: 0/0
  8204 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8205 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8206 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8207 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8208 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8209 ;;Total ram usage:        7 bytes
  8210 ;; Hardware stack levels used: 1
  8211 ;; Hardware stack levels required when called: 7
  8212 ;; This function calls:
  8213 ;;		_Button_Tick_helper
  8214 ;;		___wmul
  8215 ;; This function is called by:
  8216 ;;		_MTOUCH_Tick
  8217 ;; This function uses a non-reentrant model
  8218 ;;
  8219                           
  8220                           
  8221                           ;psect for function _MTOUCH_Button_Tick
  8222  121F                     _MTOUCH_Button_Tick:
  8223                           
  8224                           ;mcc_generated_files/mtouch/mtouch_button.c: 430:     uint8_t i;;mcc_generated_files/mto
      +                          uch/mtouch_button.c: 431:     for (i = 0; i < 5u; i++)
  8225                           
  8226                           ;incstack = 0
  8227                           ; Regs used in _MTOUCH_Button_Tick: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8228  121F  01AE               	clrf	MTOUCH_Button_Tick@i
  8229  1220                     l7054:
  8230                           
  8231                           ;mcc_generated_files/mtouch/mtouch_button.c: 432:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 433:         Button_Tick_helper(&mtouch_button[i]);
  8232  1220  082E               	movf	MTOUCH_Button_Tick@i,w
  8233  1221  00A8               	movwf	??_MTOUCH_Button_Tick
  8234  1222  01A9               	clrf	??_MTOUCH_Button_Tick+1
  8235  1223  0828               	movf	??_MTOUCH_Button_Tick,w
  8236  1224  00F2               	movwf	___wmul@multiplier
  8237  1225  0829               	movf	??_MTOUCH_Button_Tick+1,w
  8238  1226  00F3               	movwf	___wmul@multiplier+1
  8239  1227  3011               	movlw	17
  8240  1228  00F4               	movwf	___wmul@multiplicand
  8241  1229  3000               	movlw	0
  8242  122A  00F5               	movwf	___wmul@multiplicand+1
  8243  122B  319D  2538  3192   	fcall	___wmul
  8244  122E  309B               	movlw	155
  8245  122F  00AA               	movwf	??_MTOUCH_Button_Tick+2
  8246  1230  3023               	movlw	35
  8247  1231  00AB               	movwf	??_MTOUCH_Button_Tick+3
  8248  1232  0872               	movf	?___wmul,w
  8249  1233  072A               	addwf	??_MTOUCH_Button_Tick+2,w
  8250  1234  00AC               	movwf	_MTOUCH_Button_Tick$2890
  8251  1235  0873               	movf	?___wmul+1,w
  8252  1236  3D2B               	addwfc	??_MTOUCH_Button_Tick+3,w
  8253  1237  00AD               	movwf	_MTOUCH_Button_Tick$2890+1
  8254                           
  8255                           ;mcc_generated_files/mtouch/mtouch_button.c: 432:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 433:         Button_Tick_helper(&mtouch_button[i]);
  8256  1238  082D               	movf	_MTOUCH_Button_Tick$2890+1,w
  8257  1239  00A5               	movwf	Button_Tick_helper@button+1
  8258  123A  082C               	movf	_MTOUCH_Button_Tick$2890,w
  8259  123B  00A4               	movwf	Button_Tick_helper@button
  8260  123C  3196  261C  3192   	fcall	_Button_Tick_helper
  8261                           
  8262                           ;mcc_generated_files/mtouch/mtouch_button.c: 434:     }
  8263  123F  3001               	movlw	1
  8264  1240  00A8               	movwf	??_MTOUCH_Button_Tick
  8265  1241  0828               	movf	??_MTOUCH_Button_Tick,w
  8266  1242  07AE               	addwf	MTOUCH_Button_Tick@i,f
  8267  1243  3005               	movlw	5
  8268  1244  022E               	subwf	MTOUCH_Button_Tick@i,w
  8269  1245  1803               	btfsc	3,0
  8270  1246  0008               	return
  8271  1247  2A20               	goto	l7054
  8272  1248                     __end_of_MTOUCH_Button_Tick:
  8273                           
  8274                           	psect	text27
  8275  161C                     __ptext27:	
  8276 ;; *************** function _Button_Tick_helper *****************
  8277 ;; Defined at:
  8278 ;;		line 436 in file "mcc_generated_files/mtouch/mtouch_button.c"
  8279 ;; Parameters:    Size  Location     Type
  8280 ;;  button          2    4[BANK0 ] PTR struct .
  8281 ;;		 -> mtouch_button(85), 
  8282 ;; Auto vars:     Size  Location     Type
  8283 ;;		None
  8284 ;; Return value:  Size  Location     Type
  8285 ;;                  1    wreg      void 
  8286 ;; Registers used:
  8287 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8288 ;; Tracked objects:
  8289 ;;		On entry : 1F/0
  8290 ;;		On exit  : 1F/0
  8291 ;;		Unchanged: 0/0
  8292 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8293 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8294 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8295 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8296 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8297 ;;Total ram usage:        4 bytes
  8298 ;; Hardware stack levels used: 1
  8299 ;; Hardware stack levels required when called: 6
  8300 ;; This function calls:
  8301 ;;		_MTOUCH_Sensor_Enable
  8302 ;; This function is called by:
  8303 ;;		_MTOUCH_Button_Tick
  8304 ;; This function uses a non-reentrant model
  8305 ;;
  8306                           
  8307                           
  8308                           ;psect for function _Button_Tick_helper
  8309  161C                     _Button_Tick_helper:
  8310                           
  8311                           ;mcc_generated_files/mtouch/mtouch_button.c: 436: static void Button_Tick_helper(mtouch_
      +                          button_t* button);mcc_generated_files/mtouch/mtouch_button.c: 437: {;mcc_generated_files
      +                          /mtouch/mtouch_button.c: 439:     if ((button->state) == MTOUCH_BUTTON_STATE_pressed)
  8312                           
  8313                           ;incstack = 0
  8314                           ; Regs used in _Button_Tick_helper: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8315  161C  0824               	movf	Button_Tick_helper@button,w
  8316  161D  0086               	movwf	6
  8317  161E  0825               	movf	Button_Tick_helper@button+1,w
  8318  161F  0087               	movwf	7
  8319  1620  3142               	addfsr 1,2
  8320  1621  3003               	movlw	3
  8321  1622  0601               	xorwf	1,w
  8322  1623  1D03               	btfss	3,2
  8323  1624  2E42               	goto	l6914
  8324                           
  8325                           ;mcc_generated_files/mtouch/mtouch_button.c: 440:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 441:         (button->counter)++;
  8326  1625  0824               	movf	Button_Tick_helper@button,w
  8327  1626  0086               	movwf	6
  8328  1627  0825               	movf	Button_Tick_helper@button+1,w
  8329  1628  0087               	movwf	7
  8330  1629  314B               	addfsr 1,11
  8331  162A  3001               	movlw	1
  8332  162B  0781               	addwf	1,f
  8333  162C  3141               	addfsr 1,1
  8334  162D  1803               	skipnc
  8335  162E  0A81               	incf	1,f
  8336                           
  8337                           ;mcc_generated_files/mtouch/mtouch_button.c: 442:         if (button->counter == (mtouch
      +                          _button_statecounter_t)0)
  8338  162F  0824               	movf	Button_Tick_helper@button,w
  8339  1630  0086               	movwf	6
  8340  1631  0825               	movf	Button_Tick_helper@button+1,w
  8341  1632  0087               	movwf	7
  8342  1633  314B               	addfsr 1,11
  8343  1634  0016               	moviw fsr1++
  8344  1635  0401               	iorwf	1,w
  8345  1636  1D03               	btfss	3,2
  8346  1637  0008               	return
  8347                           
  8348                           ;mcc_generated_files/mtouch/mtouch_button.c: 443:         {;mcc_generated_files/mtouch/m
      +                          touch_button.c: 444:             button->counter = (mtouch_button_statecounter_t)0xFFFF;
  8349  1638  0824               	movf	Button_Tick_helper@button,w
  8350  1639  0086               	movwf	6
  8351  163A  0825               	movf	Button_Tick_helper@button+1,w
  8352  163B  0087               	movwf	7
  8353  163C  314B               	addfsr 1,11
  8354  163D  30FF               	movlw	255
  8355  163E  3FC0               	movwi [0]fsr1
  8356  163F  30FF               	movlw	255
  8357  1640  3FC1               	movwi [1]fsr1
  8358  1641  0008               	return
  8359  1642                     l6914:
  8360  1642  0824               	movf	Button_Tick_helper@button,w
  8361  1643  0086               	movwf	6
  8362  1644  0825               	movf	Button_Tick_helper@button+1,w
  8363  1645  0087               	movwf	7
  8364  1646  3142               	addfsr 1,2
  8365  1647  3005               	movlw	5
  8366  1648  0601               	xorwf	1,w
  8367  1649  1D03               	btfss	3,2
  8368  164A  0008               	return
  8369                           
  8370                           ;mcc_generated_files/mtouch/mtouch_button.c: 449:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 450:         (button->counter)++;
  8371  164B  0824               	movf	Button_Tick_helper@button,w
  8372  164C  0086               	movwf	6
  8373  164D  0825               	movf	Button_Tick_helper@button+1,w
  8374  164E  0087               	movwf	7
  8375  164F  314B               	addfsr 1,11
  8376  1650  3001               	movlw	1
  8377  1651  0781               	addwf	1,f
  8378  1652  3141               	addfsr 1,1
  8379  1653  1803               	skipnc
  8380  1654  0A81               	incf	1,f
  8381                           
  8382                           ;mcc_generated_files/mtouch/mtouch_button.c: 451:         if(button->counter >= ((mtouch
      +                          _button_baselinecounter_t)64u))
  8383  1655  0824               	movf	Button_Tick_helper@button,w
  8384  1656  0086               	movwf	6
  8385  1657  0825               	movf	Button_Tick_helper@button+1,w
  8386  1658  0087               	movwf	7
  8387  1659  314B               	addfsr 1,11
  8388  165A  3F40               	moviw [0]fsr1
  8389  165B  00A6               	movwf	??_Button_Tick_helper
  8390  165C  3F41               	moviw [1]fsr1
  8391  165D  00A7               	movwf	??_Button_Tick_helper+1
  8392  165E  3000               	movlw	0
  8393  165F  0227               	subwf	??_Button_Tick_helper+1,w
  8394  1660  3040               	movlw	64
  8395  1661  1903               	skipnz
  8396  1662  0226               	subwf	??_Button_Tick_helper,w
  8397  1663  1C03               	skipc
  8398  1664  0008               	return
  8399                           
  8400                           ;mcc_generated_files/mtouch/mtouch_button.c: 452:         {;mcc_generated_files/mtouch/m
      +                          touch_button.c: 453:             button->counter = (mtouch_button_statecounter_t)0;
  8401  1665  0824               	movf	Button_Tick_helper@button,w
  8402  1666  0086               	movwf	6
  8403  1667  0825               	movf	Button_Tick_helper@button+1,w
  8404  1668  0087               	movwf	7
  8405  1669  314B               	addfsr 1,11
  8406  166A  3000               	movlw	0
  8407  166B  3FC0               	movwi [0]fsr1
  8408  166C  3FC1               	movwi [1]fsr1
  8409                           
  8410                           ;mcc_generated_files/mtouch/mtouch_button.c: 454:             MTOUCH_Sensor_Enable(butto
      +                          n->sensor);
  8411  166D  0824               	movf	Button_Tick_helper@button,w
  8412  166E  0086               	movwf	6
  8413  166F  0825               	movf	Button_Tick_helper@button+1,w
  8414  1670  0087               	movwf	7
  8415  1671  3141               	addfsr 1,1
  8416  1672  0801               	movf	1,w
  8417  1673  319D  25E3         	fcall	_MTOUCH_Sensor_Enable
  8418  1675  0008               	return
  8419  1676                     __end_of_Button_Tick_helper:
  8420                           
  8421                           	psect	text28
  8422  1B8B                     __ptext28:	
  8423 ;; *************** function _MTOUCH_Slider_ServiceAll *****************
  8424 ;; Defined at:
  8425 ;;		line 980 in file "mcc_generated_files/mtouch/mtouch_slider.c"
  8426 ;; Parameters:    Size  Location     Type
  8427 ;;		None
  8428 ;; Auto vars:     Size  Location     Type
  8429 ;;  slider          1   55[BANK0 ] enum E2914
  8430 ;; Return value:  Size  Location     Type
  8431 ;;                  1    wreg      void 
  8432 ;; Registers used:
  8433 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8434 ;; Tracked objects:
  8435 ;;		On entry : 1F/0
  8436 ;;		On exit  : 1F/0
  8437 ;;		Unchanged: 0/0
  8438 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8439 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8440 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8441 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8442 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8443 ;;Total ram usage:        2 bytes
  8444 ;; Hardware stack levels used: 1
  8445 ;; Hardware stack levels required when called: 9
  8446 ;; This function calls:
  8447 ;;		_Slider_Service
  8448 ;; This function is called by:
  8449 ;;		_MTOUCH_Service_Mainloop
  8450 ;; This function uses a non-reentrant model
  8451 ;;
  8452                           
  8453                           
  8454                           ;psect for function _MTOUCH_Slider_ServiceAll
  8455  1B8B                     _MTOUCH_Slider_ServiceAll:
  8456                           
  8457                           ;mcc_generated_files/mtouch/mtouch_slider.c: 982:     enum mtouch_slider_names slider;;m
      +                          cc_generated_files/mtouch/mtouch_slider.c: 985:     sliderGroupStatus = 0u;
  8458                           
  8459                           ;incstack = 0
  8460                           ; Regs used in _MTOUCH_Slider_ServiceAll: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8461  1B8B  01E8               	clrf	_sliderGroupStatus
  8462                           
  8463                           ;mcc_generated_files/mtouch/mtouch_slider.c: 987:     for (slider = 0u; slider < 1u; sli
      +                          der++)
  8464  1B8C  01D7               	clrf	MTOUCH_Slider_ServiceAll@slider
  8465  1B8D                     l7236:
  8466                           
  8467                           ;mcc_generated_files/mtouch/mtouch_slider.c: 988:     {;mcc_generated_files/mtouch/mtouc
      +                          h_slider.c: 989:         Slider_Service(slider);
  8468  1B8D  0857               	movf	MTOUCH_Slider_ServiceAll@slider,w
  8469  1B8E  3186  26F5  319B   	fcall	_Slider_Service
  8470                           
  8471                           ;mcc_generated_files/mtouch/mtouch_slider.c: 990:     }
  8472  1B91  3001               	movlw	1
  8473  1B92  00D6               	movwf	??_MTOUCH_Slider_ServiceAll
  8474  1B93  0856               	movf	??_MTOUCH_Slider_ServiceAll,w
  8475  1B94  07D7               	addwf	MTOUCH_Slider_ServiceAll@slider,f
  8476  1B95  0857               	movf	MTOUCH_Slider_ServiceAll@slider,w
  8477  1B96  1D03               	btfss	3,2
  8478  1B97  0008               	return
  8479  1B98  2B8D               	goto	l7236
  8480  1B99                     __end_of_MTOUCH_Slider_ServiceAll:
  8481                           
  8482                           	psect	text29
  8483  06F5                     __ptext29:	
  8484 ;; *************** function _Slider_Service *****************
  8485 ;; Defined at:
  8486 ;;		line 690 in file "mcc_generated_files/mtouch/mtouch_slider.c"
  8487 ;; Parameters:    Size  Location     Type
  8488 ;;  sliderName      1    wreg     enum E2914
  8489 ;; Auto vars:     Size  Location     Type
  8490 ;;  sliderName      1   52[BANK0 ] enum E2914
  8491 ;;  slider          1   53[BANK0 ] PTR struct .
  8492 ;;		 -> mtouch_slider(17), 
  8493 ;;  segment         2   50[BANK0 ] unsigned short 
  8494 ;;  position        2   47[BANK0 ] unsigned short 
  8495 ;;  status          1   49[BANK0 ] unsigned char 
  8496 ;;  valid_contac    1   46[BANK0 ] unsigned char 
  8497 ;;  group_status    1   45[BANK0 ] unsigned char 
  8498 ;; Return value:  Size  Location     Type
  8499 ;;                  1    wreg      void 
  8500 ;; Registers used:
  8501 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8502 ;; Tracked objects:
  8503 ;;		On entry : 1F/0
  8504 ;;		On exit  : 1F/0
  8505 ;;		Unchanged: 0/0
  8506 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8507 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8508 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8509 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8510 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8511 ;;Total ram usage:       13 bytes
  8512 ;; Hardware stack levels used: 1
  8513 ;; Hardware stack levels required when called: 8
  8514 ;; This function calls:
  8515 ;;		_MTOUCH_Button_isPressed
  8516 ;;		_Slider_DefaultCallback
  8517 ;;		_calculate_contact_size
  8518 ;;		_calculate_position
  8519 ;; This function is called by:
  8520 ;;		_MTOUCH_Slider_ServiceAll
  8521 ;; This function uses a non-reentrant model
  8522 ;;
  8523                           
  8524                           
  8525                           ;psect for function _Slider_Service
  8526  06F5                     _Slider_Service:
  8527                           
  8528                           ;incstack = 0
  8529                           ; Regs used in _Slider_Service: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8530                           ;Slider_Service@sliderName stored from wreg
  8531  06F5  00D4               	movwf	Slider_Service@sliderName
  8532                           
  8533                           ;mcc_generated_files/mtouch/mtouch_slider.c: 690: static void Slider_Service(enum mtouch
      +                          _slider_names sliderName);mcc_generated_files/mtouch/mtouch_slider.c: 691: {;mcc_generat
      +                          ed_files/mtouch/mtouch_slider.c: 693:     uint16_t segment, position;;mcc_generated_file
      +                          s/mtouch/mtouch_slider.c: 694:     uint8_t status = 0u, group_status = 0u;
  8534  06F6  01D1               	clrf	Slider_Service@status
  8535  06F7  01CD               	clrf	Slider_Service@group_status
  8536                           
  8537                           ;mcc_generated_files/mtouch/mtouch_slider.c: 695:     uint8_t valid_contact_found = 0u;
  8538  06F8  01CE               	clrf	Slider_Service@valid_contact_found
  8539                           
  8540                           ;mcc_generated_files/mtouch/mtouch_slider.c: 697:     if (sliderName < 1u)
  8541  06F9  0854               	movf	Slider_Service@sliderName,w
  8542  06FA  1D03               	btfss	3,2
  8543  06FB  0008               	return
  8544                           
  8545                           ;mcc_generated_files/mtouch/mtouch_slider.c: 698:     {;mcc_generated_files/mtouch/mtouc
      +                          h_slider.c: 700:         mtouch_slider_t* slider = &mtouch_slider[sliderName];
  8546  06FC  0E54               	swapf	Slider_Service@sliderName,w
  8547  06FD  39F0               	andlw	240
  8548  06FE  0754               	addwf	Slider_Service@sliderName,w
  8549  06FF  3EC0               	addlw	(low (_mtouch_slider| 0))& (0+255)
  8550  0700  00C9               	movwf	??_Slider_Service
  8551  0701  0849               	movf	??_Slider_Service,w
  8552  0702  00D5               	movwf	Slider_Service@slider
  8553                           
  8554                           ;mcc_generated_files/mtouch/mtouch_slider.c: 702:         if ((slider->type <= MTOUCH_TY
      +                          PE_WHEEL) || (slider->resolDeadband <= 0xCFu))
  8555  0703  0A55               	incf	Slider_Service@slider,w
  8556  0704  0086               	movwf	6
  8557  0705  0187               	clrf	7
  8558  0706  3002               	movlw	2
  8559  0707  0201               	subwf	1,w
  8560  0708  1C03               	skipc
  8561  0709  2F12               	goto	l7130
  8562  070A  0855               	movf	Slider_Service@slider,w
  8563  070B  3E04               	addlw	4
  8564  070C  0086               	movwf	6
  8565  070D  0187               	clrf	7
  8566  070E  30D0               	movlw	208
  8567  070F  0201               	subwf	1,w
  8568  0710  1803               	skipnc
  8569  0711  0008               	return
  8570  0712                     l7130:
  8571                           
  8572                           ;mcc_generated_files/mtouch/mtouch_slider.c: 703:         {;mcc_generated_files/mtouch/m
      +                          touch_slider.c: 705:             resol_bits = (slider->resolDeadband & 0xF0u) >> 4u;
  8573  0712  0855               	movf	Slider_Service@slider,w
  8574  0713  3E04               	addlw	4
  8575  0714  0086               	movwf	6
  8576  0715  0187               	clrf	7
  8577  0716  0801               	movf	1,w
  8578  0717  00C9               	movwf	??_Slider_Service
  8579  0718  3004               	movlw	4
  8580  0719                     u7325:
  8581  0719  36C9               	lsrf	??_Slider_Service,f
  8582  071A  0B89               	decfsz	9,f
  8583  071B  2F19               	goto	u7325
  8584  071C  0849               	movf	??_Slider_Service,w
  8585  071D  390F               	andlw	15
  8586  071E  00CA               	movwf	??_Slider_Service+1
  8587  071F  084A               	movf	??_Slider_Service+1,w
  8588  0720  00EF               	movwf	_resol_bits
  8589                           
  8590                           ;mcc_generated_files/mtouch/mtouch_slider.c: 706:             resol_value = (uint16_t) (
      +                          (uint16_t) 1u << resol_bits);
  8591  0721  3001               	movlw	1
  8592  0722  00C9               	movwf	??_Slider_Service
  8593  0723  3000               	movlw	0
  8594  0724  00CA               	movwf	??_Slider_Service+1
  8595  0725  0A6F               	incf	_resol_bits,w
  8596  0726  2F29               	goto	u7334
  8597  0727                     u7335:
  8598  0727  35C9               	lslf	??_Slider_Service,f
  8599  0728  0DCA               	rlf	??_Slider_Service+1,f
  8600  0729                     u7334:
  8601  0729  0B89               	decfsz	9,f
  8602  072A  2F27               	goto	u7335
  8603  072B  0849               	movf	??_Slider_Service,w
  8604  072C  00E5               	movwf	_resol_value
  8605  072D  084A               	movf	??_Slider_Service+1,w
  8606  072E  00E6               	movwf	_resol_value+1
  8607                           
  8608                           ;mcc_generated_files/mtouch/mtouch_slider.c: 709:             slider->contactSize = calc
      +                          ulate_contact_size(slider);
  8609  072F  0855               	movf	Slider_Service@slider,w
  8610  0730  3195  2573  3186   	fcall	_calculate_contact_size
  8611  0733  0855               	movf	Slider_Service@slider,w
  8612  0734  3E0E               	addlw	14
  8613  0735  0086               	movwf	6
  8614  0736  0187               	clrf	7
  8615  0737  0830               	movf	?_calculate_contact_size,w
  8616  0738  3FC0               	movwi [0]fsr1
  8617  0739  0831               	movf	?_calculate_contact_size+1,w
  8618  073A  3FC1               	movwi [1]fsr1
  8619                           
  8620                           ;mcc_generated_files/mtouch/mtouch_slider.c: 711:             if (slider->contactSize >=
      +                           slider->contactThreshold)
  8621  073B  0855               	movf	Slider_Service@slider,w
  8622  073C  3E06               	addlw	6
  8623  073D  0086               	movwf	6
  8624  073E  0187               	clrf	7
  8625  073F  3F40               	moviw [0]fsr1
  8626  0740  00C9               	movwf	??_Slider_Service
  8627  0741  3F41               	moviw [1]fsr1
  8628  0742  00CA               	movwf	??_Slider_Service+1
  8629  0743  0855               	movf	Slider_Service@slider,w
  8630  0744  3E0E               	addlw	14
  8631  0745  0086               	movwf	6
  8632  0746  0187               	clrf	7
  8633  0747  3F40               	moviw [0]fsr1
  8634  0748  00CB               	movwf	??_Slider_Service+2
  8635  0749  3F41               	moviw [1]fsr1
  8636  074A  00CC               	movwf	??_Slider_Service+3
  8637  074B  084A               	movf	??_Slider_Service+1,w
  8638  074C  024C               	subwf	??_Slider_Service+3,w
  8639  074D  1D03               	skipz
  8640  074E  2F51               	goto	u7345
  8641  074F  0849               	movf	??_Slider_Service,w
  8642  0750  024B               	subwf	??_Slider_Service+2,w
  8643  0751                     u7345:
  8644  0751  1C03               	skipc
  8645  0752  2F98               	goto	l7154
  8646                           
  8647                           ;mcc_generated_files/mtouch/mtouch_slider.c: 712:             {;mcc_generated_files/mtou
      +                          ch/mtouch_slider.c: 714:                 if ((slider->sliderStatus & (uint8_t)((uint8_t)
      +                          3u<<0u)) == MTOUCH_SLIDER_STATE_pressed)
  8648  0753  0855               	movf	Slider_Service@slider,w
  8649  0754  3E10               	addlw	16
  8650  0755  0086               	movwf	6
  8651  0756  0187               	clrf	7
  8652  0757  3003               	movlw	3
  8653  0758  0501               	andwf	1,w
  8654  0759  00C9               	movwf	??_Slider_Service
  8655  075A  3002               	movlw	2
  8656  075B  0649               	xorwf	??_Slider_Service,w
  8657  075C  1D03               	btfss	3,2
  8658  075D  2F61               	goto	l7142
  8659                           
  8660                           ;mcc_generated_files/mtouch/mtouch_slider.c: 715:                 {;mcc_generated_files/
      +                          mtouch/mtouch_slider.c: 716:                     valid_contact_found = 1u;
  8661  075E  01CE               	clrf	Slider_Service@valid_contact_found
  8662  075F  0ACE               	incf	Slider_Service@valid_contact_found,f
  8663                           
  8664                           ;mcc_generated_files/mtouch/mtouch_slider.c: 717:                 }
  8665  0760  2F98               	goto	l7154
  8666  0761                     l7142:
  8667                           
  8668                           ;mcc_generated_files/mtouch/mtouch_slider.c: 719:                 {;mcc_generated_files/
      +                          mtouch/mtouch_slider.c: 721:                     segment = slider->startSegment;
  8669  0761  0855               	movf	Slider_Service@slider,w
  8670  0762  3E02               	addlw	2
  8671  0763  0086               	movwf	6
  8672  0764  0187               	clrf	7
  8673  0765  0801               	movf	1,w
  8674  0766  00C9               	movwf	??_Slider_Service
  8675  0767  01CA               	clrf	??_Slider_Service+1
  8676  0768  0849               	movf	??_Slider_Service,w
  8677  0769  00D2               	movwf	Slider_Service@segment
  8678  076A  084A               	movf	??_Slider_Service+1,w
  8679  076B  00D3               	movwf	Slider_Service@segment+1
  8680  076C                     l7144:
  8681                           
  8682                           ;mcc_generated_files/mtouch/mtouch_slider.c: 723:                     {;mcc_generated_fi
      +                          les/mtouch/mtouch_slider.c: 724:                         if (MTOUCH_Button_isPressed(seg
      +                          ment))
  8683  076C  0852               	movf	Slider_Service@segment,w
  8684  076D  3193  2314  3186   	fcall	_MTOUCH_Button_isPressed
  8685  0770  3A00               	xorlw	0
  8686  0771  1903               	skipnz
  8687  0772  2F7D               	goto	l7150
  8688                           
  8689                           ;mcc_generated_files/mtouch/mtouch_slider.c: 725:                         {;mcc_generate
      +                          d_files/mtouch/mtouch_slider.c: 727:                             valid_contact_found = 1
      +                          u;
  8690  0773  01CE               	clrf	Slider_Service@valid_contact_found
  8691  0774  0ACE               	incf	Slider_Service@valid_contact_found,f
  8692                           
  8693                           ;mcc_generated_files/mtouch/mtouch_slider.c: 728:                             callback_p
      +                          ressed(sliderName);
  8694  0775  0854               	movf	Slider_Service@sliderName,w
  8695  0776  00C9               	movwf	??_Slider_Service
  8696  0777  0849               	movf	??_Slider_Service,w
  8697  0778  00F2               	movwf	Slider_DefaultCallback@slider
  8698  0779  319A  22FD  3186   	fcall	_Slider_DefaultCallback
  8699                           
  8700                           ;mcc_generated_files/mtouch/mtouch_slider.c: 729:                             break;
  8701  077C  2F98               	goto	l7154
  8702  077D                     l7150:
  8703                           
  8704                           ;mcc_generated_files/mtouch/mtouch_slider.c: 733:                         segment = segm
      +                          ent + 1u;
  8705  077D  0852               	movf	Slider_Service@segment,w
  8706  077E  3E01               	addlw	1
  8707  077F  00D2               	movwf	Slider_Service@segment
  8708  0780  3000               	movlw	0
  8709  0781  3D53               	addwfc	Slider_Service@segment+1,w
  8710  0782  00D3               	movwf	Slider_Service@segment+1
  8711                           
  8712                           ;mcc_generated_files/mtouch/mtouch_slider.c: 735:                     }
  8713  0783  0855               	movf	Slider_Service@slider,w
  8714  0784  3E03               	addlw	3
  8715  0785  0086               	movwf	6
  8716  0786  0187               	clrf	7
  8717  0787  0855               	movf	Slider_Service@slider,w
  8718  0788  3E02               	addlw	2
  8719  0789  0084               	movwf	4
  8720  078A  0185               	clrf	5
  8721  078B  0800               	movf	0,w
  8722  078C  0701               	addwf	1,w
  8723  078D  00C9               	movwf	??_Slider_Service
  8724  078E  01CA               	clrf	??_Slider_Service+1
  8725  078F  0DCA               	rlf	??_Slider_Service+1,f
  8726  0790  084A               	movf	??_Slider_Service+1,w
  8727  0791  0253               	subwf	Slider_Service@segment+1,w
  8728  0792  1D03               	skipz
  8729  0793  2F96               	goto	u7375
  8730  0794  0849               	movf	??_Slider_Service,w
  8731  0795  0252               	subwf	Slider_Service@segment,w
  8732  0796                     u7375:
  8733  0796  1C03               	skipc
  8734  0797  2F6C               	goto	l7144
  8735  0798                     l7154:
  8736                           
  8737                           ;mcc_generated_files/mtouch/mtouch_slider.c: 744:             if (0u == valid_contact_fo
      +                          und)
  8738  0798  084E               	movf	Slider_Service@valid_contact_found,w
  8739  0799  1D03               	btfss	3,2
  8740  079A  2FC2               	goto	l7164
  8741                           
  8742                           ;mcc_generated_files/mtouch/mtouch_slider.c: 745:             {;mcc_generated_files/mtou
      +                          ch/mtouch_slider.c: 747:                 slider->contactSize = 0u;
  8743  079B  0855               	movf	Slider_Service@slider,w
  8744  079C  3E0E               	addlw	14
  8745  079D  0086               	movwf	6
  8746  079E  0187               	clrf	7
  8747  079F  3000               	movlw	0
  8748  07A0  3FC0               	movwi [0]fsr1
  8749  07A1  3FC1               	movwi [1]fsr1
  8750                           
  8751                           ;mcc_generated_files/mtouch/mtouch_slider.c: 749:                 if ((slider->sliderSta
      +                          tus & (uint8_t)((uint8_t)3u<<0u)) == MTOUCH_SLIDER_STATE_pressed)
  8752  07A2  0855               	movf	Slider_Service@slider,w
  8753  07A3  3E10               	addlw	16
  8754  07A4  0086               	movwf	6
  8755  07A5  0187               	clrf	7
  8756  07A6  3003               	movlw	3
  8757  07A7  0501               	andwf	1,w
  8758  07A8  00C9               	movwf	??_Slider_Service
  8759  07A9  3002               	movlw	2
  8760  07AA  0649               	xorwf	??_Slider_Service,w
  8761  07AB  1D03               	btfss	3,2
  8762  07AC  2FBB               	goto	l7162
  8763                           
  8764                           ;mcc_generated_files/mtouch/mtouch_slider.c: 750:                 {;mcc_generated_files/
      +                          mtouch/mtouch_slider.c: 751:                     slider->sliderStatus = MTOUCH_SLIDER_ST
      +                          ATE_notPressed;
  8765  07AD  0855               	movf	Slider_Service@slider,w
  8766  07AE  3E10               	addlw	16
  8767  07AF  0086               	movwf	6
  8768  07B0  0187               	clrf	7
  8769  07B1  0181               	clrf	1
  8770  07B2  0A81               	incf	1,f
  8771                           
  8772                           ;mcc_generated_files/mtouch/mtouch_slider.c: 752:                     callback_released(
      +                          sliderName);
  8773  07B3  0854               	movf	Slider_Service@sliderName,w
  8774  07B4  00C9               	movwf	??_Slider_Service
  8775  07B5  0849               	movf	??_Slider_Service,w
  8776  07B6  00F2               	movwf	Slider_DefaultCallback@slider
  8777  07B7  319A  22FD  3186   	fcall	_Slider_DefaultCallback
  8778                           
  8779                           ;mcc_generated_files/mtouch/mtouch_slider.c: 753:                 }
  8780  07BA  2FEB               	goto	l7178
  8781  07BB                     l7162:
  8782                           
  8783                           ;mcc_generated_files/mtouch/mtouch_slider.c: 755:                 {;mcc_generated_files/
      +                          mtouch/mtouch_slider.c: 756:                     slider->sliderStatus = MTOUCH_SLIDER_ST
      +                          ATE_notPressed;
  8784  07BB  0855               	movf	Slider_Service@slider,w
  8785  07BC  3E10               	addlw	16
  8786  07BD  0086               	movwf	6
  8787  07BE  0187               	clrf	7
  8788  07BF  0181               	clrf	1
  8789  07C0  0A81               	incf	1,f
  8790  07C1  2FEB               	goto	l7178
  8791  07C2                     l7164:
  8792                           
  8793                           ;mcc_generated_files/mtouch/mtouch_slider.c: 760:             {;mcc_generated_files/mtou
      +                          ch/mtouch_slider.c: 762:                 position = calculate_position(slider);
  8794  07C2  0855               	movf	Slider_Service@slider,w
  8795  07C3  3188  2005  3186   	fcall	_calculate_position
  8796  07C6  0840               	movf	?_calculate_position+1,w
  8797  07C7  00D0               	movwf	Slider_Service@position+1
  8798  07C8  083F               	movf	?_calculate_position,w
  8799  07C9  00CF               	movwf	Slider_Service@position
  8800                           
  8801                           ;mcc_generated_files/mtouch/mtouch_slider.c: 765:                 if (slider->sliderPosi
      +                          tion != position)
  8802  07CA  0855               	movf	Slider_Service@slider,w
  8803  07CB  3E0C               	addlw	12
  8804  07CC  0086               	movwf	6
  8805  07CD  0187               	clrf	7
  8806  07CE  3F40               	moviw [0]fsr1
  8807  07CF  00C9               	movwf	??_Slider_Service
  8808  07D0  3F41               	moviw [1]fsr1
  8809  07D1  00CA               	movwf	??_Slider_Service+1
  8810  07D2  0850               	movf	Slider_Service@position+1,w
  8811  07D3  064A               	xorwf	??_Slider_Service+1,w
  8812  07D4  1D03               	skipz
  8813  07D5  2FD8               	goto	u7405
  8814  07D6  084F               	movf	Slider_Service@position,w
  8815  07D7  0649               	xorwf	??_Slider_Service,w
  8816  07D8                     u7405:
  8817  07D8  1903               	skipnz
  8818  07D9  2FE9               	goto	l7174
  8819                           
  8820                           ;mcc_generated_files/mtouch/mtouch_slider.c: 766:                 {;mcc_generated_files/
      +                          mtouch/mtouch_slider.c: 767:                     status |= (uint8_t)((uint8_t)1u<<2u);
  8821  07DA  1551               	bsf	Slider_Service@status,2
  8822                           
  8823                           ;mcc_generated_files/mtouch/mtouch_slider.c: 768:                     slider->sliderPosi
      +                          tion = position;
  8824  07DB  0855               	movf	Slider_Service@slider,w
  8825  07DC  3E0C               	addlw	12
  8826  07DD  0086               	movwf	6
  8827  07DE  0187               	clrf	7
  8828  07DF  084F               	movf	Slider_Service@position,w
  8829  07E0  3FC0               	movwi [0]fsr1
  8830  07E1  0850               	movf	Slider_Service@position+1,w
  8831  07E2  3FC1               	movwi [1]fsr1
  8832                           
  8833                           ;mcc_generated_files/mtouch/mtouch_slider.c: 769:                     callback_position_
      +                          changed(sliderName);
  8834  07E3  0854               	movf	Slider_Service@sliderName,w
  8835  07E4  00C9               	movwf	??_Slider_Service
  8836  07E5  0849               	movf	??_Slider_Service,w
  8837  07E6  00F2               	movwf	Slider_DefaultCallback@slider
  8838  07E7  319A  22FD         	fcall	_Slider_DefaultCallback
  8839  07E9                     l7174:
  8840                           
  8841                           ;mcc_generated_files/mtouch/mtouch_slider.c: 773:                 status |= MTOUCH_SLIDE
      +                          R_STATE_pressed;
  8842  07E9  14D1               	bsf	Slider_Service@status,1
  8843                           
  8844                           ;mcc_generated_files/mtouch/mtouch_slider.c: 775:                 status |= (uint8_t)((u
      +                          int8_t)1u<<7u);
  8845  07EA  17D1               	bsf	Slider_Service@status,7
  8846  07EB                     l7178:
  8847                           
  8848                           ;mcc_generated_files/mtouch/mtouch_slider.c: 779:             slider->sliderStatus = sta
      +                          tus;
  8849  07EB  0851               	movf	Slider_Service@status,w
  8850  07EC  00C9               	movwf	??_Slider_Service
  8851  07ED  0855               	movf	Slider_Service@slider,w
  8852  07EE  3E10               	addlw	16
  8853  07EF  0086               	movwf	6
  8854  07F0  0187               	clrf	7
  8855  07F1  0849               	movf	??_Slider_Service,w
  8856  07F2  0081               	movwf	1
  8857                           
  8858                           ;mcc_generated_files/mtouch/mtouch_slider.c: 781:             group_status |= (uint8_t) 
      +                          (status & ((uint8_t)((uint8_t)1u<<7u) | MTOUCH_SLIDER_STATE_pressed));
  8859  07F3  0851               	movf	Slider_Service@status,w
  8860  07F4  3982               	andlw	130
  8861  07F5  00C9               	movwf	??_Slider_Service
  8862  07F6  0849               	movf	??_Slider_Service,w
  8863  07F7  04CD               	iorwf	Slider_Service@group_status,f
  8864                           
  8865                           ;mcc_generated_files/mtouch/mtouch_slider.c: 783:             sliderGroupStatus |= group
      +                          _status;
  8866  07F8  084D               	movf	Slider_Service@group_status,w
  8867  07F9  00C9               	movwf	??_Slider_Service
  8868  07FA  0849               	movf	??_Slider_Service,w
  8869  07FB  04E8               	iorwf	_sliderGroupStatus,f
  8870  07FC  0008               	return
  8871  07FD                     __end_of_Slider_Service:
  8872                           
  8873                           	psect	text30
  8874  0805                     __ptext30:	
  8875 ;; *************** function _calculate_position *****************
  8876 ;; Defined at:
  8877 ;;		line 658 in file "mcc_generated_files/mtouch/mtouch_slider.c"
  8878 ;; Parameters:    Size  Location     Type
  8879 ;;  slider          1    wreg     PTR struct .
  8880 ;;		 -> mtouch_slider(17), 
  8881 ;; Auto vars:     Size  Location     Type
  8882 ;;  slider          1   40[BANK0 ] PTR struct .
  8883 ;;		 -> mtouch_slider(17), 
  8884 ;;  raw_position    2   38[BANK0 ] unsigned short 
  8885 ;;  filtered_pos    2   36[BANK0 ] unsigned short 
  8886 ;;  position        2   34[BANK0 ] unsigned short 
  8887 ;; Return value:  Size  Location     Type
  8888 ;;                  2   31[BANK0 ] unsigned short 
  8889 ;; Registers used:
  8890 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8891 ;; Tracked objects:
  8892 ;;		On entry : 1F/0
  8893 ;;		On exit  : 1F/0
  8894 ;;		Unchanged: 0/0
  8895 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8896 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8897 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8898 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8899 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8900 ;;Total ram usage:       10 bytes
  8901 ;; Hardware stack levels used: 1
  8902 ;; Hardware stack levels required when called: 7
  8903 ;; This function calls:
  8904 ;;		_calculate_raw_position
  8905 ;;		_moving_average_filter
  8906 ;;		_positional_hysteresis
  8907 ;; This function is called by:
  8908 ;;		_Slider_Service
  8909 ;; This function uses a non-reentrant model
  8910 ;;
  8911                           
  8912                           
  8913                           ;psect for function _calculate_position
  8914  0805                     _calculate_position:
  8915                           
  8916                           ;incstack = 0
  8917                           ; Regs used in _calculate_position: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8918                           ;calculate_position@slider stored from wreg
  8919  0805  00C8               	movwf	calculate_position@slider
  8920                           
  8921                           ;mcc_generated_files/mtouch/mtouch_slider.c: 658: static uint16_t calculate_position(mto
      +                          uch_slider_t* slider);mcc_generated_files/mtouch/mtouch_slider.c: 659: {;mcc_generated_f
      +                          iles/mtouch/mtouch_slider.c: 660:     uint16_t raw_position, filtered_position, position
      +                          ;;mcc_generated_files/mtouch/mtouch_slider.c: 663:     raw_position = calculate_raw_posi
      +                          tion(slider);
  8922  0806  0848               	movf	calculate_position@slider,w
  8923  0807  3185  25C6  3188   	fcall	_calculate_raw_position
  8924  080A  082E               	movf	?_calculate_raw_position+1,w
  8925  080B  00C7               	movwf	calculate_position@raw_position+1
  8926  080C  082D               	movf	?_calculate_raw_position,w
  8927  080D  00C6               	movwf	calculate_position@raw_position
  8928                           
  8929                           ;mcc_generated_files/mtouch/mtouch_slider.c: 666:     if ((slider->sliderStatus & (uint8
      +                          _t)((uint8_t)3u<<0u)) != MTOUCH_SLIDER_STATE_pressed)
  8930  080E  0848               	movf	calculate_position@slider,w
  8931  080F  3E10               	addlw	16
  8932  0810  0086               	movwf	6
  8933  0811  0187               	clrf	7
  8934  0812  3003               	movlw	3
  8935  0813  0501               	andwf	1,w
  8936  0814  00C1               	movwf	??_calculate_position
  8937  0815  3002               	movlw	2
  8938  0816  0641               	xorwf	??_calculate_position,w
  8939  0817  1903               	btfsc	3,2
  8940  0818  281D               	goto	l7002
  8941                           
  8942                           ;mcc_generated_files/mtouch/mtouch_slider.c: 667:     {;mcc_generated_files/mtouch/mtouc
      +                          h_slider.c: 669:         filtered_position = raw_position;
  8943  0819  0847               	movf	calculate_position@raw_position+1,w
  8944  081A  00C5               	movwf	calculate_position@filtered_position+1
  8945  081B  0846               	movf	calculate_position@raw_position,w
  8946  081C  2828               	goto	L3
  8947  081D                     l7002:	
  8948                           ;mcc_generated_files/mtouch/mtouch_slider.c: 670:     }
  8949                           
  8950                           
  8951                           ;mcc_generated_files/mtouch/mtouch_slider.c: 672:     {;mcc_generated_files/mtouch/mtouc
      +                          h_slider.c: 673:         filtered_position = moving_average_filter(slider, raw_position)
      +                          ;
  8952  081D  0847               	movf	calculate_position@raw_position+1,w
  8953  081E  00AB               	movwf	moving_average_filter@current_position+1
  8954  081F  0846               	movf	calculate_position@raw_position,w
  8955  0820  00AA               	movwf	moving_average_filter@current_position
  8956  0821  0848               	movf	calculate_position@slider,w
  8957  0822  3189  2173  3188   	fcall	_moving_average_filter
  8958  0825  082B               	movf	?_moving_average_filter+1,w
  8959  0826  00C5               	movwf	calculate_position@filtered_position+1
  8960  0827  082A               	movf	?_moving_average_filter,w
  8961  0828                     L3:
  8962  0828  00C4               	movwf	calculate_position@filtered_position
  8963                           
  8964                           ;mcc_generated_files/mtouch/mtouch_slider.c: 676:     slider->rawPosition = raw_position
      +                          ;
  8965  0829  0848               	movf	calculate_position@slider,w
  8966  082A  3E0A               	addlw	10
  8967  082B  0086               	movwf	6
  8968  082C  0187               	clrf	7
  8969  082D  0846               	movf	calculate_position@raw_position,w
  8970  082E  3FC0               	movwi [0]fsr1
  8971  082F  0847               	movf	calculate_position@raw_position+1,w
  8972  0830  3FC1               	movwi [1]fsr1
  8973                           
  8974                           ;mcc_generated_files/mtouch/mtouch_slider.c: 679:     position = positional_hysteresis(s
      +                          lider, filtered_position);
  8975  0831  0845               	movf	calculate_position@filtered_position+1,w
  8976  0832  00AB               	movwf	positional_hysteresis@current_position+1
  8977  0833  0844               	movf	calculate_position@filtered_position,w
  8978  0834  00AA               	movwf	positional_hysteresis@current_position
  8979  0835  0848               	movf	calculate_position@slider,w
  8980  0836  318A  22CA         	fcall	_positional_hysteresis
  8981  0838  082B               	movf	?_positional_hysteresis+1,w
  8982  0839  00C3               	movwf	calculate_position@position+1
  8983  083A  082A               	movf	?_positional_hysteresis,w
  8984  083B  00C2               	movwf	calculate_position@position
  8985                           
  8986                           ;mcc_generated_files/mtouch/mtouch_slider.c: 681:     return position;
  8987  083C  0843               	movf	calculate_position@position+1,w
  8988  083D  00C0               	movwf	?_calculate_position+1
  8989  083E  0842               	movf	calculate_position@position,w
  8990  083F  00BF               	movwf	?_calculate_position
  8991  0840  0008               	return
  8992  0841                     __end_of_calculate_position:
  8993                           
  8994                           	psect	text31
  8995  0ACA                     __ptext31:	
  8996 ;; *************** function _positional_hysteresis *****************
  8997 ;; Defined at:
  8998 ;;		line 289 in file "mcc_generated_files/mtouch/mtouch_slider.c"
  8999 ;; Parameters:    Size  Location     Type
  9000 ;;  slider          1    wreg     PTR struct .
  9001 ;;		 -> mtouch_slider(17), 
  9002 ;;  current_posi    2   10[BANK0 ] unsigned short 
  9003 ;; Auto vars:     Size  Location     Type
  9004 ;;  slider          1   20[BANK0 ] PTR struct .
  9005 ;;		 -> mtouch_slider(17), 
  9006 ;;  distance        2   18[BANK0 ] short 
  9007 ;;  filtered_pos    2   14[BANK0 ] unsigned short 
  9008 ;;  previous_pos    2   12[BANK0 ] unsigned short 
  9009 ;;  polarity        1   17[BANK0 ] unsigned char 
  9010 ;;  hyst_width      1   16[BANK0 ] unsigned char 
  9011 ;; Return value:  Size  Location     Type
  9012 ;;                  2   10[BANK0 ] unsigned short 
  9013 ;; Registers used:
  9014 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9015 ;; Tracked objects:
  9016 ;;		On entry : 1F/0
  9017 ;;		On exit  : 1F/0
  9018 ;;		Unchanged: 0/0
  9019 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9020 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9021 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9022 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9023 ;;      Totals:         2      11       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9024 ;;Total ram usage:       13 bytes
  9025 ;; Hardware stack levels used: 1
  9026 ;; Hardware stack levels required when called: 5
  9027 ;; This function calls:
  9028 ;;		_get_difference
  9029 ;; This function is called by:
  9030 ;;		_calculate_position
  9031 ;; This function uses a non-reentrant model
  9032 ;;
  9033                           
  9034                           
  9035                           ;psect for function _positional_hysteresis
  9036  0ACA                     _positional_hysteresis:
  9037                           
  9038                           ;incstack = 0
  9039                           ; Regs used in _positional_hysteresis: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
  9040                           ;positional_hysteresis@slider stored from wreg
  9041  0ACA  00B4               	movwf	positional_hysteresis@slider
  9042                           
  9043                           ;mcc_generated_files/mtouch/mtouch_slider.c: 289: static uint16_t positional_hysteresis(
      +                          mtouch_slider_t* slider, uint16_t current_position);mcc_generated_files/mtouch/mtouch_sl
      +                          ider.c: 290: {;mcc_generated_files/mtouch/mtouch_slider.c: 291:     uint16_t filtered_po
      +                          sition, previous_position;;mcc_generated_files/mtouch/mtouch_slider.c: 292:     uint8_t 
      +                          hyst_width;;mcc_generated_files/mtouch/mtouch_slider.c: 293:     int16_t distance;;mcc_g
      +                          enerated_files/mtouch/mtouch_slider.c: 294:     uint8_t polarity = 0u;
  9044  0ACB  01B1               	clrf	positional_hysteresis@polarity
  9045                           
  9046                           ;mcc_generated_files/mtouch/mtouch_slider.c: 297:     hyst_width = slider->positionHyste
      +                          resis;
  9047  0ACC  0834               	movf	positional_hysteresis@slider,w
  9048  0ACD  0086               	movwf	6
  9049  0ACE  0187               	clrf	7
  9050  0ACF  3F45               	moviw [5]fsr1
  9051  0AD0  00B0               	movwf	positional_hysteresis@hyst_width
  9052                           
  9053                           ;mcc_generated_files/mtouch/mtouch_slider.c: 298:     previous_position = slider->slider
      +                          Position;
  9054  0AD1  0834               	movf	positional_hysteresis@slider,w
  9055  0AD2  3E0C               	addlw	12
  9056  0AD3  0086               	movwf	6
  9057  0AD4  0187               	clrf	7
  9058  0AD5  3F40               	moviw [0]fsr1
  9059  0AD6  00AC               	movwf	positional_hysteresis@previous_position
  9060  0AD7  3F41               	moviw [1]fsr1
  9061  0AD8  00AD               	movwf	positional_hysteresis@previous_position+1
  9062                           
  9063                           ;mcc_generated_files/mtouch/mtouch_slider.c: 301:     distance = get_difference(slider, 
      +                          previous_position, current_position);
  9064  0AD9  082D               	movf	positional_hysteresis@previous_position+1,w
  9065  0ADA  00F3               	movwf	get_difference@previous_position+1
  9066  0ADB  082C               	movf	positional_hysteresis@previous_position,w
  9067  0ADC  00F2               	movwf	get_difference@previous_position
  9068  0ADD  082B               	movf	positional_hysteresis@current_position+1,w
  9069  0ADE  00F5               	movwf	get_difference@current_position+1
  9070  0ADF  082A               	movf	positional_hysteresis@current_position,w
  9071  0AE0  00F4               	movwf	get_difference@current_position
  9072  0AE1  0834               	movf	positional_hysteresis@slider,w
  9073  0AE2  3194  2433  318A   	fcall	_get_difference
  9074  0AE5  0873               	movf	?_get_difference+1,w
  9075  0AE6  00B3               	movwf	positional_hysteresis@distance+1
  9076  0AE7  0872               	movf	?_get_difference,w
  9077  0AE8  00B2               	movwf	positional_hysteresis@distance
  9078                           
  9079                           ;mcc_generated_files/mtouch/mtouch_slider.c: 303:     if (distance < 0)
  9080  0AE9  1FB3               	btfss	positional_hysteresis@distance+1,7
  9081  0AEA  2AF5               	goto	l773
  9082                           
  9083                           ;mcc_generated_files/mtouch/mtouch_slider.c: 304:     {;mcc_generated_files/mtouch/mtouc
      +                          h_slider.c: 305:         distance = (0 - distance);
  9084  0AEB  01F6               	clrf	??_positional_hysteresis
  9085  0AEC  01F7               	clrf	??_positional_hysteresis+1
  9086  0AED  0832               	movf	positional_hysteresis@distance,w
  9087  0AEE  0276               	subwf	??_positional_hysteresis,w
  9088  0AEF  00B2               	movwf	positional_hysteresis@distance
  9089  0AF0  0833               	movf	positional_hysteresis@distance+1,w
  9090  0AF1  3B77               	subwfb	??_positional_hysteresis+1,w
  9091  0AF2  00B3               	movwf	positional_hysteresis@distance+1
  9092                           
  9093                           ;mcc_generated_files/mtouch/mtouch_slider.c: 306:         polarity = 1u;
  9094  0AF3  01B1               	clrf	positional_hysteresis@polarity
  9095  0AF4  0AB1               	incf	positional_hysteresis@polarity,f
  9096  0AF5                     l773:	
  9097                           ;mcc_generated_files/mtouch/mtouch_slider.c: 307:     }
  9098                           
  9099                           
  9100                           ;mcc_generated_files/mtouch/mtouch_slider.c: 311:     if ((polarity == 1u) && (distance 
      +                          > (int16_t) slider->leftHysteresis))
  9101  0AF5  0331               	decf	positional_hysteresis@polarity,w
  9102  0AF6  1D03               	btfss	3,2
  9103  0AF7  2B18               	goto	l6594
  9104  0AF8  0834               	movf	positional_hysteresis@slider,w
  9105  0AF9  3E09               	addlw	9
  9106  0AFA  0086               	movwf	6
  9107  0AFB  0187               	clrf	7
  9108  0AFC  0833               	movf	positional_hysteresis@distance+1,w
  9109  0AFD  3A80               	xorlw	128
  9110  0AFE  3C80               	sublw	128
  9111  0AFF  1D03               	skipz
  9112  0B00  2B03               	goto	u6535
  9113  0B01  0832               	movf	positional_hysteresis@distance,w
  9114  0B02  0201               	subwf	1,w
  9115  0B03                     u6535:
  9116  0B03  1803               	skipnc
  9117  0B04  2B18               	goto	l6594
  9118                           
  9119                           ;mcc_generated_files/mtouch/mtouch_slider.c: 312:     {;mcc_generated_files/mtouch/mtouc
      +                          h_slider.c: 314:         slider->rightHysteresis = hyst_width;
  9120  0B05  0020               	movlb	0	; select bank0
  9121  0B06  0830               	movf	positional_hysteresis@hyst_width,w
  9122  0B07  00F6               	movwf	??_positional_hysteresis
  9123  0B08  0834               	movf	positional_hysteresis@slider,w
  9124  0B09  3E08               	addlw	8
  9125  0B0A  0086               	movwf	6
  9126  0B0B  0187               	clrf	7
  9127  0B0C  0876               	movf	??_positional_hysteresis,w
  9128  0B0D  0081               	movwf	1
  9129                           
  9130                           ;mcc_generated_files/mtouch/mtouch_slider.c: 315:         slider->leftHysteresis = 0u;
  9131  0B0E  0834               	movf	positional_hysteresis@slider,w
  9132  0B0F  3E09               	addlw	9
  9133  0B10  0086               	movwf	6
  9134  0B11  0187               	clrf	7
  9135  0B12  0181               	clrf	1
  9136  0B13                     l6592:
  9137                           
  9138                           ;mcc_generated_files/mtouch/mtouch_slider.c: 316:         filtered_position = current_po
      +                          sition;
  9139  0B13  082B               	movf	positional_hysteresis@current_position+1,w
  9140  0B14  00AF               	movwf	positional_hysteresis@filtered_position+1
  9141  0B15  082A               	movf	positional_hysteresis@current_position,w
  9142  0B16  00AE               	movwf	positional_hysteresis@filtered_position
  9143                           
  9144                           ;mcc_generated_files/mtouch/mtouch_slider.c: 317:     }
  9145  0B17  2B41               	goto	l6604
  9146  0B18                     l6594:
  9147  0B18  0020               	movlb	0	; select bank0
  9148  0B19  0831               	movf	positional_hysteresis@polarity,w
  9149  0B1A  1D03               	btfss	3,2
  9150  0B1B  2B38               	goto	l6602
  9151  0B1C  0834               	movf	positional_hysteresis@slider,w
  9152  0B1D  3E08               	addlw	8
  9153  0B1E  0086               	movwf	6
  9154  0B1F  0187               	clrf	7
  9155  0B20  0833               	movf	positional_hysteresis@distance+1,w
  9156  0B21  3A80               	xorlw	128
  9157  0B22  3C80               	sublw	128
  9158  0B23  1D03               	skipz
  9159  0B24  2B27               	goto	u6555
  9160  0B25  0832               	movf	positional_hysteresis@distance,w
  9161  0B26  0201               	subwf	1,w
  9162  0B27                     u6555:
  9163  0B27  1803               	skipnc
  9164  0B28  2B38               	goto	l6602
  9165                           
  9166                           ;mcc_generated_files/mtouch/mtouch_slider.c: 319:     {;mcc_generated_files/mtouch/mtouc
      +                          h_slider.c: 321:         slider->rightHysteresis = 0u;
  9167  0B29  0020               	movlb	0	; select bank0
  9168  0B2A  0834               	movf	positional_hysteresis@slider,w
  9169  0B2B  3E08               	addlw	8
  9170  0B2C  0086               	movwf	6
  9171  0B2D  0187               	clrf	7
  9172  0B2E  0181               	clrf	1
  9173                           
  9174                           ;mcc_generated_files/mtouch/mtouch_slider.c: 322:         slider->leftHysteresis = hyst_
      +                          width;
  9175  0B2F  0830               	movf	positional_hysteresis@hyst_width,w
  9176  0B30  00F6               	movwf	??_positional_hysteresis
  9177  0B31  0834               	movf	positional_hysteresis@slider,w
  9178  0B32  3E09               	addlw	9
  9179  0B33  0086               	movwf	6
  9180  0B34  0187               	clrf	7
  9181  0B35  0876               	movf	??_positional_hysteresis,w
  9182  0B36  0081               	movwf	1
  9183  0B37  2B13               	goto	l6592
  9184  0B38                     l6602:
  9185                           
  9186                           ;mcc_generated_files/mtouch/mtouch_slider.c: 326:     {;mcc_generated_files/mtouch/mtouc
      +                          h_slider.c: 328:         filtered_position = slider->sliderPosition;
  9187  0B38  0020               	movlb	0	; select bank0
  9188  0B39  0834               	movf	positional_hysteresis@slider,w
  9189  0B3A  3E0C               	addlw	12
  9190  0B3B  0086               	movwf	6
  9191  0B3C  0187               	clrf	7
  9192  0B3D  3F40               	moviw [0]fsr1
  9193  0B3E  00AE               	movwf	positional_hysteresis@filtered_position
  9194  0B3F  3F41               	moviw [1]fsr1
  9195  0B40  00AF               	movwf	positional_hysteresis@filtered_position+1
  9196  0B41                     l6604:
  9197                           
  9198                           ;mcc_generated_files/mtouch/mtouch_slider.c: 331:     return filtered_position;
  9199  0B41  082F               	movf	positional_hysteresis@filtered_position+1,w
  9200  0B42  00AB               	movwf	?_positional_hysteresis+1
  9201  0B43  082E               	movf	positional_hysteresis@filtered_position,w
  9202  0B44  00AA               	movwf	?_positional_hysteresis
  9203  0B45  0008               	return
  9204  0B46                     __end_of_positional_hysteresis:
  9205                           
  9206                           	psect	text32
  9207  0973                     __ptext32:	
  9208 ;; *************** function _moving_average_filter *****************
  9209 ;; Defined at:
  9210 ;;		line 341 in file "mcc_generated_files/mtouch/mtouch_slider.c"
  9211 ;; Parameters:    Size  Location     Type
  9212 ;;  slider          1    wreg     PTR struct .
  9213 ;;		 -> mtouch_slider(17), 
  9214 ;;  current_posi    2   10[BANK0 ] unsigned short 
  9215 ;; Auto vars:     Size  Location     Type
  9216 ;;  slider          1   14[BANK0 ] PTR struct .
  9217 ;;		 -> mtouch_slider(17), 
  9218 ;;  distance        2   19[BANK0 ] short 
  9219 ;;  dist_temp       2   17[BANK0 ] unsigned short 
  9220 ;;  previous_pos    2   15[BANK0 ] unsigned short 
  9221 ;;  filtered_pos    2   12[BANK0 ] unsigned short 
  9222 ;; Return value:  Size  Location     Type
  9223 ;;                  2   10[BANK0 ] unsigned short 
  9224 ;; Registers used:
  9225 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9226 ;; Tracked objects:
  9227 ;;		On entry : 1F/0
  9228 ;;		On exit  : 1F/0
  9229 ;;		Unchanged: 0/0
  9230 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9231 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9232 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9233 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9234 ;;      Totals:         2      11       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9235 ;;Total ram usage:       13 bytes
  9236 ;; Hardware stack levels used: 1
  9237 ;; Hardware stack levels required when called: 5
  9238 ;; This function calls:
  9239 ;;		_get_difference
  9240 ;; This function is called by:
  9241 ;;		_calculate_position
  9242 ;; This function uses a non-reentrant model
  9243 ;;
  9244                           
  9245                           
  9246                           ;psect for function _moving_average_filter
  9247  0973                     _moving_average_filter:
  9248                           
  9249                           ;incstack = 0
  9250                           ; Regs used in _moving_average_filter: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
  9251                           ;moving_average_filter@slider stored from wreg
  9252  0973  00AE               	movwf	moving_average_filter@slider
  9253                           
  9254                           ;mcc_generated_files/mtouch/mtouch_slider.c: 341: static uint16_t moving_average_filter(
      +                          mtouch_slider_t* slider, uint16_t current_position);mcc_generated_files/mtouch/mtouch_sl
      +                          ider.c: 342: {;mcc_generated_files/mtouch/mtouch_slider.c: 343:     uint16_t filtered_po
      +                          sition, dist_temp;;mcc_generated_files/mtouch/mtouch_slider.c: 344:     uint16_t previou
      +                          s_position;;mcc_generated_files/mtouch/mtouch_slider.c: 345:     int16_t distance;;mcc_g
      +                          enerated_files/mtouch/mtouch_slider.c: 347:     previous_position = slider->rawPosition;
  9255  0974  082E               	movf	moving_average_filter@slider,w
  9256  0975  3E0A               	addlw	10
  9257  0976  0086               	movwf	6
  9258  0977  0187               	clrf	7
  9259  0978  3F40               	moviw [0]fsr1
  9260  0979  00AF               	movwf	moving_average_filter@previous_position
  9261  097A  3F41               	moviw [1]fsr1
  9262  097B  00B0               	movwf	moving_average_filter@previous_position+1
  9263                           
  9264                           ;mcc_generated_files/mtouch/mtouch_slider.c: 349:     distance = get_difference(slider, 
      +                          previous_position, current_position);
  9265  097C  0830               	movf	moving_average_filter@previous_position+1,w
  9266  097D  00F3               	movwf	get_difference@previous_position+1
  9267  097E  082F               	movf	moving_average_filter@previous_position,w
  9268  097F  00F2               	movwf	get_difference@previous_position
  9269  0980  082B               	movf	moving_average_filter@current_position+1,w
  9270  0981  00F5               	movwf	get_difference@current_position+1
  9271  0982  082A               	movf	moving_average_filter@current_position,w
  9272  0983  00F4               	movwf	get_difference@current_position
  9273  0984  082E               	movf	moving_average_filter@slider,w
  9274  0985  3194  2433  3189   	fcall	_get_difference
  9275  0988  0873               	movf	?_get_difference+1,w
  9276  0989  00B4               	movwf	moving_average_filter@distance+1
  9277  098A  0872               	movf	?_get_difference,w
  9278  098B  00B3               	movwf	moving_average_filter@distance
  9279                           
  9280                           ;mcc_generated_files/mtouch/mtouch_slider.c: 352:     if ((distance == 1) || (distance =
      +                          = -1))
  9281  098C  0333               	decf	moving_average_filter@distance,w
  9282  098D  0434               	iorwf	moving_average_filter@distance+1,w
  9283  098E  1903               	btfsc	3,2
  9284  098F  2996               	goto	l6616
  9285  0990  0A33               	incf	moving_average_filter@distance,w
  9286  0991  1D03               	skipz
  9287  0992  299B               	goto	l781
  9288  0993  0A34               	incf	moving_average_filter@distance+1,w
  9289  0994  1D03               	btfss	3,2
  9290  0995  299B               	goto	l781
  9291  0996                     l6616:
  9292                           
  9293                           ;mcc_generated_files/mtouch/mtouch_slider.c: 353:     {;mcc_generated_files/mtouch/mtouc
      +                          h_slider.c: 354:         filtered_position = previous_position;
  9294  0996  0830               	movf	moving_average_filter@previous_position+1,w
  9295  0997  00AD               	movwf	moving_average_filter@filtered_position+1
  9296  0998  082F               	movf	moving_average_filter@previous_position,w
  9297  0999  00AC               	movwf	moving_average_filter@filtered_position
  9298                           
  9299                           ;mcc_generated_files/mtouch/mtouch_slider.c: 355:     }
  9300  099A  29DE               	goto	l6632
  9301  099B                     l781:	
  9302                           ;mcc_generated_files/mtouch/mtouch_slider.c: 356:     else
  9303                           
  9304                           
  9305                           ;mcc_generated_files/mtouch/mtouch_slider.c: 357:     {;mcc_generated_files/mtouch/mtouc
      +                          h_slider.c: 359:         if (distance < 0)
  9306  099B  1FB4               	btfss	moving_average_filter@distance+1,7
  9307  099C  29BC               	goto	l6626
  9308                           
  9309                           ;mcc_generated_files/mtouch/mtouch_slider.c: 360:         {;mcc_generated_files/mtouch/m
      +                          touch_slider.c: 361:             distance = (0 - distance);
  9310  099D  01F6               	clrf	??_moving_average_filter
  9311  099E  01F7               	clrf	??_moving_average_filter+1
  9312  099F  0833               	movf	moving_average_filter@distance,w
  9313  09A0  0276               	subwf	??_moving_average_filter,w
  9314  09A1  00B3               	movwf	moving_average_filter@distance
  9315  09A2  0834               	movf	moving_average_filter@distance+1,w
  9316  09A3  3B77               	subwfb	??_moving_average_filter+1,w
  9317  09A4  00B4               	movwf	moving_average_filter@distance+1
  9318                           
  9319                           ;mcc_generated_files/mtouch/mtouch_slider.c: 362:             dist_temp = (uint16_t) dis
      +                          tance;
  9320  09A5  0834               	movf	moving_average_filter@distance+1,w
  9321  09A6  00B2               	movwf	moving_average_filter@dist_temp+1
  9322  09A7  0833               	movf	moving_average_filter@distance,w
  9323  09A8  00B1               	movwf	moving_average_filter@dist_temp
  9324                           
  9325                           ;mcc_generated_files/mtouch/mtouch_slider.c: 363:             dist_temp = dist_temp >> 1
      +                          u;
  9326  09A9  0832               	movf	moving_average_filter@dist_temp+1,w
  9327  09AA  00F7               	movwf	??_moving_average_filter+1
  9328  09AB  0831               	movf	moving_average_filter@dist_temp,w
  9329  09AC  00F6               	movwf	??_moving_average_filter
  9330  09AD  36F7               	lsrf	??_moving_average_filter+1,f
  9331  09AE  0CF6               	rrf	??_moving_average_filter,f
  9332  09AF  0876               	movf	??_moving_average_filter,w
  9333  09B0  00B1               	movwf	moving_average_filter@dist_temp
  9334  09B1  0877               	movf	??_moving_average_filter+1,w
  9335  09B2  00B2               	movwf	moving_average_filter@dist_temp+1
  9336                           
  9337                           ;mcc_generated_files/mtouch/mtouch_slider.c: 364:             distance = (int16_t) (0 - 
      +                          (int16_t) dist_temp);
  9338  09B3  01F6               	clrf	??_moving_average_filter
  9339  09B4  01F7               	clrf	??_moving_average_filter+1
  9340  09B5  0831               	movf	moving_average_filter@dist_temp,w
  9341  09B6  0276               	subwf	??_moving_average_filter,w
  9342  09B7  00B3               	movwf	moving_average_filter@distance
  9343  09B8  0832               	movf	moving_average_filter@dist_temp+1,w
  9344  09B9  3B77               	subwfb	??_moving_average_filter+1,w
  9345  09BA  00B4               	movwf	moving_average_filter@distance+1
  9346                           
  9347                           ;mcc_generated_files/mtouch/mtouch_slider.c: 366:         }
  9348  09BB  29CE               	goto	l786
  9349  09BC                     l6626:
  9350                           
  9351                           ;mcc_generated_files/mtouch/mtouch_slider.c: 368:         {;mcc_generated_files/mtouch/m
      +                          touch_slider.c: 369:             dist_temp = (uint16_t) (distance);
  9352  09BC  0834               	movf	moving_average_filter@distance+1,w
  9353  09BD  00B2               	movwf	moving_average_filter@dist_temp+1
  9354  09BE  0833               	movf	moving_average_filter@distance,w
  9355  09BF  00B1               	movwf	moving_average_filter@dist_temp
  9356                           
  9357                           ;mcc_generated_files/mtouch/mtouch_slider.c: 370:             dist_temp = dist_temp >> 1
      +                          u;
  9358  09C0  0832               	movf	moving_average_filter@dist_temp+1,w
  9359  09C1  00F7               	movwf	??_moving_average_filter+1
  9360  09C2  0831               	movf	moving_average_filter@dist_temp,w
  9361  09C3  00F6               	movwf	??_moving_average_filter
  9362  09C4  36F7               	lsrf	??_moving_average_filter+1,f
  9363  09C5  0CF6               	rrf	??_moving_average_filter,f
  9364  09C6  0876               	movf	??_moving_average_filter,w
  9365  09C7  00B1               	movwf	moving_average_filter@dist_temp
  9366  09C8  0877               	movf	??_moving_average_filter+1,w
  9367  09C9  00B2               	movwf	moving_average_filter@dist_temp+1
  9368                           
  9369                           ;mcc_generated_files/mtouch/mtouch_slider.c: 371:             distance = (int16_t) (dist
      +                          _temp);
  9370  09CA  0832               	movf	moving_average_filter@dist_temp+1,w
  9371  09CB  00B4               	movwf	moving_average_filter@distance+1
  9372  09CC  0831               	movf	moving_average_filter@dist_temp,w
  9373  09CD  00B3               	movwf	moving_average_filter@distance
  9374  09CE                     l786:	
  9375                           ;mcc_generated_files/mtouch/mtouch_slider.c: 372:         }
  9376                           
  9377                           
  9378                           ;mcc_generated_files/mtouch/mtouch_slider.c: 373:         filtered_position = (previous_
      +                          position) + (uint16_t) (distance);
  9379  09CE  082F               	movf	moving_average_filter@previous_position,w
  9380  09CF  0733               	addwf	moving_average_filter@distance,w
  9381  09D0  00AC               	movwf	moving_average_filter@filtered_position
  9382  09D1  0830               	movf	moving_average_filter@previous_position+1,w
  9383  09D2  3D34               	addwfc	moving_average_filter@distance+1,w
  9384  09D3  00AD               	movwf	moving_average_filter@filtered_position+1
  9385                           
  9386                           ;mcc_generated_files/mtouch/mtouch_slider.c: 374:         filtered_position &= (resol_va
      +                          lue - 1u);
  9387  09D4  0865               	movf	_resol_value,w
  9388  09D5  3EFF               	addlw	255
  9389  09D6  00F6               	movwf	??_moving_average_filter
  9390  09D7  30FF               	movlw	255
  9391  09D8  3D66               	addwfc	_resol_value+1,w
  9392  09D9  00F7               	movwf	??_moving_average_filter+1
  9393  09DA  0876               	movf	??_moving_average_filter,w
  9394  09DB  05AC               	andwf	moving_average_filter@filtered_position,f
  9395  09DC  0877               	movf	??_moving_average_filter+1,w
  9396  09DD  05AD               	andwf	moving_average_filter@filtered_position+1,f
  9397  09DE                     l6632:
  9398                           
  9399                           ;mcc_generated_files/mtouch/mtouch_slider.c: 377:     return filtered_position;
  9400  09DE  082D               	movf	moving_average_filter@filtered_position+1,w
  9401  09DF  00AB               	movwf	?_moving_average_filter+1
  9402  09E0  082C               	movf	moving_average_filter@filtered_position,w
  9403  09E1  00AA               	movwf	?_moving_average_filter
  9404  09E2  0008               	return
  9405  09E3                     __end_of_moving_average_filter:
  9406                           
  9407                           	psect	text33
  9408  1433                     __ptext33:	
  9409 ;; *************** function _get_difference *****************
  9410 ;; Defined at:
  9411 ;;		line 251 in file "mcc_generated_files/mtouch/mtouch_slider.c"
  9412 ;; Parameters:    Size  Location     Type
  9413 ;;  slider          1    wreg     PTR struct .
  9414 ;;		 -> mtouch_slider(17), 
  9415 ;;  previous_pos    2    2[COMMON] unsigned short 
  9416 ;;  current_posi    2    4[COMMON] unsigned short 
  9417 ;; Auto vars:     Size  Location     Type
  9418 ;;  slider          1    5[BANK0 ] PTR struct .
  9419 ;;		 -> mtouch_slider(17), 
  9420 ;;  diff            2    8[BANK0 ] short 
  9421 ;;  rollover_thr    2    6[BANK0 ] unsigned short 
  9422 ;; Return value:  Size  Location     Type
  9423 ;;                  2    2[COMMON] short 
  9424 ;; Registers used:
  9425 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  9426 ;; Tracked objects:
  9427 ;;		On entry : 1F/0
  9428 ;;		On exit  : 1F/0
  9429 ;;		Unchanged: 0/0
  9430 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9431 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9432 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9433 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9434 ;;      Totals:         4      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9435 ;;Total ram usage:       14 bytes
  9436 ;; Hardware stack levels used: 1
  9437 ;; Hardware stack levels required when called: 4
  9438 ;; This function calls:
  9439 ;;		Nothing
  9440 ;; This function is called by:
  9441 ;;		_positional_hysteresis
  9442 ;;		_moving_average_filter
  9443 ;; This function uses a non-reentrant model
  9444 ;;
  9445                           
  9446                           
  9447                           ;psect for function _get_difference
  9448  1433                     _get_difference:
  9449                           
  9450                           ;incstack = 0
  9451                           ; Regs used in _get_difference: [wreg+fsr1l+fsr1h+status,2+status,0]
  9452                           ;get_difference@slider stored from wreg
  9453  1433  00A5               	movwf	get_difference@slider
  9454                           
  9455                           ;mcc_generated_files/mtouch/mtouch_slider.c: 251: static int16_t get_difference(mtouch_s
      +                          lider_t* slider, uint16_t previous_position, uint16_t current_position);mcc_generated_fi
      +                          les/mtouch/mtouch_slider.c: 252: {;mcc_generated_files/mtouch/mtouch_slider.c: 253:     
      +                          int16_t diff;;mcc_generated_files/mtouch/mtouch_slider.c: 254:     uint16_t rollover_thr
      +                          eshold;;mcc_generated_files/mtouch/mtouch_slider.c: 257:     rollover_threshold = resol_
      +                          value >> 1u;
  9456  1434  0866               	movf	_resol_value+1,w
  9457  1435  00A1               	movwf	??_get_difference+1
  9458  1436  0865               	movf	_resol_value,w
  9459  1437  00A0               	movwf	??_get_difference
  9460  1438  36A1               	lsrf	??_get_difference+1,f
  9461  1439  0CA0               	rrf	??_get_difference,f
  9462  143A  0820               	movf	??_get_difference,w
  9463  143B  00A6               	movwf	get_difference@rollover_threshold
  9464  143C  0821               	movf	??_get_difference+1,w
  9465  143D  00A7               	movwf	get_difference@rollover_threshold+1
  9466                           
  9467                           ;mcc_generated_files/mtouch/mtouch_slider.c: 260:     diff = ((int16_t) current_position
      +                           - (int16_t) previous_position);
  9468  143E  0872               	movf	get_difference@previous_position,w
  9469  143F  0274               	subwf	get_difference@current_position,w
  9470  1440  00A8               	movwf	get_difference@diff
  9471  1441  0873               	movf	get_difference@previous_position+1,w
  9472  1442  3B75               	subwfb	get_difference@current_position+1,w
  9473  1443  00A9               	movwf	get_difference@diff+1
  9474                           
  9475                           ;mcc_generated_files/mtouch/mtouch_slider.c: 263:     if (slider->type == MTOUCH_TYPE_WH
      +                          EEL)
  9476  1444  0A25               	incf	get_difference@slider,w
  9477  1445  0086               	movwf	6
  9478  1446  0187               	clrf	7
  9479  1447  0301               	decf	1,w
  9480  1448  1D03               	btfss	3,2
  9481  1449  2C7A               	goto	l6440
  9482                           
  9483                           ;mcc_generated_files/mtouch/mtouch_slider.c: 264:     {;mcc_generated_files/mtouch/mtouc
      +                          h_slider.c: 265:         if (diff < (int16_t) 0u)
  9484  144A  1FA9               	btfss	get_difference@diff+1,7
  9485  144B  2C67               	goto	l6436
  9486                           
  9487                           ;mcc_generated_files/mtouch/mtouch_slider.c: 266:         {;mcc_generated_files/mtouch/m
      +                          touch_slider.c: 267:             if ((0 - (int16_t) rollover_threshold) > diff)
  9488  144C  01A0               	clrf	??_get_difference
  9489  144D  01A1               	clrf	??_get_difference+1
  9490  144E  0826               	movf	get_difference@rollover_threshold,w
  9491  144F  0220               	subwf	??_get_difference,w
  9492  1450  00A2               	movwf	??_get_difference+2
  9493  1451  0827               	movf	get_difference@rollover_threshold+1,w
  9494  1452  3B21               	subwfb	??_get_difference+1,w
  9495  1453  00A3               	movwf	??_get_difference+3
  9496  1454  0829               	movf	get_difference@diff+1,w
  9497  1455  3A80               	xorlw	128
  9498  1456  00A4               	movwf	??_get_difference+4
  9499  1457  0823               	movf	??_get_difference+3,w
  9500  1458  3A80               	xorlw	128
  9501  1459  0224               	subwf	??_get_difference+4,w
  9502  145A  1D03               	skipz
  9503  145B  2C5E               	goto	u6295
  9504  145C  0822               	movf	??_get_difference+2,w
  9505  145D  0228               	subwf	get_difference@diff,w
  9506  145E                     u6295:
  9507  145E  1803               	skipnc
  9508  145F  2C7A               	goto	l6440
  9509                           
  9510                           ;mcc_generated_files/mtouch/mtouch_slider.c: 268:             {;mcc_generated_files/mtou
      +                          ch/mtouch_slider.c: 269:                 diff = (diff + (int16_t) resol_value);
  9511  1460  0020               	movlb	0	; select bank0
  9512  1461  0828               	movf	get_difference@diff,w
  9513  1462  0765               	addwf	_resol_value,w
  9514  1463  00A8               	movwf	get_difference@diff
  9515  1464  0829               	movf	get_difference@diff+1,w
  9516  1465  3D66               	addwfc	_resol_value+1,w
  9517  1466  2C79               	goto	L4
  9518  1467                     l6436:
  9519                           
  9520                           ;mcc_generated_files/mtouch/mtouch_slider.c: 273:         {;mcc_generated_files/mtouch/m
      +                          touch_slider.c: 274:             if (diff > ((int16_t) rollover_threshold))
  9521  1467  0827               	movf	get_difference@rollover_threshold+1,w
  9522  1468  3A80               	xorlw	128
  9523  1469  00A0               	movwf	??_get_difference
  9524  146A  0829               	movf	get_difference@diff+1,w
  9525  146B  3A80               	xorlw	128
  9526  146C  0220               	subwf	??_get_difference,w
  9527  146D  1D03               	skipz
  9528  146E  2C71               	goto	u6305
  9529  146F  0828               	movf	get_difference@diff,w
  9530  1470  0226               	subwf	get_difference@rollover_threshold,w
  9531  1471                     u6305:
  9532  1471  1803               	skipnc
  9533  1472  2C7A               	goto	l6440
  9534                           
  9535                           ;mcc_generated_files/mtouch/mtouch_slider.c: 275:             {;mcc_generated_files/mtou
      +                          ch/mtouch_slider.c: 276:                 diff = (diff - (int16_t) resol_value);
  9536  1473  0020               	movlb	0	; select bank0
  9537  1474  0865               	movf	_resol_value,w
  9538  1475  0228               	subwf	get_difference@diff,w
  9539  1476  00A8               	movwf	get_difference@diff
  9540  1477  0866               	movf	_resol_value+1,w
  9541  1478  3B29               	subwfb	get_difference@diff+1,w
  9542  1479                     L4:
  9543  1479  00A9               	movwf	get_difference@diff+1
  9544  147A                     l6440:
  9545                           
  9546                           ;mcc_generated_files/mtouch/mtouch_slider.c: 281:     return diff;
  9547  147A  0020               	movlb	0	; select bank0
  9548  147B  0829               	movf	get_difference@diff+1,w
  9549  147C  00F3               	movwf	?_get_difference+1
  9550  147D  0828               	movf	get_difference@diff,w
  9551  147E  00F2               	movwf	?_get_difference
  9552  147F  0008               	return
  9553  1480                     __end_of_get_difference:
  9554                           
  9555                           	psect	text34
  9556  05C6                     __ptext34:	
  9557 ;; *************** function _calculate_raw_position *****************
  9558 ;; Defined at:
  9559 ;;		line 522 in file "mcc_generated_files/mtouch/mtouch_slider.c"
  9560 ;; Parameters:    Size  Location     Type
  9561 ;;  slider          1    wreg     PTR struct .
  9562 ;;		 -> mtouch_slider(17), 
  9563 ;; Auto vars:     Size  Location     Type
  9564 ;;  slider          1   28[BANK0 ] PTR struct .
  9565 ;;		 -> mtouch_slider(17), 
  9566 ;;  position        2   29[BANK0 ] unsigned short 
  9567 ;;  deadband        2   24[BANK0 ] unsigned short 
  9568 ;;  deadband_set    2   21[BANK0 ] unsigned short 
  9569 ;;  size            1   27[BANK0 ] unsigned char 
  9570 ;;  interpolatio    1   26[BANK0 ] unsigned char 
  9571 ;;  interpolatio    1   23[BANK0 ] unsigned char 
  9572 ;;  ref_node        1   20[BANK0 ] unsigned char 
  9573 ;; Return value:  Size  Location     Type
  9574 ;;                  2   13[BANK0 ] unsigned short 
  9575 ;; Registers used:
  9576 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9577 ;; Tracked objects:
  9578 ;;		On entry : 1F/0
  9579 ;;		On exit  : 1F/0
  9580 ;;		Unchanged: 0/0
  9581 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9582 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9583 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9584 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9585 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9586 ;;Total ram usage:       18 bytes
  9587 ;; Hardware stack levels used: 1
  9588 ;; Hardware stack levels required when called: 6
  9589 ;; This function calls:
  9590 ;;		_divide
  9591 ;;		_interpolate
  9592 ;; This function is called by:
  9593 ;;		_calculate_position
  9594 ;; This function uses a non-reentrant model
  9595 ;;
  9596                           
  9597                           
  9598                           ;psect for function _calculate_raw_position
  9599  05C6                     _calculate_raw_position:
  9600                           
  9601                           ;incstack = 0
  9602                           ; Regs used in _calculate_raw_position: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstac
      +                          k]
  9603                           ;calculate_raw_position@slider stored from wreg
  9604  05C6  00BC               	movwf	calculate_raw_position@slider
  9605                           
  9606                           ;mcc_generated_files/mtouch/mtouch_slider.c: 522: static uint16_t calculate_raw_position
      +                          (mtouch_slider_t* slider);mcc_generated_files/mtouch/mtouch_slider.c: 523: {;mcc_generat
      +                          ed_files/mtouch/mtouch_slider.c: 524:     uint8_t ref_node;;mcc_generated_files/mtouch/m
      +                          touch_slider.c: 525:     uint8_t interpolation_bits;;mcc_generated_files/mtouch/mtouch_s
      +                          lider.c: 526:     uint8_t interpolation_scale;;mcc_generated_files/mtouch/mtouch_slider.
      +                          c: 527:     uint8_t size;;mcc_generated_files/mtouch/mtouch_slider.c: 528:     uint16_t 
      +                          position, deadband, deadband_set;
  9607  05C7  083C               	movf	calculate_raw_position@slider,w
  9608  05C8  0086               	movwf	6
  9609  05C9  0187               	clrf	7
  9610  05CA  3F42               	moviw [2]fsr1
  9611  05CB  00B4               	movwf	calculate_raw_position@ref_node
  9612                           
  9613                           ;mcc_generated_files/mtouch/mtouch_slider.c: 532:     size = slider->segmentCount;
  9614  05CC  083C               	movf	calculate_raw_position@slider,w
  9615  05CD  0086               	movwf	6
  9616  05CE  0187               	clrf	7
  9617  05CF  3F43               	moviw [3]fsr1
  9618  05D0  00BB               	movwf	calculate_raw_position@size
  9619                           
  9620                           ;mcc_generated_files/mtouch/mtouch_slider.c: 541:     if (size < 16u)
  9621  05D1  3010               	movlw	16
  9622  05D2  023B               	subwf	calculate_raw_position@size,w
  9623  05D3  1803               	skipnc
  9624  05D4  2DDB               	goto	l6710
  9625                           
  9626                           ;mcc_generated_files/mtouch/mtouch_slider.c: 542:     {;mcc_generated_files/mtouch/mtouc
      +                          h_slider.c: 543:         interpolation_bits = 12u;
  9627  05D5  300C               	movlw	12
  9628  05D6  00AF               	movwf	??_calculate_raw_position
  9629  05D7  082F               	movf	??_calculate_raw_position,w
  9630  05D8  00BA               	movwf	calculate_raw_position@interpolation_bits
  9631                           
  9632                           ;mcc_generated_files/mtouch/mtouch_slider.c: 544:         interpolation_scale = 0u;
  9633  05D9  01B7               	clrf	calculate_raw_position@interpolation_scale
  9634                           
  9635                           ;mcc_generated_files/mtouch/mtouch_slider.c: 545:     }
  9636  05DA  2DE3               	goto	l6712
  9637  05DB                     l6710:
  9638                           
  9639                           ;mcc_generated_files/mtouch/mtouch_slider.c: 547:     {;mcc_generated_files/mtouch/mtouc
      +                          h_slider.c: 548:         interpolation_bits = 8u;
  9640  05DB  3008               	movlw	8
  9641  05DC  00AF               	movwf	??_calculate_raw_position
  9642  05DD  082F               	movf	??_calculate_raw_position,w
  9643  05DE  00BA               	movwf	calculate_raw_position@interpolation_bits
  9644                           
  9645                           ;mcc_generated_files/mtouch/mtouch_slider.c: 549:         interpolation_scale = 4u;
  9646  05DF  3004               	movlw	4
  9647  05E0  00AF               	movwf	??_calculate_raw_position
  9648  05E1  082F               	movf	??_calculate_raw_position,w
  9649  05E2  00B7               	movwf	calculate_raw_position@interpolation_scale
  9650  05E3                     l6712:
  9651                           
  9652                           ;mcc_generated_files/mtouch/mtouch_slider.c: 553:     if (wheel_sensor_middle_channel_ze
      +                          ro == 1u)
  9653  05E3  0021               	movlb	1	; select bank1
  9654  05E4  036E               	decf	_wheel_sensor_middle_channel_zero^(0+128),w
  9655  05E5  1D03               	btfss	3,2
  9656  05E6  2DF5               	goto	l6716
  9657                           
  9658                           ;mcc_generated_files/mtouch/mtouch_slider.c: 554:     {;mcc_generated_files/mtouch/mtouc
      +                          h_slider.c: 555:         position = (uint16_t) ((uint16_t) (size) << interpolation_bits)
      +                          ;
  9659  05E7  0020               	movlb	0	; select bank0
  9660  05E8  083B               	movf	calculate_raw_position@size,w
  9661  05E9  00AF               	movwf	??_calculate_raw_position
  9662  05EA  01B0               	clrf	??_calculate_raw_position+1
  9663  05EB  0A3A               	incf	calculate_raw_position@interpolation_bits,w
  9664  05EC  2DEF               	goto	u6704
  9665  05ED                     u6705:
  9666  05ED  35AF               	lslf	??_calculate_raw_position,f
  9667  05EE  0DB0               	rlf	??_calculate_raw_position+1,f
  9668  05EF                     u6704:
  9669  05EF  0B89               	decfsz	9,f
  9670  05F0  2DED               	goto	u6705
  9671  05F1  082F               	movf	??_calculate_raw_position,w
  9672  05F2  00BD               	movwf	calculate_raw_position@position
  9673  05F3  0830               	movf	??_calculate_raw_position+1,w
  9674  05F4  2E09               	goto	L5
  9675  05F5                     l6716:	
  9676                           ;mcc_generated_files/mtouch/mtouch_slider.c: 556:     }
  9677                           
  9678                           
  9679                           ;mcc_generated_files/mtouch/mtouch_slider.c: 558:     {;mcc_generated_files/mtouch/mtouc
      +                          h_slider.c: 559:         position = (uint16_t) ((middle_node - ref_node) << interpolatio
      +                          n_bits);
  9680  05F5  0020               	movlb	0	; select bank0
  9681  05F6  0867               	movf	_middle_node,w
  9682  05F7  00AF               	movwf	??_calculate_raw_position
  9683  05F8  01B0               	clrf	??_calculate_raw_position+1
  9684  05F9  0830               	movf	??_calculate_raw_position+1,w
  9685  05FA  00B2               	movwf	??_calculate_raw_position+3
  9686  05FB  0834               	movf	calculate_raw_position@ref_node,w
  9687  05FC  022F               	subwf	??_calculate_raw_position,w
  9688  05FD  00B1               	movwf	??_calculate_raw_position+2
  9689  05FE  1C03               	skipc
  9690  05FF  03B2               	decf	??_calculate_raw_position+3,f
  9691  0600  0A3A               	incf	calculate_raw_position@interpolation_bits,w
  9692  0601  2E04               	goto	u6714
  9693  0602                     u6715:
  9694  0602  35B1               	lslf	??_calculate_raw_position+2,f
  9695  0603  0DB2               	rlf	??_calculate_raw_position+3,f
  9696  0604                     u6714:
  9697  0604  0B89               	decfsz	9,f
  9698  0605  2E02               	goto	u6715
  9699  0606  0831               	movf	??_calculate_raw_position+2,w
  9700  0607  00BD               	movwf	calculate_raw_position@position
  9701  0608  0832               	movf	??_calculate_raw_position+3,w
  9702  0609                     L5:
  9703  0609  00BE               	movwf	calculate_raw_position@position+1
  9704                           
  9705                           ;mcc_generated_files/mtouch/mtouch_slider.c: 563:     position += interpolate((uint16_t)
      +                           left_signal, (uint16_t) middle_signal, (uint16_t) right_signal, interpolation_bits);
  9706  060A  0864               	movf	_left_signal+1,w
  9707  060B  00A1               	movwf	interpolate@delta1+1
  9708  060C  0863               	movf	_left_signal,w
  9709  060D  00A0               	movwf	interpolate@delta1
  9710  060E  0021               	movlb	1	; select bank1
  9711  060F  086A               	movf	(_middle_signal+1)^(0+128),w
  9712  0610  0020               	movlb	0	; select bank0
  9713  0611  00A3               	movwf	interpolate@delta2+1
  9714  0612  0021               	movlb	1	; select bank1
  9715  0613  0869               	movf	_middle_signal^(0+128),w
  9716  0614  0020               	movlb	0	; select bank0
  9717  0615  00A2               	movwf	interpolate@delta2
  9718  0616  0862               	movf	_right_signal+1,w
  9719  0617  00A5               	movwf	interpolate@delta3+1
  9720  0618  0861               	movf	_right_signal,w
  9721  0619  00A4               	movwf	interpolate@delta3
  9722  061A  083A               	movf	calculate_raw_position@interpolation_bits,w
  9723  061B  00AF               	movwf	??_calculate_raw_position
  9724  061C  082F               	movf	??_calculate_raw_position,w
  9725  061D  00A6               	movwf	interpolate@num_bits
  9726  061E  3189  210C  3185   	fcall	_interpolate
  9727  0621  0820               	movf	?_interpolate,w
  9728  0622  07BD               	addwf	calculate_raw_position@position,f
  9729  0623  0821               	movf	?_interpolate+1,w
  9730  0624  3DBE               	addwfc	calculate_raw_position@position+1,f
  9731                           
  9732                           ;mcc_generated_files/mtouch/mtouch_slider.c: 566:     if (size > 2u)
  9733  0625  3003               	movlw	3
  9734  0626  023B               	subwf	calculate_raw_position@size,w
  9735  0627  1C03               	skipc
  9736  0628  2E54               	goto	l6728
  9737                           
  9738                           ;mcc_generated_files/mtouch/mtouch_slider.c: 567:     {;mcc_generated_files/mtouch/mtouc
      +                          h_slider.c: 568:         if (slider->type == MTOUCH_TYPE_WHEEL)
  9739  0629  0A3C               	incf	calculate_raw_position@slider,w
  9740  062A  0086               	movwf	6
  9741  062B  0187               	clrf	7
  9742  062C  0301               	decf	1,w
  9743  062D  1D03               	btfss	3,2
  9744  062E  2E3E               	goto	l6726
  9745                           
  9746                           ;mcc_generated_files/mtouch/mtouch_slider.c: 569:         {;mcc_generated_files/mtouch/m
      +                          touch_slider.c: 570:             position = divide(position, (uint16_t) (size), interpol
      +                          ation_scale);
  9747  062F  083E               	movf	calculate_raw_position@position+1,w
  9748  0630  00F3               	movwf	divide@numerator+1
  9749  0631  083D               	movf	calculate_raw_position@position,w
  9750  0632  00F2               	movwf	divide@numerator
  9751  0633  083B               	movf	calculate_raw_position@size,w
  9752  0634  00AF               	movwf	??_calculate_raw_position
  9753  0635  01B0               	clrf	??_calculate_raw_position+1
  9754  0636  082F               	movf	??_calculate_raw_position,w
  9755  0637  00F4               	movwf	divide@denominator
  9756  0638  0830               	movf	??_calculate_raw_position+1,w
  9757  0639  00F5               	movwf	divide@denominator+1
  9758  063A  0837               	movf	calculate_raw_position@interpolation_scale,w
  9759  063B  00B1               	movwf	??_calculate_raw_position+2
  9760  063C  0831               	movf	??_calculate_raw_position+2,w
  9761  063D  2E4C               	goto	L6
  9762  063E                     l6726:	
  9763                           ;mcc_generated_files/mtouch/mtouch_slider.c: 571:         }
  9764                           
  9765                           
  9766                           ;mcc_generated_files/mtouch/mtouch_slider.c: 573:         {;mcc_generated_files/mtouch/m
      +                          touch_slider.c: 574:             position = divide(position, (uint16_t) ((uint16_t) size
      +                           - 1u), interpolation_scale);
  9767  063E  083E               	movf	calculate_raw_position@position+1,w
  9768  063F  00F3               	movwf	divide@numerator+1
  9769  0640  083D               	movf	calculate_raw_position@position,w
  9770  0641  00F2               	movwf	divide@numerator
  9771  0642  083B               	movf	calculate_raw_position@size,w
  9772  0643  3EFF               	addlw	255
  9773  0644  00F4               	movwf	divide@denominator
  9774  0645  30FF               	movlw	255
  9775  0646  1803               	skipnc
  9776  0647  3000               	movlw	0
  9777  0648  00F5               	movwf	divide@denominator+1
  9778  0649  0837               	movf	calculate_raw_position@interpolation_scale,w
  9779  064A  00AF               	movwf	??_calculate_raw_position
  9780  064B  082F               	movf	??_calculate_raw_position,w
  9781  064C                     L6:
  9782  064C  00F6               	movwf	divide@exponent
  9783  064D  3195  2521  3185   	fcall	_divide
  9784  0650  0873               	movf	?_divide+1,w
  9785  0651  00BE               	movwf	calculate_raw_position@position+1
  9786  0652  0872               	movf	?_divide,w
  9787  0653  00BD               	movwf	calculate_raw_position@position
  9788  0654                     l6728:
  9789                           
  9790                           ;mcc_generated_files/mtouch/mtouch_slider.c: 579:     if (position > (uint16_t)((uint16_
      +                          t)1u << 12u))
  9791  0654  3010               	movlw	16
  9792  0655  023E               	subwf	calculate_raw_position@position+1,w
  9793  0656  3001               	movlw	1
  9794  0657  1903               	skipnz
  9795  0658  023D               	subwf	calculate_raw_position@position,w
  9796  0659  1C03               	skipc
  9797  065A  2E5F               	goto	l6732
  9798                           
  9799                           ;mcc_generated_files/mtouch/mtouch_slider.c: 580:     {;mcc_generated_files/mtouch/mtouc
      +                          h_slider.c: 581:         position = (uint16_t)((uint16_t)1u << 12u);
  9800  065B  3000               	movlw	0
  9801  065C  00BD               	movwf	calculate_raw_position@position
  9802  065D  3010               	movlw	16
  9803  065E  00BE               	movwf	calculate_raw_position@position+1
  9804  065F                     l6732:
  9805                           
  9806                           ;mcc_generated_files/mtouch/mtouch_slider.c: 585:     if ((slider->type == MTOUCH_TYPE_S
      +                          LIDER) && (0u != (slider->resolDeadband & (0x0Fu))))
  9807  065F  0A3C               	incf	calculate_raw_position@slider,w
  9808  0660  0086               	movwf	6
  9809  0661  0187               	clrf	7
  9810  0662  0801               	movf	1,w
  9811  0663  1D03               	btfss	3,2
  9812  0664  2EB8               	goto	l6752
  9813  0665  083C               	movf	calculate_raw_position@slider,w
  9814  0666  3E04               	addlw	4
  9815  0667  0086               	movwf	6
  9816  0668  0187               	clrf	7
  9817  0669  0801               	movf	1,w
  9818  066A  390F               	andlw	15
  9819  066B  1903               	btfsc	3,2
  9820  066C  2EB8               	goto	l6752
  9821                           
  9822                           ;mcc_generated_files/mtouch/mtouch_slider.c: 586:     {;mcc_generated_files/mtouch/mtouc
      +                          h_slider.c: 588:         deadband = 0u;
  9823  066D  01B8               	clrf	calculate_raw_position@deadband
  9824  066E  01B9               	clrf	calculate_raw_position@deadband+1
  9825                           
  9826                           ;mcc_generated_files/mtouch/mtouch_slider.c: 589:         deadband_set = (uint8_t) (slid
      +                          er->resolDeadband & (0x0Fu));
  9827  066F  083C               	movf	calculate_raw_position@slider,w
  9828  0670  3E04               	addlw	4
  9829  0671  0086               	movwf	6
  9830  0672  0187               	clrf	7
  9831  0673  0801               	movf	1,w
  9832  0674  390F               	andlw	15
  9833  0675  00AF               	movwf	??_calculate_raw_position
  9834  0676  01B0               	clrf	??_calculate_raw_position+1
  9835  0677  082F               	movf	??_calculate_raw_position,w
  9836  0678  00B5               	movwf	calculate_raw_position@deadband_set
  9837  0679  0830               	movf	??_calculate_raw_position+1,w
  9838  067A  00B6               	movwf	calculate_raw_position@deadband_set+1
  9839  067B                     l6742:	
  9840                           ;mcc_generated_files/mtouch/mtouch_slider.c: 590:         while (deadband_set > 0u)
  9841                           
  9842                           
  9843                           ;mcc_generated_files/mtouch/mtouch_slider.c: 590:         while (deadband_set > 0u)
  9844  067B  0835               	movf	calculate_raw_position@deadband_set,w
  9845  067C  0436               	iorwf	calculate_raw_position@deadband_set+1,w
  9846  067D  1903               	btfsc	3,2
  9847  067E  2E88               	goto	l6744
  9848                           
  9849                           ;mcc_generated_files/mtouch/mtouch_slider.c: 591:         {;mcc_generated_files/mtouch/m
      +                          touch_slider.c: 592:             deadband_set--;
  9850  067F  3001               	movlw	1
  9851  0680  02B5               	subwf	calculate_raw_position@deadband_set,f
  9852  0681  3000               	movlw	0
  9853  0682  3BB6               	subwfb	calculate_raw_position@deadband_set+1,f
  9854                           
  9855                           ;mcc_generated_files/mtouch/mtouch_slider.c: 593:             deadband += ((uint16_t)((u
      +                          int16_t)1u << 12u)/100u);
  9856  0683  3028               	movlw	40
  9857  0684  07B8               	addwf	calculate_raw_position@deadband,f
  9858  0685  3000               	movlw	0
  9859  0686  3DB9               	addwfc	calculate_raw_position@deadband+1,f
  9860  0687  2E7B               	goto	l6742
  9861  0688                     l6744:
  9862                           
  9863                           ;mcc_generated_files/mtouch/mtouch_slider.c: 596:         if (position < deadband)
  9864  0688  0839               	movf	calculate_raw_position@deadband+1,w
  9865  0689  023E               	subwf	calculate_raw_position@position+1,w
  9866  068A  1D03               	skipz
  9867  068B  2E8E               	goto	u6785
  9868  068C  0838               	movf	calculate_raw_position@deadband,w
  9869  068D  023D               	subwf	calculate_raw_position@position,w
  9870  068E                     u6785:
  9871  068E  1803               	skipnc
  9872  068F  2E93               	goto	l6748
  9873                           
  9874                           ;mcc_generated_files/mtouch/mtouch_slider.c: 597:         {;mcc_generated_files/mtouch/m
      +                          touch_slider.c: 598:             position = 0u;
  9875  0690  01BD               	clrf	calculate_raw_position@position
  9876  0691  01BE               	clrf	calculate_raw_position@position+1
  9877                           
  9878                           ;mcc_generated_files/mtouch/mtouch_slider.c: 599:         }
  9879  0692  2E99               	goto	l6750
  9880  0693                     l6748:
  9881                           
  9882                           ;mcc_generated_files/mtouch/mtouch_slider.c: 601:         {;mcc_generated_files/mtouch/m
      +                          touch_slider.c: 602:             position = (uint16_t) (position - deadband);
  9883  0693  0838               	movf	calculate_raw_position@deadband,w
  9884  0694  023D               	subwf	calculate_raw_position@position,w
  9885  0695  00BD               	movwf	calculate_raw_position@position
  9886  0696  0839               	movf	calculate_raw_position@deadband+1,w
  9887  0697  3B3E               	subwfb	calculate_raw_position@position+1,w
  9888  0698  00BE               	movwf	calculate_raw_position@position+1
  9889  0699                     l6750:
  9890                           
  9891                           ;mcc_generated_files/mtouch/mtouch_slider.c: 608:         position = divide(position, (u
      +                          int16_t) ((uint16_t)((uint16_t)1u << 12u) - (uint16_t) (deadband << 1u)), 12u);
  9892  0699  083E               	movf	calculate_raw_position@position+1,w
  9893  069A  00F3               	movwf	divide@numerator+1
  9894  069B  083D               	movf	calculate_raw_position@position,w
  9895  069C  00F2               	movwf	divide@numerator
  9896  069D  0839               	movf	calculate_raw_position@deadband+1,w
  9897  069E  00B0               	movwf	??_calculate_raw_position+1
  9898  069F  0838               	movf	calculate_raw_position@deadband,w
  9899  06A0  00AF               	movwf	??_calculate_raw_position
  9900  06A1  35AF               	lslf	??_calculate_raw_position,f
  9901  06A2  0DB0               	rlf	??_calculate_raw_position+1,f
  9902  06A3  3000               	movlw	0
  9903  06A4  00B1               	movwf	??_calculate_raw_position+2
  9904  06A5  3010               	movlw	16
  9905  06A6  00B2               	movwf	??_calculate_raw_position+3
  9906  06A7  082F               	movf	??_calculate_raw_position,w
  9907  06A8  0231               	subwf	??_calculate_raw_position+2,w
  9908  06A9  00F4               	movwf	divide@denominator
  9909  06AA  0830               	movf	??_calculate_raw_position+1,w
  9910  06AB  3B32               	subwfb	??_calculate_raw_position+3,w
  9911  06AC  00F5               	movwf	divide@denominator+1
  9912  06AD  300C               	movlw	12
  9913  06AE  00B3               	movwf	??_calculate_raw_position+4
  9914  06AF  0833               	movf	??_calculate_raw_position+4,w
  9915  06B0  00F6               	movwf	divide@exponent
  9916  06B1  3195  2521  3185   	fcall	_divide
  9917  06B4  0873               	movf	?_divide+1,w
  9918  06B5  00BE               	movwf	calculate_raw_position@position+1
  9919  06B6  0872               	movf	?_divide,w
  9920  06B7  00BD               	movwf	calculate_raw_position@position
  9921  06B8                     l6752:
  9922                           
  9923                           ;mcc_generated_files/mtouch/mtouch_slider.c: 612:     position = position >> (12u - reso
      +                          l_bits);
  9924  06B8  083E               	movf	calculate_raw_position@position+1,w
  9925  06B9  00B0               	movwf	??_calculate_raw_position+1
  9926  06BA  083D               	movf	calculate_raw_position@position,w
  9927  06BB  00AF               	movwf	??_calculate_raw_position
  9928  06BC  086F               	movf	_resol_bits,w
  9929  06BD  3C0C               	sublw	12
  9930  06BE  0A89               	incf	9,f
  9931  06BF  2EC2               	goto	u6794
  9932  06C0                     u6795:
  9933  06C0  36B0               	lsrf	??_calculate_raw_position+1,f
  9934  06C1  0CAF               	rrf	??_calculate_raw_position,f
  9935  06C2                     u6794:
  9936  06C2  0B89               	decfsz	9,f
  9937  06C3  2EC0               	goto	u6795
  9938  06C4  082F               	movf	??_calculate_raw_position,w
  9939  06C5  00BD               	movwf	calculate_raw_position@position
  9940  06C6  0830               	movf	??_calculate_raw_position+1,w
  9941  06C7  00BE               	movwf	calculate_raw_position@position+1
  9942                           
  9943                           ;mcc_generated_files/mtouch/mtouch_slider.c: 615:     if (position > (uint16_t) (((uint1
      +                          6_t) 1 << resol_bits)) - 1u)
  9944  06C8  3001               	movlw	1
  9945  06C9  00AF               	movwf	??_calculate_raw_position
  9946  06CA  3000               	movlw	0
  9947  06CB  00B0               	movwf	??_calculate_raw_position+1
  9948  06CC  0A6F               	incf	_resol_bits,w
  9949  06CD  2ED0               	goto	u6804
  9950  06CE                     u6805:
  9951  06CE  35AF               	lslf	??_calculate_raw_position,f
  9952  06CF  0DB0               	rlf	??_calculate_raw_position+1,f
  9953  06D0                     u6804:
  9954  06D0  0B89               	decfsz	9,f
  9955  06D1  2ECE               	goto	u6805
  9956  06D2  082F               	movf	??_calculate_raw_position,w
  9957  06D3  3EFF               	addlw	255
  9958  06D4  00B1               	movwf	??_calculate_raw_position+2
  9959  06D5  30FF               	movlw	255
  9960  06D6  3D30               	addwfc	??_calculate_raw_position+1,w
  9961  06D7  00B2               	movwf	??_calculate_raw_position+3
  9962  06D8  083E               	movf	calculate_raw_position@position+1,w
  9963  06D9  0232               	subwf	??_calculate_raw_position+3,w
  9964  06DA  1D03               	skipz
  9965  06DB  2EDE               	goto	u6815
  9966  06DC  083D               	movf	calculate_raw_position@position,w
  9967  06DD  0231               	subwf	??_calculate_raw_position+2,w
  9968  06DE                     u6815:
  9969  06DE  1803               	skipnc
  9970  06DF  2EF0               	goto	l6758
  9971                           
  9972                           ;mcc_generated_files/mtouch/mtouch_slider.c: 616:     {;mcc_generated_files/mtouch/mtouc
      +                          h_slider.c: 617:         position = (uint16_t) ((uint16_t) 1 << resol_bits) - 1u;
  9973  06E0  3001               	movlw	1
  9974  06E1  00AF               	movwf	??_calculate_raw_position
  9975  06E2  3000               	movlw	0
  9976  06E3  00B0               	movwf	??_calculate_raw_position+1
  9977  06E4  0A6F               	incf	_resol_bits,w
  9978  06E5  2EE8               	goto	u6824
  9979  06E6                     u6825:
  9980  06E6  35AF               	lslf	??_calculate_raw_position,f
  9981  06E7  0DB0               	rlf	??_calculate_raw_position+1,f
  9982  06E8                     u6824:
  9983  06E8  0B89               	decfsz	9,f
  9984  06E9  2EE6               	goto	u6825
  9985  06EA  082F               	movf	??_calculate_raw_position,w
  9986  06EB  3EFF               	addlw	255
  9987  06EC  00BD               	movwf	calculate_raw_position@position
  9988  06ED  30FF               	movlw	255
  9989  06EE  3D30               	addwfc	??_calculate_raw_position+1,w
  9990  06EF  00BE               	movwf	calculate_raw_position@position+1
  9991  06F0                     l6758:
  9992                           
  9993                           ;mcc_generated_files/mtouch/mtouch_slider.c: 620:     return position;
  9994  06F0  083E               	movf	calculate_raw_position@position+1,w
  9995  06F1  00AE               	movwf	?_calculate_raw_position+1
  9996  06F2  083D               	movf	calculate_raw_position@position,w
  9997  06F3  00AD               	movwf	?_calculate_raw_position
  9998  06F4  0008               	return
  9999  06F5                     __end_of_calculate_raw_position:
 10000                           
 10001                           	psect	text35
 10002  090C                     __ptext35:	
 10003 ;; *************** function _interpolate *****************
 10004 ;; Defined at:
 10005 ;;		line 385 in file "mcc_generated_files/mtouch/mtouch_slider.c"
 10006 ;; Parameters:    Size  Location     Type
 10007 ;;  delta1          2    0[BANK0 ] unsigned short 
 10008 ;;  delta2          2    2[BANK0 ] unsigned short 
 10009 ;;  delta3          2    4[BANK0 ] unsigned short 
 10010 ;;  num_bits        1    6[BANK0 ] unsigned char 
 10011 ;; Auto vars:     Size  Location     Type
 10012 ;;  rtnval          2   11[BANK0 ] unsigned short 
 10013 ;; Return value:  Size  Location     Type
 10014 ;;                  2    0[BANK0 ] unsigned short 
 10015 ;; Registers used:
 10016 ;;		wreg, status,2, status,0, pclath, cstack
 10017 ;; Tracked objects:
 10018 ;;		On entry : 1F/0
 10019 ;;		On exit  : 1F/0
 10020 ;;		Unchanged: 0/0
 10021 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10022 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10023 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10024 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10025 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10026 ;;Total ram usage:       13 bytes
 10027 ;; Hardware stack levels used: 1
 10028 ;; Hardware stack levels required when called: 5
 10029 ;; This function calls:
 10030 ;;		_divide
 10031 ;; This function is called by:
 10032 ;;		_calculate_raw_position
 10033 ;; This function uses a non-reentrant model
 10034 ;;
 10035                           
 10036                           
 10037                           ;psect for function _interpolate
 10038  090C                     _interpolate:
 10039                           
 10040                           ;mcc_generated_files/mtouch/mtouch_slider.c: 385: static uint16_t interpolate(uint16_t d
      +                          elta1, uint16_t delta2, uint16_t delta3, uint8_t num_bits);mcc_generated_files/mtouch/mt
      +                          ouch_slider.c: 386: {;mcc_generated_files/mtouch/mtouch_slider.c: 387:     uint16_t rtnv
      +                          al;;mcc_generated_files/mtouch/mtouch_slider.c: 389:     if (delta1 >= delta3)
 10041                           
 10042                           ;incstack = 0
 10043                           ; Regs used in _interpolate: [wreg+status,2+status,0+pclath+cstack]
 10044  090C  0825               	movf	interpolate@delta3+1,w
 10045  090D  0221               	subwf	interpolate@delta1+1,w
 10046  090E  1D03               	skipz
 10047  090F  2912               	goto	u6315
 10048  0910  0824               	movf	interpolate@delta3,w
 10049  0911  0220               	subwf	interpolate@delta1,w
 10050  0912                     u6315:
 10051  0912  1C03               	skipc
 10052  0913  2948               	goto	l6450
 10053                           
 10054                           ;mcc_generated_files/mtouch/mtouch_slider.c: 390:     {;mcc_generated_files/mtouch/mtouc
      +                          h_slider.c: 391:         rtnval = (uint16_t) ((delta2 - delta3) + (delta1 - delta3));
 10055  0914  0825               	movf	interpolate@delta3+1,w
 10056  0915  00A8               	movwf	??_interpolate+1
 10057  0916  0824               	movf	interpolate@delta3,w
 10058  0917  00A7               	movwf	??_interpolate
 10059  0918  35A7               	lslf	??_interpolate,f
 10060  0919  0DA8               	rlf	??_interpolate+1,f
 10061  091A  0827               	movf	??_interpolate,w
 10062  091B  0222               	subwf	interpolate@delta2,w
 10063  091C  00A9               	movwf	??_interpolate+2
 10064  091D  0828               	movf	??_interpolate+1,w
 10065  091E  3B23               	subwfb	interpolate@delta2+1,w
 10066  091F  00AA               	movwf	??_interpolate+3
 10067  0920  0820               	movf	interpolate@delta1,w
 10068  0921  0729               	addwf	??_interpolate+2,w
 10069  0922  00AB               	movwf	interpolate@rtnval
 10070  0923  0821               	movf	interpolate@delta1+1,w
 10071  0924  3D2A               	addwfc	??_interpolate+3,w
 10072  0925  00AC               	movwf	interpolate@rtnval+1
 10073                           
 10074                           ;mcc_generated_files/mtouch/mtouch_slider.c: 392:         rtnval = (uint16_t) (divide((u
      +                          int16_t) (delta2 - delta3), rtnval, num_bits) - (uint16_t) ((uint16_t) 1u << (num_bits))
      +                          );
 10075  0926  3001               	movlw	1
 10076  0927  00A7               	movwf	??_interpolate
 10077  0928  3000               	movlw	0
 10078  0929  00A8               	movwf	??_interpolate+1
 10079  092A  0A26               	incf	interpolate@num_bits,w
 10080  092B  292E               	goto	u6324
 10081  092C                     u6325:
 10082  092C  35A7               	lslf	??_interpolate,f
 10083  092D  0DA8               	rlf	??_interpolate+1,f
 10084  092E                     u6324:
 10085  092E  0B89               	decfsz	9,f
 10086  092F  292C               	goto	u6325
 10087  0930  0824               	movf	interpolate@delta3,w
 10088  0931  0222               	subwf	interpolate@delta2,w
 10089  0932  00F2               	movwf	divide@numerator
 10090  0933  0825               	movf	interpolate@delta3+1,w
 10091  0934  3B23               	subwfb	interpolate@delta2+1,w
 10092  0935  00F3               	movwf	divide@numerator+1
 10093  0936  082C               	movf	interpolate@rtnval+1,w
 10094  0937  00F5               	movwf	divide@denominator+1
 10095  0938  082B               	movf	interpolate@rtnval,w
 10096  0939  00F4               	movwf	divide@denominator
 10097  093A  0826               	movf	interpolate@num_bits,w
 10098  093B  00A9               	movwf	??_interpolate+2
 10099  093C  0829               	movf	??_interpolate+2,w
 10100  093D  00F6               	movwf	divide@exponent
 10101  093E  3195  2521  3189   	fcall	_divide
 10102  0941  0827               	movf	??_interpolate,w
 10103  0942  0272               	subwf	?_divide,w
 10104  0943  00AB               	movwf	interpolate@rtnval
 10105  0944  0828               	movf	??_interpolate+1,w
 10106  0945  3B73               	subwfb	?_divide+1,w
 10107  0946  00AC               	movwf	interpolate@rtnval+1
 10108                           
 10109                           ;mcc_generated_files/mtouch/mtouch_slider.c: 393:     }
 10110  0947  296E               	goto	l6454
 10111  0948                     l6450:
 10112                           
 10113                           ;mcc_generated_files/mtouch/mtouch_slider.c: 395:     {;mcc_generated_files/mtouch/mtouc
      +                          h_slider.c: 396:         rtnval = (uint16_t) ((delta2 - delta1) + (delta3 - delta1));
 10114  0948  0821               	movf	interpolate@delta1+1,w
 10115  0949  00A8               	movwf	??_interpolate+1
 10116  094A  0820               	movf	interpolate@delta1,w
 10117  094B  00A7               	movwf	??_interpolate
 10118  094C  35A7               	lslf	??_interpolate,f
 10119  094D  0DA8               	rlf	??_interpolate+1,f
 10120  094E  0827               	movf	??_interpolate,w
 10121  094F  0222               	subwf	interpolate@delta2,w
 10122  0950  00A9               	movwf	??_interpolate+2
 10123  0951  0828               	movf	??_interpolate+1,w
 10124  0952  3B23               	subwfb	interpolate@delta2+1,w
 10125  0953  00AA               	movwf	??_interpolate+3
 10126  0954  0824               	movf	interpolate@delta3,w
 10127  0955  0729               	addwf	??_interpolate+2,w
 10128  0956  00AB               	movwf	interpolate@rtnval
 10129  0957  0825               	movf	interpolate@delta3+1,w
 10130  0958  3D2A               	addwfc	??_interpolate+3,w
 10131  0959  00AC               	movwf	interpolate@rtnval+1
 10132                           
 10133                           ;mcc_generated_files/mtouch/mtouch_slider.c: 397:         rtnval = divide((uint16_t) (de
      +                          lta3 - delta1), rtnval, num_bits);
 10134  095A  0820               	movf	interpolate@delta1,w
 10135  095B  0224               	subwf	interpolate@delta3,w
 10136  095C  00F2               	movwf	divide@numerator
 10137  095D  0821               	movf	interpolate@delta1+1,w
 10138  095E  3B25               	subwfb	interpolate@delta3+1,w
 10139  095F  00F3               	movwf	divide@numerator+1
 10140  0960  082C               	movf	interpolate@rtnval+1,w
 10141  0961  00F5               	movwf	divide@denominator+1
 10142  0962  082B               	movf	interpolate@rtnval,w
 10143  0963  00F4               	movwf	divide@denominator
 10144  0964  0826               	movf	interpolate@num_bits,w
 10145  0965  00A7               	movwf	??_interpolate
 10146  0966  0827               	movf	??_interpolate,w
 10147  0967  00F6               	movwf	divide@exponent
 10148  0968  3195  2521         	fcall	_divide
 10149  096A  0873               	movf	?_divide+1,w
 10150  096B  00AC               	movwf	interpolate@rtnval+1
 10151  096C  0872               	movf	?_divide,w
 10152  096D  00AB               	movwf	interpolate@rtnval
 10153  096E                     l6454:
 10154                           
 10155                           ;mcc_generated_files/mtouch/mtouch_slider.c: 400:     return rtnval;
 10156  096E  082C               	movf	interpolate@rtnval+1,w
 10157  096F  00A1               	movwf	?_interpolate+1
 10158  0970  082B               	movf	interpolate@rtnval,w
 10159  0971  00A0               	movwf	?_interpolate
 10160  0972  0008               	return
 10161  0973                     __end_of_interpolate:
 10162                           
 10163                           	psect	text36
 10164  1521                     __ptext36:	
 10165 ;; *************** function _divide *****************
 10166 ;; Defined at:
 10167 ;;		line 191 in file "mcc_generated_files/mtouch/mtouch_slider.c"
 10168 ;; Parameters:    Size  Location     Type
 10169 ;;  numerator       2    2[COMMON] unsigned short 
 10170 ;;  denominator     2    4[COMMON] unsigned short 
 10171 ;;  exponent        1    6[COMMON] unsigned char 
 10172 ;; Auto vars:     Size  Location     Type
 10173 ;;  result          2    8[COMMON] unsigned short 
 10174 ;; Return value:  Size  Location     Type
 10175 ;;                  2    2[COMMON] unsigned short 
 10176 ;; Registers used:
 10177 ;;		wreg, status,2, status,0
 10178 ;; Tracked objects:
 10179 ;;		On entry : 1F/0
 10180 ;;		On exit  : 1F/0
 10181 ;;		Unchanged: 1F/0
 10182 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10183 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10184 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10185 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10186 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10187 ;;Total ram usage:        8 bytes
 10188 ;; Hardware stack levels used: 1
 10189 ;; Hardware stack levels required when called: 4
 10190 ;; This function calls:
 10191 ;;		Nothing
 10192 ;; This function is called by:
 10193 ;;		_interpolate
 10194 ;;		_calculate_raw_position
 10195 ;; This function uses a non-reentrant model
 10196 ;;
 10197                           
 10198                           
 10199                           ;psect for function _divide
 10200  1521                     _divide:
 10201                           
 10202                           ;mcc_generated_files/mtouch/mtouch_slider.c: 191: static uint16_t divide(uint16_t numera
      +                          tor, uint16_t denominator, uint8_t exponent);mcc_generated_files/mtouch/mtouch_slider.c:
      +                           192: {;mcc_generated_files/mtouch/mtouch_slider.c: 193:     uint16_t result = 0u;
 10203                           
 10204                           ;incstack = 0
 10205                           ; Regs used in _divide: [wreg+status,2+status,0]
 10206  1521  01F8               	clrf	divide@result
 10207  1522  01F9               	clrf	divide@result+1
 10208                           
 10209                           ;mcc_generated_files/mtouch/mtouch_slider.c: 196:     exponent++;
 10210  1523  3001               	movlw	1
 10211  1524  00F7               	movwf	??_divide
 10212  1525  0877               	movf	??_divide,w
 10213  1526  07F6               	addwf	divide@exponent,f
 10214                           
 10215                           ;mcc_generated_files/mtouch/mtouch_slider.c: 198:     if (denominator != 0u)
 10216  1527  0874               	movf	divide@denominator,w
 10217  1528  0475               	iorwf	divide@denominator+1,w
 10218  1529  1D03               	btfss	3,2
 10219  152A  2D32               	goto	l6308
 10220  152B  2D63               	goto	l6332
 10221  152C                     l6304:
 10222                           
 10223                           ;mcc_generated_files/mtouch/mtouch_slider.c: 206:         {;mcc_generated_files/mtouch/m
      +                          touch_slider.c: 207:             exponent--;
 10224  152C  3001               	movlw	1
 10225  152D  02F6               	subwf	divide@exponent,f
 10226                           
 10227                           ;mcc_generated_files/mtouch/mtouch_slider.c: 208:             numerator = (uint16_t) (nu
      +                          merator << 1);
 10228  152E  3572               	lslf	divide@numerator,w
 10229  152F  00F2               	movwf	divide@numerator
 10230  1530  0D73               	rlf	divide@numerator+1,w
 10231  1531  00F3               	movwf	divide@numerator+1
 10232  1532                     l6308:
 10233                           
 10234                           ;mcc_generated_files/mtouch/mtouch_slider.c: 205:         while (((numerator & 0x8000u) 
      +                          == 0u) && (exponent != 0u))
 10235  1532  1BF3               	btfsc	divide@numerator+1,7
 10236  1533  2D40               	goto	l6316
 10237  1534  0876               	movf	divide@exponent,w
 10238  1535  1903               	btfsc	3,2
 10239  1536  2D40               	goto	l6316
 10240  1537  2D2C               	goto	l6304
 10241  1538                     l6312:
 10242                           
 10243                           ;mcc_generated_files/mtouch/mtouch_slider.c: 212:         {;mcc_generated_files/mtouch/m
      +                          touch_slider.c: 213:             exponent++;
 10244  1538  3001               	movlw	1
 10245  1539  00F7               	movwf	??_divide
 10246  153A  0877               	movf	??_divide,w
 10247  153B  07F6               	addwf	divide@exponent,f
 10248                           
 10249                           ;mcc_generated_files/mtouch/mtouch_slider.c: 214:             denominator = (uint16_t) (
      +                          denominator << 1);
 10250  153C  3574               	lslf	divide@denominator,w
 10251  153D  00F4               	movwf	divide@denominator
 10252  153E  0D75               	rlf	divide@denominator+1,w
 10253  153F  00F5               	movwf	divide@denominator+1
 10254  1540                     l6316:
 10255                           
 10256                           ;mcc_generated_files/mtouch/mtouch_slider.c: 211:         while ((denominator & 0x8000u)
      +                           == 0u)
 10257  1540  1BF5               	btfsc	divide@denominator+1,7
 10258  1541  2D5E               	goto	l6328
 10259  1542  2D38               	goto	l6312
 10260  1543                     l6318:
 10261                           
 10262                           ;mcc_generated_files/mtouch/mtouch_slider.c: 219:         {;mcc_generated_files/mtouch/m
      +                          touch_slider.c: 220:             result = (uint16_t) (result << 1);
 10263  1543  3578               	lslf	divide@result,w
 10264  1544  00F8               	movwf	divide@result
 10265  1545  0D79               	rlf	divide@result+1,w
 10266  1546  00F9               	movwf	divide@result+1
 10267                           
 10268                           ;mcc_generated_files/mtouch/mtouch_slider.c: 221:             exponent--;
 10269  1547  3001               	movlw	1
 10270  1548  02F6               	subwf	divide@exponent,f
 10271                           
 10272                           ;mcc_generated_files/mtouch/mtouch_slider.c: 222:             if (numerator >= denominat
      +                          or)
 10273  1549  0875               	movf	divide@denominator+1,w
 10274  154A  0273               	subwf	divide@numerator+1,w
 10275  154B  1D03               	skipz
 10276  154C  2D4F               	goto	u6115
 10277  154D  0874               	movf	divide@denominator,w
 10278  154E  0272               	subwf	divide@numerator,w
 10279  154F                     u6115:
 10280  154F  1C03               	skipc
 10281  1550  2D59               	goto	l6326
 10282                           
 10283                           ;mcc_generated_files/mtouch/mtouch_slider.c: 223:             {;mcc_generated_files/mtou
      +                          ch/mtouch_slider.c: 224:                 numerator -= denominator;
 10284  1551  0874               	movf	divide@denominator,w
 10285  1552  02F2               	subwf	divide@numerator,f
 10286  1553  0875               	movf	divide@denominator+1,w
 10287  1554  3BF3               	subwfb	divide@numerator+1,f
 10288                           
 10289                           ;mcc_generated_files/mtouch/mtouch_slider.c: 225:                 result++;
 10290  1555  3001               	movlw	1
 10291  1556  07F8               	addwf	divide@result,f
 10292  1557  3000               	movlw	0
 10293  1558  3DF9               	addwfc	divide@result+1,f
 10294  1559                     l6326:
 10295                           
 10296                           ;mcc_generated_files/mtouch/mtouch_slider.c: 227:             denominator >>= 1;
 10297  1559  3001               	movlw	1
 10298  155A                     u6125:
 10299  155A  36F5               	lsrf	divide@denominator+1,f
 10300  155B  0CF4               	rrf	divide@denominator,f
 10301  155C  0B89               	decfsz	9,f
 10302  155D  2D5A               	goto	u6125
 10303  155E                     l6328:
 10304                           
 10305                           ;mcc_generated_files/mtouch/mtouch_slider.c: 218:         while ((exponent != 0u) && ((r
      +                          esult & 0x8000u) == 0u))
 10306  155E  0876               	movf	divide@exponent,w
 10307  155F  1D03               	btfss	3,2
 10308  1560  1BF9               	btfsc	divide@result+1,7
 10309  1561  2D67               	goto	l6334
 10310  1562  2D43               	goto	l6318
 10311  1563                     l6332:
 10312                           
 10313                           ;mcc_generated_files/mtouch/mtouch_slider.c: 231:     {;mcc_generated_files/mtouch/mtouc
      +                          h_slider.c: 232:         result = 0xffffu;
 10314  1563  30FF               	movlw	255
 10315  1564  00F8               	movwf	divide@result
 10316  1565  30FF               	movlw	255
 10317  1566  00F9               	movwf	divide@result+1
 10318  1567                     l6334:
 10319                           
 10320                           ;mcc_generated_files/mtouch/mtouch_slider.c: 236:     if (exponent)
 10321  1567  0876               	movf	divide@exponent,w
 10322  1568  1903               	btfsc	3,2
 10323  1569  2D6E               	goto	l761
 10324                           
 10325                           ;mcc_generated_files/mtouch/mtouch_slider.c: 237:     {;mcc_generated_files/mtouch/mtouc
      +                          h_slider.c: 238:         result = 0xffffu;
 10326  156A  30FF               	movlw	255
 10327  156B  00F8               	movwf	divide@result
 10328  156C  30FF               	movlw	255
 10329  156D  00F9               	movwf	divide@result+1
 10330  156E                     l761:	
 10331                           ;mcc_generated_files/mtouch/mtouch_slider.c: 239:     }
 10332                           
 10333                           
 10334                           ;mcc_generated_files/mtouch/mtouch_slider.c: 241:     return result;
 10335  156E  0879               	movf	divide@result+1,w
 10336  156F  00F3               	movwf	?_divide+1
 10337  1570  0878               	movf	divide@result,w
 10338  1571  00F2               	movwf	?_divide
 10339  1572  0008               	return
 10340  1573                     __end_of_divide:
 10341                           
 10342                           	psect	text37
 10343  1573                     __ptext37:	
 10344 ;; *************** function _calculate_contact_size *****************
 10345 ;; Defined at:
 10346 ;;		line 628 in file "mcc_generated_files/mtouch/mtouch_slider.c"
 10347 ;; Parameters:    Size  Location     Type
 10348 ;;  slider          1    wreg     PTR struct .
 10349 ;;		 -> mtouch_slider(17), 
 10350 ;; Auto vars:     Size  Location     Type
 10351 ;;  slider          1   22[BANK0 ] PTR struct .
 10352 ;;		 -> mtouch_slider(17), 
 10353 ;;  contact_size    2   20[BANK0 ] unsigned short 
 10354 ;; Return value:  Size  Location     Type
 10355 ;;                  2   16[BANK0 ] unsigned short 
 10356 ;; Registers used:
 10357 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10358 ;; Tracked objects:
 10359 ;;		On entry : 1F/0
 10360 ;;		On exit  : 1F/0
 10361 ;;		Unchanged: 0/0
 10362 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10363 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10364 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10365 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10366 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10367 ;;Total ram usage:        7 bytes
 10368 ;; Hardware stack levels used: 1
 10369 ;; Hardware stack levels required when called: 7
 10370 ;; This function calls:
 10371 ;;		_Slider_FindLeft
 10372 ;;		_Slider_FindMiddle
 10373 ;;		_Slider_FindRight
 10374 ;; This function is called by:
 10375 ;;		_Slider_Service
 10376 ;; This function uses a non-reentrant model
 10377 ;;
 10378                           
 10379                           
 10380                           ;psect for function _calculate_contact_size
 10381  1573                     _calculate_contact_size:
 10382                           
 10383                           ;incstack = 0
 10384                           ; Regs used in _calculate_contact_size: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10385                           ;calculate_contact_size@slider stored from wreg
 10386  1573  00B6               	movwf	calculate_contact_size@slider
 10387                           
 10388                           ;mcc_generated_files/mtouch/mtouch_slider.c: 628: static uint16_t calculate_contact_size
      +                          (mtouch_slider_t* slider);mcc_generated_files/mtouch/mtouch_slider.c: 629: {;mcc_generat
      +                          ed_files/mtouch/mtouch_slider.c: 630:     uint16_t contact_size;;mcc_generated_files/mto
      +                          uch/mtouch_slider.c: 632:     middle_signal = Slider_FindMiddle(slider);
 10389  1574  0836               	movf	calculate_contact_size@slider,w
 10390  1575  3193  23E6  3195   	fcall	_Slider_FindMiddle
 10391  1578  0825               	movf	?_Slider_FindMiddle+1,w
 10392  1579  0021               	movlb	1	; select bank1
 10393  157A  00EA               	movwf	(_middle_signal+1)^(0+128)
 10394  157B  0020               	movlb	0	; select bank0
 10395  157C  0824               	movf	?_Slider_FindMiddle,w
 10396  157D  0021               	movlb	1	; select bank1
 10397  157E  00E9               	movwf	_middle_signal^(0+128)
 10398                           
 10399                           ;mcc_generated_files/mtouch/mtouch_slider.c: 633:     right_signal = Slider_FindRight(sl
      +                          ider);
 10400  157F  0020               	movlb	0	; select bank0
 10401  1580  0836               	movf	calculate_contact_size@slider,w
 10402  1581  3192  22DD  3195   	fcall	_Slider_FindRight
 10403  1584  0825               	movf	?_Slider_FindRight+1,w
 10404  1585  00E2               	movwf	_right_signal+1
 10405  1586  0824               	movf	?_Slider_FindRight,w
 10406  1587  00E1               	movwf	_right_signal
 10407                           
 10408                           ;mcc_generated_files/mtouch/mtouch_slider.c: 634:     left_signal = Slider_FindLeft(slid
      +                          er);
 10409  1588  0836               	movf	calculate_contact_size@slider,w
 10410  1589  3194  2480  3195   	fcall	_Slider_FindLeft
 10411  158C  0825               	movf	?_Slider_FindLeft+1,w
 10412  158D  00E4               	movwf	_left_signal+1
 10413  158E  0824               	movf	?_Slider_FindLeft,w
 10414  158F  00E3               	movwf	_left_signal
 10415                           
 10416                           ;mcc_generated_files/mtouch/mtouch_slider.c: 636:     if (right_signal > left_signal)
 10417  1590  0864               	movf	_left_signal+1,w
 10418  1591  3A80               	xorlw	128
 10419  1592  00B2               	movwf	??_calculate_contact_size
 10420  1593  0862               	movf	_right_signal+1,w
 10421  1594  3A80               	xorlw	128
 10422  1595  0232               	subwf	??_calculate_contact_size,w
 10423  1596  1D03               	skipz
 10424  1597  2D9A               	goto	u7155
 10425  1598  0861               	movf	_right_signal,w
 10426  1599  0263               	subwf	_left_signal,w
 10427  159A                     u7155:
 10428  159A  1803               	skipnc
 10429  159B  2DA4               	goto	l6986
 10430                           
 10431                           ;mcc_generated_files/mtouch/mtouch_slider.c: 637:     {;mcc_generated_files/mtouch/mtouc
      +                          h_slider.c: 638:         contact_size = middle_signal + right_signal;
 10432  159C  0020               	movlb	0	; select bank0
 10433  159D  0861               	movf	_right_signal,w
 10434  159E  0021               	movlb	1	; select bank1
 10435  159F  0769               	addwf	_middle_signal^(0+128),w
 10436  15A0  0020               	movlb	0	; select bank0
 10437  15A1  00B4               	movwf	calculate_contact_size@contact_size
 10438  15A2  0862               	movf	_right_signal+1,w
 10439  15A3  2DAB               	goto	L7
 10440  15A4                     l6986:	
 10441                           ;mcc_generated_files/mtouch/mtouch_slider.c: 639:     }
 10442                           
 10443                           
 10444                           ;mcc_generated_files/mtouch/mtouch_slider.c: 641:     {;mcc_generated_files/mtouch/mtouc
      +                          h_slider.c: 642:         contact_size = middle_signal + left_signal;
 10445  15A4  0020               	movlb	0	; select bank0
 10446  15A5  0863               	movf	_left_signal,w
 10447  15A6  0021               	movlb	1	; select bank1
 10448  15A7  0769               	addwf	_middle_signal^(0+128),w
 10449  15A8  0020               	movlb	0	; select bank0
 10450  15A9  00B4               	movwf	calculate_contact_size@contact_size
 10451  15AA  0864               	movf	_left_signal+1,w
 10452  15AB                     L7:
 10453  15AB  0021               	movlb	1	; select bank1
 10454  15AC  3D6A               	addwfc	(_middle_signal+1)^(0+128),w
 10455  15AD  0020               	movlb	0	; select bank0
 10456  15AE  00B5               	movwf	calculate_contact_size@contact_size+1
 10457                           
 10458                           ;mcc_generated_files/mtouch/mtouch_slider.c: 645:     if (contact_size < slider->contact
      +                          Threshold)
 10459  15AF  0836               	movf	calculate_contact_size@slider,w
 10460  15B0  3E06               	addlw	6
 10461  15B1  0086               	movwf	6
 10462  15B2  0187               	clrf	7
 10463  15B3  3F40               	moviw [0]fsr1
 10464  15B4  00B2               	movwf	??_calculate_contact_size
 10465  15B5  3F41               	moviw [1]fsr1
 10466  15B6  00B3               	movwf	??_calculate_contact_size+1
 10467  15B7  0833               	movf	??_calculate_contact_size+1,w
 10468  15B8  0235               	subwf	calculate_contact_size@contact_size+1,w
 10469  15B9  1D03               	skipz
 10470  15BA  2DBD               	goto	u7165
 10471  15BB  0832               	movf	??_calculate_contact_size,w
 10472  15BC  0234               	subwf	calculate_contact_size@contact_size,w
 10473  15BD                     u7165:
 10474  15BD  1803               	skipnc
 10475  15BE  2DC1               	goto	l6992
 10476                           
 10477                           ;mcc_generated_files/mtouch/mtouch_slider.c: 646:     {;mcc_generated_files/mtouch/mtouc
      +                          h_slider.c: 647:         contact_size = 0u;
 10478  15BF  01B4               	clrf	calculate_contact_size@contact_size
 10479  15C0  01B5               	clrf	calculate_contact_size@contact_size+1
 10480  15C1                     l6992:
 10481                           
 10482                           ;mcc_generated_files/mtouch/mtouch_slider.c: 650:     return contact_size;
 10483  15C1  0835               	movf	calculate_contact_size@contact_size+1,w
 10484  15C2  00B1               	movwf	?_calculate_contact_size+1
 10485  15C3  0834               	movf	calculate_contact_size@contact_size,w
 10486  15C4  00B0               	movwf	?_calculate_contact_size
 10487  15C5  0008               	return
 10488  15C6                     __end_of_calculate_contact_size:
 10489                           
 10490                           	psect	text38
 10491  12DD                     __ptext38:	
 10492 ;; *************** function _Slider_FindRight *****************
 10493 ;; Defined at:
 10494 ;;		line 484 in file "mcc_generated_files/mtouch/mtouch_slider.c"
 10495 ;; Parameters:    Size  Location     Type
 10496 ;;  slider          1    wreg     PTR struct .
 10497 ;;		 -> mtouch_slider(17), 
 10498 ;; Auto vars:     Size  Location     Type
 10499 ;;  slider          1   11[BANK0 ] PTR struct .
 10500 ;;		 -> mtouch_slider(17), 
 10501 ;;  ref_node        1   10[BANK0 ] unsigned char 
 10502 ;; Return value:  Size  Location     Type
 10503 ;;                  2    4[BANK0 ] short 
 10504 ;; Registers used:
 10505 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10506 ;; Tracked objects:
 10507 ;;		On entry : 1F/0
 10508 ;;		On exit  : 1F/0
 10509 ;;		Unchanged: 0/0
 10510 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10511 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10512 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10513 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10514 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10515 ;;Total ram usage:        8 bytes
 10516 ;; Hardware stack levels used: 1
 10517 ;; Hardware stack levels required when called: 6
 10518 ;; This function calls:
 10519 ;;		_MTOUCH_Button_Deviation_Get
 10520 ;; This function is called by:
 10521 ;;		_calculate_contact_size
 10522 ;; This function uses a non-reentrant model
 10523 ;;
 10524                           
 10525                           
 10526                           ;psect for function _Slider_FindRight
 10527  12DD                     _Slider_FindRight:
 10528                           
 10529                           ;incstack = 0
 10530                           ; Regs used in _Slider_FindRight: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 10531                           ;Slider_FindRight@slider stored from wreg
 10532  12DD  00AB               	movwf	Slider_FindRight@slider
 10533                           
 10534                           ;mcc_generated_files/mtouch/mtouch_slider.c: 484: static int16_t Slider_FindRight(mtouch
      +                          _slider_t* slider);mcc_generated_files/mtouch/mtouch_slider.c: 485: {;mcc_generated_file
      +                          s/mtouch/mtouch_slider.c: 486:     uint8_t ref_node = slider->startSegment;
 10535  12DE  082B               	movf	Slider_FindRight@slider,w
 10536  12DF  0086               	movwf	6
 10537  12E0  0187               	clrf	7
 10538  12E1  3F42               	moviw [2]fsr1
 10539  12E2  00AA               	movwf	Slider_FindRight@ref_node
 10540                           
 10541                           ;mcc_generated_files/mtouch/mtouch_slider.c: 489:     if (middle_node == (ref_node + sli
      +                          der->segmentCount - 1u))
 10542  12E3  082B               	movf	Slider_FindRight@slider,w
 10543  12E4  3E03               	addlw	3
 10544  12E5  0086               	movwf	6
 10545  12E6  0187               	clrf	7
 10546  12E7  082A               	movf	Slider_FindRight@ref_node,w
 10547  12E8  0701               	addwf	1,w
 10548  12E9  00A6               	movwf	??_Slider_FindRight
 10549  12EA  01A7               	clrf	??_Slider_FindRight+1
 10550  12EB  0DA7               	rlf	??_Slider_FindRight+1,f
 10551  12EC  0826               	movf	??_Slider_FindRight,w
 10552  12ED  3EFF               	addlw	255
 10553  12EE  00A8               	movwf	??_Slider_FindRight+2
 10554  12EF  30FF               	movlw	255
 10555  12F0  3D27               	addwfc	??_Slider_FindRight+1,w
 10556  12F1  00A9               	movwf	??_Slider_FindRight+3
 10557  12F2  0867               	movf	_middle_node,w
 10558  12F3  0628               	xorwf	??_Slider_FindRight+2,w
 10559  12F4  0429               	iorwf	??_Slider_FindRight+3,w
 10560  12F5  1D03               	skipz
 10561  12F6  2B02               	goto	l6692
 10562                           
 10563                           ;mcc_generated_files/mtouch/mtouch_slider.c: 490:     {;mcc_generated_files/mtouch/mtouc
      +                          h_slider.c: 491:         if (slider->type == MTOUCH_TYPE_WHEEL)
 10564  12F7  0A2B               	incf	Slider_FindRight@slider,w
 10565  12F8  0086               	movwf	6
 10566  12F9  0187               	clrf	7
 10567  12FA  0301               	decf	1,w
 10568  12FB  1D03               	btfss	3,2
 10569  12FC  2AFF               	goto	l6690
 10570                           
 10571                           ;mcc_generated_files/mtouch/mtouch_slider.c: 492:         {;mcc_generated_files/mtouch/m
      +                          touch_slider.c: 495:             right_signal = (int16_t) MTOUCH_Button_Deviation_Get(re
      +                          f_node);
 10572  12FD  082A               	movf	Slider_FindRight@ref_node,w
 10573  12FE  2B04               	goto	L8
 10574  12FF                     l6690:	
 10575                           ;mcc_generated_files/mtouch/mtouch_slider.c: 496:         }
 10576                           
 10577                           
 10578                           ;mcc_generated_files/mtouch/mtouch_slider.c: 498:         {;mcc_generated_files/mtouch/m
      +                          touch_slider.c: 500:             right_signal = 0;
 10579  12FF  01E1               	clrf	_right_signal
 10580  1300  01E2               	clrf	_right_signal+1
 10581  1301  2B0B               	goto	l6694
 10582  1302                     l6692:
 10583                           
 10584                           ;mcc_generated_files/mtouch/mtouch_slider.c: 504:     {;mcc_generated_files/mtouch/mtouc
      +                          h_slider.c: 505:         right_signal = (int16_t) MTOUCH_Button_Deviation_Get(middle_nod
      +                          e + 1u);
 10585  1302  0867               	movf	_middle_node,w
 10586  1303  3E01               	addlw	1
 10587  1304                     L8:
 10588  1304  3191  2105  3192   	fcall	_MTOUCH_Button_Deviation_Get
 10589  1307  00E1               	movwf	_right_signal
 10590  1308  01E2               	clrf	_right_signal+1
 10591  1309  1BE1               	btfsc	_right_signal,7
 10592  130A  03E2               	decf	_right_signal+1,f
 10593  130B                     l6694:
 10594                           
 10595                           ;mcc_generated_files/mtouch/mtouch_slider.c: 508:     if (right_signal < 0)
 10596  130B  1FE2               	btfss	_right_signal+1,7
 10597  130C  2B0F               	goto	l6698
 10598                           
 10599                           ;mcc_generated_files/mtouch/mtouch_slider.c: 509:     {;mcc_generated_files/mtouch/mtouc
      +                          h_slider.c: 510:         right_signal = 0;
 10600  130D  01E1               	clrf	_right_signal
 10601  130E  01E2               	clrf	_right_signal+1
 10602  130F                     l6698:
 10603                           
 10604                           ;mcc_generated_files/mtouch/mtouch_slider.c: 513:     return right_signal;
 10605  130F  0862               	movf	_right_signal+1,w
 10606  1310  00A5               	movwf	?_Slider_FindRight+1
 10607  1311  0861               	movf	_right_signal,w
 10608  1312  00A4               	movwf	?_Slider_FindRight
 10609  1313  0008               	return
 10610  1314                     __end_of_Slider_FindRight:
 10611                           
 10612                           	psect	text39
 10613  13E6                     __ptext39:	
 10614 ;; *************** function _Slider_FindMiddle *****************
 10615 ;; Defined at:
 10616 ;;		line 408 in file "mcc_generated_files/mtouch/mtouch_slider.c"
 10617 ;; Parameters:    Size  Location     Type
 10618 ;;  slider          1    wreg     PTR struct .
 10619 ;;		 -> mtouch_slider(17), 
 10620 ;; Auto vars:     Size  Location     Type
 10621 ;;  slider          1   15[BANK0 ] PTR struct .
 10622 ;;		 -> mtouch_slider(17), 
 10623 ;;  maximumDelta    2   12[BANK0 ] short 
 10624 ;;  channelDelta    2   10[BANK0 ] short 
 10625 ;;  i               1   14[BANK0 ] unsigned char 
 10626 ;; Return value:  Size  Location     Type
 10627 ;;                  2    4[BANK0 ] short 
 10628 ;; Registers used:
 10629 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10630 ;; Tracked objects:
 10631 ;;		On entry : 1F/0
 10632 ;;		On exit  : 1F/0
 10633 ;;		Unchanged: 0/0
 10634 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10635 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10636 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10637 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10638 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10639 ;;Total ram usage:       12 bytes
 10640 ;; Hardware stack levels used: 1
 10641 ;; Hardware stack levels required when called: 6
 10642 ;; This function calls:
 10643 ;;		_MTOUCH_Button_Deviation_Get
 10644 ;; This function is called by:
 10645 ;;		_calculate_contact_size
 10646 ;; This function uses a non-reentrant model
 10647 ;;
 10648                           
 10649                           
 10650                           ;psect for function _Slider_FindMiddle
 10651  13E6                     _Slider_FindMiddle:
 10652                           
 10653                           ;incstack = 0
 10654                           ; Regs used in _Slider_FindMiddle: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10655                           ;Slider_FindMiddle@slider stored from wreg
 10656  13E6  00AF               	movwf	Slider_FindMiddle@slider
 10657                           
 10658                           ;mcc_generated_files/mtouch/mtouch_slider.c: 408: static int16_t Slider_FindMiddle(mtouc
      +                          h_slider_t* slider);mcc_generated_files/mtouch/mtouch_slider.c: 409: {;mcc_generated_fil
      +                          es/mtouch/mtouch_slider.c: 410:     uint8_t i;;mcc_generated_files/mtouch/mtouch_slider.
      +                          c: 411:     int16_t channelDelta, maximumDelta;;mcc_generated_files/mtouch/mtouch_slider
      +                          .c: 413:     maximumDelta = 0;
 10659  13E7  01AC               	clrf	Slider_FindMiddle@maximumDelta
 10660  13E8  01AD               	clrf	Slider_FindMiddle@maximumDelta+1
 10661                           
 10662                           ;mcc_generated_files/mtouch/mtouch_slider.c: 414:     middle_node = slider->startSegment
      +                          ;
 10663  13E9  082F               	movf	Slider_FindMiddle@slider,w
 10664  13EA  0086               	movwf	6
 10665  13EB  0187               	clrf	7
 10666  13EC  3F42               	moviw [2]fsr1
 10667  13ED  00E7               	movwf	_middle_node
 10668                           
 10669                           ;mcc_generated_files/mtouch/mtouch_slider.c: 417:     for (i = slider->startSegment; i <
      +                           (slider->startSegment + slider->segmentCount); i++)
 10670  13EE  082F               	movf	Slider_FindMiddle@slider,w
 10671  13EF  0086               	movwf	6
 10672  13F0  0187               	clrf	7
 10673  13F1  3F42               	moviw [2]fsr1
 10674  13F2  00AE               	movwf	Slider_FindMiddle@i
 10675  13F3                     l6650:
 10676  13F3  082F               	movf	Slider_FindMiddle@slider,w
 10677  13F4  3E03               	addlw	3
 10678  13F5  0086               	movwf	6
 10679  13F6  0187               	clrf	7
 10680  13F7  082F               	movf	Slider_FindMiddle@slider,w
 10681  13F8  3E02               	addlw	2
 10682  13F9  0084               	movwf	4
 10683  13FA  0185               	clrf	5
 10684  13FB  0800               	movf	0,w
 10685  13FC  0701               	addwf	1,w
 10686  13FD  00A6               	movwf	??_Slider_FindMiddle
 10687  13FE  01A7               	clrf	??_Slider_FindMiddle+1
 10688  13FF  0DA7               	rlf	??_Slider_FindMiddle+1,f
 10689  1400  082E               	movf	Slider_FindMiddle@i,w
 10690  1401  00A8               	movwf	??_Slider_FindMiddle+2
 10691  1402  01A9               	clrf	??_Slider_FindMiddle+3
 10692  1403  0827               	movf	??_Slider_FindMiddle+1,w
 10693  1404  0229               	subwf	??_Slider_FindMiddle+3,w
 10694  1405  1D03               	skipz
 10695  1406  2C09               	goto	u6605
 10696  1407  0826               	movf	??_Slider_FindMiddle,w
 10697  1408  0228               	subwf	??_Slider_FindMiddle+2,w
 10698  1409                     u6605:
 10699  1409  1803               	btfsc	3,0
 10700  140A  2C2E               	goto	l6652
 10701                           
 10702                           ;mcc_generated_files/mtouch/mtouch_slider.c: 418:     {;mcc_generated_files/mtouch/mtouc
      +                          h_slider.c: 420:         channelDelta = (int16_t) MTOUCH_Button_Deviation_Get(i);
 10703  140B  082E               	movf	Slider_FindMiddle@i,w
 10704  140C  3191  2105  3193   	fcall	_MTOUCH_Button_Deviation_Get
 10705  140F  00AA               	movwf	Slider_FindMiddle@channelDelta
 10706  1410  01AB               	clrf	Slider_FindMiddle@channelDelta+1
 10707  1411  1BAA               	btfsc	Slider_FindMiddle@channelDelta,7
 10708  1412  03AB               	decf	Slider_FindMiddle@channelDelta+1,f
 10709                           
 10710                           ;mcc_generated_files/mtouch/mtouch_slider.c: 423:         if (channelDelta > maximumDelt
      +                          a)
 10711  1413  082D               	movf	Slider_FindMiddle@maximumDelta+1,w
 10712  1414  3A80               	xorlw	128
 10713  1415  00A6               	movwf	??_Slider_FindMiddle
 10714  1416  082B               	movf	Slider_FindMiddle@channelDelta+1,w
 10715  1417  3A80               	xorlw	128
 10716  1418  0226               	subwf	??_Slider_FindMiddle,w
 10717  1419  1D03               	skipz
 10718  141A  2C1D               	goto	u6595
 10719  141B  082A               	movf	Slider_FindMiddle@channelDelta,w
 10720  141C  022C               	subwf	Slider_FindMiddle@maximumDelta,w
 10721  141D                     u6595:
 10722  141D  1803               	skipnc
 10723  141E  2C28               	goto	l6648
 10724                           
 10725                           ;mcc_generated_files/mtouch/mtouch_slider.c: 424:         {;mcc_generated_files/mtouch/m
      +                          touch_slider.c: 425:             middle_node = i;
 10726  141F  0020               	movlb	0	; select bank0
 10727  1420  082E               	movf	Slider_FindMiddle@i,w
 10728  1421  00A6               	movwf	??_Slider_FindMiddle
 10729  1422  0826               	movf	??_Slider_FindMiddle,w
 10730  1423  00E7               	movwf	_middle_node
 10731                           
 10732                           ;mcc_generated_files/mtouch/mtouch_slider.c: 426:             maximumDelta = channelDelt
      +                          a;
 10733  1424  082B               	movf	Slider_FindMiddle@channelDelta+1,w
 10734  1425  00AD               	movwf	Slider_FindMiddle@maximumDelta+1
 10735  1426  082A               	movf	Slider_FindMiddle@channelDelta,w
 10736  1427  00AC               	movwf	Slider_FindMiddle@maximumDelta
 10737  1428                     l6648:
 10738                           
 10739                           ;mcc_generated_files/mtouch/mtouch_slider.c: 428:     }
 10740  1428  3001               	movlw	1
 10741  1429  0020               	movlb	0	; select bank0
 10742  142A  00A6               	movwf	??_Slider_FindMiddle
 10743  142B  0826               	movf	??_Slider_FindMiddle,w
 10744  142C  07AE               	addwf	Slider_FindMiddle@i,f
 10745  142D  2BF3               	goto	l6650
 10746  142E                     l6652:
 10747                           
 10748                           ;mcc_generated_files/mtouch/mtouch_slider.c: 430:     return maximumDelta;
 10749  142E  082D               	movf	Slider_FindMiddle@maximumDelta+1,w
 10750  142F  00A5               	movwf	?_Slider_FindMiddle+1
 10751  1430  082C               	movf	Slider_FindMiddle@maximumDelta,w
 10752  1431  00A4               	movwf	?_Slider_FindMiddle
 10753  1432  0008               	return
 10754  1433                     __end_of_Slider_FindMiddle:
 10755                           
 10756                           	psect	text40
 10757  1480                     __ptext40:	
 10758 ;; *************** function _Slider_FindLeft *****************
 10759 ;; Defined at:
 10760 ;;		line 438 in file "mcc_generated_files/mtouch/mtouch_slider.c"
 10761 ;; Parameters:    Size  Location     Type
 10762 ;;  slider          1    wreg     PTR struct .
 10763 ;;		 -> mtouch_slider(17), 
 10764 ;; Auto vars:     Size  Location     Type
 10765 ;;  slider          1    6[BANK0 ] PTR struct .
 10766 ;;		 -> mtouch_slider(17), 
 10767 ;;  ref_node        1    7[BANK0 ] unsigned char 
 10768 ;; Return value:  Size  Location     Type
 10769 ;;                  2    4[BANK0 ] short 
 10770 ;; Registers used:
 10771 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10772 ;; Tracked objects:
 10773 ;;		On entry : 1F/0
 10774 ;;		On exit  : 1F/0
 10775 ;;		Unchanged: 0/0
 10776 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10777 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10778 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10779 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10780 ;;      Totals:         1       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10781 ;;Total ram usage:        5 bytes
 10782 ;; Hardware stack levels used: 1
 10783 ;; Hardware stack levels required when called: 6
 10784 ;; This function calls:
 10785 ;;		_MTOUCH_Button_Deviation_Get
 10786 ;; This function is called by:
 10787 ;;		_calculate_contact_size
 10788 ;; This function uses a non-reentrant model
 10789 ;;
 10790                           
 10791                           
 10792                           ;psect for function _Slider_FindLeft
 10793  1480                     _Slider_FindLeft:
 10794                           
 10795                           ;incstack = 0
 10796                           ; Regs used in _Slider_FindLeft: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 10797                           ;Slider_FindLeft@slider stored from wreg
 10798  1480  00A6               	movwf	Slider_FindLeft@slider
 10799                           
 10800                           ;mcc_generated_files/mtouch/mtouch_slider.c: 438: static int16_t Slider_FindLeft(mtouch_
      +                          slider_t* slider);mcc_generated_files/mtouch/mtouch_slider.c: 439: {;mcc_generated_files
      +                          /mtouch/mtouch_slider.c: 440:     uint8_t ref_node = slider->startSegment;
 10801  1481  0826               	movf	Slider_FindLeft@slider,w
 10802  1482  0086               	movwf	6
 10803  1483  0187               	clrf	7
 10804  1484  3F42               	moviw [2]fsr1
 10805  1485  00A7               	movwf	Slider_FindLeft@ref_node
 10806                           
 10807                           ;mcc_generated_files/mtouch/mtouch_slider.c: 442:     wheel_sensor_middle_channel_zero =
      +                           0;
 10808  1486  0021               	movlb	1	; select bank1
 10809  1487  01EE               	clrf	_wheel_sensor_middle_channel_zero^(0+128)
 10810                           
 10811                           ;mcc_generated_files/mtouch/mtouch_slider.c: 445:     if (middle_node == ref_node)
 10812  1488  0020               	movlb	0	; select bank0
 10813  1489  0867               	movf	_middle_node,w
 10814  148A  0627               	xorwf	Slider_FindLeft@ref_node,w
 10815  148B  1D03               	skipz
 10816  148C  2CBD               	goto	l6672
 10817                           
 10818                           ;mcc_generated_files/mtouch/mtouch_slider.c: 446:     {;mcc_generated_files/mtouch/mtouc
      +                          h_slider.c: 447:         if (slider->type == MTOUCH_TYPE_WHEEL)
 10819  148D  0A26               	incf	Slider_FindLeft@slider,w
 10820  148E  0086               	movwf	6
 10821  148F  0187               	clrf	7
 10822  1490  0301               	decf	1,w
 10823  1491  1D03               	btfss	3,2
 10824  1492  2CBA               	goto	l6670
 10825                           
 10826                           ;mcc_generated_files/mtouch/mtouch_slider.c: 448:         {;mcc_generated_files/mtouch/m
      +                          touch_slider.c: 451:             left_signal = (int16_t) MTOUCH_Button_Deviation_Get(ref
      +                          _node + slider->segmentCount - 1u);
 10827  1493  0826               	movf	Slider_FindLeft@slider,w
 10828  1494  3E03               	addlw	3
 10829  1495  0086               	movwf	6
 10830  1496  0187               	clrf	7
 10831  1497  0801               	movf	1,w
 10832  1498  0727               	addwf	Slider_FindLeft@ref_node,w
 10833  1499  3EFF               	addlw	255
 10834  149A  3191  2105  3194   	fcall	_MTOUCH_Button_Deviation_Get
 10835  149D  00E3               	movwf	_left_signal
 10836  149E  01E4               	clrf	_left_signal+1
 10837  149F  1BE3               	btfsc	_left_signal,7
 10838  14A0  03E4               	decf	_left_signal+1,f
 10839                           
 10840                           ;mcc_generated_files/mtouch/mtouch_slider.c: 454:             right_signal = (int16_t) M
      +                          TOUCH_Button_Deviation_Get(ref_node + 1u);
 10841  14A1  0827               	movf	Slider_FindLeft@ref_node,w
 10842  14A2  3E01               	addlw	1
 10843  14A3  3191  2105  3194   	fcall	_MTOUCH_Button_Deviation_Get
 10844  14A6  00E1               	movwf	_right_signal
 10845  14A7  01E2               	clrf	_right_signal+1
 10846  14A8  1BE1               	btfsc	_right_signal,7
 10847  14A9  03E2               	decf	_right_signal+1,f
 10848                           
 10849                           ;mcc_generated_files/mtouch/mtouch_slider.c: 456:             if(left_signal > right_sig
      +                          nal)
 10850  14AA  0862               	movf	_right_signal+1,w
 10851  14AB  3A80               	xorlw	128
 10852  14AC  00F9               	movwf	??_Slider_FindLeft
 10853  14AD  0864               	movf	_left_signal+1,w
 10854  14AE  3A80               	xorlw	128
 10855  14AF  0279               	subwf	??_Slider_FindLeft,w
 10856  14B0  1D03               	skipz
 10857  14B1  2CB4               	goto	u6635
 10858  14B2  0863               	movf	_left_signal,w
 10859  14B3  0261               	subwf	_right_signal,w
 10860  14B4                     u6635:
 10861  14B4  1803               	skipnc
 10862  14B5  2CC6               	goto	l6674
 10863                           
 10864                           ;mcc_generated_files/mtouch/mtouch_slider.c: 457:             {;mcc_generated_files/mtou
      +                          ch/mtouch_slider.c: 458:                 wheel_sensor_middle_channel_zero = 1;
 10865  14B6  0021               	movlb	1	; select bank1
 10866  14B7  01EE               	clrf	_wheel_sensor_middle_channel_zero^(0+128)
 10867  14B8  0AEE               	incf	_wheel_sensor_middle_channel_zero^(0+128),f
 10868  14B9  2CC6               	goto	l6674
 10869  14BA                     l6670:
 10870                           
 10871                           ;mcc_generated_files/mtouch/mtouch_slider.c: 462:         {;mcc_generated_files/mtouch/m
      +                          touch_slider.c: 464:             left_signal = 0;
 10872  14BA  01E3               	clrf	_left_signal
 10873  14BB  01E4               	clrf	_left_signal+1
 10874  14BC  2CC6               	goto	l6674
 10875  14BD                     l6672:
 10876                           
 10877                           ;mcc_generated_files/mtouch/mtouch_slider.c: 468:     {;mcc_generated_files/mtouch/mtouc
      +                          h_slider.c: 469:         left_signal = (int16_t) MTOUCH_Button_Deviation_Get(middle_node
      +                           - 1u);
 10878  14BD  0867               	movf	_middle_node,w
 10879  14BE  3EFF               	addlw	255
 10880  14BF  3191  2105  3194   	fcall	_MTOUCH_Button_Deviation_Get
 10881  14C2  00E3               	movwf	_left_signal
 10882  14C3  01E4               	clrf	_left_signal+1
 10883  14C4  1BE3               	btfsc	_left_signal,7
 10884  14C5  03E4               	decf	_left_signal+1,f
 10885  14C6                     l6674:
 10886                           
 10887                           ;mcc_generated_files/mtouch/mtouch_slider.c: 472:     if (left_signal < 0)
 10888  14C6  0020               	movlb	0	; select bank0
 10889  14C7  1FE4               	btfss	_left_signal+1,7
 10890  14C8  2CCB               	goto	l6678
 10891                           
 10892                           ;mcc_generated_files/mtouch/mtouch_slider.c: 473:     {;mcc_generated_files/mtouch/mtouc
      +                          h_slider.c: 474:         left_signal = 0;
 10893  14C9  01E3               	clrf	_left_signal
 10894  14CA  01E4               	clrf	_left_signal+1
 10895  14CB                     l6678:
 10896                           
 10897                           ;mcc_generated_files/mtouch/mtouch_slider.c: 476:     return left_signal;
 10898  14CB  0864               	movf	_left_signal+1,w
 10899  14CC  00A5               	movwf	?_Slider_FindLeft+1
 10900  14CD  0863               	movf	_left_signal,w
 10901  14CE  00A4               	movwf	?_Slider_FindLeft
 10902  14CF  0008               	return
 10903  14D0                     __end_of_Slider_FindLeft:
 10904                           
 10905                           	psect	text41
 10906  1105                     __ptext41:	
 10907 ;; *************** function _MTOUCH_Button_Deviation_Get *****************
 10908 ;; Defined at:
 10909 ;;		line 580 in file "mcc_generated_files/mtouch/mtouch_button.c"
 10910 ;; Parameters:    Size  Location     Type
 10911 ;;  name            1    wreg     enum E2936
 10912 ;; Auto vars:     Size  Location     Type
 10913 ;;  name            1    8[COMMON] enum E2936
 10914 ;; Return value:  Size  Location     Type
 10915 ;;                  1    wreg      char 
 10916 ;; Registers used:
 10917 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10918 ;; Tracked objects:
 10919 ;;		On entry : 1F/0
 10920 ;;		On exit  : 1F/0
 10921 ;;		Unchanged: 0/0
 10922 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10923 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10924 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10925 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10926 ;;      Totals:         1       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10927 ;;Total ram usage:        5 bytes
 10928 ;; Hardware stack levels used: 1
 10929 ;; Hardware stack levels required when called: 5
 10930 ;; This function calls:
 10931 ;;		___wmul
 10932 ;; This function is called by:
 10933 ;;		_Slider_FindMiddle
 10934 ;;		_Slider_FindLeft
 10935 ;;		_Slider_FindRight
 10936 ;; This function uses a non-reentrant model
 10937 ;;
 10938                           
 10939                           
 10940                           ;psect for function _MTOUCH_Button_Deviation_Get
 10941  1105                     _MTOUCH_Button_Deviation_Get:
 10942                           
 10943                           ;incstack = 0
 10944                           ; Regs used in _MTOUCH_Button_Deviation_Get: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
 10945                           ;MTOUCH_Button_Deviation_Get@name stored from wreg
 10946  1105  00F8               	movwf	MTOUCH_Button_Deviation_Get@name
 10947                           
 10948                           ;mcc_generated_files/mtouch/mtouch_button.c: 580: mtouch_button_deviation_t MTOUCH_Butto
      +                          n_Deviation_Get(enum mtouch_button_names name);mcc_generated_files/mtouch/mtouch_button.
      +                          c: 581: {;mcc_generated_files/mtouch/mtouch_button.c: 582:     if(name < 5u)
 10949  1106  3005               	movlw	5
 10950  1107  0278               	subwf	MTOUCH_Button_Deviation_Get@name,w
 10951  1108  1803               	skipnc
 10952  1109  2923               	goto	l6362
 10953                           
 10954                           ;mcc_generated_files/mtouch/mtouch_button.c: 583:         return mtouch_button[name].dev
      +                          iation;
 10955  110A  0878               	movf	MTOUCH_Button_Deviation_Get@name,w
 10956  110B  00A0               	movwf	??_MTOUCH_Button_Deviation_Get
 10957  110C  01A1               	clrf	??_MTOUCH_Button_Deviation_Get+1
 10958  110D  0820               	movf	??_MTOUCH_Button_Deviation_Get,w
 10959  110E  00F2               	movwf	___wmul@multiplier
 10960  110F  0821               	movf	??_MTOUCH_Button_Deviation_Get+1,w
 10961  1110  00F3               	movwf	___wmul@multiplier+1
 10962  1111  3011               	movlw	17
 10963  1112  00F4               	movwf	___wmul@multiplicand
 10964  1113  3000               	movlw	0
 10965  1114  00F5               	movwf	___wmul@multiplicand+1
 10966  1115  319D  2538         	fcall	___wmul
 10967  1117  30A5               	movlw	165
 10968  1118  00A2               	movwf	??_MTOUCH_Button_Deviation_Get+2
 10969  1119  3023               	movlw	35
 10970  111A  00A3               	movwf	??_MTOUCH_Button_Deviation_Get+3
 10971  111B  0872               	movf	?___wmul,w
 10972  111C  0722               	addwf	??_MTOUCH_Button_Deviation_Get+2,w
 10973  111D  0086               	movwf	6
 10974  111E  0873               	movf	?___wmul+1,w
 10975  111F  3D23               	addwfc	??_MTOUCH_Button_Deviation_Get+3,w
 10976  1120  0087               	movwf	7
 10977  1121  0801               	movf	1,w
 10978  1122  0008               	return
 10979  1123                     l6362:
 10980                           
 10981                           ;mcc_generated_files/mtouch/mtouch_button.c: 585:         return (mtouch_button_deviatio
      +                          n_t)0;
 10982  1123  3000               	movlw	0
 10983  1124  0008               	return
 10984  1125                     __end_of_MTOUCH_Button_Deviation_Get:
 10985                           
 10986                           	psect	text42
 10987  1AFD                     __ptext42:	
 10988 ;; *************** function _Slider_DefaultCallback *****************
 10989 ;; Defined at:
 10990 ;;		line 1016 in file "mcc_generated_files/mtouch/mtouch_slider.c"
 10991 ;; Parameters:    Size  Location     Type
 10992 ;;  slider          1    2[COMMON] enum E2914
 10993 ;; Auto vars:     Size  Location     Type
 10994 ;;		None
 10995 ;; Return value:  Size  Location     Type
 10996 ;;                  1    wreg      void 
 10997 ;; Registers used:
 10998 ;;		None
 10999 ;; Tracked objects:
 11000 ;;		On entry : 1F/0
 11001 ;;		On exit  : 1F/0
 11002 ;;		Unchanged: 1F/0
 11003 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11004 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11005 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11006 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11007 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11008 ;;Total ram usage:        1 bytes
 11009 ;; Hardware stack levels used: 1
 11010 ;; Hardware stack levels required when called: 4
 11011 ;; This function calls:
 11012 ;;		Nothing
 11013 ;; This function is called by:
 11014 ;;		_Slider_Service
 11015 ;; This function uses a non-reentrant model
 11016 ;;
 11017                           
 11018                           
 11019                           ;psect for function _Slider_DefaultCallback
 11020  1AFD                     _Slider_DefaultCallback:
 11021                           
 11022                           ;incstack = 0
 11023                           ; Regs used in _Slider_DefaultCallback: []
 11024  1AFD  0008               	return
 11025  1AFE                     __end_of_Slider_DefaultCallback:
 11026                           
 11027                           	psect	text43
 11028  1314                     __ptext43:	
 11029 ;; *************** function _MTOUCH_Button_isPressed *****************
 11030 ;; Defined at:
 11031 ;;		line 515 in file "mcc_generated_files/mtouch/mtouch_button.c"
 11032 ;; Parameters:    Size  Location     Type
 11033 ;;  name            1    wreg     enum E2936
 11034 ;; Auto vars:     Size  Location     Type
 11035 ;;  name            1    9[COMMON] enum E2936
 11036 ;; Return value:  Size  Location     Type
 11037 ;;                  1    wreg      _Bool 
 11038 ;; Registers used:
 11039 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11040 ;; Tracked objects:
 11041 ;;		On entry : 1F/0
 11042 ;;		On exit  : 1F/0
 11043 ;;		Unchanged: 0/0
 11044 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11045 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11046 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11047 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11048 ;;      Totals:         2       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11049 ;;Total ram usage:        6 bytes
 11050 ;; Hardware stack levels used: 1
 11051 ;; Hardware stack levels required when called: 5
 11052 ;; This function calls:
 11053 ;;		___wmul
 11054 ;; This function is called by:
 11055 ;;		_Slider_Service
 11056 ;; This function uses a non-reentrant model
 11057 ;;
 11058                           
 11059                           
 11060                           ;psect for function _MTOUCH_Button_isPressed
 11061  1314                     _MTOUCH_Button_isPressed:
 11062                           
 11063                           ;incstack = 0
 11064                           ; Regs used in _MTOUCH_Button_isPressed: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+csta
      +                          ck]
 11065                           ;MTOUCH_Button_isPressed@name stored from wreg
 11066  1314  00F9               	movwf	MTOUCH_Button_isPressed@name
 11067                           
 11068                           ;mcc_generated_files/mtouch/mtouch_button.c: 515: _Bool MTOUCH_Button_isPressed(enum mto
      +                          uch_button_names name);mcc_generated_files/mtouch/mtouch_button.c: 516: {;mcc_generated_
      +                          files/mtouch/mtouch_button.c: 517:     if(name < 5u)
 11069  1315  3005               	movlw	5
 11070  1316  0279               	subwf	MTOUCH_Button_isPressed@name,w
 11071  1317  1803               	skipnc
 11072  1318  2B54               	goto	l6940
 11073                           
 11074                           ;mcc_generated_files/mtouch/mtouch_button.c: 518:         return (_Bool)((mtouch_button[
      +                          name].state == MTOUCH_BUTTON_STATE_pressed || mtouch_button[name].state == MTOUCH_BUTTON
      +                          _STATE_releaseDebounce) ? 1 : 0);
 11075  1319  01F8               	clrf	_MTOUCH_Button_isPressed$498
 11076  131A  0AF8               	incf	_MTOUCH_Button_isPressed$498,f
 11077  131B  0879               	movf	MTOUCH_Button_isPressed@name,w
 11078  131C  00A0               	movwf	??_MTOUCH_Button_isPressed
 11079  131D  01A1               	clrf	??_MTOUCH_Button_isPressed+1
 11080  131E  0820               	movf	??_MTOUCH_Button_isPressed,w
 11081  131F  00F2               	movwf	___wmul@multiplier
 11082  1320  0821               	movf	??_MTOUCH_Button_isPressed+1,w
 11083  1321  00F3               	movwf	___wmul@multiplier+1
 11084  1322  3011               	movlw	17
 11085  1323  00F4               	movwf	___wmul@multiplicand
 11086  1324  3000               	movlw	0
 11087  1325  00F5               	movwf	___wmul@multiplicand+1
 11088  1326  319D  2538  3193   	fcall	___wmul
 11089  1329  309D               	movlw	157
 11090  132A  00A2               	movwf	??_MTOUCH_Button_isPressed+2
 11091  132B  3023               	movlw	35
 11092  132C  00A3               	movwf	??_MTOUCH_Button_isPressed+3
 11093  132D  0872               	movf	?___wmul,w
 11094  132E  0722               	addwf	??_MTOUCH_Button_isPressed+2,w
 11095  132F  0086               	movwf	6
 11096  1330  0873               	movf	?___wmul+1,w
 11097  1331  3D23               	addwfc	??_MTOUCH_Button_isPressed+3,w
 11098  1332  0087               	movwf	7
 11099  1333  3003               	movlw	3
 11100  1334  0601               	xorwf	1,w
 11101  1335  1903               	btfsc	3,2
 11102  1336  2B52               	goto	l6934
 11103  1337  0879               	movf	MTOUCH_Button_isPressed@name,w
 11104  1338  00A0               	movwf	??_MTOUCH_Button_isPressed
 11105  1339  01A1               	clrf	??_MTOUCH_Button_isPressed+1
 11106  133A  0820               	movf	??_MTOUCH_Button_isPressed,w
 11107  133B  00F2               	movwf	___wmul@multiplier
 11108  133C  0821               	movf	??_MTOUCH_Button_isPressed+1,w
 11109  133D  00F3               	movwf	___wmul@multiplier+1
 11110  133E  3011               	movlw	17
 11111  133F  00F4               	movwf	___wmul@multiplicand
 11112  1340  3000               	movlw	0
 11113  1341  00F5               	movwf	___wmul@multiplicand+1
 11114  1342  319D  2538         	fcall	___wmul
 11115  1344  309D               	movlw	157
 11116  1345  00A2               	movwf	??_MTOUCH_Button_isPressed+2
 11117  1346  3023               	movlw	35
 11118  1347  00A3               	movwf	??_MTOUCH_Button_isPressed+3
 11119  1348  0872               	movf	?___wmul,w
 11120  1349  0722               	addwf	??_MTOUCH_Button_isPressed+2,w
 11121  134A  0086               	movwf	6
 11122  134B  0873               	movf	?___wmul+1,w
 11123  134C  3D23               	addwfc	??_MTOUCH_Button_isPressed+3,w
 11124  134D  0087               	movwf	7
 11125  134E  3004               	movlw	4
 11126  134F  0601               	xorwf	1,w
 11127  1350  1D03               	btfss	3,2
 11128  1351  01F8               	clrf	_MTOUCH_Button_isPressed$498
 11129  1352                     l6934:
 11130  1352  0878               	movf	_MTOUCH_Button_isPressed$498,w
 11131  1353  0008               	return
 11132  1354                     l6940:
 11133                           
 11134                           ;mcc_generated_files/mtouch/mtouch_button.c: 520:         return 0;
 11135  1354  3000               	movlw	0
 11136  1355  0008               	return
 11137  1356                     __end_of_MTOUCH_Button_isPressed:
 11138                           
 11139                           	psect	text44
 11140  1C7B                     __ptext44:	
 11141 ;; *************** function _MTOUCH_Sensor_SampleAll *****************
 11142 ;; Defined at:
 11143 ;;		line 196 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
 11144 ;; Parameters:    Size  Location     Type
 11145 ;;		None
 11146 ;; Auto vars:     Size  Location     Type
 11147 ;;  sensor          1   24[BANK0 ] enum E2707
 11148 ;; Return value:  Size  Location     Type
 11149 ;;                  1    wreg      _Bool 
 11150 ;; Registers used:
 11151 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11152 ;; Tracked objects:
 11153 ;;		On entry : 1F/0
 11154 ;;		On exit  : 1F/0
 11155 ;;		Unchanged: 0/0
 11156 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11157 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11158 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11159 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11160 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11161 ;;Total ram usage:        2 bytes
 11162 ;; Hardware stack levels used: 1
 11163 ;; Hardware stack levels required when called: 9
 11164 ;; This function calls:
 11165 ;;		_Sensor_Service
 11166 ;; This function is called by:
 11167 ;;		_MTOUCH_Service_Mainloop
 11168 ;; This function uses a non-reentrant model
 11169 ;;
 11170                           
 11171                           
 11172                           ;psect for function _MTOUCH_Sensor_SampleAll
 11173  1C7B                     _MTOUCH_Sensor_SampleAll:
 11174                           
 11175                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 198:     enum mtouch_sensor_names sensor;;m
      +                          cc_generated_files/mtouch/mtouch_sensor.c: 199:     for (sensor = 0; sensor < 11u; senso
      +                          r++)
 11176                           
 11177                           ;incstack = 0
 11178                           ; Regs used in _MTOUCH_Sensor_SampleAll: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11179  1C7B  01B8               	clrf	MTOUCH_Sensor_SampleAll@sensor
 11180  1C7C                     l7202:
 11181                           
 11182                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 200:     {;mcc_generated_files/mtouch/mtouc
      +                          h_sensor.c: 201:         if(Sensor_Service(sensor)!= MTOUCH_SENSOR_ERROR_none)
 11183  1C7C  0838               	movf	MTOUCH_Sensor_SampleAll@sensor,w
 11184  1C7D  3197  279C  319C   	fcall	_Sensor_Service
 11185  1C80  3A00               	xorlw	0
 11186  1C81  1903               	skipnz
 11187  1C82  2C85               	goto	l7208
 11188                           
 11189                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 202:             return 0;
 11190  1C83  3000               	movlw	0
 11191  1C84  0008               	return
 11192  1C85                     l7208:
 11193                           
 11194                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 203:     }
 11195  1C85  3001               	movlw	1
 11196  1C86  00B7               	movwf	??_MTOUCH_Sensor_SampleAll
 11197  1C87  0837               	movf	??_MTOUCH_Sensor_SampleAll,w
 11198  1C88  07B8               	addwf	MTOUCH_Sensor_SampleAll@sensor,f
 11199  1C89  300B               	movlw	11
 11200  1C8A  0238               	subwf	MTOUCH_Sensor_SampleAll@sensor,w
 11201  1C8B  1C03               	skipc
 11202  1C8C  2C7C               	goto	l7202
 11203                           
 11204                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 204:     return 1;
 11205  1C8D  3001               	movlw	1
 11206  1C8E  0008               	return
 11207  1C8F                     __end_of_MTOUCH_Sensor_SampleAll:
 11208                           
 11209                           	psect	text45
 11210  179C                     __ptext45:	
 11211 ;; *************** function _Sensor_Service *****************
 11212 ;; Defined at:
 11213 ;;		line 242 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
 11214 ;; Parameters:    Size  Location     Type
 11215 ;;  name            1    wreg     enum E2707
 11216 ;; Auto vars:     Size  Location     Type
 11217 ;;  name            1   19[BANK0 ] enum E2707
 11218 ;;  sensor          2   21[BANK0 ] PTR struct .
 11219 ;;		 -> mtouch_sensor(99), 
 11220 ;;  error           1   20[BANK0 ] enum E2719
 11221 ;; Return value:  Size  Location     Type
 11222 ;;                  1    wreg      enum E2719
 11223 ;; Registers used:
 11224 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11225 ;; Tracked objects:
 11226 ;;		On entry : 1F/0
 11227 ;;		On exit  : 1F/0
 11228 ;;		Unchanged: 0/0
 11229 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11230 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11231 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11232 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11233 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11234 ;;Total ram usage:        8 bytes
 11235 ;; Hardware stack levels used: 1
 11236 ;; Hardware stack levels required when called: 8
 11237 ;; This function calls:
 11238 ;;		_Sensor_Acquisition
 11239 ;;		_Sensor_DefaultCallback
 11240 ;;		_Sensor_RawSample_Update
 11241 ;;		_Sensor_isEnabled
 11242 ;;		_Sensor_setSampled
 11243 ;;		___wmul
 11244 ;; This function is called by:
 11245 ;;		_MTOUCH_Sensor_SampleAll
 11246 ;; This function uses a non-reentrant model
 11247 ;;
 11248                           
 11249                           
 11250                           ;psect for function _Sensor_Service
 11251  179C                     _Sensor_Service:
 11252                           
 11253                           ;incstack = 0
 11254                           ; Regs used in _Sensor_Service: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11255                           ;Sensor_Service@name stored from wreg
 11256  179C  00B3               	movwf	Sensor_Service@name
 11257                           
 11258                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 242: static enum mtouch_sensor_error Sensor
      +                          _Service(enum mtouch_sensor_names name);mcc_generated_files/mtouch/mtouch_sensor.c: 243:
      +                           {;mcc_generated_files/mtouch/mtouch_sensor.c: 244:     mtouch_sensor_t* sensor = &mtouc
      +                          h_sensor[name];
 11259  179D  0833               	movf	Sensor_Service@name,w
 11260  179E  00AF               	movwf	??_Sensor_Service
 11261  179F  01B0               	clrf	??_Sensor_Service+1
 11262  17A0  082F               	movf	??_Sensor_Service,w
 11263  17A1  00F2               	movwf	___wmul@multiplier
 11264  17A2  0830               	movf	??_Sensor_Service+1,w
 11265  17A3  00F3               	movwf	___wmul@multiplier+1
 11266  17A4  3009               	movlw	9
 11267  17A5  00F4               	movwf	___wmul@multiplicand
 11268  17A6  3000               	movlw	0
 11269  17A7  00F5               	movwf	___wmul@multiplicand+1
 11270  17A8  319D  2538  3197   	fcall	___wmul
 11271  17AB  3038               	movlw	56
 11272  17AC  00B1               	movwf	??_Sensor_Service+2
 11273  17AD  3023               	movlw	35
 11274  17AE  00B2               	movwf	??_Sensor_Service+3
 11275  17AF  0872               	movf	?___wmul,w
 11276  17B0  0731               	addwf	??_Sensor_Service+2,w
 11277  17B1  00B5               	movwf	Sensor_Service@sensor
 11278  17B2  0873               	movf	?___wmul+1,w
 11279  17B3  3D32               	addwfc	??_Sensor_Service+3,w
 11280  17B4  00B6               	movwf	Sensor_Service@sensor+1
 11281                           
 11282                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 245:     enum mtouch_sensor_error error = S
      +                          ensor_Acquisition(sensor);
 11283  17B5  0836               	movf	Sensor_Service@sensor+1,w
 11284  17B6  00AC               	movwf	Sensor_Acquisition@sensor+1
 11285  17B7  0835               	movf	Sensor_Service@sensor,w
 11286  17B8  00AB               	movwf	Sensor_Acquisition@sensor
 11287  17B9  3193  239D  3197   	fcall	_Sensor_Acquisition
 11288  17BC  00AF               	movwf	??_Sensor_Service
 11289  17BD  082F               	movf	??_Sensor_Service,w
 11290  17BE  00B4               	movwf	Sensor_Service@error
 11291                           
 11292                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 248:     switch(error)
 11293  17BF  2FE1               	goto	l7106
 11294  17C0                     l7098:
 11295                           
 11296                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 253:             {;mcc_generated_files/mtou
      +                          ch/mtouch_sensor.c: 258:                 if(!lowpowerActivated)
 11297  17C0  0836               	movf	Sensor_Service@sensor+1,w
 11298  17C1  00F3               	movwf	Sensor_isEnabled@sensor+1
 11299  17C2  0835               	movf	Sensor_Service@sensor,w
 11300  17C3  00F2               	movwf	Sensor_isEnabled@sensor
 11301  17C4  319B  237D  3197   	fcall	_Sensor_isEnabled
 11302  17C7  3A00               	xorlw	0
 11303  17C8  1903               	skipnz
 11304  17C9  2FFE               	goto	l7108
 11305                           
 11306                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 259:                 {;mcc_generated_files/
      +                          mtouch/mtouch_sensor.c: 260:                     Sensor_RawSample_Update(sensor);
 11307  17CA  0836               	movf	Sensor_Service@sensor+1,w
 11308  17CB  00F3               	movwf	Sensor_RawSample_Update@sensor+1
 11309  17CC  0835               	movf	Sensor_Service@sensor,w
 11310  17CD  00F2               	movwf	Sensor_RawSample_Update@sensor
 11311  17CE  319D  2504  3197   	fcall	_Sensor_RawSample_Update
 11312                           
 11313                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 262:                 Sensor_setSampled(sens
      +                          or);
 11314                           
 11315                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 261:                 }
 11316  17D1  0020               	movlb	0	; select bank0
 11317  17D2  0836               	movf	Sensor_Service@sensor+1,w
 11318  17D3  00F3               	movwf	Sensor_setSampled@sensor+1
 11319  17D4  0835               	movf	Sensor_Service@sensor,w
 11320  17D5  00F2               	movwf	Sensor_setSampled@sensor
 11321  17D6  319B  232F  3197   	fcall	_Sensor_setSampled
 11322                           
 11323                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 263:                 callback_sampled(name)
      +                          ;
 11324  17D9  0833               	movf	Sensor_Service@name,w
 11325  17DA  00AF               	movwf	??_Sensor_Service
 11326  17DB  082F               	movf	??_Sensor_Service,w
 11327  17DC  00F2               	movwf	Sensor_DefaultCallback@sensor
 11328  17DD  319A  22FC  3197   	fcall	_Sensor_DefaultCallback
 11329  17E0  2FFE               	goto	l7108
 11330  17E1                     l7106:
 11331  17E1  0834               	movf	Sensor_Service@error,w
 11332  17E2  00AF               	movwf	??_Sensor_Service
 11333  17E3  01B0               	clrf	??_Sensor_Service+1
 11334  17E4  1BAF               	btfsc	??_Sensor_Service,7
 11335  17E5  03B0               	decf	??_Sensor_Service+1,f
 11336                           
 11337                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 11338                           ; Switch size 1, requested type "simple"
 11339                           ; Number of cases is 2, Range of values is 0 to 255
 11340                           ; switch strategies available:
 11341                           ; Name         Instructions Cycles
 11342                           ; simple_byte            7     4 (average)
 11343                           ; jumptable            260     6 (fixed)
 11344                           ;	Chosen strategy is simple_byte
 11345  17E6  0830               	movf	??_Sensor_Service+1,w
 11346  17E7  3A00               	xorlw	0	; case 0
 11347  17E8  1903               	skipnz
 11348  17E9  2FEE               	goto	l7578
 11349  17EA  3AFF               	xorlw	255	; case 255
 11350  17EB  1903               	skipnz
 11351  17EC  2FF3               	goto	l7580
 11352  17ED  2FFE               	goto	l7108
 11353  17EE                     l7578:
 11354                           
 11355                           ; Switch size 1, requested type "simple"
 11356                           ; Number of cases is 1, Range of values is 0 to 0
 11357                           ; switch strategies available:
 11358                           ; Name         Instructions Cycles
 11359                           ; simple_byte            4     3 (average)
 11360                           ; direct_byte            8     6 (fixed)
 11361                           ; jumptable            260     6 (fixed)
 11362                           ;	Chosen strategy is simple_byte
 11363  17EE  082F               	movf	??_Sensor_Service,w
 11364  17EF  3A00               	xorlw	0	; case 0
 11365  17F0  1903               	skipnz
 11366  17F1  2FC0               	goto	l7098
 11367  17F2  2FFE               	goto	l7108
 11368  17F3                     l7580:
 11369                           
 11370                           ; Switch size 1, requested type "simple"
 11371                           ; Number of cases is 3, Range of values is 253 to 255
 11372                           ; switch strategies available:
 11373                           ; Name         Instructions Cycles
 11374                           ; simple_byte           10     6 (average)
 11375                           ; direct_byte           11     5 (fixed)
 11376                           ; jumptable            263     9 (fixed)
 11377                           ;	Chosen strategy is simple_byte
 11378  17F3  082F               	movf	??_Sensor_Service,w
 11379  17F4  3AFD               	xorlw	253	; case 253
 11380  17F5  1903               	skipnz
 11381  17F6  2FFE               	goto	l7108
 11382  17F7  3A03               	xorlw	3	; case 254
 11383  17F8  1903               	skipnz
 11384  17F9  2FFE               	goto	l7108
 11385  17FA  3A01               	xorlw	1	; case 255
 11386  17FB  1903               	skipnz
 11387  17FC  2FFE               	goto	l7108
 11388  17FD  2FFE               	goto	l7108
 11389  17FE                     l7108:
 11390                           
 11391                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 275:     return error;
 11392  17FE  0834               	movf	Sensor_Service@error,w
 11393  17FF  0008               	return
 11394  1800                     __end_of_Sensor_Service:
 11395                           
 11396                           	psect	text46
 11397  1B2F                     __ptext46:	
 11398 ;; *************** function _Sensor_setSampled *****************
 11399 ;; Defined at:
 11400 ;;		line 578 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
 11401 ;; Parameters:    Size  Location     Type
 11402 ;;  sensor          2    2[COMMON] PTR struct .
 11403 ;;		 -> mtouch_sensor(99), 
 11404 ;; Auto vars:     Size  Location     Type
 11405 ;;		None
 11406 ;; Return value:  Size  Location     Type
 11407 ;;                  1    wreg      void 
 11408 ;; Registers used:
 11409 ;;		wreg, fsr1l, fsr1h
 11410 ;; Tracked objects:
 11411 ;;		On entry : 1F/0
 11412 ;;		On exit  : 1F/0
 11413 ;;		Unchanged: 1F/0
 11414 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11415 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11416 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11417 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11418 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11419 ;;Total ram usage:        2 bytes
 11420 ;; Hardware stack levels used: 1
 11421 ;; Hardware stack levels required when called: 4
 11422 ;; This function calls:
 11423 ;;		Nothing
 11424 ;; This function is called by:
 11425 ;;		_Sensor_Service
 11426 ;; This function uses a non-reentrant model
 11427 ;;
 11428                           
 11429                           
 11430                           ;psect for function _Sensor_setSampled
 11431  1B2F                     _Sensor_setSampled:
 11432                           
 11433                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 578: static __attribute__((inline)) void Se
      +                          nsor_setSampled(mtouch_sensor_t* sensor);mcc_generated_files/mtouch/mtouch_sensor.c: 579
      +                          : {;mcc_generated_files/mtouch/mtouch_sensor.c: 580:     sensor->sampled = 1;
 11434                           
 11435                           ;incstack = 0
 11436                           ; Regs used in _Sensor_setSampled: [wregfsr1]
 11437  1B2F  0872               	movf	Sensor_setSampled@sensor,w
 11438  1B30  0086               	movwf	6
 11439  1B31  0873               	movf	Sensor_setSampled@sensor+1,w
 11440  1B32  0087               	movwf	7
 11441  1B33  3148               	addfsr 1,8
 11442  1B34  1481               	bsf	1,1
 11443  1B35  0008               	return
 11444  1B36                     __end_of_Sensor_setSampled:
 11445                           
 11446                           	psect	text47
 11447  1D04                     __ptext47:	
 11448 ;; *************** function _Sensor_RawSample_Update *****************
 11449 ;; Defined at:
 11450 ;;		line 439 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
 11451 ;; Parameters:    Size  Location     Type
 11452 ;;  sensor          2    2[COMMON] PTR struct .
 11453 ;;		 -> mtouch_sensor(99), 
 11454 ;; Auto vars:     Size  Location     Type
 11455 ;;		None
 11456 ;; Return value:  Size  Location     Type
 11457 ;;                  1    wreg      void 
 11458 ;; Registers used:
 11459 ;;		wreg, fsr1l, fsr1h
 11460 ;; Tracked objects:
 11461 ;;		On entry : 1F/0
 11462 ;;		On exit  : 1F/1
 11463 ;;		Unchanged: 0/0
 11464 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11465 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11466 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11467 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11468 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11469 ;;Total ram usage:        2 bytes
 11470 ;; Hardware stack levels used: 1
 11471 ;; Hardware stack levels required when called: 4
 11472 ;; This function calls:
 11473 ;;		Nothing
 11474 ;; This function is called by:
 11475 ;;		_Sensor_Service
 11476 ;; This function uses a non-reentrant model
 11477 ;;
 11478                           
 11479                           
 11480                           ;psect for function _Sensor_RawSample_Update
 11481  1D04                     _Sensor_RawSample_Update:
 11482                           
 11483                           ;incstack = 0
 11484                           ; Regs used in _Sensor_RawSample_Update: [wregfsr1]
 11485  1D04  1F8B               	btfss	11,7	;volatile
 11486  1D05  2D13               	goto	l4950
 11487  1D06  138B               	bcf	11,7	;volatile
 11488  1D07  0872               	movf	Sensor_RawSample_Update@sensor,w
 11489  1D08  0086               	movwf	6
 11490  1D09  0873               	movf	Sensor_RawSample_Update@sensor+1,w
 11491  1D0A  0087               	movwf	7
 11492  1D0B  3146               	addfsr 1,6
 11493  1D0C  0021               	movlb	1	; select bank1
 11494  1D0D  086B               	movf	_packet_sample^(0+128),w
 11495  1D0E  3FC0               	movwi [0]fsr1
 11496  1D0F  086C               	movf	(_packet_sample+1)^(0+128),w
 11497  1D10  3FC1               	movwi [1]fsr1
 11498  1D11  178B               	bsf	11,7	;volatile
 11499  1D12  0008               	return
 11500  1D13                     l4950:
 11501  1D13  0872               	movf	Sensor_RawSample_Update@sensor,w
 11502  1D14  0086               	movwf	6
 11503  1D15  0873               	movf	Sensor_RawSample_Update@sensor+1,w
 11504  1D16  0087               	movwf	7
 11505  1D17  3146               	addfsr 1,6
 11506  1D18  0021               	movlb	1	; select bank1
 11507  1D19  086B               	movf	_packet_sample^(0+128),w
 11508  1D1A  3FC0               	movwi [0]fsr1
 11509  1D1B  086C               	movf	(_packet_sample+1)^(0+128),w
 11510  1D1C  3FC1               	movwi [1]fsr1
 11511  1D1D  0008               	return
 11512  1D1E                     __end_of_Sensor_RawSample_Update:
 11513                           
 11514                           	psect	text48
 11515  1AFC                     __ptext48:	
 11516 ;; *************** function _Sensor_DefaultCallback *****************
 11517 ;; Defined at:
 11518 ;;		line 459 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
 11519 ;; Parameters:    Size  Location     Type
 11520 ;;  sensor          1    2[COMMON] enum E2707
 11521 ;; Auto vars:     Size  Location     Type
 11522 ;;		None
 11523 ;; Return value:  Size  Location     Type
 11524 ;;                  1    wreg      void 
 11525 ;; Registers used:
 11526 ;;		None
 11527 ;; Tracked objects:
 11528 ;;		On entry : 1F/0
 11529 ;;		On exit  : 1F/0
 11530 ;;		Unchanged: 1F/0
 11531 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11532 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11533 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11534 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11535 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11536 ;;Total ram usage:        1 bytes
 11537 ;; Hardware stack levels used: 1
 11538 ;; Hardware stack levels required when called: 4
 11539 ;; This function calls:
 11540 ;;		Nothing
 11541 ;; This function is called by:
 11542 ;;		_Sensor_Service
 11543 ;; This function uses a non-reentrant model
 11544 ;;
 11545                           
 11546                           
 11547                           ;psect for function _Sensor_DefaultCallback
 11548  1AFC                     _Sensor_DefaultCallback:
 11549                           
 11550                           ;incstack = 0
 11551                           ; Regs used in _Sensor_DefaultCallback: []
 11552  1AFC  0008               	return
 11553  1AFD                     __end_of_Sensor_DefaultCallback:
 11554                           
 11555                           	psect	text49
 11556  139D                     __ptext49:	
 11557 ;; *************** function _Sensor_Acquisition *****************
 11558 ;; Defined at:
 11559 ;;		line 289 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
 11560 ;; Parameters:    Size  Location     Type
 11561 ;;  sensor          2   11[BANK0 ] PTR struct .
 11562 ;;		 -> mtouch_sensor(99), 
 11563 ;; Auto vars:     Size  Location     Type
 11564 ;;  retry           1   14[BANK0 ] unsigned char 
 11565 ;; Return value:  Size  Location     Type
 11566 ;;                  1    wreg      enum E2719
 11567 ;; Registers used:
 11568 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11569 ;; Tracked objects:
 11570 ;;		On entry : 1F/0
 11571 ;;		On exit  : 1F/0
 11572 ;;		Unchanged: 0/0
 11573 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11574 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11575 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11576 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11577 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11578 ;;Total ram usage:        4 bytes
 11579 ;; Hardware stack levels used: 1
 11580 ;; Hardware stack levels required when called: 7
 11581 ;; This function calls:
 11582 ;;		_Sensor_Acq_ExecutePacket
 11583 ;;		_Sensor_isEnabled
 11584 ;;		_Sensor_setActive
 11585 ;;		_Sensor_setInactive
 11586 ;;		_abs
 11587 ;; This function is called by:
 11588 ;;		_Sensor_Service
 11589 ;; This function uses a non-reentrant model
 11590 ;;
 11591                           
 11592                           
 11593                           ;psect for function _Sensor_Acquisition
 11594  139D                     _Sensor_Acquisition:
 11595                           
 11596                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 289: static enum mtouch_sensor_error Sensor
      +                          _Acquisition(mtouch_sensor_t* sensor);mcc_generated_files/mtouch/mtouch_sensor.c: 290: {
      +                          ;mcc_generated_files/mtouch/mtouch_sensor.c: 292:     uint8_t retry = (uint8_t)5u;
 11597                           
 11598                           ;incstack = 0
 11599                           ; Regs used in _Sensor_Acquisition: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11600  139D  3005               	movlw	5
 11601  139E  00AD               	movwf	??_Sensor_Acquisition
 11602  139F  082D               	movf	??_Sensor_Acquisition,w
 11603  13A0  00AE               	movwf	Sensor_Acquisition@retry
 11604                           
 11605                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 294:     if(!Sensor_isEnabled(sensor))
 11606  13A1  082C               	movf	Sensor_Acquisition@sensor+1,w
 11607  13A2  00F3               	movwf	Sensor_isEnabled@sensor+1
 11608  13A3  082B               	movf	Sensor_Acquisition@sensor,w
 11609  13A4  00F2               	movwf	Sensor_isEnabled@sensor
 11610  13A5  319B  237D  3193   	fcall	_Sensor_isEnabled
 11611  13A8  3A00               	xorlw	0
 11612  13A9  1D03               	skipz
 11613  13AA  2BB4               	goto	l6964
 11614  13AB                     l6954:
 11615                           
 11616                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 295:         return MTOUCH_SENSOR_ERROR_non
      +                          e;
 11617  13AB  3000               	movlw	0
 11618  13AC  0008               	return
 11619  13AD                     l6958:
 11620                           
 11621                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 298:     {;mcc_generated_files/mtouch/mtouc
      +                          h_sensor.c: 299:         retry--;
 11622  13AD  3001               	movlw	1
 11623  13AE  02AE               	subwf	Sensor_Acquisition@retry,f
 11624                           
 11625                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 300:         if(retry == 0)
 11626  13AF  082E               	movf	Sensor_Acquisition@retry,w
 11627  13B0  1D03               	btfss	3,2
 11628  13B1  2BB4               	goto	l6964
 11629                           
 11630                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 301:         {;mcc_generated_files/mtouch/m
      +                          touch_sensor.c: 302:             return MTOUCH_SENSOR_ERROR_tooManyRetries;
 11631  13B2  30FC               	movlw	252
 11632  13B3  0008               	return
 11633  13B4                     l6964:
 11634                           
 11635                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 297:     while(Sensor_Acq_ExecutePacket(sen
      +                          sor))
 11636  13B4  082C               	movf	Sensor_Acquisition@sensor+1,w
 11637  13B5  00A5               	movwf	Sensor_Acq_ExecutePacket@sensor+1
 11638  13B6  082B               	movf	Sensor_Acquisition@sensor,w
 11639  13B7  00A4               	movwf	Sensor_Acq_ExecutePacket@sensor
 11640  13B8  3196  2676  3193   	fcall	_Sensor_Acq_ExecutePacket
 11641  13BB  3A00               	xorlw	0
 11642  13BC  1D03               	skipz
 11643  13BD  2BAD               	goto	l6958
 11644                           
 11645                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 306:     if((mtouch_sensor_packetsample_t)a
      +                          bs(packet_sample - sensor->rawSample) > 100u)
 11646  13BE  082B               	movf	Sensor_Acquisition@sensor,w
 11647  13BF  0086               	movwf	6
 11648  13C0  082C               	movf	Sensor_Acquisition@sensor+1,w
 11649  13C1  0087               	movwf	7
 11650  13C2  3146               	addfsr 1,6
 11651  13C3  3F40               	moviw [0]fsr1
 11652  13C4  0021               	movlb	1	; select bank1
 11653  13C5  026B               	subwf	_packet_sample^(0+128),w
 11654  13C6  00F2               	movwf	abs@a
 11655  13C7  3F41               	moviw [1]fsr1
 11656  13C8  3B6C               	subwfb	(_packet_sample+1)^(0+128),w
 11657  13C9  00F3               	movwf	abs@a+1
 11658  13CA  319C  24A5  3193   	fcall	_abs
 11659  13CD  3000               	movlw	0
 11660  13CE  0273               	subwf	?_abs+1,w
 11661  13CF  3065               	movlw	101
 11662  13D0  1903               	skipnz
 11663  13D1  0272               	subwf	?_abs,w
 11664  13D2  1C03               	skipc
 11665  13D3  2BDD               	goto	l6970
 11666                           
 11667                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 307:     {;mcc_generated_files/mtouch/mtouc
      +                          h_sensor.c: 308:         Sensor_setActive(sensor);
 11668  13D4  0020               	movlb	0	; select bank0
 11669  13D5  082C               	movf	Sensor_Acquisition@sensor+1,w
 11670  13D6  00F3               	movwf	Sensor_setActive@sensor+1
 11671  13D7  082B               	movf	Sensor_Acquisition@sensor,w
 11672  13D8  00F2               	movwf	Sensor_setActive@sensor
 11673  13D9  319B  2321  3193   	fcall	_Sensor_setActive
 11674                           
 11675                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 309:     }
 11676  13DC  2BAB               	goto	l6954
 11677  13DD                     l6970:
 11678                           
 11679                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 311:     {;mcc_generated_files/mtouch/mtouc
      +                          h_sensor.c: 312:         Sensor_setInactive(sensor);
 11680  13DD  0020               	movlb	0	; select bank0
 11681  13DE  082C               	movf	Sensor_Acquisition@sensor+1,w
 11682  13DF  00F3               	movwf	Sensor_setInactive@sensor+1
 11683  13E0  082B               	movf	Sensor_Acquisition@sensor,w
 11684  13E1  00F2               	movwf	Sensor_setInactive@sensor
 11685  13E2  319B  2328  3193   	fcall	_Sensor_setInactive
 11686  13E5  2BAB               	goto	l6954
 11687  13E6                     __end_of_Sensor_Acquisition:
 11688                           
 11689                           	psect	text50
 11690  1CA5                     __ptext50:	
 11691 ;; *************** function _abs *****************
 11692 ;; Defined at:
 11693 ;;		line 1 in file "/Applications/microchip/xc8/v2.32/pic/sources/c99/common/abs.c"
 11694 ;; Parameters:    Size  Location     Type
 11695 ;;  a               2    2[COMMON] int 
 11696 ;; Auto vars:     Size  Location     Type
 11697 ;;		None
 11698 ;; Return value:  Size  Location     Type
 11699 ;;                  2    2[COMMON] int 
 11700 ;; Registers used:
 11701 ;;		wreg, status,2, status,0
 11702 ;; Tracked objects:
 11703 ;;		On entry : 1F/1
 11704 ;;		On exit  : 0/0
 11705 ;;		Unchanged: 0/0
 11706 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11707 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11708 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11709 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11710 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11711 ;;Total ram usage:        4 bytes
 11712 ;; Hardware stack levels used: 1
 11713 ;; Hardware stack levels required when called: 4
 11714 ;; This function calls:
 11715 ;;		Nothing
 11716 ;; This function is called by:
 11717 ;;		_Sensor_Acquisition
 11718 ;; This function uses a non-reentrant model
 11719 ;;
 11720                           
 11721                           
 11722                           ;psect for function _abs
 11723  1CA5                     _abs:
 11724                           
 11725                           ;incstack = 0
 11726                           ; Regs used in _abs: [wreg+status,2+status,0]
 11727  1CA5  0873               	movf	abs@a+1,w
 11728  1CA6  3A80               	xorlw	128
 11729  1CA7  00F4               	movwf	??_abs
 11730  1CA8  3080               	movlw	128
 11731  1CA9  0274               	subwf	??_abs,w
 11732  1CAA  1D03               	skipz
 11733  1CAB  2CAE               	goto	u3565
 11734  1CAC  3001               	movlw	1
 11735  1CAD  0272               	subwf	abs@a,w
 11736  1CAE                     u3565:
 11737  1CAE  1803               	skipnc
 11738  1CAF  0008               	return
 11739  1CB0  0972               	comf	abs@a,w
 11740  1CB1  00F4               	movwf	??_abs
 11741  1CB2  0973               	comf	abs@a+1,w
 11742  1CB3  00F5               	movwf	??_abs+1
 11743  1CB4  0AF4               	incf	??_abs,f
 11744  1CB5  1903               	skipnz
 11745  1CB6  0AF5               	incf	??_abs+1,f
 11746  1CB7  0874               	movf	??_abs,w
 11747  1CB8  00F2               	movwf	?_abs
 11748  1CB9  0875               	movf	??_abs+1,w
 11749  1CBA  00F3               	movwf	?_abs+1
 11750  1CBB  0008               	return
 11751  1CBC                     __end_of_abs:
 11752                           
 11753                           	psect	text51
 11754  1B28                     __ptext51:	
 11755 ;; *************** function _Sensor_setInactive *****************
 11756 ;; Defined at:
 11757 ;;		line 524 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
 11758 ;; Parameters:    Size  Location     Type
 11759 ;;  sensor          2    2[COMMON] PTR struct .
 11760 ;;		 -> mtouch_sensor(99), 
 11761 ;; Auto vars:     Size  Location     Type
 11762 ;;		None
 11763 ;; Return value:  Size  Location     Type
 11764 ;;                  1    wreg      void 
 11765 ;; Registers used:
 11766 ;;		wreg, fsr1l, fsr1h
 11767 ;; Tracked objects:
 11768 ;;		On entry : 1F/0
 11769 ;;		On exit  : 1F/0
 11770 ;;		Unchanged: 1F/0
 11771 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11772 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11773 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11774 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11775 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11776 ;;Total ram usage:        2 bytes
 11777 ;; Hardware stack levels used: 1
 11778 ;; Hardware stack levels required when called: 4
 11779 ;; This function calls:
 11780 ;;		Nothing
 11781 ;; This function is called by:
 11782 ;;		_Sensor_Acquisition
 11783 ;; This function uses a non-reentrant model
 11784 ;;
 11785                           
 11786                           
 11787                           ;psect for function _Sensor_setInactive
 11788  1B28                     _Sensor_setInactive:
 11789                           
 11790                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 524: static __attribute__((inline)) void Se
      +                          nsor_setInactive(mtouch_sensor_t* sensor);mcc_generated_files/mtouch/mtouch_sensor.c: 52
      +                          5: {;mcc_generated_files/mtouch/mtouch_sensor.c: 526:     sensor->active = 0;
 11791                           
 11792                           ;incstack = 0
 11793                           ; Regs used in _Sensor_setInactive: [wregfsr1]
 11794  1B28  0872               	movf	Sensor_setInactive@sensor,w
 11795  1B29  0086               	movwf	6
 11796  1B2A  0873               	movf	Sensor_setInactive@sensor+1,w
 11797  1B2B  0087               	movwf	7
 11798  1B2C  3148               	addfsr 1,8
 11799  1B2D  1101               	bcf	1,2
 11800  1B2E  0008               	return
 11801  1B2F                     __end_of_Sensor_setInactive:
 11802                           
 11803                           	psect	text52
 11804  1B21                     __ptext52:	
 11805 ;; *************** function _Sensor_setActive *****************
 11806 ;; Defined at:
 11807 ;;		line 519 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
 11808 ;; Parameters:    Size  Location     Type
 11809 ;;  sensor          2    2[COMMON] PTR struct .
 11810 ;;		 -> mtouch_sensor(99), 
 11811 ;; Auto vars:     Size  Location     Type
 11812 ;;		None
 11813 ;; Return value:  Size  Location     Type
 11814 ;;                  1    wreg      void 
 11815 ;; Registers used:
 11816 ;;		wreg, fsr1l, fsr1h
 11817 ;; Tracked objects:
 11818 ;;		On entry : 1F/0
 11819 ;;		On exit  : 1F/0
 11820 ;;		Unchanged: 1F/0
 11821 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11822 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11823 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11824 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11825 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11826 ;;Total ram usage:        2 bytes
 11827 ;; Hardware stack levels used: 1
 11828 ;; Hardware stack levels required when called: 4
 11829 ;; This function calls:
 11830 ;;		Nothing
 11831 ;; This function is called by:
 11832 ;;		_Sensor_Acquisition
 11833 ;; This function uses a non-reentrant model
 11834 ;;
 11835                           
 11836                           
 11837                           ;psect for function _Sensor_setActive
 11838  1B21                     _Sensor_setActive:
 11839                           
 11840                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 519: static __attribute__((inline)) void Se
      +                          nsor_setActive(mtouch_sensor_t* sensor);mcc_generated_files/mtouch/mtouch_sensor.c: 520:
      +                           {;mcc_generated_files/mtouch/mtouch_sensor.c: 521:     sensor->active = 1;
 11841                           
 11842                           ;incstack = 0
 11843                           ; Regs used in _Sensor_setActive: [wregfsr1]
 11844  1B21  0872               	movf	Sensor_setActive@sensor,w
 11845  1B22  0086               	movwf	6
 11846  1B23  0873               	movf	Sensor_setActive@sensor+1,w
 11847  1B24  0087               	movwf	7
 11848  1B25  3148               	addfsr 1,8
 11849  1B26  1501               	bsf	1,2
 11850  1B27  0008               	return
 11851  1B28                     __end_of_Sensor_setActive:
 11852                           
 11853                           	psect	text53
 11854  1B7D                     __ptext53:	
 11855 ;; *************** function _Sensor_isEnabled *****************
 11856 ;; Defined at:
 11857 ;;		line 504 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
 11858 ;; Parameters:    Size  Location     Type
 11859 ;;  sensor          2    2[COMMON] PTR struct .
 11860 ;;		 -> mtouch_sensor(99), 
 11861 ;; Auto vars:     Size  Location     Type
 11862 ;;		None
 11863 ;; Return value:  Size  Location     Type
 11864 ;;                  1    wreg      _Bool 
 11865 ;; Registers used:
 11866 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 11867 ;; Tracked objects:
 11868 ;;		On entry : 1F/0
 11869 ;;		On exit  : 1F/0
 11870 ;;		Unchanged: 1F/0
 11871 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11872 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11873 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11874 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11875 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11876 ;;Total ram usage:        2 bytes
 11877 ;; Hardware stack levels used: 1
 11878 ;; Hardware stack levels required when called: 4
 11879 ;; This function calls:
 11880 ;;		Nothing
 11881 ;; This function is called by:
 11882 ;;		_Sensor_Service
 11883 ;;		_Sensor_Acquisition
 11884 ;; This function uses a non-reentrant model
 11885 ;;
 11886                           
 11887                           
 11888                           ;psect for function _Sensor_isEnabled
 11889  1B7D                     _Sensor_isEnabled:
 11890                           
 11891                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 504: static _Bool Sensor_isEnabled(mtouch_s
      +                          ensor_t* sensor);mcc_generated_files/mtouch/mtouch_sensor.c: 505: {;mcc_generated_files/
      +                          mtouch/mtouch_sensor.c: 506:     if(sensor!=((void*)0))
 11892                           
 11893                           ;incstack = 0
 11894                           ; Regs used in _Sensor_isEnabled: [wreg+fsr1l+fsr1h+status,2+status,0]
 11895  1B7D  0872               	movf	Sensor_isEnabled@sensor,w
 11896  1B7E  0473               	iorwf	Sensor_isEnabled@sensor+1,w
 11897  1B7F  1903               	btfsc	3,2
 11898  1B80  2B89               	goto	l4462
 11899                           
 11900                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 507:         return (_Bool)sensor->enabled;
 11901  1B81  0872               	movf	Sensor_isEnabled@sensor,w
 11902  1B82  0086               	movwf	6
 11903  1B83  0873               	movf	Sensor_isEnabled@sensor+1,w
 11904  1B84  0087               	movwf	7
 11905  1B85  3148               	addfsr 1,8
 11906  1B86  0801               	movf	1,w
 11907  1B87  3901               	andlw	1
 11908  1B88  0008               	return
 11909  1B89                     l4462:
 11910                           
 11911                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 509:         return 0;
 11912  1B89  3000               	movlw	0
 11913  1B8A  0008               	return
 11914  1B8B                     __end_of_Sensor_isEnabled:
 11915                           
 11916                           	psect	text54
 11917  1676                     __ptext54:	
 11918 ;; *************** function _Sensor_Acq_ExecutePacket *****************
 11919 ;; Defined at:
 11920 ;;		line 324 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
 11921 ;; Parameters:    Size  Location     Type
 11922 ;;  sensor          2    4[BANK0 ] PTR struct .
 11923 ;;		 -> mtouch_sensor(99), 
 11924 ;; Auto vars:     Size  Location     Type
 11925 ;;  error           1   10[BANK0 ] enum E2719
 11926 ;;  GIE_state       1    9[BANK0 ] unsigned char 
 11927 ;;  ADCON1_temp     1    8[BANK0 ] unsigned char 
 11928 ;;  ADCON0_temp     1    7[BANK0 ] unsigned char 
 11929 ;; Return value:  Size  Location     Type
 11930 ;;                  1    wreg      enum E2719
 11931 ;; Registers used:
 11932 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11933 ;; Tracked objects:
 11934 ;;		On entry : 1F/0
 11935 ;;		On exit  : 1F/0
 11936 ;;		Unchanged: 0/0
 11937 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11938 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11939 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11940 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11941 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11942 ;;Total ram usage:        7 bytes
 11943 ;; Hardware stack levels used: 1
 11944 ;; Hardware stack levels required when called: 6
 11945 ;; This function calls:
 11946 ;;		_MTOUCH_Delay
 11947 ;;		_MTOUCH_Random
 11948 ;;		_MTOUCH_Sensor_Scan_Initialize
 11949 ;;		_Sensor_Acq_ExecuteScan
 11950 ;;		_Sensor_setScanFunction
 11951 ;; This function is called by:
 11952 ;;		_Sensor_Acquisition
 11953 ;; This function uses a non-reentrant model
 11954 ;;
 11955                           
 11956                           
 11957                           ;psect for function _Sensor_Acq_ExecutePacket
 11958  1676                     _Sensor_Acq_ExecutePacket:
 11959                           
 11960                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 324: static enum mtouch_sensor_error Sensor
      +                          _Acq_ExecutePacket(mtouch_sensor_t* sensor);mcc_generated_files/mtouch/mtouch_sensor.c: 
      +                          325: {;mcc_generated_files/mtouch/mtouch_sensor.c: 327:     enum mtouch_sensor_error err
      +                          or = MTOUCH_SENSOR_ERROR_none;
 11961                           
 11962                           ;incstack = 0
 11963                           ; Regs used in _Sensor_Acq_ExecutePacket: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11964  1676  01AA               	clrf	Sensor_Acq_ExecutePacket@error
 11965                           
 11966                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 328:     uint8_t ADCON0_temp;;mcc_generated
      +                          _files/mtouch/mtouch_sensor.c: 329:     uint8_t ADCON1_temp;;mcc_generated_files/mtouch/
      +                          mtouch_sensor.c: 331:     uint8_t GIE_state;;mcc_generated_files/mtouch/mtouch_sensor.c:
      +                           333:     ADCON0_temp = ADCON0;
 11967  1677  0021               	movlb	1	; select bank1
 11968  1678  081D               	movf	29,w	;volatile
 11969  1679  0020               	movlb	0	; select bank0
 11970  167A  00A6               	movwf	??_Sensor_Acq_ExecutePacket
 11971  167B  0826               	movf	??_Sensor_Acq_ExecutePacket,w
 11972  167C  00A7               	movwf	Sensor_Acq_ExecutePacket@ADCON0_temp
 11973                           
 11974                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 334:     ADCON1_temp = ADCON1;
 11975  167D  0021               	movlb	1	; select bank1
 11976  167E  081E               	movf	30,w	;volatile
 11977  167F  0020               	movlb	0	; select bank0
 11978  1680  00A6               	movwf	??_Sensor_Acq_ExecutePacket
 11979  1681  0826               	movf	??_Sensor_Acq_ExecutePacket,w
 11980  1682  00A8               	movwf	Sensor_Acq_ExecutePacket@ADCON1_temp
 11981                           
 11982                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 335:     MTOUCH_Sensor_Scan_Initialize();
 11983  1683  319B  2309  3196   	fcall	_MTOUCH_Sensor_Scan_Initialize
 11984                           
 11985                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 337:     GIE_state = INTCONbits.GIE;
 11986  1686  3000               	movlw	0
 11987  1687  1B8B               	btfsc	11,7	;volatile
 11988  1688  3001               	movlw	1
 11989  1689  0020               	movlb	0	; select bank0
 11990  168A  00A9               	movwf	Sensor_Acq_ExecutePacket@GIE_state
 11991                           
 11992                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 339:     Sensor_setScanFunction(sensor);
 11993  168B  0825               	movf	Sensor_Acq_ExecutePacket@sensor+1,w
 11994  168C  00F3               	movwf	Sensor_setScanFunction@sensor+1
 11995  168D  0824               	movf	Sensor_Acq_ExecutePacket@sensor,w
 11996  168E  00F2               	movwf	Sensor_setScanFunction@sensor
 11997  168F  319C  2467  3196   	fcall	_Sensor_setScanFunction
 11998                           
 11999                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 341:     currentScannSensor = sensor->senso
      +                          r_name;
 12000  1692  0020               	movlb	0	; select bank0
 12001  1693  0824               	movf	Sensor_Acq_ExecutePacket@sensor,w
 12002  1694  0086               	movwf	6
 12003  1695  0825               	movf	Sensor_Acq_ExecutePacket@sensor+1,w
 12004  1696  0087               	movwf	7
 12005  1697  0801               	movf	1,w
 12006  1698  00A6               	movwf	??_Sensor_Acq_ExecutePacket
 12007  1699  0826               	movf	??_Sensor_Acq_ExecutePacket,w
 12008  169A  00EB               	movwf	_currentScannSensor
 12009                           
 12010                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 342:     packet_counter = sensor->oversampl
      +                          ing;
 12011  169B  0824               	movf	Sensor_Acq_ExecutePacket@sensor,w
 12012  169C  0086               	movwf	6
 12013  169D  0825               	movf	Sensor_Acq_ExecutePacket@sensor+1,w
 12014  169E  0087               	movwf	7
 12015  169F  3145               	addfsr 1,5
 12016  16A0  0801               	movf	1,w
 12017  16A1  00A6               	movwf	??_Sensor_Acq_ExecutePacket
 12018  16A2  0826               	movf	??_Sensor_Acq_ExecutePacket,w
 12019  16A3  00EA               	movwf	_packet_counter
 12020                           
 12021                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 343:     packet_sample = 0;
 12022  16A4  0021               	movlb	1	; select bank1
 12023  16A5  01EB               	clrf	_packet_sample^(0+128)
 12024  16A6  01EC               	clrf	(_packet_sample+1)^(0+128)
 12025                           
 12026                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 344:     sensor_globalFlags.packet_done = 0
      +                          ;
 12027  16A7  0020               	movlb	0	; select bank0
 12028  16A8  106C               	bcf	_sensor_globalFlags,0	;volatile
 12029                           
 12030                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 345:     sample_delay = MTOUCH_Random();
 12031  16A9  319B  23C5  3196   	fcall	_MTOUCH_Random
 12032  16AC  00A6               	movwf	??_Sensor_Acq_ExecutePacket
 12033  16AD  0826               	movf	??_Sensor_Acq_ExecutePacket,w
 12034  16AE  00E9               	movwf	_sample_delay
 12035                           
 12036                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 346:     packet_sample = 0;
 12037  16AF  0021               	movlb	1	; select bank1
 12038  16B0  01EB               	clrf	_packet_sample^(0+128)
 12039  16B1  01EC               	clrf	(_packet_sample+1)^(0+128)
 12040                           
 12041                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 348:     sensor_globalFlags.interrupted = 0
      +                          ;
 12042  16B2  0020               	movlb	0	; select bank0
 12043  16B3  10EC               	bcf	_sensor_globalFlags,1	;volatile
 12044  16B4                     l6558:
 12045                           
 12046                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 352:     {;mcc_generated_files/mtouch/mtouc
      +                          h_sensor.c: 353:         INTCONbits.GIE = (uint8_t)0;
 12047  16B4  138B               	bcf	11,7	;volatile
 12048                           
 12049                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 354:         Sensor_Acq_ExecuteScan();
 12050  16B5  3188  2041  3196   	fcall	_Sensor_Acq_ExecuteScan
 12051                           
 12052                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 355:         INTCONbits.GIE = GIE_state;
 12053  16B8  0C29               	rrf	Sensor_Acq_ExecutePacket@GIE_state,w
 12054  16B9  1C03               	skipc
 12055  16BA  138B               	bcf	11,7	;volatile
 12056  16BB  1803               	skipnc
 12057  16BC  178B               	bsf	11,7	;volatile
 12058                           
 12059                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 356:         MTOUCH_Delay();
 12060  16BD  319B  234E  3196   	fcall	_MTOUCH_Delay
 12061  16C0                     l609:	
 12062                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 357:         while(ADCON0bits.GO_nDONE == 1
      +                          );
 12063                           
 12064  16C0  0021               	movlb	1	; select bank1
 12065  16C1  189D               	btfsc	29,1	;volatile
 12066  16C2  2EC0               	goto	l609
 12067                           
 12068                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 358:     } while(sensor_globalFlags.packet_
      +                          done == 0);
 12069  16C3  0020               	movlb	0	; select bank0
 12070  16C4  1C6C               	btfss	_sensor_globalFlags,0	;volatile
 12071  16C5  2EB4               	goto	l6558
 12072                           
 12073                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 361:     ADCON0 = ADCON0_temp;
 12074  16C6  0827               	movf	Sensor_Acq_ExecutePacket@ADCON0_temp,w
 12075  16C7  0021               	movlb	1	; select bank1
 12076  16C8  009D               	movwf	29	;volatile
 12077                           
 12078                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 362:     ADCON1 = ADCON1_temp;
 12079  16C9  0020               	movlb	0	; select bank0
 12080  16CA  0828               	movf	Sensor_Acq_ExecutePacket@ADCON1_temp,w
 12081  16CB  0021               	movlb	1	; select bank1
 12082  16CC  009E               	movwf	30	;volatile
 12083                           
 12084                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 364:     if(sensor_globalFlags.interrupted)
 12085  16CD  0020               	movlb	0	; select bank0
 12086  16CE  1CEC               	btfss	_sensor_globalFlags,1	;volatile
 12087  16CF  2ED4               	goto	l613
 12088                           
 12089                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 365:     {;mcc_generated_files/mtouch/mtouc
      +                          h_sensor.c: 366:         error = MTOUCH_SENSOR_ERROR_interruptedScan;
 12090  16D0  30FA               	movlw	250
 12091  16D1  00A6               	movwf	??_Sensor_Acq_ExecutePacket
 12092  16D2  0826               	movf	??_Sensor_Acq_ExecutePacket,w
 12093  16D3  00AA               	movwf	Sensor_Acq_ExecutePacket@error
 12094  16D4                     l613:	
 12095                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 367:     }
 12096                           
 12097                           
 12098                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 369:     return error;
 12099  16D4  082A               	movf	Sensor_Acq_ExecutePacket@error,w
 12100  16D5  0008               	return
 12101  16D6                     __end_of_Sensor_Acq_ExecutePacket:
 12102                           
 12103                           	psect	text55
 12104  1C67                     __ptext55:	
 12105 ;; *************** function _Sensor_setScanFunction *****************
 12106 ;; Defined at:
 12107 ;;		line 471 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
 12108 ;; Parameters:    Size  Location     Type
 12109 ;;  sensor          2    2[COMMON] PTR struct .
 12110 ;;		 -> mtouch_sensor(99), 
 12111 ;; Auto vars:     Size  Location     Type
 12112 ;;		None
 12113 ;; Return value:  Size  Location     Type
 12114 ;;                  1    wreg      void 
 12115 ;; Registers used:
 12116 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 12117 ;; Tracked objects:
 12118 ;;		On entry : 1F/0
 12119 ;;		On exit  : 1F/1
 12120 ;;		Unchanged: 0/0
 12121 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12122 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12123 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12124 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12125 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12126 ;;Total ram usage:        2 bytes
 12127 ;; Hardware stack levels used: 1
 12128 ;; Hardware stack levels required when called: 4
 12129 ;; This function calls:
 12130 ;;		Nothing
 12131 ;; This function is called by:
 12132 ;;		_Sensor_Acq_ExecutePacket
 12133 ;; This function uses a non-reentrant model
 12134 ;;
 12135                           
 12136                           
 12137                           ;psect for function _Sensor_setScanFunction
 12138  1C67                     _Sensor_setScanFunction:
 12139                           
 12140                           ;incstack = 0
 12141                           ; Regs used in _Sensor_setScanFunction: [wreg+fsr1l+fsr1h+status,2+status,0]
 12142  1C67  0872               	movf	Sensor_setScanFunction@sensor,w
 12143  1C68  0086               	movwf	6
 12144  1C69  0873               	movf	Sensor_setScanFunction@sensor+1,w
 12145  1C6A  0087               	movwf	7
 12146  1C6B  3141               	addfsr 1,1
 12147  1C6C  3F40               	moviw [0]fsr1
 12148  1C6D  0021               	movlb	1	; select bank1
 12149  1C6E  00B6               	movwf	_Sensor_scanA^(0+128)
 12150  1C6F  3F41               	moviw [1]fsr1
 12151  1C70  00B7               	movwf	(_Sensor_scanA+1)^(0+128)
 12152  1C71  0872               	movf	Sensor_setScanFunction@sensor,w
 12153  1C72  0086               	movwf	6
 12154  1C73  0873               	movf	Sensor_setScanFunction@sensor+1,w
 12155  1C74  0087               	movwf	7
 12156  1C75  3143               	addfsr 1,3
 12157  1C76  3F40               	moviw [0]fsr1
 12158  1C77  00B4               	movwf	_Sensor_scanB^(0+128)
 12159  1C78  3F41               	moviw [1]fsr1
 12160  1C79  00B5               	movwf	(_Sensor_scanB+1)^(0+128)
 12161  1C7A  0008               	return
 12162  1C7B                     __end_of_Sensor_setScanFunction:
 12163                           
 12164                           	psect	text56
 12165  0841                     __ptext56:	
 12166 ;; *************** function _Sensor_Acq_ExecuteScan *****************
 12167 ;; Defined at:
 12168 ;;		line 388 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
 12169 ;; Parameters:    Size  Location     Type
 12170 ;;		None
 12171 ;; Auto vars:     Size  Location     Type
 12172 ;;  result          2    8[COMMON] unsigned short 
 12173 ;; Return value:  Size  Location     Type
 12174 ;;                  1    wreg      void 
 12175 ;; Registers used:
 12176 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12177 ;; Tracked objects:
 12178 ;;		On entry : 1F/0
 12179 ;;		On exit  : 1F/0
 12180 ;;		Unchanged: 0/0
 12181 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12182 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12183 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12184 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12185 ;;      Totals:         2       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12186 ;;Total ram usage:        6 bytes
 12187 ;; Hardware stack levels used: 1
 12188 ;; Hardware stack levels required when called: 5
 12189 ;; This function calls:
 12190 ;;		_MTOUCH_CVD_ScanA_0
 12191 ;;		_MTOUCH_CVD_ScanA_1
 12192 ;;		_MTOUCH_CVD_ScanA_10
 12193 ;;		_MTOUCH_CVD_ScanA_2
 12194 ;;		_MTOUCH_CVD_ScanA_3
 12195 ;;		_MTOUCH_CVD_ScanA_4
 12196 ;;		_MTOUCH_CVD_ScanA_5
 12197 ;;		_MTOUCH_CVD_ScanA_6
 12198 ;;		_MTOUCH_CVD_ScanA_7
 12199 ;;		_MTOUCH_CVD_ScanA_8
 12200 ;;		_MTOUCH_CVD_ScanA_9
 12201 ;;		_MTOUCH_CVD_ScanB_0
 12202 ;;		_MTOUCH_CVD_ScanB_1
 12203 ;;		_MTOUCH_CVD_ScanB_10
 12204 ;;		_MTOUCH_CVD_ScanB_2
 12205 ;;		_MTOUCH_CVD_ScanB_3
 12206 ;;		_MTOUCH_CVD_ScanB_4
 12207 ;;		_MTOUCH_CVD_ScanB_5
 12208 ;;		_MTOUCH_CVD_ScanB_6
 12209 ;;		_MTOUCH_CVD_ScanB_7
 12210 ;;		_MTOUCH_CVD_ScanB_8
 12211 ;;		_MTOUCH_CVD_ScanB_9
 12212 ;;		___wmul
 12213 ;; This function is called by:
 12214 ;;		_Sensor_Acq_ExecutePacket
 12215 ;; This function uses a non-reentrant model
 12216 ;;
 12217                           
 12218                           
 12219                           ;psect for function _Sensor_Acq_ExecuteScan
 12220  0841                     _Sensor_Acq_ExecuteScan:
 12221                           
 12222                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 391:     mtouch_sensor_adcsample_t result =
      +                           ADRES;
 12223                           
 12224                           ;incstack = 0
 12225                           ; Regs used in _Sensor_Acq_ExecuteScan: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12226  0841  0021               	movlb	1	; select bank1
 12227  0842  081C               	movf	28,w	;volatile
 12228  0843  00F9               	movwf	Sensor_Acq_ExecuteScan@result+1
 12229  0844  081B               	movf	27,w	;volatile
 12230  0845  00F8               	movwf	Sensor_Acq_ExecuteScan@result
 12231                           
 12232                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 393:     if(sensor_globalFlags.packet_done)
 12233  0846  0020               	movlb	0	; select bank0
 12234  0847  186C               	btfsc	_sensor_globalFlags,0	;volatile
 12235  0848  0008               	return
 12236                           
 12237                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 396:     if (packet_counter != (uint8_t)0)
 12238  0849  086A               	movf	_packet_counter,w
 12239  084A  1D03               	btfss	3,2
 12240  084B  285B               	goto	l6406
 12241  084C  289E               	goto	l6418
 12242  084D                     l6400:
 12243  084D  0021               	movlb	1	; select bank1
 12244  084E  0837               	movf	(_Sensor_scanA+1)^(0+128),w
 12245  084F  008A               	movwf	10
 12246  0850  0836               	movf	_Sensor_scanA^(0+128),w
 12247  0851  000A               	callw
 12248  0852  3188               	pagesel	$
 12249  0853  286C               	goto	l6408
 12250  0854                     l6402:
 12251  0854  0021               	movlb	1	; select bank1
 12252  0855  0835               	movf	(_Sensor_scanB+1)^(0+128),w
 12253  0856  008A               	movwf	10
 12254  0857  0834               	movf	_Sensor_scanB^(0+128),w
 12255  0858  000A               	callw
 12256  0859  3188               	pagesel	$
 12257  085A  286C               	goto	l6408
 12258  085B                     l6406:
 12259  085B  086A               	movf	_packet_counter,w
 12260  085C  3901               	andlw	1
 12261  085D  00A0               	movwf	??_Sensor_Acq_ExecuteScan
 12262  085E  01A1               	clrf	??_Sensor_Acq_ExecuteScan+1
 12263                           
 12264                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 12265                           ; Switch size 1, requested type "simple"
 12266                           ; Number of cases is 1, Range of values is 0 to 0
 12267                           ; switch strategies available:
 12268                           ; Name         Instructions Cycles
 12269                           ; simple_byte            4     3 (average)
 12270                           ; direct_byte            8     6 (fixed)
 12271                           ; jumptable            260     6 (fixed)
 12272                           ;	Chosen strategy is simple_byte
 12273  085F  0821               	movf	??_Sensor_Acq_ExecuteScan+1,w
 12274  0860  3A00               	xorlw	0	; case 0
 12275  0861  1903               	skipnz
 12276  0862  2864               	goto	l7582
 12277  0863  286C               	goto	l6408
 12278  0864                     l7582:
 12279                           
 12280                           ; Switch size 1, requested type "simple"
 12281                           ; Number of cases is 2, Range of values is 0 to 1
 12282                           ; switch strategies available:
 12283                           ; Name         Instructions Cycles
 12284                           ; simple_byte            7     4 (average)
 12285                           ; direct_byte           10     6 (fixed)
 12286                           ; jumptable            260     6 (fixed)
 12287                           ;	Chosen strategy is simple_byte
 12288  0864  0820               	movf	??_Sensor_Acq_ExecuteScan,w
 12289  0865  3A00               	xorlw	0	; case 0
 12290  0866  1903               	skipnz
 12291  0867  284D               	goto	l6400
 12292  0868  3A01               	xorlw	1	; case 1
 12293  0869  1903               	skipnz
 12294  086A  2854               	goto	l6402
 12295  086B  286C               	goto	l6408
 12296  086C                     l6408:
 12297  086C  0020               	movlb	0	; select bank0
 12298  086D  086B               	movf	_currentScannSensor,w
 12299  086E  00A0               	movwf	??_Sensor_Acq_ExecuteScan
 12300  086F  01A1               	clrf	??_Sensor_Acq_ExecuteScan+1
 12301  0870  0820               	movf	??_Sensor_Acq_ExecuteScan,w
 12302  0871  00F2               	movwf	___wmul@multiplier
 12303  0872  0821               	movf	??_Sensor_Acq_ExecuteScan+1,w
 12304  0873  00F3               	movwf	___wmul@multiplier+1
 12305  0874  3009               	movlw	9
 12306  0875  00F4               	movwf	___wmul@multiplicand
 12307  0876  3000               	movlw	0
 12308  0877  00F5               	movwf	___wmul@multiplicand+1
 12309  0878  319D  2538  3188   	fcall	___wmul
 12310  087B  303D               	movlw	61
 12311  087C  00A2               	movwf	??_Sensor_Acq_ExecuteScan+2
 12312  087D  3023               	movlw	35
 12313  087E  00A3               	movwf	??_Sensor_Acq_ExecuteScan+3
 12314  087F  0872               	movf	?___wmul,w
 12315  0880  0722               	addwf	??_Sensor_Acq_ExecuteScan+2,w
 12316  0881  0086               	movwf	6
 12317  0882  0873               	movf	?___wmul+1,w
 12318  0883  3D23               	addwfc	??_Sensor_Acq_ExecuteScan+3,w
 12319  0884  0087               	movwf	7
 12320  0885  0801               	movf	1,w
 12321  0886  066A               	xorwf	_packet_counter,w
 12322  0887  1903               	skipnz
 12323  0888  289A               	goto	l6416
 12324  0889  1C6A               	btfss	_packet_counter,0
 12325  088A  2895               	goto	l6414
 12326  088B  3000               	movlw	0
 12327  088C  00A0               	movwf	??_Sensor_Acq_ExecuteScan
 12328  088D  3004               	movlw	4
 12329  088E  00A1               	movwf	??_Sensor_Acq_ExecuteScan+1
 12330  088F  0878               	movf	Sensor_Acq_ExecuteScan@result,w
 12331  0890  0220               	subwf	??_Sensor_Acq_ExecuteScan,w
 12332  0891  00F8               	movwf	Sensor_Acq_ExecuteScan@result
 12333  0892  0879               	movf	Sensor_Acq_ExecuteScan@result+1,w
 12334  0893  3B21               	subwfb	??_Sensor_Acq_ExecuteScan+1,w
 12335  0894  00F9               	movwf	Sensor_Acq_ExecuteScan@result+1
 12336  0895                     l6414:
 12337  0895  0878               	movf	Sensor_Acq_ExecuteScan@result,w
 12338  0896  0021               	movlb	1	; select bank1
 12339  0897  07EB               	addwf	_packet_sample^(0+128),f
 12340  0898  0879               	movf	Sensor_Acq_ExecuteScan@result+1,w
 12341  0899  3DEC               	addwfc	(_packet_sample+1)^(0+128),f
 12342  089A                     l6416:
 12343  089A  3001               	movlw	1
 12344  089B  0020               	movlb	0	; select bank0
 12345  089C  02EA               	subwf	_packet_counter,f
 12346  089D  0008               	return
 12347  089E                     l6418:
 12348  089E  0878               	movf	Sensor_Acq_ExecuteScan@result,w
 12349  089F  0021               	movlb	1	; select bank1
 12350  08A0  07EB               	addwf	_packet_sample^(0+128),f
 12351  08A1  0879               	movf	Sensor_Acq_ExecuteScan@result+1,w
 12352  08A2  3DEC               	addwfc	(_packet_sample+1)^(0+128),f
 12353  08A3  0020               	movlb	0	; select bank0
 12354  08A4  146C               	bsf	_sensor_globalFlags,0	;volatile
 12355  08A5  0008               	return
 12356  08A6                     __end_of_Sensor_Acq_ExecuteScan:
 12357                           
 12358                           	psect	text57
 12359  10E5                     __ptext57:	
 12360 ;; *************** function _MTOUCH_CVD_ScanB_10 *****************
 12361 ;; Defined at:
 12362 ;;		line 1383 in file "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
 12363 ;; Parameters:    Size  Location     Type
 12364 ;;		None
 12365 ;; Auto vars:     Size  Location     Type
 12366 ;;		None
 12367 ;; Return value:  Size  Location     Type
 12368 ;;                  1    wreg      void 
 12369 ;; Registers used:
 12370 ;;		wreg
 12371 ;; Tracked objects:
 12372 ;;		On entry : 1F/1
 12373 ;;		On exit  : 0/0
 12374 ;;		Unchanged: 0/0
 12375 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12376 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12377 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12378 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12379 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12380 ;;Total ram usage:        0 bytes
 12381 ;; Hardware stack levels used: 1
 12382 ;; Hardware stack levels required when called: 4
 12383 ;; This function calls:
 12384 ;;		Nothing
 12385 ;; This function is called by:
 12386 ;;		_Sensor_Acq_ExecuteScan
 12387 ;; This function uses a non-reentrant model
 12388 ;;
 12389                           
 12390                           
 12391                           ;psect for function _MTOUCH_CVD_ScanB_10
 12392  10E5                     _MTOUCH_CVD_ScanB_10:
 12393                           
 12394                           ;incstack = 0
 12395                           ; Regs used in _MTOUCH_CVD_ScanB_10: [wreg]
 12396  10E5  0022               	banksel	268	;# 
 12397  10E6  108C               	bcf	12,1	;# 
 12398  10E7  0021               	banksel	157	;# 
 12399  10E8  3005               	movlw	5	;# 
 12400  10E9  009D               	movwf	29	;# 
 12401                           
 12402                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 1395:     _delay(32u);
 12403  10EA  300A               	movlw	10
 12404  10EB                     u7907:
 12405  10EB  0B89               	decfsz	9,f
 12406  10EC  28EB               	goto	u7907
 12407  10ED  3200               	nop2
 12408  10EE  308C               	movlw	140	;# 
 12409  10EF  0084               	movwf	4	;# 
 12410  10F0  3000               	movlw	0	;# 
 12411  10F1  0085               	movwf	5	;# 
 12412  10F2  300C               	movlw	12	;# 
 12413  10F3  0086               	movwf	6	;# 
 12414  10F4  3001               	movlw	1	;# 
 12415  10F5  0087               	movwf	7	;# 
 12416  10F6  3001               	movlw	1	;# 
 12417  10F7  1400               	bsf	0,0	;# 
 12418                           
 12419                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 1413:     _delay(0u);
 12420  10F8  009D               	movwf	29	;# 
 12421                           
 12422                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 1420:     _delay(16u);
 12423  10F9  3005               	movlw	5
 12424  10FA                     u7917:
 12425  10FA  0B89               	decfsz	9,f
 12426  10FB  28FA               	goto	u7917
 12427  10FC  0000               	nop
 12428  10FD  0021               	banksel	157	;# 
 12429  10FE  149D               	bsf	29,1	;# 
 12430                           
 12431                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 1427:     _delay(3u);
 12432  10FF  3200               	nop2	;2 cycle nop
 12433  1100  0000               	nop
 12434  1101  0022               	banksel	268	;# 
 12435  1102  100C               	bcf	12,0	;# 
 12436  1103  1000               	bcf	0,0	;# 
 12437  1104  0008               	return
 12438  1105                     __end_of_MTOUCH_CVD_ScanB_10:
 12439                           
 12440                           	psect	text58
 12441  10C5                     __ptext58:	
 12442 ;; *************** function _MTOUCH_CVD_ScanB_8 *****************
 12443 ;; Defined at:
 12444 ;;		line 1129 in file "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
 12445 ;; Parameters:    Size  Location     Type
 12446 ;;		None
 12447 ;; Auto vars:     Size  Location     Type
 12448 ;;		None
 12449 ;; Return value:  Size  Location     Type
 12450 ;;                  1    wreg      void 
 12451 ;; Registers used:
 12452 ;;		wreg
 12453 ;; Tracked objects:
 12454 ;;		On entry : 1F/1
 12455 ;;		On exit  : 0/0
 12456 ;;		Unchanged: 0/0
 12457 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12458 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12459 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12460 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12461 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12462 ;;Total ram usage:        0 bytes
 12463 ;; Hardware stack levels used: 1
 12464 ;; Hardware stack levels required when called: 4
 12465 ;; This function calls:
 12466 ;;		Nothing
 12467 ;; This function is called by:
 12468 ;;		_Sensor_Acq_ExecuteScan
 12469 ;; This function uses a non-reentrant model
 12470 ;;
 12471                           
 12472                           
 12473                           ;psect for function _MTOUCH_CVD_ScanB_8
 12474  10C5                     _MTOUCH_CVD_ScanB_8:
 12475                           
 12476                           ;incstack = 0
 12477                           ; Regs used in _MTOUCH_CVD_ScanB_8: [wreg]
 12478  10C5  0022               	banksel	268	;# 
 12479  10C6  118C               	bcf	12,3	;# 
 12480  10C7  0021               	banksel	157	;# 
 12481  10C8  300D               	movlw	13	;# 
 12482  10C9  009D               	movwf	29	;# 
 12483                           
 12484                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 1141:     _delay(32u);
 12485  10CA  300A               	movlw	10
 12486  10CB                     u7927:
 12487  10CB  0B89               	decfsz	9,f
 12488  10CC  28CB               	goto	u7927
 12489  10CD  3200               	nop2
 12490  10CE  308C               	movlw	140	;# 
 12491  10CF  0084               	movwf	4	;# 
 12492  10D0  3000               	movlw	0	;# 
 12493  10D1  0085               	movwf	5	;# 
 12494  10D2  300C               	movlw	12	;# 
 12495  10D3  0086               	movwf	6	;# 
 12496  10D4  3001               	movlw	1	;# 
 12497  10D5  0087               	movwf	7	;# 
 12498  10D6  3009               	movlw	9	;# 
 12499  10D7  1500               	bsf	0,2	;# 
 12500                           
 12501                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 1159:     _delay(0u);
 12502  10D8  009D               	movwf	29	;# 
 12503                           
 12504                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 1166:     _delay(16u);
 12505  10D9  3005               	movlw	5
 12506  10DA                     u7937:
 12507  10DA  0B89               	decfsz	9,f
 12508  10DB  28DA               	goto	u7937
 12509  10DC  0000               	nop
 12510  10DD  0021               	banksel	157	;# 
 12511  10DE  149D               	bsf	29,1	;# 
 12512                           
 12513                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 1173:     _delay(3u);
 12514  10DF  3200               	nop2	;2 cycle nop
 12515  10E0  0000               	nop
 12516  10E1  0022               	banksel	268	;# 
 12517  10E2  110C               	bcf	12,2	;# 
 12518  10E3  1100               	bcf	0,2	;# 
 12519  10E4  0008               	return
 12520  10E5                     __end_of_MTOUCH_CVD_ScanB_8:
 12521                           
 12522                           	psect	text59
 12523  10A5                     __ptext59:	
 12524 ;; *************** function _MTOUCH_CVD_ScanB_7 *****************
 12525 ;; Defined at:
 12526 ;;		line 1002 in file "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
 12527 ;; Parameters:    Size  Location     Type
 12528 ;;		None
 12529 ;; Auto vars:     Size  Location     Type
 12530 ;;		None
 12531 ;; Return value:  Size  Location     Type
 12532 ;;                  1    wreg      void 
 12533 ;; Registers used:
 12534 ;;		wreg
 12535 ;; Tracked objects:
 12536 ;;		On entry : 1F/1
 12537 ;;		On exit  : 0/0
 12538 ;;		Unchanged: 0/0
 12539 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12540 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12541 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12542 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12543 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12544 ;;Total ram usage:        0 bytes
 12545 ;; Hardware stack levels used: 1
 12546 ;; Hardware stack levels required when called: 4
 12547 ;; This function calls:
 12548 ;;		Nothing
 12549 ;; This function is called by:
 12550 ;;		_Sensor_Acq_ExecuteScan
 12551 ;; This function uses a non-reentrant model
 12552 ;;
 12553                           
 12554                           
 12555                           ;psect for function _MTOUCH_CVD_ScanB_7
 12556  10A5                     _MTOUCH_CVD_ScanB_7:
 12557                           
 12558                           ;incstack = 0
 12559                           ; Regs used in _MTOUCH_CVD_ScanB_7: [wreg]
 12560  10A5  0022               	banksel	268	;# 
 12561  10A6  128C               	bcf	12,5	;# 
 12562  10A7  0021               	banksel	157	;# 
 12563  10A8  3011               	movlw	17	;# 
 12564  10A9  009D               	movwf	29	;# 
 12565                           
 12566                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 1014:     _delay(32u);
 12567  10AA  300A               	movlw	10
 12568  10AB                     u7947:
 12569  10AB  0B89               	decfsz	9,f
 12570  10AC  28AB               	goto	u7947
 12571  10AD  3200               	nop2
 12572  10AE  308C               	movlw	140	;# 
 12573  10AF  0084               	movwf	4	;# 
 12574  10B0  3000               	movlw	0	;# 
 12575  10B1  0085               	movwf	5	;# 
 12576  10B2  300C               	movlw	12	;# 
 12577  10B3  0086               	movwf	6	;# 
 12578  10B4  3001               	movlw	1	;# 
 12579  10B5  0087               	movwf	7	;# 
 12580  10B6  300D               	movlw	13	;# 
 12581  10B7  1580               	bsf	0,3	;# 
 12582                           
 12583                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 1032:     _delay(0u);
 12584  10B8  009D               	movwf	29	;# 
 12585                           
 12586                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 1039:     _delay(16u);
 12587  10B9  3005               	movlw	5
 12588  10BA                     u7957:
 12589  10BA  0B89               	decfsz	9,f
 12590  10BB  28BA               	goto	u7957
 12591  10BC  0000               	nop
 12592  10BD  0021               	banksel	157	;# 
 12593  10BE  149D               	bsf	29,1	;# 
 12594                           
 12595                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 1046:     _delay(3u);
 12596  10BF  3200               	nop2	;2 cycle nop
 12597  10C0  0000               	nop
 12598  10C1  0022               	banksel	268	;# 
 12599  10C2  118C               	bcf	12,3	;# 
 12600  10C3  1180               	bcf	0,3	;# 
 12601  10C4  0008               	return
 12602  10C5                     __end_of_MTOUCH_CVD_ScanB_7:
 12603                           
 12604                           	psect	text60
 12605  1085                     __ptext60:	
 12606 ;; *************** function _MTOUCH_CVD_ScanB_6 *****************
 12607 ;; Defined at:
 12608 ;;		line 875 in file "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
 12609 ;; Parameters:    Size  Location     Type
 12610 ;;		None
 12611 ;; Auto vars:     Size  Location     Type
 12612 ;;		None
 12613 ;; Return value:  Size  Location     Type
 12614 ;;                  1    wreg      void 
 12615 ;; Registers used:
 12616 ;;		wreg
 12617 ;; Tracked objects:
 12618 ;;		On entry : 1F/1
 12619 ;;		On exit  : 0/0
 12620 ;;		Unchanged: 0/0
 12621 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12622 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12623 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12624 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12625 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12626 ;;Total ram usage:        0 bytes
 12627 ;; Hardware stack levels used: 1
 12628 ;; Hardware stack levels required when called: 4
 12629 ;; This function calls:
 12630 ;;		Nothing
 12631 ;; This function is called by:
 12632 ;;		_Sensor_Acq_ExecuteScan
 12633 ;; This function uses a non-reentrant model
 12634 ;;
 12635                           
 12636                           
 12637                           ;psect for function _MTOUCH_CVD_ScanB_6
 12638  1085                     _MTOUCH_CVD_ScanB_6:
 12639                           
 12640                           ;incstack = 0
 12641                           ; Regs used in _MTOUCH_CVD_ScanB_6: [wreg]
 12642  1085  0022               	banksel	269	;# 
 12643  1086  128D               	bcf	13,5	;# 
 12644  1087  0021               	banksel	157	;# 
 12645  1088  3035               	movlw	53	;# 
 12646  1089  009D               	movwf	29	;# 
 12647                           
 12648                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 887:     _delay(32u);
 12649  108A  300A               	movlw	10
 12650  108B                     u7967:
 12651  108B  0B89               	decfsz	9,f
 12652  108C  288B               	goto	u7967
 12653  108D  3200               	nop2
 12654  108E  308C               	movlw	140	;# 
 12655  108F  0084               	movwf	4	;# 
 12656  1090  3000               	movlw	0	;# 
 12657  1091  0085               	movwf	5	;# 
 12658  1092  300C               	movlw	12	;# 
 12659  1093  0086               	movwf	6	;# 
 12660  1094  3001               	movlw	1	;# 
 12661  1095  0087               	movwf	7	;# 
 12662  1096  3011               	movlw	17	;# 
 12663  1097  1680               	bsf	0,5	;# 
 12664                           
 12665                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 905:     _delay(0u);
 12666  1098  009D               	movwf	29	;# 
 12667                           
 12668                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 912:     _delay(16u);
 12669  1099  3005               	movlw	5
 12670  109A                     u7977:
 12671  109A  0B89               	decfsz	9,f
 12672  109B  289A               	goto	u7977
 12673  109C  0000               	nop
 12674  109D  0021               	banksel	157	;# 
 12675  109E  149D               	bsf	29,1	;# 
 12676                           
 12677                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 919:     _delay(3u);
 12678  109F  3200               	nop2	;2 cycle nop
 12679  10A0  0000               	nop
 12680  10A1  0022               	banksel	268	;# 
 12681  10A2  128C               	bcf	12,5	;# 
 12682  10A3  1280               	bcf	0,5	;# 
 12683  10A4  0008               	return
 12684  10A5                     __end_of_MTOUCH_CVD_ScanB_6:
 12685                           
 12686                           	psect	text61
 12687  1065                     __ptext61:	
 12688 ;; *************** function _MTOUCH_CVD_ScanB_5 *****************
 12689 ;; Defined at:
 12690 ;;		line 748 in file "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
 12691 ;; Parameters:    Size  Location     Type
 12692 ;;		None
 12693 ;; Auto vars:     Size  Location     Type
 12694 ;;		None
 12695 ;; Return value:  Size  Location     Type
 12696 ;;                  1    wreg      void 
 12697 ;; Registers used:
 12698 ;;		wreg
 12699 ;; Tracked objects:
 12700 ;;		On entry : 1F/1
 12701 ;;		On exit  : 0/0
 12702 ;;		Unchanged: 0/0
 12703 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12704 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12705 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12706 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12707 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12708 ;;Total ram usage:        0 bytes
 12709 ;; Hardware stack levels used: 1
 12710 ;; Hardware stack levels required when called: 4
 12711 ;; This function calls:
 12712 ;;		Nothing
 12713 ;; This function is called by:
 12714 ;;		_Sensor_Acq_ExecuteScan
 12715 ;; This function uses a non-reentrant model
 12716 ;;
 12717                           
 12718                           
 12719                           ;psect for function _MTOUCH_CVD_ScanB_5
 12720  1065                     _MTOUCH_CVD_ScanB_5:
 12721                           
 12722                           ;incstack = 0
 12723                           ; Regs used in _MTOUCH_CVD_ScanB_5: [wreg]
 12724  1065  0022               	banksel	269	;# 
 12725  1066  120D               	bcf	13,4	;# 
 12726  1067  0021               	banksel	157	;# 
 12727  1068  302D               	movlw	45	;# 
 12728  1069  009D               	movwf	29	;# 
 12729                           
 12730                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 760:     _delay(32u);
 12731  106A  300A               	movlw	10
 12732  106B                     u7987:
 12733  106B  0B89               	decfsz	9,f
 12734  106C  286B               	goto	u7987
 12735  106D  3200               	nop2
 12736  106E  308D               	movlw	141	;# 
 12737  106F  0084               	movwf	4	;# 
 12738  1070  3000               	movlw	0	;# 
 12739  1071  0085               	movwf	5	;# 
 12740  1072  300D               	movlw	13	;# 
 12741  1073  0086               	movwf	6	;# 
 12742  1074  3001               	movlw	1	;# 
 12743  1075  0087               	movwf	7	;# 
 12744  1076  3035               	movlw	53	;# 
 12745  1077  1680               	bsf	0,5	;# 
 12746                           
 12747                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 778:     _delay(0u);
 12748  1078  009D               	movwf	29	;# 
 12749                           
 12750                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 785:     _delay(16u);
 12751  1079  3005               	movlw	5
 12752  107A                     u7997:
 12753  107A  0B89               	decfsz	9,f
 12754  107B  287A               	goto	u7997
 12755  107C  0000               	nop
 12756  107D  0021               	banksel	157	;# 
 12757  107E  149D               	bsf	29,1	;# 
 12758                           
 12759                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 792:     _delay(3u);
 12760  107F  3200               	nop2	;2 cycle nop
 12761  1080  0000               	nop
 12762  1081  0022               	banksel	269	;# 
 12763  1082  128D               	bcf	13,5	;# 
 12764  1083  1280               	bcf	0,5	;# 
 12765  1084  0008               	return
 12766  1085                     __end_of_MTOUCH_CVD_ScanB_5:
 12767                           
 12768                           	psect	text62
 12769  1045                     __ptext62:	
 12770 ;; *************** function _MTOUCH_CVD_ScanB_4 *****************
 12771 ;; Defined at:
 12772 ;;		line 621 in file "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
 12773 ;; Parameters:    Size  Location     Type
 12774 ;;		None
 12775 ;; Auto vars:     Size  Location     Type
 12776 ;;		None
 12777 ;; Return value:  Size  Location     Type
 12778 ;;                  1    wreg      void 
 12779 ;; Registers used:
 12780 ;;		wreg
 12781 ;; Tracked objects:
 12782 ;;		On entry : 1F/1
 12783 ;;		On exit  : 0/0
 12784 ;;		Unchanged: 0/0
 12785 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12786 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12787 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12788 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12789 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12790 ;;Total ram usage:        0 bytes
 12791 ;; Hardware stack levels used: 1
 12792 ;; Hardware stack levels required when called: 4
 12793 ;; This function calls:
 12794 ;;		Nothing
 12795 ;; This function is called by:
 12796 ;;		_Sensor_Acq_ExecuteScan
 12797 ;; This function uses a non-reentrant model
 12798 ;;
 12799                           
 12800                           
 12801                           ;psect for function _MTOUCH_CVD_ScanB_4
 12802  1045                     _MTOUCH_CVD_ScanB_4:
 12803                           
 12804                           ;incstack = 0
 12805                           ; Regs used in _MTOUCH_CVD_ScanB_4: [wreg]
 12806  1045  0022               	banksel	269	;# 
 12807  1046  118D               	bcf	13,3	;# 
 12808  1047  0021               	banksel	157	;# 
 12809  1048  3025               	movlw	37	;# 
 12810  1049  009D               	movwf	29	;# 
 12811                           
 12812                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 633:     _delay(32u);
 12813  104A  300A               	movlw	10
 12814  104B                     u8007:
 12815  104B  0B89               	decfsz	9,f
 12816  104C  284B               	goto	u8007
 12817  104D  3200               	nop2
 12818  104E  308D               	movlw	141	;# 
 12819  104F  0084               	movwf	4	;# 
 12820  1050  3000               	movlw	0	;# 
 12821  1051  0085               	movwf	5	;# 
 12822  1052  300D               	movlw	13	;# 
 12823  1053  0086               	movwf	6	;# 
 12824  1054  3001               	movlw	1	;# 
 12825  1055  0087               	movwf	7	;# 
 12826  1056  302D               	movlw	45	;# 
 12827  1057  1600               	bsf	0,4	;# 
 12828                           
 12829                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 651:     _delay(0u);
 12830  1058  009D               	movwf	29	;# 
 12831                           
 12832                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 658:     _delay(16u);
 12833  1059  3005               	movlw	5
 12834  105A                     u8017:
 12835  105A  0B89               	decfsz	9,f
 12836  105B  285A               	goto	u8017
 12837  105C  0000               	nop
 12838  105D  0021               	banksel	157	;# 
 12839  105E  149D               	bsf	29,1	;# 
 12840                           
 12841                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 665:     _delay(3u);
 12842  105F  3200               	nop2	;2 cycle nop
 12843  1060  0000               	nop
 12844  1061  0022               	banksel	269	;# 
 12845  1062  120D               	bcf	13,4	;# 
 12846  1063  1200               	bcf	0,4	;# 
 12847  1064  0008               	return
 12848  1065                     __end_of_MTOUCH_CVD_ScanB_4:
 12849                           
 12850                           	psect	text63
 12851  1025                     __ptext63:	
 12852 ;; *************** function _MTOUCH_CVD_ScanB_3 *****************
 12853 ;; Defined at:
 12854 ;;		line 494 in file "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
 12855 ;; Parameters:    Size  Location     Type
 12856 ;;		None
 12857 ;; Auto vars:     Size  Location     Type
 12858 ;;		None
 12859 ;; Return value:  Size  Location     Type
 12860 ;;                  1    wreg      void 
 12861 ;; Registers used:
 12862 ;;		wreg
 12863 ;; Tracked objects:
 12864 ;;		On entry : 1F/1
 12865 ;;		On exit  : 0/0
 12866 ;;		Unchanged: 0/0
 12867 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12868 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12869 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12870 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12871 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12872 ;;Total ram usage:        0 bytes
 12873 ;; Hardware stack levels used: 1
 12874 ;; Hardware stack levels required when called: 4
 12875 ;; This function calls:
 12876 ;;		Nothing
 12877 ;; This function is called by:
 12878 ;;		_Sensor_Acq_ExecuteScan
 12879 ;; This function uses a non-reentrant model
 12880 ;;
 12881                           
 12882                           
 12883                           ;psect for function _MTOUCH_CVD_ScanB_3
 12884  1025                     _MTOUCH_CVD_ScanB_3:
 12885                           
 12886                           ;incstack = 0
 12887                           ; Regs used in _MTOUCH_CVD_ScanB_3: [wreg]
 12888  1025  0022               	banksel	269	;# 
 12889  1026  110D               	bcf	13,2	;# 
 12890  1027  0021               	banksel	157	;# 
 12891  1028  3021               	movlw	33	;# 
 12892  1029  009D               	movwf	29	;# 
 12893                           
 12894                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 506:     _delay(32u);
 12895  102A  300A               	movlw	10
 12896  102B                     u8027:
 12897  102B  0B89               	decfsz	9,f
 12898  102C  282B               	goto	u8027
 12899  102D  3200               	nop2
 12900  102E  308D               	movlw	141	;# 
 12901  102F  0084               	movwf	4	;# 
 12902  1030  3000               	movlw	0	;# 
 12903  1031  0085               	movwf	5	;# 
 12904  1032  300D               	movlw	13	;# 
 12905  1033  0086               	movwf	6	;# 
 12906  1034  3001               	movlw	1	;# 
 12907  1035  0087               	movwf	7	;# 
 12908  1036  3025               	movlw	37	;# 
 12909  1037  1580               	bsf	0,3	;# 
 12910                           
 12911                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 524:     _delay(0u);
 12912  1038  009D               	movwf	29	;# 
 12913                           
 12914                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 531:     _delay(16u);
 12915  1039  3005               	movlw	5
 12916  103A                     u8037:
 12917  103A  0B89               	decfsz	9,f
 12918  103B  283A               	goto	u8037
 12919  103C  0000               	nop
 12920  103D  0021               	banksel	157	;# 
 12921  103E  149D               	bsf	29,1	;# 
 12922                           
 12923                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 538:     _delay(3u);
 12924  103F  3200               	nop2	;2 cycle nop
 12925  1040  0000               	nop
 12926  1041  0022               	banksel	269	;# 
 12927  1042  118D               	bcf	13,3	;# 
 12928  1043  1180               	bcf	0,3	;# 
 12929  1044  0008               	return
 12930  1045                     __end_of_MTOUCH_CVD_ScanB_3:
 12931                           
 12932                           	psect	text64
 12933  1005                     __ptext64:	
 12934 ;; *************** function _MTOUCH_CVD_ScanB_2 *****************
 12935 ;; Defined at:
 12936 ;;		line 367 in file "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
 12937 ;; Parameters:    Size  Location     Type
 12938 ;;		None
 12939 ;; Auto vars:     Size  Location     Type
 12940 ;;		None
 12941 ;; Return value:  Size  Location     Type
 12942 ;;                  1    wreg      void 
 12943 ;; Registers used:
 12944 ;;		wreg
 12945 ;; Tracked objects:
 12946 ;;		On entry : 1F/1
 12947 ;;		On exit  : 0/0
 12948 ;;		Unchanged: 0/0
 12949 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12950 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12951 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12952 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12953 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12954 ;;Total ram usage:        0 bytes
 12955 ;; Hardware stack levels used: 1
 12956 ;; Hardware stack levels required when called: 4
 12957 ;; This function calls:
 12958 ;;		Nothing
 12959 ;; This function is called by:
 12960 ;;		_Sensor_Acq_ExecuteScan
 12961 ;; This function uses a non-reentrant model
 12962 ;;
 12963                           
 12964                           
 12965                           ;psect for function _MTOUCH_CVD_ScanB_2
 12966  1005                     _MTOUCH_CVD_ScanB_2:
 12967                           
 12968                           ;incstack = 0
 12969                           ; Regs used in _MTOUCH_CVD_ScanB_2: [wreg]
 12970  1005  0022               	banksel	269	;# 
 12971  1006  108D               	bcf	13,1	;# 
 12972  1007  0021               	banksel	157	;# 
 12973  1008  3029               	movlw	41	;# 
 12974  1009  009D               	movwf	29	;# 
 12975                           
 12976                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 379:     _delay(32u);
 12977  100A  300A               	movlw	10
 12978  100B                     u8047:
 12979  100B  0B89               	decfsz	9,f
 12980  100C  280B               	goto	u8047
 12981  100D  3200               	nop2
 12982  100E  308D               	movlw	141	;# 
 12983  100F  0084               	movwf	4	;# 
 12984  1010  3000               	movlw	0	;# 
 12985  1011  0085               	movwf	5	;# 
 12986  1012  300D               	movlw	13	;# 
 12987  1013  0086               	movwf	6	;# 
 12988  1014  3001               	movlw	1	;# 
 12989  1015  0087               	movwf	7	;# 
 12990  1016  3021               	movlw	33	;# 
 12991  1017  1500               	bsf	0,2	;# 
 12992                           
 12993                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 397:     _delay(0u);
 12994  1018  009D               	movwf	29	;# 
 12995                           
 12996                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 404:     _delay(16u);
 12997  1019  3005               	movlw	5
 12998  101A                     u8057:
 12999  101A  0B89               	decfsz	9,f
 13000  101B  281A               	goto	u8057
 13001  101C  0000               	nop
 13002  101D  0021               	banksel	157	;# 
 13003  101E  149D               	bsf	29,1	;# 
 13004                           
 13005                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 411:     _delay(3u);
 13006  101F  3200               	nop2	;2 cycle nop
 13007  1020  0000               	nop
 13008  1021  0022               	banksel	269	;# 
 13009  1022  110D               	bcf	13,2	;# 
 13010  1023  1100               	bcf	0,2	;# 
 13011  1024  0008               	return
 13012  1025                     __end_of_MTOUCH_CVD_ScanB_2:
 13013                           
 13014                           	psect	text65
 13015  1FE0                     __ptext65:	
 13016 ;; *************** function _MTOUCH_CVD_ScanB_1 *****************
 13017 ;; Defined at:
 13018 ;;		line 240 in file "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
 13019 ;; Parameters:    Size  Location     Type
 13020 ;;		None
 13021 ;; Auto vars:     Size  Location     Type
 13022 ;;		None
 13023 ;; Return value:  Size  Location     Type
 13024 ;;                  1    wreg      void 
 13025 ;; Registers used:
 13026 ;;		wreg
 13027 ;; Tracked objects:
 13028 ;;		On entry : 1F/1
 13029 ;;		On exit  : 0/0
 13030 ;;		Unchanged: 0/0
 13031 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13032 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13033 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13034 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13035 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13036 ;;Total ram usage:        0 bytes
 13037 ;; Hardware stack levels used: 1
 13038 ;; Hardware stack levels required when called: 4
 13039 ;; This function calls:
 13040 ;;		Nothing
 13041 ;; This function is called by:
 13042 ;;		_Sensor_Acq_ExecuteScan
 13043 ;; This function uses a non-reentrant model
 13044 ;;
 13045                           
 13046                           
 13047                           ;psect for function _MTOUCH_CVD_ScanB_1
 13048  1FE0                     _MTOUCH_CVD_ScanB_1:
 13049                           
 13050                           ;incstack = 0
 13051                           ; Regs used in _MTOUCH_CVD_ScanB_1: [wreg]
 13052  1FE0  0022               	banksel	269	;# 
 13053  1FE1  100D               	bcf	13,0	;# 
 13054  1FE2  0021               	banksel	157	;# 
 13055  1FE3  3031               	movlw	49	;# 
 13056  1FE4  009D               	movwf	29	;# 
 13057                           
 13058                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 252:     _delay(32u);
 13059  1FE5  300A               	movlw	10
 13060  1FE6                     u8067:
 13061  1FE6  0B89               	decfsz	9,f
 13062  1FE7  2FE6               	goto	u8067
 13063  1FE8  3200               	nop2
 13064  1FE9  308D               	movlw	141	;# 
 13065  1FEA  0084               	movwf	4	;# 
 13066  1FEB  3000               	movlw	0	;# 
 13067  1FEC  0085               	movwf	5	;# 
 13068  1FED  300D               	movlw	13	;# 
 13069  1FEE  0086               	movwf	6	;# 
 13070  1FEF  3001               	movlw	1	;# 
 13071  1FF0  0087               	movwf	7	;# 
 13072  1FF1  3029               	movlw	41	;# 
 13073  1FF2  1480               	bsf	0,1	;# 
 13074                           
 13075                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 270:     _delay(0u);
 13076  1FF3  009D               	movwf	29	;# 
 13077                           
 13078                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 277:     _delay(16u);
 13079  1FF4  3005               	movlw	5
 13080  1FF5                     u8077:
 13081  1FF5  0B89               	decfsz	9,f
 13082  1FF6  2FF5               	goto	u8077
 13083  1FF7  0000               	nop
 13084  1FF8  0021               	banksel	157	;# 
 13085  1FF9  149D               	bsf	29,1	;# 
 13086                           
 13087                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 284:     _delay(3u);
 13088  1FFA  3200               	nop2	;2 cycle nop
 13089  1FFB  0000               	nop
 13090  1FFC  0022               	banksel	269	;# 
 13091  1FFD  108D               	bcf	13,1	;# 
 13092  1FFE  1080               	bcf	0,1	;# 
 13093  1FFF  0008               	return
 13094  2000                     __end_of_MTOUCH_CVD_ScanB_1:
 13095                           
 13096                           	psect	text66
 13097  1FC0                     __ptext66:	
 13098 ;; *************** function _MTOUCH_CVD_ScanB_0 *****************
 13099 ;; Defined at:
 13100 ;;		line 113 in file "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
 13101 ;; Parameters:    Size  Location     Type
 13102 ;;		None
 13103 ;; Auto vars:     Size  Location     Type
 13104 ;;		None
 13105 ;; Return value:  Size  Location     Type
 13106 ;;                  1    wreg      void 
 13107 ;; Registers used:
 13108 ;;		wreg
 13109 ;; Tracked objects:
 13110 ;;		On entry : 1F/1
 13111 ;;		On exit  : 0/0
 13112 ;;		Unchanged: 0/0
 13113 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13114 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13115 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13116 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13117 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13118 ;;Total ram usage:        0 bytes
 13119 ;; Hardware stack levels used: 1
 13120 ;; Hardware stack levels required when called: 4
 13121 ;; This function calls:
 13122 ;;		Nothing
 13123 ;; This function is called by:
 13124 ;;		_Sensor_Acq_ExecuteScan
 13125 ;; This function uses a non-reentrant model
 13126 ;;
 13127                           
 13128                           
 13129                           ;psect for function _MTOUCH_CVD_ScanB_0
 13130  1FC0                     _MTOUCH_CVD_ScanB_0:
 13131                           
 13132                           ;incstack = 0
 13133                           ; Regs used in _MTOUCH_CVD_ScanB_0: [wreg]
 13134  1FC0  0022               	banksel	268	;# 
 13135  1FC1  100C               	bcf	12,0	;# 
 13136  1FC2  0021               	banksel	157	;# 
 13137  1FC3  3001               	movlw	1	;# 
 13138  1FC4  009D               	movwf	29	;# 
 13139                           
 13140                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 125:     _delay(32u);
 13141  1FC5  300A               	movlw	10
 13142  1FC6                     u8087:
 13143  1FC6  0B89               	decfsz	9,f
 13144  1FC7  2FC6               	goto	u8087
 13145  1FC8  3200               	nop2
 13146  1FC9  308D               	movlw	141	;# 
 13147  1FCA  0084               	movwf	4	;# 
 13148  1FCB  3000               	movlw	0	;# 
 13149  1FCC  0085               	movwf	5	;# 
 13150  1FCD  300D               	movlw	13	;# 
 13151  1FCE  0086               	movwf	6	;# 
 13152  1FCF  3001               	movlw	1	;# 
 13153  1FD0  0087               	movwf	7	;# 
 13154  1FD1  3031               	movlw	49	;# 
 13155  1FD2  1400               	bsf	0,0	;# 
 13156                           
 13157                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 143:     _delay(0u);
 13158  1FD3  009D               	movwf	29	;# 
 13159                           
 13160                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 150:     _delay(16u);
 13161  1FD4  3005               	movlw	5
 13162  1FD5                     u8097:
 13163  1FD5  0B89               	decfsz	9,f
 13164  1FD6  2FD5               	goto	u8097
 13165  1FD7  0000               	nop
 13166  1FD8  0021               	banksel	157	;# 
 13167  1FD9  149D               	bsf	29,1	;# 
 13168                           
 13169                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 157:     _delay(3u);
 13170  1FDA  3200               	nop2	;2 cycle nop
 13171  1FDB  0000               	nop
 13172  1FDC  0022               	banksel	269	;# 
 13173  1FDD  100D               	bcf	13,0	;# 
 13174  1FDE  1000               	bcf	0,0	;# 
 13175  1FDF  0008               	return
 13176  1FE0                     __end_of_MTOUCH_CVD_ScanB_0:
 13177                           
 13178                           	psect	text67
 13179  1FA0                     __ptext67:	
 13180 ;; *************** function _MTOUCH_CVD_ScanB_9 *****************
 13181 ;; Defined at:
 13182 ;;		line 1256 in file "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
 13183 ;; Parameters:    Size  Location     Type
 13184 ;;		None
 13185 ;; Auto vars:     Size  Location     Type
 13186 ;;		None
 13187 ;; Return value:  Size  Location     Type
 13188 ;;                  1    wreg      void 
 13189 ;; Registers used:
 13190 ;;		wreg
 13191 ;; Tracked objects:
 13192 ;;		On entry : 1F/1
 13193 ;;		On exit  : 0/0
 13194 ;;		Unchanged: 0/0
 13195 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13196 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13197 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13198 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13199 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13200 ;;Total ram usage:        0 bytes
 13201 ;; Hardware stack levels used: 1
 13202 ;; Hardware stack levels required when called: 4
 13203 ;; This function calls:
 13204 ;;		Nothing
 13205 ;; This function is called by:
 13206 ;;		_Sensor_Acq_ExecuteScan
 13207 ;; This function uses a non-reentrant model
 13208 ;;
 13209                           
 13210                           
 13211                           ;psect for function _MTOUCH_CVD_ScanB_9
 13212  1FA0                     _MTOUCH_CVD_ScanB_9:
 13213                           
 13214                           ;incstack = 0
 13215                           ; Regs used in _MTOUCH_CVD_ScanB_9: [wreg]
 13216  1FA0  0022               	banksel	268	;# 
 13217  1FA1  110C               	bcf	12,2	;# 
 13218  1FA2  0021               	banksel	157	;# 
 13219  1FA3  3009               	movlw	9	;# 
 13220  1FA4  009D               	movwf	29	;# 
 13221                           
 13222                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 1268:     _delay(32u);
 13223  1FA5  300A               	movlw	10
 13224  1FA6                     u8107:
 13225  1FA6  0B89               	decfsz	9,f
 13226  1FA7  2FA6               	goto	u8107
 13227  1FA8  3200               	nop2
 13228  1FA9  308C               	movlw	140	;# 
 13229  1FAA  0084               	movwf	4	;# 
 13230  1FAB  3000               	movlw	0	;# 
 13231  1FAC  0085               	movwf	5	;# 
 13232  1FAD  300C               	movlw	12	;# 
 13233  1FAE  0086               	movwf	6	;# 
 13234  1FAF  3001               	movlw	1	;# 
 13235  1FB0  0087               	movwf	7	;# 
 13236  1FB1  3005               	movlw	5	;# 
 13237  1FB2  1480               	bsf	0,1	;# 
 13238                           
 13239                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 1286:     _delay(0u);
 13240  1FB3  009D               	movwf	29	;# 
 13241                           
 13242                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 1293:     _delay(16u);
 13243  1FB4  3005               	movlw	5
 13244  1FB5                     u8117:
 13245  1FB5  0B89               	decfsz	9,f
 13246  1FB6  2FB5               	goto	u8117
 13247  1FB7  0000               	nop
 13248  1FB8  0021               	banksel	157	;# 
 13249  1FB9  149D               	bsf	29,1	;# 
 13250                           
 13251                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 1300:     _delay(3u);
 13252  1FBA  3200               	nop2	;2 cycle nop
 13253  1FBB  0000               	nop
 13254  1FBC  0022               	banksel	268	;# 
 13255  1FBD  108C               	bcf	12,1	;# 
 13256  1FBE  1080               	bcf	0,1	;# 
 13257  1FBF  0008               	return
 13258  1FC0                     __end_of_MTOUCH_CVD_ScanB_9:
 13259                           
 13260                           	psect	text68
 13261  1F80                     __ptext68:	
 13262 ;; *************** function _MTOUCH_CVD_ScanA_10 *****************
 13263 ;; Defined at:
 13264 ;;		line 1320 in file "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
 13265 ;; Parameters:    Size  Location     Type
 13266 ;;		None
 13267 ;; Auto vars:     Size  Location     Type
 13268 ;;		None
 13269 ;; Return value:  Size  Location     Type
 13270 ;;                  1    wreg      void 
 13271 ;; Registers used:
 13272 ;;		wreg
 13273 ;; Tracked objects:
 13274 ;;		On entry : 1F/1
 13275 ;;		On exit  : 0/0
 13276 ;;		Unchanged: 0/0
 13277 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13278 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13279 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13280 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13281 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13282 ;;Total ram usage:        0 bytes
 13283 ;; Hardware stack levels used: 1
 13284 ;; Hardware stack levels required when called: 4
 13285 ;; This function calls:
 13286 ;;		Nothing
 13287 ;; This function is called by:
 13288 ;;		_Sensor_Acq_ExecuteScan
 13289 ;; This function uses a non-reentrant model
 13290 ;;
 13291                           
 13292                           
 13293                           ;psect for function _MTOUCH_CVD_ScanA_10
 13294  1F80                     _MTOUCH_CVD_ScanA_10:
 13295                           
 13296                           ;incstack = 0
 13297                           ; Regs used in _MTOUCH_CVD_ScanA_10: [wreg]
 13298  1F80  0022               	banksel	268	;# 
 13299  1F81  148C               	bsf	12,1	;# 
 13300  1F82  0021               	banksel	157	;# 
 13301  1F83  3005               	movlw	5	;# 
 13302  1F84  009D               	movwf	29	;# 
 13303                           
 13304                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 1332:     _delay(32u);
 13305  1F85  300A               	movlw	10
 13306  1F86                     u8127:
 13307  1F86  0B89               	decfsz	9,f
 13308  1F87  2F86               	goto	u8127
 13309  1F88  3200               	nop2
 13310  1F89  308C               	movlw	140	;# 
 13311  1F8A  0084               	movwf	4	;# 
 13312  1F8B  3000               	movlw	0	;# 
 13313  1F8C  0085               	movwf	5	;# 
 13314  1F8D  300C               	movlw	12	;# 
 13315  1F8E  0086               	movwf	6	;# 
 13316  1F8F  3001               	movlw	1	;# 
 13317  1F90  0087               	movwf	7	;# 
 13318  1F91  3001               	movlw	1	;# 
 13319  1F92  1400               	bsf	0,0	;# 
 13320                           
 13321                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 1350:     _delay(0u);
 13322  1F93  009D               	movwf	29	;# 
 13323                           
 13324                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 1356:     _delay(16u);
 13325  1F94  3005               	movlw	5
 13326  1F95                     u8137:
 13327  1F95  0B89               	decfsz	9,f
 13328  1F96  2F95               	goto	u8137
 13329  1F97  0000               	nop
 13330  1F98  0021               	banksel	157	;# 
 13331  1F99  149D               	bsf	29,1	;# 
 13332                           
 13333                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 1363:     _delay(3u);
 13334  1F9A  3200               	nop2	;2 cycle nop
 13335  1F9B  0000               	nop
 13336  1F9C  0022               	banksel	268	;# 
 13337  1F9D  140C               	bsf	12,0	;# 
 13338  1F9E  1000               	bcf	0,0	;# 
 13339  1F9F  0008               	return
 13340  1FA0                     __end_of_MTOUCH_CVD_ScanA_10:
 13341                           
 13342                           	psect	text69
 13343  1F60                     __ptext69:	
 13344 ;; *************** function _MTOUCH_CVD_ScanA_8 *****************
 13345 ;; Defined at:
 13346 ;;		line 1066 in file "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
 13347 ;; Parameters:    Size  Location     Type
 13348 ;;		None
 13349 ;; Auto vars:     Size  Location     Type
 13350 ;;		None
 13351 ;; Return value:  Size  Location     Type
 13352 ;;                  1    wreg      void 
 13353 ;; Registers used:
 13354 ;;		wreg
 13355 ;; Tracked objects:
 13356 ;;		On entry : 1F/1
 13357 ;;		On exit  : 0/0
 13358 ;;		Unchanged: 0/0
 13359 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13360 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13361 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13362 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13363 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13364 ;;Total ram usage:        0 bytes
 13365 ;; Hardware stack levels used: 1
 13366 ;; Hardware stack levels required when called: 4
 13367 ;; This function calls:
 13368 ;;		Nothing
 13369 ;; This function is called by:
 13370 ;;		_Sensor_Acq_ExecuteScan
 13371 ;; This function uses a non-reentrant model
 13372 ;;
 13373                           
 13374                           
 13375                           ;psect for function _MTOUCH_CVD_ScanA_8
 13376  1F60                     _MTOUCH_CVD_ScanA_8:
 13377                           
 13378                           ;incstack = 0
 13379                           ; Regs used in _MTOUCH_CVD_ScanA_8: [wreg]
 13380  1F60  0022               	banksel	268	;# 
 13381  1F61  158C               	bsf	12,3	;# 
 13382  1F62  0021               	banksel	157	;# 
 13383  1F63  300D               	movlw	13	;# 
 13384  1F64  009D               	movwf	29	;# 
 13385                           
 13386                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 1078:     _delay(32u);
 13387  1F65  300A               	movlw	10
 13388  1F66                     u8147:
 13389  1F66  0B89               	decfsz	9,f
 13390  1F67  2F66               	goto	u8147
 13391  1F68  3200               	nop2
 13392  1F69  308C               	movlw	140	;# 
 13393  1F6A  0084               	movwf	4	;# 
 13394  1F6B  3000               	movlw	0	;# 
 13395  1F6C  0085               	movwf	5	;# 
 13396  1F6D  300C               	movlw	12	;# 
 13397  1F6E  0086               	movwf	6	;# 
 13398  1F6F  3001               	movlw	1	;# 
 13399  1F70  0087               	movwf	7	;# 
 13400  1F71  3009               	movlw	9	;# 
 13401  1F72  1500               	bsf	0,2	;# 
 13402                           
 13403                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 1096:     _delay(0u);
 13404  1F73  009D               	movwf	29	;# 
 13405                           
 13406                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 1102:     _delay(16u);
 13407  1F74  3005               	movlw	5
 13408  1F75                     u8157:
 13409  1F75  0B89               	decfsz	9,f
 13410  1F76  2F75               	goto	u8157
 13411  1F77  0000               	nop
 13412  1F78  0021               	banksel	157	;# 
 13413  1F79  149D               	bsf	29,1	;# 
 13414                           
 13415                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 1109:     _delay(3u);
 13416  1F7A  3200               	nop2	;2 cycle nop
 13417  1F7B  0000               	nop
 13418  1F7C  0022               	banksel	268	;# 
 13419  1F7D  150C               	bsf	12,2	;# 
 13420  1F7E  1100               	bcf	0,2	;# 
 13421  1F7F  0008               	return
 13422  1F80                     __end_of_MTOUCH_CVD_ScanA_8:
 13423                           
 13424                           	psect	text70
 13425  1F40                     __ptext70:	
 13426 ;; *************** function _MTOUCH_CVD_ScanA_7 *****************
 13427 ;; Defined at:
 13428 ;;		line 939 in file "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
 13429 ;; Parameters:    Size  Location     Type
 13430 ;;		None
 13431 ;; Auto vars:     Size  Location     Type
 13432 ;;		None
 13433 ;; Return value:  Size  Location     Type
 13434 ;;                  1    wreg      void 
 13435 ;; Registers used:
 13436 ;;		wreg
 13437 ;; Tracked objects:
 13438 ;;		On entry : 1F/1
 13439 ;;		On exit  : 0/0
 13440 ;;		Unchanged: 0/0
 13441 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13442 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13443 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13444 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13445 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13446 ;;Total ram usage:        0 bytes
 13447 ;; Hardware stack levels used: 1
 13448 ;; Hardware stack levels required when called: 4
 13449 ;; This function calls:
 13450 ;;		Nothing
 13451 ;; This function is called by:
 13452 ;;		_Sensor_Acq_ExecuteScan
 13453 ;; This function uses a non-reentrant model
 13454 ;;
 13455                           
 13456                           
 13457                           ;psect for function _MTOUCH_CVD_ScanA_7
 13458  1F40                     _MTOUCH_CVD_ScanA_7:
 13459                           
 13460                           ;incstack = 0
 13461                           ; Regs used in _MTOUCH_CVD_ScanA_7: [wreg]
 13462  1F40  0022               	banksel	268	;# 
 13463  1F41  168C               	bsf	12,5	;# 
 13464  1F42  0021               	banksel	157	;# 
 13465  1F43  3011               	movlw	17	;# 
 13466  1F44  009D               	movwf	29	;# 
 13467                           
 13468                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 951:     _delay(32u);
 13469  1F45  300A               	movlw	10
 13470  1F46                     u8167:
 13471  1F46  0B89               	decfsz	9,f
 13472  1F47  2F46               	goto	u8167
 13473  1F48  3200               	nop2
 13474  1F49  308C               	movlw	140	;# 
 13475  1F4A  0084               	movwf	4	;# 
 13476  1F4B  3000               	movlw	0	;# 
 13477  1F4C  0085               	movwf	5	;# 
 13478  1F4D  300C               	movlw	12	;# 
 13479  1F4E  0086               	movwf	6	;# 
 13480  1F4F  3001               	movlw	1	;# 
 13481  1F50  0087               	movwf	7	;# 
 13482  1F51  300D               	movlw	13	;# 
 13483  1F52  1580               	bsf	0,3	;# 
 13484                           
 13485                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 969:     _delay(0u);
 13486  1F53  009D               	movwf	29	;# 
 13487                           
 13488                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 975:     _delay(16u);
 13489  1F54  3005               	movlw	5
 13490  1F55                     u8177:
 13491  1F55  0B89               	decfsz	9,f
 13492  1F56  2F55               	goto	u8177
 13493  1F57  0000               	nop
 13494  1F58  0021               	banksel	157	;# 
 13495  1F59  149D               	bsf	29,1	;# 
 13496                           
 13497                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 982:     _delay(3u);
 13498  1F5A  3200               	nop2	;2 cycle nop
 13499  1F5B  0000               	nop
 13500  1F5C  0022               	banksel	268	;# 
 13501  1F5D  158C               	bsf	12,3	;# 
 13502  1F5E  1180               	bcf	0,3	;# 
 13503  1F5F  0008               	return
 13504  1F60                     __end_of_MTOUCH_CVD_ScanA_7:
 13505                           
 13506                           	psect	text71
 13507  1F20                     __ptext71:	
 13508 ;; *************** function _MTOUCH_CVD_ScanA_6 *****************
 13509 ;; Defined at:
 13510 ;;		line 812 in file "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
 13511 ;; Parameters:    Size  Location     Type
 13512 ;;		None
 13513 ;; Auto vars:     Size  Location     Type
 13514 ;;		None
 13515 ;; Return value:  Size  Location     Type
 13516 ;;                  1    wreg      void 
 13517 ;; Registers used:
 13518 ;;		wreg
 13519 ;; Tracked objects:
 13520 ;;		On entry : 1F/1
 13521 ;;		On exit  : 0/0
 13522 ;;		Unchanged: 0/0
 13523 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13524 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13525 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13526 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13527 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13528 ;;Total ram usage:        0 bytes
 13529 ;; Hardware stack levels used: 1
 13530 ;; Hardware stack levels required when called: 4
 13531 ;; This function calls:
 13532 ;;		Nothing
 13533 ;; This function is called by:
 13534 ;;		_Sensor_Acq_ExecuteScan
 13535 ;; This function uses a non-reentrant model
 13536 ;;
 13537                           
 13538                           
 13539                           ;psect for function _MTOUCH_CVD_ScanA_6
 13540  1F20                     _MTOUCH_CVD_ScanA_6:
 13541                           
 13542                           ;incstack = 0
 13543                           ; Regs used in _MTOUCH_CVD_ScanA_6: [wreg]
 13544  1F20  0022               	banksel	269	;# 
 13545  1F21  168D               	bsf	13,5	;# 
 13546  1F22  0021               	banksel	157	;# 
 13547  1F23  3035               	movlw	53	;# 
 13548  1F24  009D               	movwf	29	;# 
 13549                           
 13550                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 824:     _delay(32u);
 13551  1F25  300A               	movlw	10
 13552  1F26                     u8187:
 13553  1F26  0B89               	decfsz	9,f
 13554  1F27  2F26               	goto	u8187
 13555  1F28  3200               	nop2
 13556  1F29  308C               	movlw	140	;# 
 13557  1F2A  0084               	movwf	4	;# 
 13558  1F2B  3000               	movlw	0	;# 
 13559  1F2C  0085               	movwf	5	;# 
 13560  1F2D  300C               	movlw	12	;# 
 13561  1F2E  0086               	movwf	6	;# 
 13562  1F2F  3001               	movlw	1	;# 
 13563  1F30  0087               	movwf	7	;# 
 13564  1F31  3011               	movlw	17	;# 
 13565  1F32  1680               	bsf	0,5	;# 
 13566                           
 13567                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 842:     _delay(0u);
 13568  1F33  009D               	movwf	29	;# 
 13569                           
 13570                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 848:     _delay(16u);
 13571  1F34  3005               	movlw	5
 13572  1F35                     u8197:
 13573  1F35  0B89               	decfsz	9,f
 13574  1F36  2F35               	goto	u8197
 13575  1F37  0000               	nop
 13576  1F38  0021               	banksel	157	;# 
 13577  1F39  149D               	bsf	29,1	;# 
 13578                           
 13579                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 855:     _delay(3u);
 13580  1F3A  3200               	nop2	;2 cycle nop
 13581  1F3B  0000               	nop
 13582  1F3C  0022               	banksel	268	;# 
 13583  1F3D  168C               	bsf	12,5	;# 
 13584  1F3E  1280               	bcf	0,5	;# 
 13585  1F3F  0008               	return
 13586  1F40                     __end_of_MTOUCH_CVD_ScanA_6:
 13587                           
 13588                           	psect	text72
 13589  1F00                     __ptext72:	
 13590 ;; *************** function _MTOUCH_CVD_ScanA_5 *****************
 13591 ;; Defined at:
 13592 ;;		line 685 in file "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
 13593 ;; Parameters:    Size  Location     Type
 13594 ;;		None
 13595 ;; Auto vars:     Size  Location     Type
 13596 ;;		None
 13597 ;; Return value:  Size  Location     Type
 13598 ;;                  1    wreg      void 
 13599 ;; Registers used:
 13600 ;;		wreg
 13601 ;; Tracked objects:
 13602 ;;		On entry : 1F/1
 13603 ;;		On exit  : 0/0
 13604 ;;		Unchanged: 0/0
 13605 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13606 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13607 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13608 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13609 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13610 ;;Total ram usage:        0 bytes
 13611 ;; Hardware stack levels used: 1
 13612 ;; Hardware stack levels required when called: 4
 13613 ;; This function calls:
 13614 ;;		Nothing
 13615 ;; This function is called by:
 13616 ;;		_Sensor_Acq_ExecuteScan
 13617 ;; This function uses a non-reentrant model
 13618 ;;
 13619                           
 13620                           
 13621                           ;psect for function _MTOUCH_CVD_ScanA_5
 13622  1F00                     _MTOUCH_CVD_ScanA_5:
 13623                           
 13624                           ;incstack = 0
 13625                           ; Regs used in _MTOUCH_CVD_ScanA_5: [wreg]
 13626  1F00  0022               	banksel	269	;# 
 13627  1F01  160D               	bsf	13,4	;# 
 13628  1F02  0021               	banksel	157	;# 
 13629  1F03  302D               	movlw	45	;# 
 13630  1F04  009D               	movwf	29	;# 
 13631                           
 13632                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 697:     _delay(32u);
 13633  1F05  300A               	movlw	10
 13634  1F06                     u8207:
 13635  1F06  0B89               	decfsz	9,f
 13636  1F07  2F06               	goto	u8207
 13637  1F08  3200               	nop2
 13638  1F09  308D               	movlw	141	;# 
 13639  1F0A  0084               	movwf	4	;# 
 13640  1F0B  3000               	movlw	0	;# 
 13641  1F0C  0085               	movwf	5	;# 
 13642  1F0D  300D               	movlw	13	;# 
 13643  1F0E  0086               	movwf	6	;# 
 13644  1F0F  3001               	movlw	1	;# 
 13645  1F10  0087               	movwf	7	;# 
 13646  1F11  3035               	movlw	53	;# 
 13647  1F12  1680               	bsf	0,5	;# 
 13648                           
 13649                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 715:     _delay(0u);
 13650  1F13  009D               	movwf	29	;# 
 13651                           
 13652                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 721:     _delay(16u);
 13653  1F14  3005               	movlw	5
 13654  1F15                     u8217:
 13655  1F15  0B89               	decfsz	9,f
 13656  1F16  2F15               	goto	u8217
 13657  1F17  0000               	nop
 13658  1F18  0021               	banksel	157	;# 
 13659  1F19  149D               	bsf	29,1	;# 
 13660                           
 13661                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 728:     _delay(3u);
 13662  1F1A  3200               	nop2	;2 cycle nop
 13663  1F1B  0000               	nop
 13664  1F1C  0022               	banksel	269	;# 
 13665  1F1D  168D               	bsf	13,5	;# 
 13666  1F1E  1280               	bcf	0,5	;# 
 13667  1F1F  0008               	return
 13668  1F20                     __end_of_MTOUCH_CVD_ScanA_5:
 13669                           
 13670                           	psect	text73
 13671  1EE0                     __ptext73:	
 13672 ;; *************** function _MTOUCH_CVD_ScanA_4 *****************
 13673 ;; Defined at:
 13674 ;;		line 558 in file "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
 13675 ;; Parameters:    Size  Location     Type
 13676 ;;		None
 13677 ;; Auto vars:     Size  Location     Type
 13678 ;;		None
 13679 ;; Return value:  Size  Location     Type
 13680 ;;                  1    wreg      void 
 13681 ;; Registers used:
 13682 ;;		wreg
 13683 ;; Tracked objects:
 13684 ;;		On entry : 1F/1
 13685 ;;		On exit  : 0/0
 13686 ;;		Unchanged: 0/0
 13687 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13688 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13689 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13690 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13691 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13692 ;;Total ram usage:        0 bytes
 13693 ;; Hardware stack levels used: 1
 13694 ;; Hardware stack levels required when called: 4
 13695 ;; This function calls:
 13696 ;;		Nothing
 13697 ;; This function is called by:
 13698 ;;		_Sensor_Acq_ExecuteScan
 13699 ;; This function uses a non-reentrant model
 13700 ;;
 13701                           
 13702                           
 13703                           ;psect for function _MTOUCH_CVD_ScanA_4
 13704  1EE0                     _MTOUCH_CVD_ScanA_4:
 13705                           
 13706                           ;incstack = 0
 13707                           ; Regs used in _MTOUCH_CVD_ScanA_4: [wreg]
 13708  1EE0  0022               	banksel	269	;# 
 13709  1EE1  158D               	bsf	13,3	;# 
 13710  1EE2  0021               	banksel	157	;# 
 13711  1EE3  3025               	movlw	37	;# 
 13712  1EE4  009D               	movwf	29	;# 
 13713                           
 13714                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 570:     _delay(32u);
 13715  1EE5  300A               	movlw	10
 13716  1EE6                     u8227:
 13717  1EE6  0B89               	decfsz	9,f
 13718  1EE7  2EE6               	goto	u8227
 13719  1EE8  3200               	nop2
 13720  1EE9  308D               	movlw	141	;# 
 13721  1EEA  0084               	movwf	4	;# 
 13722  1EEB  3000               	movlw	0	;# 
 13723  1EEC  0085               	movwf	5	;# 
 13724  1EED  300D               	movlw	13	;# 
 13725  1EEE  0086               	movwf	6	;# 
 13726  1EEF  3001               	movlw	1	;# 
 13727  1EF0  0087               	movwf	7	;# 
 13728  1EF1  302D               	movlw	45	;# 
 13729  1EF2  1600               	bsf	0,4	;# 
 13730                           
 13731                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 588:     _delay(0u);
 13732  1EF3  009D               	movwf	29	;# 
 13733                           
 13734                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 594:     _delay(16u);
 13735  1EF4  3005               	movlw	5
 13736  1EF5                     u8237:
 13737  1EF5  0B89               	decfsz	9,f
 13738  1EF6  2EF5               	goto	u8237
 13739  1EF7  0000               	nop
 13740  1EF8  0021               	banksel	157	;# 
 13741  1EF9  149D               	bsf	29,1	;# 
 13742                           
 13743                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 601:     _delay(3u);
 13744  1EFA  3200               	nop2	;2 cycle nop
 13745  1EFB  0000               	nop
 13746  1EFC  0022               	banksel	269	;# 
 13747  1EFD  160D               	bsf	13,4	;# 
 13748  1EFE  1200               	bcf	0,4	;# 
 13749  1EFF  0008               	return
 13750  1F00                     __end_of_MTOUCH_CVD_ScanA_4:
 13751                           
 13752                           	psect	text74
 13753  1EC0                     __ptext74:	
 13754 ;; *************** function _MTOUCH_CVD_ScanA_3 *****************
 13755 ;; Defined at:
 13756 ;;		line 431 in file "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
 13757 ;; Parameters:    Size  Location     Type
 13758 ;;		None
 13759 ;; Auto vars:     Size  Location     Type
 13760 ;;		None
 13761 ;; Return value:  Size  Location     Type
 13762 ;;                  1    wreg      void 
 13763 ;; Registers used:
 13764 ;;		wreg
 13765 ;; Tracked objects:
 13766 ;;		On entry : 1F/1
 13767 ;;		On exit  : 0/0
 13768 ;;		Unchanged: 0/0
 13769 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13770 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13771 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13772 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13773 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13774 ;;Total ram usage:        0 bytes
 13775 ;; Hardware stack levels used: 1
 13776 ;; Hardware stack levels required when called: 4
 13777 ;; This function calls:
 13778 ;;		Nothing
 13779 ;; This function is called by:
 13780 ;;		_Sensor_Acq_ExecuteScan
 13781 ;; This function uses a non-reentrant model
 13782 ;;
 13783                           
 13784                           
 13785                           ;psect for function _MTOUCH_CVD_ScanA_3
 13786  1EC0                     _MTOUCH_CVD_ScanA_3:
 13787                           
 13788                           ;incstack = 0
 13789                           ; Regs used in _MTOUCH_CVD_ScanA_3: [wreg]
 13790  1EC0  0022               	banksel	269	;# 
 13791  1EC1  150D               	bsf	13,2	;# 
 13792  1EC2  0021               	banksel	157	;# 
 13793  1EC3  3021               	movlw	33	;# 
 13794  1EC4  009D               	movwf	29	;# 
 13795                           
 13796                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 443:     _delay(32u);
 13797  1EC5  300A               	movlw	10
 13798  1EC6                     u8247:
 13799  1EC6  0B89               	decfsz	9,f
 13800  1EC7  2EC6               	goto	u8247
 13801  1EC8  3200               	nop2
 13802  1EC9  308D               	movlw	141	;# 
 13803  1ECA  0084               	movwf	4	;# 
 13804  1ECB  3000               	movlw	0	;# 
 13805  1ECC  0085               	movwf	5	;# 
 13806  1ECD  300D               	movlw	13	;# 
 13807  1ECE  0086               	movwf	6	;# 
 13808  1ECF  3001               	movlw	1	;# 
 13809  1ED0  0087               	movwf	7	;# 
 13810  1ED1  3025               	movlw	37	;# 
 13811  1ED2  1580               	bsf	0,3	;# 
 13812                           
 13813                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 461:     _delay(0u);
 13814  1ED3  009D               	movwf	29	;# 
 13815                           
 13816                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 467:     _delay(16u);
 13817  1ED4  3005               	movlw	5
 13818  1ED5                     u8257:
 13819  1ED5  0B89               	decfsz	9,f
 13820  1ED6  2ED5               	goto	u8257
 13821  1ED7  0000               	nop
 13822  1ED8  0021               	banksel	157	;# 
 13823  1ED9  149D               	bsf	29,1	;# 
 13824                           
 13825                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 474:     _delay(3u);
 13826  1EDA  3200               	nop2	;2 cycle nop
 13827  1EDB  0000               	nop
 13828  1EDC  0022               	banksel	269	;# 
 13829  1EDD  158D               	bsf	13,3	;# 
 13830  1EDE  1180               	bcf	0,3	;# 
 13831  1EDF  0008               	return
 13832  1EE0                     __end_of_MTOUCH_CVD_ScanA_3:
 13833                           
 13834                           	psect	text75
 13835  1EA0                     __ptext75:	
 13836 ;; *************** function _MTOUCH_CVD_ScanA_2 *****************
 13837 ;; Defined at:
 13838 ;;		line 304 in file "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
 13839 ;; Parameters:    Size  Location     Type
 13840 ;;		None
 13841 ;; Auto vars:     Size  Location     Type
 13842 ;;		None
 13843 ;; Return value:  Size  Location     Type
 13844 ;;                  1    wreg      void 
 13845 ;; Registers used:
 13846 ;;		wreg
 13847 ;; Tracked objects:
 13848 ;;		On entry : 1F/1
 13849 ;;		On exit  : 0/0
 13850 ;;		Unchanged: 0/0
 13851 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13852 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13853 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13854 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13855 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13856 ;;Total ram usage:        0 bytes
 13857 ;; Hardware stack levels used: 1
 13858 ;; Hardware stack levels required when called: 4
 13859 ;; This function calls:
 13860 ;;		Nothing
 13861 ;; This function is called by:
 13862 ;;		_Sensor_Acq_ExecuteScan
 13863 ;; This function uses a non-reentrant model
 13864 ;;
 13865                           
 13866                           
 13867                           ;psect for function _MTOUCH_CVD_ScanA_2
 13868  1EA0                     _MTOUCH_CVD_ScanA_2:
 13869                           
 13870                           ;incstack = 0
 13871                           ; Regs used in _MTOUCH_CVD_ScanA_2: [wreg]
 13872  1EA0  0022               	banksel	269	;# 
 13873  1EA1  148D               	bsf	13,1	;# 
 13874  1EA2  0021               	banksel	157	;# 
 13875  1EA3  3029               	movlw	41	;# 
 13876  1EA4  009D               	movwf	29	;# 
 13877                           
 13878                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 316:     _delay(32u);
 13879  1EA5  300A               	movlw	10
 13880  1EA6                     u8267:
 13881  1EA6  0B89               	decfsz	9,f
 13882  1EA7  2EA6               	goto	u8267
 13883  1EA8  3200               	nop2
 13884  1EA9  308D               	movlw	141	;# 
 13885  1EAA  0084               	movwf	4	;# 
 13886  1EAB  3000               	movlw	0	;# 
 13887  1EAC  0085               	movwf	5	;# 
 13888  1EAD  300D               	movlw	13	;# 
 13889  1EAE  0086               	movwf	6	;# 
 13890  1EAF  3001               	movlw	1	;# 
 13891  1EB0  0087               	movwf	7	;# 
 13892  1EB1  3021               	movlw	33	;# 
 13893  1EB2  1500               	bsf	0,2	;# 
 13894                           
 13895                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 334:     _delay(0u);
 13896  1EB3  009D               	movwf	29	;# 
 13897                           
 13898                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 340:     _delay(16u);
 13899  1EB4  3005               	movlw	5
 13900  1EB5                     u8277:
 13901  1EB5  0B89               	decfsz	9,f
 13902  1EB6  2EB5               	goto	u8277
 13903  1EB7  0000               	nop
 13904  1EB8  0021               	banksel	157	;# 
 13905  1EB9  149D               	bsf	29,1	;# 
 13906                           
 13907                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 347:     _delay(3u);
 13908  1EBA  3200               	nop2	;2 cycle nop
 13909  1EBB  0000               	nop
 13910  1EBC  0022               	banksel	269	;# 
 13911  1EBD  150D               	bsf	13,2	;# 
 13912  1EBE  1100               	bcf	0,2	;# 
 13913  1EBF  0008               	return
 13914  1EC0                     __end_of_MTOUCH_CVD_ScanA_2:
 13915                           
 13916                           	psect	text76
 13917  1E80                     __ptext76:	
 13918 ;; *************** function _MTOUCH_CVD_ScanA_1 *****************
 13919 ;; Defined at:
 13920 ;;		line 177 in file "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
 13921 ;; Parameters:    Size  Location     Type
 13922 ;;		None
 13923 ;; Auto vars:     Size  Location     Type
 13924 ;;		None
 13925 ;; Return value:  Size  Location     Type
 13926 ;;                  1    wreg      void 
 13927 ;; Registers used:
 13928 ;;		wreg
 13929 ;; Tracked objects:
 13930 ;;		On entry : 1F/1
 13931 ;;		On exit  : 0/0
 13932 ;;		Unchanged: 0/0
 13933 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13934 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13935 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13936 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13937 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13938 ;;Total ram usage:        0 bytes
 13939 ;; Hardware stack levels used: 1
 13940 ;; Hardware stack levels required when called: 4
 13941 ;; This function calls:
 13942 ;;		Nothing
 13943 ;; This function is called by:
 13944 ;;		_Sensor_Acq_ExecuteScan
 13945 ;; This function uses a non-reentrant model
 13946 ;;
 13947                           
 13948                           
 13949                           ;psect for function _MTOUCH_CVD_ScanA_1
 13950  1E80                     _MTOUCH_CVD_ScanA_1:
 13951                           
 13952                           ;incstack = 0
 13953                           ; Regs used in _MTOUCH_CVD_ScanA_1: [wreg]
 13954  1E80  0022               	banksel	269	;# 
 13955  1E81  140D               	bsf	13,0	;# 
 13956  1E82  0021               	banksel	157	;# 
 13957  1E83  3031               	movlw	49	;# 
 13958  1E84  009D               	movwf	29	;# 
 13959                           
 13960                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 189:     _delay(32u);
 13961  1E85  300A               	movlw	10
 13962  1E86                     u8287:
 13963  1E86  0B89               	decfsz	9,f
 13964  1E87  2E86               	goto	u8287
 13965  1E88  3200               	nop2
 13966  1E89  308D               	movlw	141	;# 
 13967  1E8A  0084               	movwf	4	;# 
 13968  1E8B  3000               	movlw	0	;# 
 13969  1E8C  0085               	movwf	5	;# 
 13970  1E8D  300D               	movlw	13	;# 
 13971  1E8E  0086               	movwf	6	;# 
 13972  1E8F  3001               	movlw	1	;# 
 13973  1E90  0087               	movwf	7	;# 
 13974  1E91  3029               	movlw	41	;# 
 13975  1E92  1480               	bsf	0,1	;# 
 13976                           
 13977                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 207:     _delay(0u);
 13978  1E93  009D               	movwf	29	;# 
 13979                           
 13980                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 213:     _delay(16u);
 13981  1E94  3005               	movlw	5
 13982  1E95                     u8297:
 13983  1E95  0B89               	decfsz	9,f
 13984  1E96  2E95               	goto	u8297
 13985  1E97  0000               	nop
 13986  1E98  0021               	banksel	157	;# 
 13987  1E99  149D               	bsf	29,1	;# 
 13988                           
 13989                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 220:     _delay(3u);
 13990  1E9A  3200               	nop2	;2 cycle nop
 13991  1E9B  0000               	nop
 13992  1E9C  0022               	banksel	269	;# 
 13993  1E9D  148D               	bsf	13,1	;# 
 13994  1E9E  1080               	bcf	0,1	;# 
 13995  1E9F  0008               	return
 13996  1EA0                     __end_of_MTOUCH_CVD_ScanA_1:
 13997                           
 13998                           	psect	text77
 13999  1E60                     __ptext77:	
 14000 ;; *************** function _MTOUCH_CVD_ScanA_0 *****************
 14001 ;; Defined at:
 14002 ;;		line 50 in file "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
 14003 ;; Parameters:    Size  Location     Type
 14004 ;;		None
 14005 ;; Auto vars:     Size  Location     Type
 14006 ;;		None
 14007 ;; Return value:  Size  Location     Type
 14008 ;;                  1    wreg      void 
 14009 ;; Registers used:
 14010 ;;		wreg
 14011 ;; Tracked objects:
 14012 ;;		On entry : 1F/1
 14013 ;;		On exit  : 0/0
 14014 ;;		Unchanged: 0/0
 14015 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14016 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14017 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14018 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14019 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14020 ;;Total ram usage:        0 bytes
 14021 ;; Hardware stack levels used: 1
 14022 ;; Hardware stack levels required when called: 4
 14023 ;; This function calls:
 14024 ;;		Nothing
 14025 ;; This function is called by:
 14026 ;;		_Sensor_Acq_ExecuteScan
 14027 ;; This function uses a non-reentrant model
 14028 ;;
 14029                           
 14030                           
 14031                           ;psect for function _MTOUCH_CVD_ScanA_0
 14032  1E60                     _MTOUCH_CVD_ScanA_0:
 14033                           
 14034                           ;incstack = 0
 14035                           ; Regs used in _MTOUCH_CVD_ScanA_0: [wreg]
 14036  1E60  0022               	banksel	268	;# 
 14037  1E61  140C               	bsf	12,0	;# 
 14038  1E62  0021               	banksel	157	;# 
 14039  1E63  3001               	movlw	1	;# 
 14040  1E64  009D               	movwf	29	;# 
 14041                           
 14042                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 62:     _delay(32u);
 14043  1E65  300A               	movlw	10
 14044  1E66                     u8307:
 14045  1E66  0B89               	decfsz	9,f
 14046  1E67  2E66               	goto	u8307
 14047  1E68  3200               	nop2
 14048  1E69  308D               	movlw	141	;# 
 14049  1E6A  0084               	movwf	4	;# 
 14050  1E6B  3000               	movlw	0	;# 
 14051  1E6C  0085               	movwf	5	;# 
 14052  1E6D  300D               	movlw	13	;# 
 14053  1E6E  0086               	movwf	6	;# 
 14054  1E6F  3001               	movlw	1	;# 
 14055  1E70  0087               	movwf	7	;# 
 14056  1E71  3031               	movlw	49	;# 
 14057  1E72  1400               	bsf	0,0	;# 
 14058                           
 14059                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 80:     _delay(0u);
 14060  1E73  009D               	movwf	29	;# 
 14061                           
 14062                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 86:     _delay(16u);
 14063  1E74  3005               	movlw	5
 14064  1E75                     u8317:
 14065  1E75  0B89               	decfsz	9,f
 14066  1E76  2E75               	goto	u8317
 14067  1E77  0000               	nop
 14068  1E78  0021               	banksel	157	;# 
 14069  1E79  149D               	bsf	29,1	;# 
 14070                           
 14071                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 93:     _delay(3u);
 14072  1E7A  3200               	nop2	;2 cycle nop
 14073  1E7B  0000               	nop
 14074  1E7C  0022               	banksel	269	;# 
 14075  1E7D  140D               	bsf	13,0	;# 
 14076  1E7E  1000               	bcf	0,0	;# 
 14077  1E7F  0008               	return
 14078  1E80                     __end_of_MTOUCH_CVD_ScanA_0:
 14079                           
 14080                           	psect	text78
 14081  1E40                     __ptext78:	
 14082 ;; *************** function _MTOUCH_CVD_ScanA_9 *****************
 14083 ;; Defined at:
 14084 ;;		line 1193 in file "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
 14085 ;; Parameters:    Size  Location     Type
 14086 ;;		None
 14087 ;; Auto vars:     Size  Location     Type
 14088 ;;		None
 14089 ;; Return value:  Size  Location     Type
 14090 ;;                  1    wreg      void 
 14091 ;; Registers used:
 14092 ;;		wreg
 14093 ;; Tracked objects:
 14094 ;;		On entry : 1F/1
 14095 ;;		On exit  : 0/0
 14096 ;;		Unchanged: 0/0
 14097 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14098 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14099 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14100 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14101 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14102 ;;Total ram usage:        0 bytes
 14103 ;; Hardware stack levels used: 1
 14104 ;; Hardware stack levels required when called: 4
 14105 ;; This function calls:
 14106 ;;		Nothing
 14107 ;; This function is called by:
 14108 ;;		_Sensor_Acq_ExecuteScan
 14109 ;; This function uses a non-reentrant model
 14110 ;;
 14111                           
 14112                           
 14113                           ;psect for function _MTOUCH_CVD_ScanA_9
 14114  1E40                     _MTOUCH_CVD_ScanA_9:
 14115                           
 14116                           ;incstack = 0
 14117                           ; Regs used in _MTOUCH_CVD_ScanA_9: [wreg]
 14118  1E40  0022               	banksel	268	;# 
 14119  1E41  150C               	bsf	12,2	;# 
 14120  1E42  0021               	banksel	157	;# 
 14121  1E43  3009               	movlw	9	;# 
 14122  1E44  009D               	movwf	29	;# 
 14123                           
 14124                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 1205:     _delay(32u);
 14125  1E45  300A               	movlw	10
 14126  1E46                     u8327:
 14127  1E46  0B89               	decfsz	9,f
 14128  1E47  2E46               	goto	u8327
 14129  1E48  3200               	nop2
 14130  1E49  308C               	movlw	140	;# 
 14131  1E4A  0084               	movwf	4	;# 
 14132  1E4B  3000               	movlw	0	;# 
 14133  1E4C  0085               	movwf	5	;# 
 14134  1E4D  300C               	movlw	12	;# 
 14135  1E4E  0086               	movwf	6	;# 
 14136  1E4F  3001               	movlw	1	;# 
 14137  1E50  0087               	movwf	7	;# 
 14138  1E51  3005               	movlw	5	;# 
 14139  1E52  1480               	bsf	0,1	;# 
 14140                           
 14141                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 1223:     _delay(0u);
 14142  1E53  009D               	movwf	29	;# 
 14143                           
 14144                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 1229:     _delay(16u);
 14145  1E54  3005               	movlw	5
 14146  1E55                     u8337:
 14147  1E55  0B89               	decfsz	9,f
 14148  1E56  2E55               	goto	u8337
 14149  1E57  0000               	nop
 14150  1E58  0021               	banksel	157	;# 
 14151  1E59  149D               	bsf	29,1	;# 
 14152                           
 14153                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 1236:     _delay(3u);
 14154  1E5A  3200               	nop2	;2 cycle nop
 14155  1E5B  0000               	nop
 14156  1E5C  0022               	banksel	268	;# 
 14157  1E5D  148C               	bsf	12,1	;# 
 14158  1E5E  1080               	bcf	0,1	;# 
 14159  1E5F  0008               	return
 14160  1E60                     __end_of_MTOUCH_CVD_ScanA_9:
 14161                           
 14162                           	psect	text79
 14163  1BC5                     __ptext79:	
 14164 ;; *************** function _MTOUCH_Random *****************
 14165 ;; Defined at:
 14166 ;;		line 66 in file "mcc_generated_files/mtouch/mtouch_random.c"
 14167 ;; Parameters:    Size  Location     Type
 14168 ;;		None
 14169 ;; Auto vars:     Size  Location     Type
 14170 ;;		None
 14171 ;; Return value:  Size  Location     Type
 14172 ;;                  1    wreg      unsigned char 
 14173 ;; Registers used:
 14174 ;;		wreg, status,2, status,0
 14175 ;; Tracked objects:
 14176 ;;		On entry : 1F/0
 14177 ;;		On exit  : 1F/0
 14178 ;;		Unchanged: 1F/0
 14179 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14180 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14181 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14182 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14183 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14184 ;;Total ram usage:        1 bytes
 14185 ;; Hardware stack levels used: 1
 14186 ;; Hardware stack levels required when called: 4
 14187 ;; This function calls:
 14188 ;;		Nothing
 14189 ;; This function is called by:
 14190 ;;		_Sensor_Acq_ExecutePacket
 14191 ;; This function uses a non-reentrant model
 14192 ;;
 14193                           
 14194                           
 14195                           ;psect for function _MTOUCH_Random
 14196  1BC5                     _MTOUCH_Random:
 14197                           
 14198                           ;mcc_generated_files/mtouch/mtouch_random.c: 68:     static MTOUCH_RANDOM_t seed = (MTOU
      +                          CH_RANDOM_t)0;;mcc_generated_files/mtouch/mtouch_random.c: 70:     if ((seed & (MTOUCH_R
      +                          ANDOM_t)1) != (MTOUCH_RANDOM_t)0)
 14199                           
 14200                           ;incstack = 0
 14201                           ; Regs used in _MTOUCH_Random: [wreg+status,2+status,0]
 14202  1BC5  1C7A               	btfss	MTOUCH_Random@seed,0
 14203  1BC6  2BC9               	goto	l4276
 14204                           
 14205                           ;mcc_generated_files/mtouch/mtouch_random.c: 71:     {;mcc_generated_files/mtouch/mtouch
      +                          _random.c: 73:         seed = seed >> (uint8_t)1;
 14206  1BC7  367A               	lsrf	MTOUCH_Random@seed,w
 14207  1BC8  2BCF               	goto	L9
 14208  1BC9                     l4276:	
 14209                           ;mcc_generated_files/mtouch/mtouch_random.c: 74:     }
 14210                           
 14211                           
 14212                           ;mcc_generated_files/mtouch/mtouch_random.c: 76:     {;mcc_generated_files/mtouch/mtouch
      +                          _random.c: 81:         seed = seed >> (uint8_t)1;
 14213  1BC9  367A               	lsrf	MTOUCH_Random@seed,w
 14214  1BCA  00F2               	movwf	??_MTOUCH_Random
 14215  1BCB  0872               	movf	??_MTOUCH_Random,w
 14216  1BCC  00FA               	movwf	MTOUCH_Random@seed
 14217                           
 14218                           ;mcc_generated_files/mtouch/mtouch_random.c: 82:         seed = seed ^ (MTOUCH_RANDOM_t)
      +                          0xB4;
 14219  1BCD  087A               	movf	MTOUCH_Random@seed,w
 14220  1BCE  3AB4               	xorlw	180
 14221  1BCF                     L9:
 14222  1BCF  00F2               	movwf	??_MTOUCH_Random
 14223  1BD0  0872               	movf	??_MTOUCH_Random,w
 14224  1BD1  00FA               	movwf	MTOUCH_Random@seed
 14225                           
 14226                           ;mcc_generated_files/mtouch/mtouch_random.c: 85:     return (uint8_t)seed & 0x0F;
 14227  1BD2  087A               	movf	MTOUCH_Random@seed,w
 14228  1BD3  390F               	andlw	15
 14229  1BD4  0008               	return
 14230  1BD5                     __end_of_MTOUCH_Random:
 14231                           
 14232                           	psect	text80
 14233  1B4E                     __ptext80:	
 14234 ;; *************** function _MTOUCH_Delay *****************
 14235 ;; Defined at:
 14236 ;;		line 372 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
 14237 ;; Parameters:    Size  Location     Type
 14238 ;;		None
 14239 ;; Auto vars:     Size  Location     Type
 14240 ;;  i               1    3[COMMON] unsigned char 
 14241 ;; Return value:  Size  Location     Type
 14242 ;;                  1    wreg      void 
 14243 ;; Registers used:
 14244 ;;		wreg, status,2, status,0
 14245 ;; Tracked objects:
 14246 ;;		On entry : 1F/0
 14247 ;;		On exit  : 1F/0
 14248 ;;		Unchanged: 0/0
 14249 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14250 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14251 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14252 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14253 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14254 ;;Total ram usage:        2 bytes
 14255 ;; Hardware stack levels used: 1
 14256 ;; Hardware stack levels required when called: 4
 14257 ;; This function calls:
 14258 ;;		Nothing
 14259 ;; This function is called by:
 14260 ;;		_Sensor_Acq_ExecutePacket
 14261 ;; This function uses a non-reentrant model
 14262 ;;
 14263                           
 14264                           
 14265                           ;psect for function _MTOUCH_Delay
 14266  1B4E                     _MTOUCH_Delay:
 14267                           
 14268                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 374:     for(uint8_t i = sample_delay;i>0;i
      +                          --)
 14269                           
 14270                           ;incstack = 0
 14271                           ; Regs used in _MTOUCH_Delay: [wreg+status,2+status,0]
 14272  1B4E  0869               	movf	_sample_delay,w
 14273  1B4F  00F2               	movwf	??_MTOUCH_Delay
 14274  1B50  0872               	movf	??_MTOUCH_Delay,w
 14275  1B51  00F3               	movwf	MTOUCH_Delay@i
 14276  1B52                     L10:
 14277  1B52  0873               	movf	MTOUCH_Delay@i,w
 14278  1B53  1903               	btfsc	3,2
 14279  1B54  0008               	return
 14280                           
 14281                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 375:     { }
 14282  1B55  3001               	movlw	1
 14283  1B56  02F3               	subwf	MTOUCH_Delay@i,f
 14284  1B57  2B52               	goto	L10
 14285  1B58                     __end_of_MTOUCH_Delay:
 14286                           
 14287                           	psect	text81
 14288  1C8F                     __ptext81:	
 14289 ;; *************** function _MTOUCH_Initialize *****************
 14290 ;; Defined at:
 14291 ;;		line 101 in file "mcc_generated_files/mtouch/mtouch.c"
 14292 ;; Parameters:    Size  Location     Type
 14293 ;;		None
 14294 ;; Auto vars:     Size  Location     Type
 14295 ;;		None
 14296 ;; Return value:  Size  Location     Type
 14297 ;;                  1    wreg      void 
 14298 ;; Registers used:
 14299 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14300 ;; Tracked objects:
 14301 ;;		On entry : 1E/1
 14302 ;;		On exit  : 1F/1
 14303 ;;		Unchanged: 0/0
 14304 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14305 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14306 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14307 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14308 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14309 ;;Total ram usage:        0 bytes
 14310 ;; Hardware stack levels used: 1
 14311 ;; Hardware stack levels required when called: 8
 14312 ;; This function calls:
 14313 ;;		_MTOUCH_Button_InitializeAll
 14314 ;;		_MTOUCH_Sensor_InitializeAll
 14315 ;;		_MTOUCH_Sensor_Sampled_ResetAll
 14316 ;;		_MTOUCH_Sensor_Scan_Initialize
 14317 ;;		_MTOUCH_Slider_InitializeAll
 14318 ;;		_TMR1_SetInterruptHandler
 14319 ;; This function is called by:
 14320 ;;		_MTOUCH_Service_Mainloop
 14321 ;;		_SYSTEM_Initialize
 14322 ;; This function uses a non-reentrant model
 14323 ;;
 14324                           
 14325                           
 14326                           ;psect for function _MTOUCH_Initialize
 14327  1C8F                     _MTOUCH_Initialize:
 14328                           
 14329                           ;mcc_generated_files/mtouch/mtouch.c: 103:     MTOUCH_Sensor_InitializeAll();
 14330                           
 14331                           ;incstack = 0
 14332                           ; Regs used in _MTOUCH_Initialize: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14333  1C8F  319B  23B6  319C   	fcall	_MTOUCH_Sensor_InitializeAll
 14334                           
 14335                           ;mcc_generated_files/mtouch/mtouch.c: 104:     MTOUCH_Button_InitializeAll();
 14336  1C92  319D  258B  319C   	fcall	_MTOUCH_Button_InitializeAll
 14337                           
 14338                           ;mcc_generated_files/mtouch/mtouch.c: 105:     MTOUCH_Slider_InitializeAll();
 14339  1C95  319B  2370  319C   	fcall	_MTOUCH_Slider_InitializeAll
 14340                           
 14341                           ;mcc_generated_files/mtouch/mtouch.c: 106:     MTOUCH_Sensor_Sampled_ResetAll();
 14342  1C98  319D  25A8  319C   	fcall	_MTOUCH_Sensor_Sampled_ResetAll
 14343                           
 14344                           ;mcc_generated_files/mtouch/mtouch.c: 107:     MTOUCH_Sensor_Scan_Initialize();
 14345  1C9B  319B  2309  319C   	fcall	_MTOUCH_Sensor_Scan_Initialize
 14346                           
 14347                           ;mcc_generated_files/mtouch/mtouch.c: 108:     TMR1_SetInterruptHandler(MTOUCH_ScanSched
      +                          uler);
 14348  1C9E  3045               	movlw	low _MTOUCH_ScanScheduler
 14349  1C9F  00F2               	movwf	TMR1_SetInterruptHandler@InterruptHandler
 14350  1CA0  301B               	movlw	high _MTOUCH_ScanScheduler
 14351  1CA1  00F3               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1
 14352  1CA2  3190  2000         	fcall	_TMR1_SetInterruptHandler
 14353  1CA4  0008               	return
 14354  1CA5                     __end_of_MTOUCH_Initialize:
 14355                           
 14356                           	psect	text82
 14357  1000                     __ptext82:	
 14358 ;; *************** function _TMR1_SetInterruptHandler *****************
 14359 ;; Defined at:
 14360 ;;		line 171 in file "mcc_generated_files/tmr1.c"
 14361 ;; Parameters:    Size  Location     Type
 14362 ;;  InterruptHan    2    2[COMMON] PTR FTN()void 
 14363 ;;		 -> TMR1_DefaultInterruptHandler(1), MTOUCH_ScanScheduler(1), 
 14364 ;; Auto vars:     Size  Location     Type
 14365 ;;		None
 14366 ;; Return value:  Size  Location     Type
 14367 ;;                  1    wreg      void 
 14368 ;; Registers used:
 14369 ;;		wreg
 14370 ;; Tracked objects:
 14371 ;;		On entry : 1F/1
 14372 ;;		On exit  : 1F/1
 14373 ;;		Unchanged: 0/0
 14374 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14375 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14376 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14377 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14378 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14379 ;;Total ram usage:        2 bytes
 14380 ;; Hardware stack levels used: 1
 14381 ;; Hardware stack levels required when called: 4
 14382 ;; This function calls:
 14383 ;;		Nothing
 14384 ;; This function is called by:
 14385 ;;		_MTOUCH_Initialize
 14386 ;;		_TMR1_Initialize
 14387 ;; This function uses a non-reentrant model
 14388 ;;
 14389                           
 14390                           
 14391                           ;psect for function _TMR1_SetInterruptHandler
 14392  1000                     _TMR1_SetInterruptHandler:
 14393                           
 14394                           ;mcc_generated_files/tmr1.c: 172:     TMR1_InterruptHandler = InterruptHandler;
 14395                           
 14396                           ;incstack = 0
 14397                           ; Regs used in _TMR1_SetInterruptHandler: [wreg]
 14398  1000  0873               	movf	TMR1_SetInterruptHandler@InterruptHandler+1,w
 14399  1001  00E2               	movwf	(_TMR1_InterruptHandler+1)^(0+128)
 14400  1002  0872               	movf	TMR1_SetInterruptHandler@InterruptHandler,w
 14401  1003  00E1               	movwf	_TMR1_InterruptHandler^(0+128)
 14402  1004  0008               	return
 14403  1005                     __end_of_TMR1_SetInterruptHandler:
 14404                           
 14405                           	psect	text83
 14406  1B70                     __ptext83:	
 14407 ;; *************** function _MTOUCH_Slider_InitializeAll *****************
 14408 ;; Defined at:
 14409 ;;		line 965 in file "mcc_generated_files/mtouch/mtouch_slider.c"
 14410 ;; Parameters:    Size  Location     Type
 14411 ;;		None
 14412 ;; Auto vars:     Size  Location     Type
 14413 ;;  slider          1    6[COMMON] enum E2914
 14414 ;; Return value:  Size  Location     Type
 14415 ;;                  1    wreg      void 
 14416 ;; Registers used:
 14417 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14418 ;; Tracked objects:
 14419 ;;		On entry : 1F/0
 14420 ;;		On exit  : 0/0
 14421 ;;		Unchanged: 0/0
 14422 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14423 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14424 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14425 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14426 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14427 ;;Total ram usage:        2 bytes
 14428 ;; Hardware stack levels used: 1
 14429 ;; Hardware stack levels required when called: 5
 14430 ;; This function calls:
 14431 ;;		_Slider_Initialize
 14432 ;; This function is called by:
 14433 ;;		_MTOUCH_Initialize
 14434 ;; This function uses a non-reentrant model
 14435 ;;
 14436                           
 14437                           
 14438                           ;psect for function _MTOUCH_Slider_InitializeAll
 14439  1B70                     _MTOUCH_Slider_InitializeAll:
 14440                           
 14441                           ;mcc_generated_files/mtouch/mtouch_slider.c: 967:     enum mtouch_slider_names slider;;m
      +                          cc_generated_files/mtouch/mtouch_slider.c: 969:     for (slider = 0u; slider < 1u; slide
      +                          r++)
 14442                           
 14443                           ;incstack = 0
 14444                           ; Regs used in _MTOUCH_Slider_InitializeAll: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
 14445  1B70  01F6               	clrf	MTOUCH_Slider_InitializeAll@slider
 14446  1B71                     l5060:
 14447                           
 14448                           ;mcc_generated_files/mtouch/mtouch_slider.c: 970:     {;mcc_generated_files/mtouch/mtouc
      +                          h_slider.c: 971:         Slider_Initialize(slider);
 14449  1B71  0876               	movf	MTOUCH_Slider_InitializeAll@slider,w
 14450  1B72  3192  22A6  319B   	fcall	_Slider_Initialize
 14451                           
 14452                           ;mcc_generated_files/mtouch/mtouch_slider.c: 972:     }
 14453  1B75  3001               	movlw	1
 14454  1B76  00F5               	movwf	??_MTOUCH_Slider_InitializeAll
 14455  1B77  0875               	movf	??_MTOUCH_Slider_InitializeAll,w
 14456  1B78  07F6               	addwf	MTOUCH_Slider_InitializeAll@slider,f
 14457  1B79  0876               	movf	MTOUCH_Slider_InitializeAll@slider,w
 14458  1B7A  1D03               	btfss	3,2
 14459  1B7B  0008               	return
 14460  1B7C  2B71               	goto	l5060
 14461  1B7D                     __end_of_MTOUCH_Slider_InitializeAll:
 14462                           
 14463                           	psect	text84
 14464  12A6                     __ptext84:	
 14465 ;; *************** function _Slider_Initialize *****************
 14466 ;; Defined at:
 14467 ;;		line 795 in file "mcc_generated_files/mtouch/mtouch_slider.c"
 14468 ;; Parameters:    Size  Location     Type
 14469 ;;  sliderName      1    wreg     enum E2914
 14470 ;; Auto vars:     Size  Location     Type
 14471 ;;  sliderName      1    3[COMMON] enum E2914
 14472 ;;  slider          1    4[COMMON] PTR struct .
 14473 ;;		 -> mtouch_slider(17), 
 14474 ;; Return value:  Size  Location     Type
 14475 ;;                  1    wreg      void 
 14476 ;; Registers used:
 14477 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 14478 ;; Tracked objects:
 14479 ;;		On entry : 0/0
 14480 ;;		On exit  : 0/0
 14481 ;;		Unchanged: 0/0
 14482 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14483 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14484 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14485 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14486 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14487 ;;Total ram usage:        3 bytes
 14488 ;; Hardware stack levels used: 1
 14489 ;; Hardware stack levels required when called: 4
 14490 ;; This function calls:
 14491 ;;		Nothing
 14492 ;; This function is called by:
 14493 ;;		_MTOUCH_Slider_InitializeAll
 14494 ;; This function uses a non-reentrant model
 14495 ;;
 14496                           
 14497                           
 14498                           ;psect for function _Slider_Initialize
 14499  12A6                     _Slider_Initialize:
 14500                           
 14501                           ;incstack = 0
 14502                           ; Regs used in _Slider_Initialize: [wreg+fsr1l+fsr1h+status,2+status,0]
 14503                           ;Slider_Initialize@sliderName stored from wreg
 14504  12A6  00F3               	movwf	Slider_Initialize@sliderName
 14505                           
 14506                           ;mcc_generated_files/mtouch/mtouch_slider.c: 795: static void Slider_Initialize(enum mto
      +                          uch_slider_names sliderName);mcc_generated_files/mtouch/mtouch_slider.c: 796: {;mcc_gene
      +                          rated_files/mtouch/mtouch_slider.c: 797:     if (sliderName < 1u)
 14507  12A7  0873               	movf	Slider_Initialize@sliderName,w
 14508  12A8  1D03               	btfss	3,2
 14509  12A9  0008               	return
 14510                           
 14511                           ;mcc_generated_files/mtouch/mtouch_slider.c: 798:     {;mcc_generated_files/mtouch/mtouc
      +                          h_slider.c: 799:         mtouch_slider_t* slider = &mtouch_slider[sliderName];
 14512  12AA  0E73               	swapf	Slider_Initialize@sliderName,w
 14513  12AB  39F0               	andlw	240
 14514  12AC  0773               	addwf	Slider_Initialize@sliderName,w
 14515  12AD  3EC0               	addlw	(low (_mtouch_slider| 0))& (0+255)
 14516  12AE  00F2               	movwf	??_Slider_Initialize
 14517  12AF  0872               	movf	??_Slider_Initialize,w
 14518  12B0  00F4               	movwf	Slider_Initialize@slider
 14519                           
 14520                           ;mcc_generated_files/mtouch/mtouch_slider.c: 802:         slider->sliderStatus = MTOUCH_
      +                          SLIDER_STATE_initializing;
 14521  12B1  0874               	movf	Slider_Initialize@slider,w
 14522  12B2  3E10               	addlw	16
 14523  12B3  0086               	movwf	6
 14524  12B4  0187               	clrf	7
 14525  12B5  0181               	clrf	1
 14526                           
 14527                           ;mcc_generated_files/mtouch/mtouch_slider.c: 804:         slider->rightHysteresis = 0u;
 14528  12B6  0874               	movf	Slider_Initialize@slider,w
 14529  12B7  3E08               	addlw	8
 14530  12B8  0086               	movwf	6
 14531  12B9  0187               	clrf	7
 14532  12BA  0181               	clrf	1
 14533                           
 14534                           ;mcc_generated_files/mtouch/mtouch_slider.c: 805:         slider->leftHysteresis = slide
      +                          r->positionHysteresis;
 14535  12BB  0874               	movf	Slider_Initialize@slider,w
 14536  12BC  3E05               	addlw	5
 14537  12BD  0086               	movwf	6
 14538  12BE  0187               	clrf	7
 14539  12BF  0801               	movf	1,w
 14540  12C0  00F2               	movwf	??_Slider_Initialize
 14541  12C1  0874               	movf	Slider_Initialize@slider,w
 14542  12C2  3E09               	addlw	9
 14543  12C3  0086               	movwf	6
 14544  12C4  0187               	clrf	7
 14545  12C5  0872               	movf	??_Slider_Initialize,w
 14546  12C6  0081               	movwf	1
 14547                           
 14548                           ;mcc_generated_files/mtouch/mtouch_slider.c: 807:         slider->rawPosition = 0u;
 14549  12C7  0874               	movf	Slider_Initialize@slider,w
 14550  12C8  3E0A               	addlw	10
 14551  12C9  0086               	movwf	6
 14552  12CA  0187               	clrf	7
 14553  12CB  3000               	movlw	0
 14554  12CC  3FC0               	movwi [0]fsr1
 14555  12CD  3FC1               	movwi [1]fsr1
 14556                           
 14557                           ;mcc_generated_files/mtouch/mtouch_slider.c: 808:         slider->sliderPosition = 0u;
 14558  12CE  0874               	movf	Slider_Initialize@slider,w
 14559  12CF  3E0C               	addlw	12
 14560  12D0  0086               	movwf	6
 14561  12D1  0187               	clrf	7
 14562  12D2  3000               	movlw	0
 14563  12D3  3FC0               	movwi [0]fsr1
 14564  12D4  3FC1               	movwi [1]fsr1
 14565                           
 14566                           ;mcc_generated_files/mtouch/mtouch_slider.c: 809:         slider->contactSize = 0u;
 14567  12D5  0874               	movf	Slider_Initialize@slider,w
 14568  12D6  3E0E               	addlw	14
 14569  12D7  0086               	movwf	6
 14570  12D8  0187               	clrf	7
 14571  12D9  3000               	movlw	0
 14572  12DA  3FC0               	movwi [0]fsr1
 14573  12DB  3FC1               	movwi [1]fsr1
 14574  12DC  0008               	return
 14575  12DD                     __end_of_Slider_Initialize:
 14576                           
 14577                           	psect	text85
 14578  1B09                     __ptext85:	
 14579 ;; *************** function _MTOUCH_Sensor_Scan_Initialize *****************
 14580 ;; Defined at:
 14581 ;;		line 181 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
 14582 ;; Parameters:    Size  Location     Type
 14583 ;;		None
 14584 ;; Auto vars:     Size  Location     Type
 14585 ;;		None
 14586 ;; Return value:  Size  Location     Type
 14587 ;;                  1    wreg      void 
 14588 ;; Registers used:
 14589 ;;		wreg, status,2
 14590 ;; Tracked objects:
 14591 ;;		On entry : 1F/0
 14592 ;;		On exit  : 1F/1
 14593 ;;		Unchanged: 0/0
 14594 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14595 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14596 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14597 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14598 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14599 ;;Total ram usage:        0 bytes
 14600 ;; Hardware stack levels used: 1
 14601 ;; Hardware stack levels required when called: 4
 14602 ;; This function calls:
 14603 ;;		Nothing
 14604 ;; This function is called by:
 14605 ;;		_MTOUCH_Initialize
 14606 ;;		_Sensor_Acq_ExecutePacket
 14607 ;; This function uses a non-reentrant model
 14608 ;;
 14609                           
 14610                           
 14611                           ;psect for function _MTOUCH_Sensor_Scan_Initialize
 14612  1B09                     _MTOUCH_Sensor_Scan_Initialize:
 14613                           
 14614                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 184:     ADCON0 = (uint8_t)0;
 14615                           
 14616                           ;incstack = 0
 14617                           ; Regs used in _MTOUCH_Sensor_Scan_Initialize: [wreg+status,2]
 14618  1B09  0021               	movlb	1	; select bank1
 14619  1B0A  019D               	clrf	29	;volatile
 14620                           
 14621                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 185:     ADCON1 = (uint8_t)( 0x1<<7 | 0x2<<
      +                          4 | 0x0 );
 14622  1B0B  30A0               	movlw	160
 14623  1B0C  009E               	movwf	30	;volatile
 14624  1B0D  0008               	return
 14625  1B0E                     __end_of_MTOUCH_Sensor_Scan_Initialize:
 14626                           
 14627                           	psect	text86
 14628  1DA8                     __ptext86:	
 14629 ;; *************** function _MTOUCH_Sensor_Sampled_ResetAll *****************
 14630 ;; Defined at:
 14631 ;;		line 556 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
 14632 ;; Parameters:    Size  Location     Type
 14633 ;;		None
 14634 ;; Auto vars:     Size  Location     Type
 14635 ;;  sensor          2    2[BANK0 ] PTR struct .
 14636 ;;		 -> mtouch_sensor(99), 
 14637 ;; Return value:  Size  Location     Type
 14638 ;;                  1    wreg      void 
 14639 ;; Registers used:
 14640 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14641 ;; Tracked objects:
 14642 ;;		On entry : 0/0
 14643 ;;		On exit  : 1F/0
 14644 ;;		Unchanged: 0/0
 14645 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14646 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14647 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14648 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14649 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14650 ;;Total ram usage:        4 bytes
 14651 ;; Hardware stack levels used: 1
 14652 ;; Hardware stack levels required when called: 5
 14653 ;; This function calls:
 14654 ;;		_Sensor_Sampled_Reset
 14655 ;; This function is called by:
 14656 ;;		_MTOUCH_Initialize
 14657 ;;		_MTOUCH_Service_Mainloop
 14658 ;; This function uses a non-reentrant model
 14659 ;;
 14660                           
 14661                           
 14662                           ;psect for function _MTOUCH_Sensor_Sampled_ResetAll
 14663  1DA8                     _MTOUCH_Sensor_Sampled_ResetAll:
 14664                           
 14665                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 558:     mtouch_sensor_t* sensor;;mcc_gener
      +                          ated_files/mtouch/mtouch_sensor.c: 559:     for(sensor = &mtouch_sensor[0];sensor<= &mto
      +                          uch_sensor[11u -1];sensor++)
 14666                           
 14667                           ;incstack = 0
 14668                           ; Regs used in _MTOUCH_Sensor_Sampled_ResetAll: [wreg+fsr1l+fsr1h+status,2+status,0+pcla
      +                          th+cstack]
 14669  1DA8  3038               	movlw	56
 14670  1DA9  0020               	movlb	0	; select bank0
 14671  1DAA  00A2               	movwf	MTOUCH_Sensor_Sampled_ResetAll@sensor
 14672  1DAB  3023               	movlw	35
 14673  1DAC  00A3               	movwf	MTOUCH_Sensor_Sampled_ResetAll@sensor+1
 14674  1DAD                     L11:
 14675  1DAD  3092               	movlw	146
 14676  1DAE  00A0               	movwf	??_MTOUCH_Sensor_Sampled_ResetAll
 14677  1DAF  3023               	movlw	35
 14678  1DB0  00A1               	movwf	??_MTOUCH_Sensor_Sampled_ResetAll+1
 14679  1DB1  0823               	movf	MTOUCH_Sensor_Sampled_ResetAll@sensor+1,w
 14680  1DB2  0221               	subwf	??_MTOUCH_Sensor_Sampled_ResetAll+1,w
 14681  1DB3  1D03               	skipz
 14682  1DB4  2DB7               	goto	u7205
 14683  1DB5  0822               	movf	MTOUCH_Sensor_Sampled_ResetAll@sensor,w
 14684  1DB6  0220               	subwf	??_MTOUCH_Sensor_Sampled_ResetAll,w
 14685  1DB7                     u7205:
 14686  1DB7  1C03               	btfss	3,0
 14687  1DB8  0008               	return
 14688                           
 14689                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 560:     {;mcc_generated_files/mtouch/mtouc
      +                          h_sensor.c: 561:         Sensor_Sampled_Reset(sensor);
 14690  1DB9  0823               	movf	MTOUCH_Sensor_Sampled_ResetAll@sensor+1,w
 14691  1DBA  00F9               	movwf	Sensor_Sampled_Reset@sensor+1
 14692  1DBB  0822               	movf	MTOUCH_Sensor_Sampled_ResetAll@sensor,w
 14693  1DBC  00F8               	movwf	Sensor_Sampled_Reset@sensor
 14694  1DBD  319B  231A  319D   	fcall	_Sensor_Sampled_Reset
 14695                           
 14696                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 562:     }
 14697  1DC0  3009               	movlw	9
 14698  1DC1  07A2               	addwf	MTOUCH_Sensor_Sampled_ResetAll@sensor,f
 14699  1DC2  3000               	movlw	0
 14700  1DC3  3DA3               	addwfc	MTOUCH_Sensor_Sampled_ResetAll@sensor+1,f
 14701  1DC4  2DAD               	goto	L11
 14702  1DC5                     __end_of_MTOUCH_Sensor_Sampled_ResetAll:
 14703                           
 14704                           	psect	text87
 14705  1BB6                     __ptext87:	
 14706 ;; *************** function _MTOUCH_Sensor_InitializeAll *****************
 14707 ;; Defined at:
 14708 ;;		line 166 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
 14709 ;; Parameters:    Size  Location     Type
 14710 ;;		None
 14711 ;; Auto vars:     Size  Location     Type
 14712 ;;  sensor          1   10[BANK0 ] enum E2707
 14713 ;; Return value:  Size  Location     Type
 14714 ;;                  1    wreg      void 
 14715 ;; Registers used:
 14716 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14717 ;; Tracked objects:
 14718 ;;		On entry : 1E/1
 14719 ;;		On exit  : 1F/0
 14720 ;;		Unchanged: 0/0
 14721 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14722 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14723 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14724 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14725 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14726 ;;Total ram usage:        2 bytes
 14727 ;; Hardware stack levels used: 1
 14728 ;; Hardware stack levels required when called: 7
 14729 ;; This function calls:
 14730 ;;		_MTOUCH_Sensor_Initialize
 14731 ;; This function is called by:
 14732 ;;		_MTOUCH_Initialize
 14733 ;; This function uses a non-reentrant model
 14734 ;;
 14735                           
 14736                           
 14737                           ;psect for function _MTOUCH_Sensor_InitializeAll
 14738  1BB6                     _MTOUCH_Sensor_InitializeAll:
 14739                           
 14740                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 168:     enum mtouch_sensor_names sensor;;m
      +                          cc_generated_files/mtouch/mtouch_sensor.c: 169:     for (sensor = 0; sensor < 11u; senso
      +                          r++)
 14741                           
 14742                           ;incstack = 0
 14743                           ; Regs used in _MTOUCH_Sensor_InitializeAll: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
 14744  1BB6  0020               	movlb	0	; select bank0
 14745  1BB7  01AA               	clrf	MTOUCH_Sensor_InitializeAll@sensor
 14746  1BB8                     l7018:
 14747                           
 14748                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 170:     {;mcc_generated_files/mtouch/mtouc
      +                          h_sensor.c: 171:         MTOUCH_Sensor_Initialize(sensor);
 14749  1BB8  082A               	movf	MTOUCH_Sensor_InitializeAll@sensor,w
 14750  1BB9  319E  2620  319B   	fcall	_MTOUCH_Sensor_Initialize
 14751                           
 14752                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 172:     }
 14753  1BBC  3001               	movlw	1
 14754  1BBD  00A9               	movwf	??_MTOUCH_Sensor_InitializeAll
 14755  1BBE  0829               	movf	??_MTOUCH_Sensor_InitializeAll,w
 14756  1BBF  07AA               	addwf	MTOUCH_Sensor_InitializeAll@sensor,f
 14757  1BC0  300B               	movlw	11
 14758  1BC1  022A               	subwf	MTOUCH_Sensor_InitializeAll@sensor,w
 14759  1BC2  1803               	btfsc	3,0
 14760  1BC3  0008               	return
 14761  1BC4  2BB8               	goto	l7018
 14762  1BC5                     __end_of_MTOUCH_Sensor_InitializeAll:
 14763                           
 14764                           	psect	text88
 14765  1E20                     __ptext88:	
 14766 ;; *************** function _MTOUCH_Sensor_Initialize *****************
 14767 ;; Defined at:
 14768 ;;		line 152 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
 14769 ;; Parameters:    Size  Location     Type
 14770 ;;  sensor          1    wreg     enum E2707
 14771 ;; Auto vars:     Size  Location     Type
 14772 ;;  sensor          1    8[BANK0 ] enum E2707
 14773 ;; Return value:  Size  Location     Type
 14774 ;;                  1    wreg      enum E2719
 14775 ;; Registers used:
 14776 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14777 ;; Tracked objects:
 14778 ;;		On entry : 1F/0
 14779 ;;		On exit  : 1F/0
 14780 ;;		Unchanged: 0/0
 14781 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14782 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14783 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14784 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14785 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14786 ;;Total ram usage:        5 bytes
 14787 ;; Hardware stack levels used: 1
 14788 ;; Hardware stack levels required when called: 6
 14789 ;; This function calls:
 14790 ;;		_MTOUCH_Sensor_Enable
 14791 ;;		_Sensor_Sampled_Reset
 14792 ;;		___wmul
 14793 ;; This function is called by:
 14794 ;;		_MTOUCH_Sensor_InitializeAll
 14795 ;; This function uses a non-reentrant model
 14796 ;;
 14797                           
 14798                           
 14799                           ;psect for function _MTOUCH_Sensor_Initialize
 14800  1E20                     _MTOUCH_Sensor_Initialize:
 14801                           
 14802                           ;incstack = 0
 14803                           ; Regs used in _MTOUCH_Sensor_Initialize: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cst
      +                          ack]
 14804                           ;MTOUCH_Sensor_Initialize@sensor stored from wreg
 14805  1E20  00A8               	movwf	MTOUCH_Sensor_Initialize@sensor
 14806                           
 14807                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 152: enum mtouch_sensor_error MTOUCH_Sensor
      +                          _Initialize(enum mtouch_sensor_names sensor);mcc_generated_files/mtouch/mtouch_sensor.c:
      +                           153: {;mcc_generated_files/mtouch/mtouch_sensor.c: 154:     MTOUCH_Sensor_Enable(sensor
      +                          );
 14808  1E21  0828               	movf	MTOUCH_Sensor_Initialize@sensor,w
 14809  1E22  319D  25E3  319E   	fcall	_MTOUCH_Sensor_Enable
 14810                           
 14811                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 155:     Sensor_Sampled_Reset(&mtouch_senso
      +                          r[sensor]);
 14812  1E25  0828               	movf	MTOUCH_Sensor_Initialize@sensor,w
 14813  1E26  00A4               	movwf	??_MTOUCH_Sensor_Initialize
 14814  1E27  01A5               	clrf	??_MTOUCH_Sensor_Initialize+1
 14815  1E28  0824               	movf	??_MTOUCH_Sensor_Initialize,w
 14816  1E29  00F2               	movwf	___wmul@multiplier
 14817  1E2A  0825               	movf	??_MTOUCH_Sensor_Initialize+1,w
 14818  1E2B  00F3               	movwf	___wmul@multiplier+1
 14819  1E2C  3009               	movlw	9
 14820  1E2D  00F4               	movwf	___wmul@multiplicand
 14821  1E2E  3000               	movlw	0
 14822  1E2F  00F5               	movwf	___wmul@multiplicand+1
 14823  1E30  319D  2538  319E   	fcall	___wmul
 14824  1E33  3038               	movlw	56
 14825  1E34  00A6               	movwf	??_MTOUCH_Sensor_Initialize+2
 14826  1E35  3023               	movlw	35
 14827  1E36  00A7               	movwf	??_MTOUCH_Sensor_Initialize+3
 14828  1E37  0872               	movf	?___wmul,w
 14829  1E38  0726               	addwf	??_MTOUCH_Sensor_Initialize+2,w
 14830  1E39  00F8               	movwf	Sensor_Sampled_Reset@sensor
 14831  1E3A  0873               	movf	?___wmul+1,w
 14832  1E3B  3D27               	addwfc	??_MTOUCH_Sensor_Initialize+3,w
 14833  1E3C  00F9               	movwf	Sensor_Sampled_Reset@sensor+1
 14834  1E3D  319B  231A         	fcall	_Sensor_Sampled_Reset
 14835  1E3F  0008               	return
 14836  1E40                     __end_of_MTOUCH_Sensor_Initialize:
 14837                           
 14838                           	psect	text89
 14839  1B1A                     __ptext89:	
 14840 ;; *************** function _Sensor_Sampled_Reset *****************
 14841 ;; Defined at:
 14842 ;;		line 573 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
 14843 ;; Parameters:    Size  Location     Type
 14844 ;;  sensor          2    8[COMMON] PTR struct .
 14845 ;;		 -> mtouch_sensor(99), 
 14846 ;; Auto vars:     Size  Location     Type
 14847 ;;		None
 14848 ;; Return value:  Size  Location     Type
 14849 ;;                  1    wreg      void 
 14850 ;; Registers used:
 14851 ;;		wreg, fsr1l, fsr1h
 14852 ;; Tracked objects:
 14853 ;;		On entry : 1F/0
 14854 ;;		On exit  : 1F/0
 14855 ;;		Unchanged: 1F/0
 14856 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14857 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14858 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14859 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14860 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14861 ;;Total ram usage:        2 bytes
 14862 ;; Hardware stack levels used: 1
 14863 ;; Hardware stack levels required when called: 4
 14864 ;; This function calls:
 14865 ;;		Nothing
 14866 ;; This function is called by:
 14867 ;;		_MTOUCH_Sensor_Initialize
 14868 ;;		_MTOUCH_Sensor_Sampled_ResetAll
 14869 ;; This function uses a non-reentrant model
 14870 ;;
 14871                           
 14872                           
 14873                           ;psect for function _Sensor_Sampled_Reset
 14874  1B1A                     _Sensor_Sampled_Reset:
 14875                           
 14876                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 573: static __attribute__((inline)) void Se
      +                          nsor_Sampled_Reset(mtouch_sensor_t* sensor);mcc_generated_files/mtouch/mtouch_sensor.c: 
      +                          574: {;mcc_generated_files/mtouch/mtouch_sensor.c: 575:     sensor->sampled = 0;
 14877                           
 14878                           ;incstack = 0
 14879                           ; Regs used in _Sensor_Sampled_Reset: [wregfsr1]
 14880  1B1A  0878               	movf	Sensor_Sampled_Reset@sensor,w
 14881  1B1B  0086               	movwf	6
 14882  1B1C  0879               	movf	Sensor_Sampled_Reset@sensor+1,w
 14883  1B1D  0087               	movwf	7
 14884  1B1E  3148               	addfsr 1,8
 14885  1B1F  1081               	bcf	1,1
 14886  1B20  0008               	return
 14887  1B21                     __end_of_Sensor_Sampled_Reset:
 14888                           
 14889                           	psect	text90
 14890  1DE3                     __ptext90:	
 14891 ;; *************** function _MTOUCH_Sensor_Enable *****************
 14892 ;; Defined at:
 14893 ;;		line 490 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
 14894 ;; Parameters:    Size  Location     Type
 14895 ;;  sensor          1    wreg     enum E2707
 14896 ;; Auto vars:     Size  Location     Type
 14897 ;;  sensor          1    8[COMMON] enum E2707
 14898 ;; Return value:  Size  Location     Type
 14899 ;;                  1    wreg      void 
 14900 ;; Registers used:
 14901 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14902 ;; Tracked objects:
 14903 ;;		On entry : 1F/0
 14904 ;;		On exit  : 1F/0
 14905 ;;		Unchanged: 0/0
 14906 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14907 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14908 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14909 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14910 ;;      Totals:         1       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14911 ;;Total ram usage:        5 bytes
 14912 ;; Hardware stack levels used: 1
 14913 ;; Hardware stack levels required when called: 5
 14914 ;; This function calls:
 14915 ;;		___wmul
 14916 ;; This function is called by:
 14917 ;;		_Button_Tick_helper
 14918 ;;		_MTOUCH_Sensor_Initialize
 14919 ;; This function uses a non-reentrant model
 14920 ;;
 14921                           
 14922                           
 14923                           ;psect for function _MTOUCH_Sensor_Enable
 14924  1DE3                     _MTOUCH_Sensor_Enable:
 14925                           
 14926                           ;incstack = 0
 14927                           ; Regs used in _MTOUCH_Sensor_Enable: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 14928                           ;MTOUCH_Sensor_Enable@sensor stored from wreg
 14929  1DE3  00F8               	movwf	MTOUCH_Sensor_Enable@sensor
 14930                           
 14931                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 490: void MTOUCH_Sensor_Enable(enum mtouch_
      +                          sensor_names sensor);mcc_generated_files/mtouch/mtouch_sensor.c: 491: {;mcc_generated_fi
      +                          les/mtouch/mtouch_sensor.c: 492:     if(sensor < 11u)
 14932  1DE4  300B               	movlw	11
 14933  1DE5  0278               	subwf	MTOUCH_Sensor_Enable@sensor,w
 14934  1DE6  1803               	skipnc
 14935  1DE7  0008               	return
 14936                           
 14937                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 493:         mtouch_sensor[sensor].enabled 
      +                          = 1;
 14938  1DE8  0878               	movf	MTOUCH_Sensor_Enable@sensor,w
 14939  1DE9  00A0               	movwf	??_MTOUCH_Sensor_Enable
 14940  1DEA  01A1               	clrf	??_MTOUCH_Sensor_Enable+1
 14941  1DEB  0820               	movf	??_MTOUCH_Sensor_Enable,w
 14942  1DEC  00F2               	movwf	___wmul@multiplier
 14943  1DED  0821               	movf	??_MTOUCH_Sensor_Enable+1,w
 14944  1DEE  00F3               	movwf	___wmul@multiplier+1
 14945  1DEF  3009               	movlw	9
 14946  1DF0  00F4               	movwf	___wmul@multiplicand
 14947  1DF1  3000               	movlw	0
 14948  1DF2  00F5               	movwf	___wmul@multiplicand+1
 14949  1DF3  319D  2538         	fcall	___wmul
 14950  1DF5  3040               	movlw	64
 14951  1DF6  00A2               	movwf	??_MTOUCH_Sensor_Enable+2
 14952  1DF7  3023               	movlw	35
 14953  1DF8  00A3               	movwf	??_MTOUCH_Sensor_Enable+3
 14954  1DF9  0872               	movf	?___wmul,w
 14955  1DFA  0722               	addwf	??_MTOUCH_Sensor_Enable+2,w
 14956  1DFB  0086               	movwf	6
 14957  1DFC  0873               	movf	?___wmul+1,w
 14958  1DFD  3D23               	addwfc	??_MTOUCH_Sensor_Enable+3,w
 14959  1DFE  0087               	movwf	7
 14960  1DFF  1401               	bsf	1,0
 14961  1E00  0008               	return
 14962  1E01                     __end_of_MTOUCH_Sensor_Enable:
 14963                           
 14964                           	psect	text91
 14965  1D8B                     __ptext91:	
 14966 ;; *************** function _MTOUCH_Button_InitializeAll *****************
 14967 ;; Defined at:
 14968 ;;		line 223 in file "mcc_generated_files/mtouch/mtouch_button.c"
 14969 ;; Parameters:    Size  Location     Type
 14970 ;;		None
 14971 ;; Auto vars:     Size  Location     Type
 14972 ;;  button          1    7[BANK0 ] enum E2936
 14973 ;; Return value:  Size  Location     Type
 14974 ;;                  1    wreg      void 
 14975 ;; Registers used:
 14976 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14977 ;; Tracked objects:
 14978 ;;		On entry : 1F/0
 14979 ;;		On exit  : 1F/0
 14980 ;;		Unchanged: 0/0
 14981 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14982 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14983 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14984 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14985 ;;      Totals:         1       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14986 ;;Total ram usage:        2 bytes
 14987 ;; Hardware stack levels used: 1
 14988 ;; Hardware stack levels required when called: 6
 14989 ;; This function calls:
 14990 ;;		_MTOUCH_Button_Initialize
 14991 ;;		_memcpy
 14992 ;; This function is called by:
 14993 ;;		_MTOUCH_Initialize
 14994 ;; This function uses a non-reentrant model
 14995 ;;
 14996                           
 14997                           
 14998                           ;psect for function _MTOUCH_Button_InitializeAll
 14999  1D8B                     _MTOUCH_Button_InitializeAll:
 15000                           
 15001                           ;mcc_generated_files/mtouch/mtouch_button.c: 225:     enum mtouch_button_names button;;m
      +                          cc_generated_files/mtouch/mtouch_button.c: 227:     memcpy(mtouch_button,mtouch_button_i
      +                          nit,sizeof(mtouch_button_init));
 15002                           
 15003                           ;incstack = 0
 15004                           ; Regs used in _MTOUCH_Button_InitializeAll: [wreg-fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 15005  1D8B  309B               	movlw	155
 15006  1D8C  00F2               	movwf	memcpy@d1
 15007  1D8D  3023               	movlw	35
 15008  1D8E  00F3               	movwf	memcpy@d1+1
 15009  1D8F  3000               	movlw	low (_mtouch_button_init| (0+32768))
 15010  1D90  00F4               	movwf	memcpy@s1
 15011  1D91  3098               	movlw	high (_mtouch_button_init| (0+32768))
 15012  1D92  00F5               	movwf	memcpy@s1+1
 15013  1D93  3055               	movlw	85
 15014  1D94  00F6               	movwf	memcpy@n
 15015  1D95  3000               	movlw	0
 15016  1D96  00F7               	movwf	memcpy@n+1
 15017  1D97  3191  21F7  319D   	fcall	_memcpy
 15018                           
 15019                           ;mcc_generated_files/mtouch/mtouch_button.c: 229:     for (button = 0; button < 5u; butt
      +                          on++)
 15020  1D9A  01A7               	clrf	MTOUCH_Button_InitializeAll@button
 15021  1D9B                     l7032:
 15022                           
 15023                           ;mcc_generated_files/mtouch/mtouch_button.c: 230:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 231:         MTOUCH_Button_Initialize(button);
 15024  1D9B  0827               	movf	MTOUCH_Button_InitializeAll@button,w
 15025  1D9C  3193  2356  319D   	fcall	_MTOUCH_Button_Initialize
 15026                           
 15027                           ;mcc_generated_files/mtouch/mtouch_button.c: 232:     }
 15028  1D9F  3001               	movlw	1
 15029  1DA0  00F9               	movwf	??_MTOUCH_Button_InitializeAll
 15030  1DA1  0879               	movf	??_MTOUCH_Button_InitializeAll,w
 15031  1DA2  07A7               	addwf	MTOUCH_Button_InitializeAll@button,f
 15032  1DA3  3005               	movlw	5
 15033  1DA4  0227               	subwf	MTOUCH_Button_InitializeAll@button,w
 15034  1DA5  1803               	btfsc	3,0
 15035  1DA6  0008               	return
 15036  1DA7  2D9B               	goto	l7032
 15037  1DA8                     __end_of_MTOUCH_Button_InitializeAll:
 15038                           
 15039                           	psect	text92
 15040  11F7                     __ptext92:	
 15041 ;; *************** function _memcpy *****************
 15042 ;; Defined at:
 15043 ;;		line 4 in file "/Applications/microchip/xc8/v2.32/pic/sources/c99/common/memcpy.c"
 15044 ;; Parameters:    Size  Location     Type
 15045 ;;  d1              2    2[COMMON] PTR void 
 15046 ;;		 -> mtouch_button(85), 
 15047 ;;  s1              2    4[COMMON] PTR const void 
 15048 ;;		 -> mtouch_button_init(85), 
 15049 ;;  n               2    6[COMMON] unsigned int 
 15050 ;; Auto vars:     Size  Location     Type
 15051 ;;  s               2    2[BANK0 ] PTR const unsigned char 
 15052 ;;		 -> mtouch_button_init(85), 
 15053 ;;  d               2    0[BANK0 ] PTR unsigned char 
 15054 ;;		 -> mtouch_button(85), 
 15055 ;;  tmp             1    4[BANK0 ] unsigned char 
 15056 ;; Return value:  Size  Location     Type
 15057 ;;                  2    2[COMMON] PTR void 
 15058 ;; Registers used:
 15059 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
 15060 ;; Tracked objects:
 15061 ;;		On entry : 1F/0
 15062 ;;		On exit  : 1F/0
 15063 ;;		Unchanged: 0/0
 15064 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15065 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15066 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15067 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15068 ;;      Totals:         7       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15069 ;;Total ram usage:       12 bytes
 15070 ;; Hardware stack levels used: 1
 15071 ;; Hardware stack levels required when called: 4
 15072 ;; This function calls:
 15073 ;;		Nothing
 15074 ;; This function is called by:
 15075 ;;		_MTOUCH_Button_InitializeAll
 15076 ;; This function uses a non-reentrant model
 15077 ;;
 15078                           
 15079                           
 15080                           ;psect for function _memcpy
 15081  11F7                     _memcpy:
 15082                           
 15083                           ;incstack = 0
 15084                           ; Regs used in _memcpy: [wreg-fsr1h+status,2+status,0+pclath]
 15085  11F7  0875               	movf	memcpy@s1+1,w
 15086  11F8  00A3               	movwf	memcpy@s+1
 15087  11F9  0874               	movf	memcpy@s1,w
 15088  11FA  00A2               	movwf	memcpy@s
 15089  11FB  0873               	movf	memcpy@d1+1,w
 15090  11FC  00A1               	movwf	memcpy@d+1
 15091  11FD  0872               	movf	memcpy@d1,w
 15092  11FE  00A0               	movwf	memcpy@d
 15093  11FF                     l4710:
 15094  11FF  3001               	movlw	1
 15095  1200  02F6               	subwf	memcpy@n,f
 15096  1201  3000               	movlw	0
 15097  1202  3BF7               	subwfb	memcpy@n+1,f
 15098  1203  0A76               	incf	memcpy@n,w
 15099  1204  1903               	btfsc	3,2
 15100  1205  0A77               	incf	memcpy@n+1,w
 15101  1206  1903               	btfsc	3,2
 15102  1207  0008               	return
 15103  1208  0822               	movf	memcpy@s,w
 15104  1209  0084               	movwf	4
 15105  120A  0823               	movf	memcpy@s+1,w
 15106  120B  0085               	movwf	5
 15107  120C  0800               	movf	0,w	;code access
 15108  120D  00F8               	movwf	??_memcpy
 15109  120E  0878               	movf	??_memcpy,w
 15110  120F  00A4               	movwf	memcpy@tmp
 15111  1210  3001               	movlw	1
 15112  1211  07A2               	addwf	memcpy@s,f
 15113  1212  3000               	movlw	0
 15114  1213  3DA3               	addwfc	memcpy@s+1,f
 15115  1214  0820               	movf	memcpy@d,w
 15116  1215  0086               	movwf	6
 15117  1216  0821               	movf	memcpy@d+1,w
 15118  1217  0087               	movwf	7
 15119  1218  0824               	movf	memcpy@tmp,w
 15120  1219  0081               	movwf	1
 15121  121A  3001               	movlw	1
 15122  121B  07A0               	addwf	memcpy@d,f
 15123  121C  3000               	movlw	0
 15124  121D  3DA1               	addwfc	memcpy@d+1,f
 15125  121E  29FF               	goto	l4710
 15126  121F                     __end_of_memcpy:
 15127                           
 15128                           	psect	text93
 15129  1BF9                     __ptext93:	
 15130 ;; *************** function _MTOUCH_Button_ServiceAll *****************
 15131 ;; Defined at:
 15132 ;;		line 241 in file "mcc_generated_files/mtouch/mtouch_button.c"
 15133 ;; Parameters:    Size  Location     Type
 15134 ;;		None
 15135 ;; Auto vars:     Size  Location     Type
 15136 ;;  button          1   29[BANK0 ] enum E2936
 15137 ;; Return value:  Size  Location     Type
 15138 ;;                  1    wreg      void 
 15139 ;; Registers used:
 15140 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15141 ;; Tracked objects:
 15142 ;;		On entry : 1F/0
 15143 ;;		On exit  : 1F/0
 15144 ;;		Unchanged: 0/0
 15145 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15146 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15147 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15148 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15149 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15150 ;;Total ram usage:        2 bytes
 15151 ;; Hardware stack levels used: 1
 15152 ;; Hardware stack levels required when called: 9
 15153 ;; This function calls:
 15154 ;;		_Button_Reburst_Clear
 15155 ;;		_Button_Service
 15156 ;; This function is called by:
 15157 ;;		_MTOUCH_Service_Mainloop
 15158 ;; This function uses a non-reentrant model
 15159 ;;
 15160                           
 15161                           
 15162                           ;psect for function _MTOUCH_Button_ServiceAll
 15163  1BF9                     _MTOUCH_Button_ServiceAll:
 15164                           
 15165                           ;mcc_generated_files/mtouch/mtouch_button.c: 243:     enum mtouch_button_names button;;m
      +                          cc_generated_files/mtouch/mtouch_button.c: 245:     Button_Reburst_Clear();
 15166                           
 15167                           ;incstack = 0
 15168                           ; Regs used in _MTOUCH_Button_ServiceAll: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15169  1BF9  319A  22FE  319B   	fcall	_Button_Reburst_Clear
 15170                           
 15171                           ;mcc_generated_files/mtouch/mtouch_button.c: 247:     for (button = 0; button < 5u; butt
      +                          on++)
 15172  1BFC  01BD               	clrf	MTOUCH_Button_ServiceAll@button
 15173  1BFD                     l7224:
 15174                           
 15175                           ;mcc_generated_files/mtouch/mtouch_button.c: 248:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 249:         Button_Service(button);
 15176  1BFD  083D               	movf	MTOUCH_Button_ServiceAll@button,w
 15177  1BFE  3196  26D6  319B   	fcall	_Button_Service
 15178                           
 15179                           ;mcc_generated_files/mtouch/mtouch_button.c: 250:     }
 15180  1C01  3001               	movlw	1
 15181  1C02  0020               	movlb	0	; select bank0
 15182  1C03  00BC               	movwf	??_MTOUCH_Button_ServiceAll
 15183  1C04  083C               	movf	??_MTOUCH_Button_ServiceAll,w
 15184  1C05  07BD               	addwf	MTOUCH_Button_ServiceAll@button,f
 15185  1C06  3005               	movlw	5
 15186  1C07  023D               	subwf	MTOUCH_Button_ServiceAll@button,w
 15187  1C08  1803               	btfsc	3,0
 15188  1C09  0008               	return
 15189  1C0A  2BFD               	goto	l7224
 15190  1C0B                     __end_of_MTOUCH_Button_ServiceAll:
 15191                           
 15192                           	psect	text94
 15193  16D6                     __ptext94:	
 15194 ;; *************** function _Button_Service *****************
 15195 ;; Defined at:
 15196 ;;		line 253 in file "mcc_generated_files/mtouch/mtouch_button.c"
 15197 ;; Parameters:    Size  Location     Type
 15198 ;;  name            1    wreg     enum E2936
 15199 ;; Auto vars:     Size  Location     Type
 15200 ;;  name            1   25[BANK0 ] enum E2936
 15201 ;;  button          2   26[BANK0 ] PTR struct .
 15202 ;;		 -> mtouch_button(85), 
 15203 ;; Return value:  Size  Location     Type
 15204 ;;                  1    wreg      void 
 15205 ;; Registers used:
 15206 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15207 ;; Tracked objects:
 15208 ;;		On entry : 1F/0
 15209 ;;		On exit  : 0/0
 15210 ;;		Unchanged: 0/0
 15211 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15212 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15213 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15214 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15215 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15216 ;;Total ram usage:        7 bytes
 15217 ;; Hardware stack levels used: 1
 15218 ;; Hardware stack levels required when called: 8
 15219 ;; This function calls:
 15220 ;;		_Button_Deviation_Update
 15221 ;;		_Button_Reading_Update
 15222 ;;		_Button_State_Disabled
 15223 ;;		_Button_State_Initializing
 15224 ;;		_Button_State_NotPressed
 15225 ;;		_Button_State_PressDebounce
 15226 ;;		_Button_State_Pressed
 15227 ;;		_Button_State_ReleaseDebounce
 15228 ;;		_Button_State_Suspended
 15229 ;;		_MTOUCH_Button_Initialize
 15230 ;;		_MTOUCH_Sensor_isCalibrated
 15231 ;;		_MTOUCH_Sensor_wasSampled
 15232 ;;		___wmul
 15233 ;; This function is called by:
 15234 ;;		_MTOUCH_Button_ServiceAll
 15235 ;; This function uses a non-reentrant model
 15236 ;;
 15237                           
 15238                           
 15239                           ;psect for function _Button_Service
 15240  16D6                     _Button_Service:
 15241                           
 15242                           ;incstack = 0
 15243                           ; Regs used in _Button_Service: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15244                           ;Button_Service@name stored from wreg
 15245  16D6  00B9               	movwf	Button_Service@name
 15246                           
 15247                           ;mcc_generated_files/mtouch/mtouch_button.c: 253: static void Button_Service(enum mtouch
      +                          _button_names name);mcc_generated_files/mtouch/mtouch_button.c: 254: {;mcc_generated_fil
      +                          es/mtouch/mtouch_button.c: 255:     mtouch_button_t* button = &mtouch_button[name];
 15248  16D7  0839               	movf	Button_Service@name,w
 15249  16D8  00B5               	movwf	??_Button_Service
 15250  16D9  01B6               	clrf	??_Button_Service+1
 15251  16DA  0835               	movf	??_Button_Service,w
 15252  16DB  00F2               	movwf	___wmul@multiplier
 15253  16DC  0836               	movf	??_Button_Service+1,w
 15254  16DD  00F3               	movwf	___wmul@multiplier+1
 15255  16DE  3011               	movlw	17
 15256  16DF  00F4               	movwf	___wmul@multiplicand
 15257  16E0  3000               	movlw	0
 15258  16E1  00F5               	movwf	___wmul@multiplicand+1
 15259  16E2  319D  2538  3196   	fcall	___wmul
 15260  16E5  309B               	movlw	155
 15261  16E6  00B7               	movwf	??_Button_Service+2
 15262  16E7  3023               	movlw	35
 15263  16E8  00B8               	movwf	??_Button_Service+3
 15264  16E9  0872               	movf	?___wmul,w
 15265  16EA  0737               	addwf	??_Button_Service+2,w
 15266  16EB  00BA               	movwf	Button_Service@button
 15267  16EC  0873               	movf	?___wmul+1,w
 15268  16ED  3D38               	addwfc	??_Button_Service+3,w
 15269  16EE  00BB               	movwf	Button_Service@button+1
 15270                           
 15271                           ;mcc_generated_files/mtouch/mtouch_button.c: 257:     if (MTOUCH_Sensor_wasSampled(butto
      +                          n->sensor) && MTOUCH_Sensor_isCalibrated(button->sensor))
 15272  16EF  083A               	movf	Button_Service@button,w
 15273  16F0  0086               	movwf	6
 15274  16F1  083B               	movf	Button_Service@button+1,w
 15275  16F2  0087               	movwf	7
 15276  16F3  3141               	addfsr 1,1
 15277  16F4  0801               	movf	1,w
 15278  16F5  3191  2146  3196   	fcall	_MTOUCH_Sensor_wasSampled
 15279  16F8  3A00               	xorlw	0
 15280  16F9  1903               	skipnz
 15281  16FA  0008               	return
 15282  16FB  083A               	movf	Button_Service@button,w
 15283  16FC  0086               	movwf	6
 15284  16FD  083B               	movf	Button_Service@button+1,w
 15285  16FE  0087               	movwf	7
 15286  16FF  3141               	addfsr 1,1
 15287  1700  0801               	movf	1,w
 15288  1701  319B  2300  3196   	fcall	_MTOUCH_Sensor_isCalibrated
 15289  1704  3A00               	xorlw	0
 15290  1705  1903               	skipnz
 15291  1706  0008               	return
 15292                           
 15293                           ;mcc_generated_files/mtouch/mtouch_button.c: 258:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 259:         Button_Reading_Update(button);
 15294  1707  083B               	movf	Button_Service@button+1,w
 15295  1708  00AA               	movwf	Button_Reading_Update@button+1
 15296  1709  083A               	movf	Button_Service@button,w
 15297  170A  00A9               	movwf	Button_Reading_Update@button
 15298  170B  319B  23E7  3196   	fcall	_Button_Reading_Update
 15299                           
 15300                           ;mcc_generated_files/mtouch/mtouch_button.c: 260:         Button_Deviation_Update(button
      +                          );
 15301  170E  083B               	movf	Button_Service@button+1,w
 15302  170F  00F3               	movwf	Button_Deviation_Update@button+1
 15303  1710  083A               	movf	Button_Service@button,w
 15304  1711  00F2               	movwf	Button_Deviation_Update@button
 15305  1712  318B  2346  3196   	fcall	_Button_Deviation_Update
 15306                           
 15307                           ;mcc_generated_files/mtouch/mtouch_button.c: 262:         if (button->state >= (uint8_t)
      +                          (sizeof(Button_StateMachine)/sizeof(button_statemachine_state_t)))
 15308  1715  083A               	movf	Button_Service@button,w
 15309  1716  0086               	movwf	6
 15310  1717  083B               	movf	Button_Service@button+1,w
 15311  1718  0087               	movwf	7
 15312  1719  3142               	addfsr 1,2
 15313  171A  3007               	movlw	7
 15314  171B  0201               	subwf	1,w
 15315  171C  1C03               	skipc
 15316  171D  2F26               	goto	l7092
 15317                           
 15318                           ;mcc_generated_files/mtouch/mtouch_button.c: 263:         {;mcc_generated_files/mtouch/m
      +                          touch_button.c: 264:             MTOUCH_Button_Initialize(button->name);
 15319  171E  083A               	movf	Button_Service@button,w
 15320  171F  0086               	movwf	6
 15321  1720  083B               	movf	Button_Service@button+1,w
 15322  1721  0087               	movwf	7
 15323  1722  0801               	movf	1,w
 15324  1723  3193  2356  3196   	fcall	_MTOUCH_Button_Initialize
 15325  1726                     l7092:
 15326                           
 15327                           ;mcc_generated_files/mtouch/mtouch_button.c: 266:         Button_StateMachine[(uint8_t)b
      +                          utton->state](button);
 15328  1726  083B               	movf	Button_Service@button+1,w
 15329  1727  00B0               	movwf	Button_State_Disabled@button+1
 15330  1728  083A               	movf	Button_Service@button,w
 15331  1729  00AF               	movwf	Button_State_Disabled@button
 15332  172A  083A               	movf	Button_Service@button,w
 15333  172B  0086               	movwf	6
 15334  172C  083B               	movf	Button_Service@button+1,w
 15335  172D  0087               	movwf	7
 15336  172E  3142               	addfsr 1,2
 15337  172F  3501               	lslf	1,w
 15338  1730  3EA0               	addlw	(low (_Button_StateMachine| 0))& (0+255)
 15339  1731  0086               	movwf	6
 15340  1732  0187               	clrf	7
 15341  1733  3F41               	moviw [1]fsr1
 15342  1734  008A               	movwf	10
 15343  1735  3F40               	moviw [0]fsr1
 15344  1736  000A               	callw
 15345  1737  3196               	pagesel	$
 15346  1738  0008               	return
 15347  1739                     __end_of_Button_Service:
 15348                           
 15349                           	psect	text95
 15350  1146                     __ptext95:	
 15351 ;; *************** function _MTOUCH_Sensor_wasSampled *****************
 15352 ;; Defined at:
 15353 ;;		line 565 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
 15354 ;; Parameters:    Size  Location     Type
 15355 ;;  sensor          1    wreg     enum E2707
 15356 ;; Auto vars:     Size  Location     Type
 15357 ;;  sensor          1    8[COMMON] enum E2707
 15358 ;; Return value:  Size  Location     Type
 15359 ;;                  1    wreg      _Bool 
 15360 ;; Registers used:
 15361 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15362 ;; Tracked objects:
 15363 ;;		On entry : 1F/0
 15364 ;;		On exit  : 1F/0
 15365 ;;		Unchanged: 0/0
 15366 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15367 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15368 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15369 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15370 ;;      Totals:         1       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15371 ;;Total ram usage:        5 bytes
 15372 ;; Hardware stack levels used: 1
 15373 ;; Hardware stack levels required when called: 5
 15374 ;; This function calls:
 15375 ;;		___wmul
 15376 ;; This function is called by:
 15377 ;;		_Button_Service
 15378 ;; This function uses a non-reentrant model
 15379 ;;
 15380                           
 15381                           
 15382                           ;psect for function _MTOUCH_Sensor_wasSampled
 15383  1146                     _MTOUCH_Sensor_wasSampled:
 15384                           
 15385                           ;incstack = 0
 15386                           ; Regs used in _MTOUCH_Sensor_wasSampled: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cst
      +                          ack]
 15387                           ;MTOUCH_Sensor_wasSampled@sensor stored from wreg
 15388  1146  00F8               	movwf	MTOUCH_Sensor_wasSampled@sensor
 15389                           
 15390                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 565: _Bool MTOUCH_Sensor_wasSampled(enum mt
      +                          ouch_sensor_names sensor);mcc_generated_files/mtouch/mtouch_sensor.c: 566: {;mcc_generat
      +                          ed_files/mtouch/mtouch_sensor.c: 567:     if(sensor < 11u)
 15391  1147  300B               	movlw	11
 15392  1148  0278               	subwf	MTOUCH_Sensor_wasSampled@sensor,w
 15393  1149  1803               	skipnc
 15394  114A  2965               	goto	l6770
 15395                           
 15396                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 568:         return (_Bool)mtouch_sensor[se
      +                          nsor].sampled;
 15397  114B  0878               	movf	MTOUCH_Sensor_wasSampled@sensor,w
 15398  114C  00A0               	movwf	??_MTOUCH_Sensor_wasSampled
 15399  114D  01A1               	clrf	??_MTOUCH_Sensor_wasSampled+1
 15400  114E  0820               	movf	??_MTOUCH_Sensor_wasSampled,w
 15401  114F  00F2               	movwf	___wmul@multiplier
 15402  1150  0821               	movf	??_MTOUCH_Sensor_wasSampled+1,w
 15403  1151  00F3               	movwf	___wmul@multiplier+1
 15404  1152  3009               	movlw	9
 15405  1153  00F4               	movwf	___wmul@multiplicand
 15406  1154  3000               	movlw	0
 15407  1155  00F5               	movwf	___wmul@multiplicand+1
 15408  1156  319D  2538         	fcall	___wmul
 15409  1158  3040               	movlw	64
 15410  1159  00A2               	movwf	??_MTOUCH_Sensor_wasSampled+2
 15411  115A  3023               	movlw	35
 15412  115B  00A3               	movwf	??_MTOUCH_Sensor_wasSampled+3
 15413  115C  0872               	movf	?___wmul,w
 15414  115D  0722               	addwf	??_MTOUCH_Sensor_wasSampled+2,w
 15415  115E  0086               	movwf	6
 15416  115F  0873               	movf	?___wmul+1,w
 15417  1160  3D23               	addwfc	??_MTOUCH_Sensor_wasSampled+3,w
 15418  1161  0087               	movwf	7
 15419  1162  0C01               	rrf	1,w
 15420  1163  3901               	andlw	1
 15421  1164  0008               	return
 15422  1165                     l6770:
 15423                           
 15424                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 570:         return 0;
 15425  1165  3000               	movlw	0
 15426  1166  0008               	return
 15427  1167                     __end_of_MTOUCH_Sensor_wasSampled:
 15428                           
 15429                           	psect	text96
 15430  1B00                     __ptext96:	
 15431 ;; *************** function _MTOUCH_Sensor_isCalibrated *****************
 15432 ;; Defined at:
 15433 ;;		line 538 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
 15434 ;; Parameters:    Size  Location     Type
 15435 ;;  sensor          1    wreg     enum E2707
 15436 ;; Auto vars:     Size  Location     Type
 15437 ;;  sensor          1    0[COMMON] enum E2707
 15438 ;; Return value:  Size  Location     Type
 15439 ;;                  1    wreg      _Bool 
 15440 ;; Registers used:
 15441 ;;		wreg
 15442 ;; Tracked objects:
 15443 ;;		On entry : 1F/0
 15444 ;;		On exit  : 1F/0
 15445 ;;		Unchanged: 1F/0
 15446 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15447 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15448 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15449 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15450 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15451 ;;Total ram usage:        0 bytes
 15452 ;; Hardware stack levels used: 1
 15453 ;; Hardware stack levels required when called: 4
 15454 ;; This function calls:
 15455 ;;		Nothing
 15456 ;; This function is called by:
 15457 ;;		_Button_Service
 15458 ;; This function uses a non-reentrant model
 15459 ;;
 15460                           
 15461                           
 15462                           ;psect for function _MTOUCH_Sensor_isCalibrated
 15463  1B00                     _MTOUCH_Sensor_isCalibrated:
 15464                           
 15465                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 538: _Bool MTOUCH_Sensor_isCalibrated(enum 
      +                          mtouch_sensor_names sensor);mcc_generated_files/mtouch/mtouch_sensor.c: 539: {;mcc_gener
      +                          ated_files/mtouch/mtouch_sensor.c: 541:     return 1;
 15466                           
 15467                           ;incstack = 0
 15468                           ; Regs used in _MTOUCH_Sensor_isCalibrated: [wreg]
 15469  1B00  3001               	movlw	1
 15470  1B01  0008               	return
 15471  1B02                     __end_of_MTOUCH_Sensor_isCalibrated:
 15472                           
 15473                           	psect	text97
 15474  1AFB                     __ptext97:	
 15475 ;; *************** function _Button_State_Disabled *****************
 15476 ;; Defined at:
 15477 ;;		line 421 in file "mcc_generated_files/mtouch/mtouch_button.c"
 15478 ;; Parameters:    Size  Location     Type
 15479 ;;  button          2   15[BANK0 ] PTR struct .
 15480 ;;		 -> mtouch_button(85), 
 15481 ;; Auto vars:     Size  Location     Type
 15482 ;;		None
 15483 ;; Return value:  Size  Location     Type
 15484 ;;                  1    wreg      void 
 15485 ;; Registers used:
 15486 ;;		None
 15487 ;; Tracked objects:
 15488 ;;		On entry : 1F/0
 15489 ;;		On exit  : 1F/0
 15490 ;;		Unchanged: 1F/0
 15491 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15492 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15493 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15494 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15495 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15496 ;;Total ram usage:        2 bytes
 15497 ;; Hardware stack levels used: 1
 15498 ;; Hardware stack levels required when called: 4
 15499 ;; This function calls:
 15500 ;;		Nothing
 15501 ;; This function is called by:
 15502 ;;		_Button_Service
 15503 ;; This function uses a non-reentrant model
 15504 ;;
 15505                           
 15506                           
 15507                           ;psect for function _Button_State_Disabled
 15508  1AFB                     _Button_State_Disabled:
 15509                           
 15510                           ;incstack = 0
 15511                           ; Regs used in _Button_State_Disabled: []
 15512  1AFB  0008               	return
 15513  1AFC                     __end_of_Button_State_Disabled:
 15514                           
 15515                           	psect	text98
 15516  0A54                     __ptext98:	
 15517 ;; *************** function _Button_State_ReleaseDebounce *****************
 15518 ;; Defined at:
 15519 ;;		line 392 in file "mcc_generated_files/mtouch/mtouch_button.c"
 15520 ;; Parameters:    Size  Location     Type
 15521 ;;  button          2   15[BANK0 ] PTR struct .
 15522 ;;		 -> mtouch_button(85), 
 15523 ;; Auto vars:     Size  Location     Type
 15524 ;;		None
 15525 ;; Return value:  Size  Location     Type
 15526 ;;                  1    wreg      void 
 15527 ;; Registers used:
 15528 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15529 ;; Tracked objects:
 15530 ;;		On entry : 1F/0
 15531 ;;		On exit  : 1F/0
 15532 ;;		Unchanged: 0/0
 15533 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15534 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15535 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15536 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15537 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15538 ;;Total ram usage:        4 bytes
 15539 ;; Hardware stack levels used: 1
 15540 ;; Hardware stack levels required when called: 5
 15541 ;; This function calls:
 15542 ;;		_Button_DefaultCallback
 15543 ;;		_Button_Reburst_Request
 15544 ;; This function is called by:
 15545 ;;		_Button_Service
 15546 ;; This function uses a non-reentrant model
 15547 ;;
 15548                           
 15549                           
 15550                           ;psect for function _Button_State_ReleaseDebounce
 15551  0A54                     _Button_State_ReleaseDebounce:
 15552                           
 15553                           ;mcc_generated_files/mtouch/mtouch_button.c: 392: static void Button_State_ReleaseDeboun
      +                          ce(mtouch_button_t* button);mcc_generated_files/mtouch/mtouch_button.c: 393: {;mcc_gener
      +                          ated_files/mtouch/mtouch_button.c: 394:     if ((button->deviation) < (mtouch_button_dev
      +                          iation_t)((button->threshold)-((button->threshold) >> HYST_50_PERCENT)))
 15554                           
 15555                           ;incstack = 0
 15556                           ; Regs used in _Button_State_ReleaseDebounce: [wreg-fsr1h+status,2+status,0+pclath+cstac
      +                          k]
 15557  0A54  082F               	movf	Button_State_ReleaseDebounce@button,w
 15558  0A55  0086               	movwf	6
 15559  0A56  0830               	movf	Button_State_ReleaseDebounce@button+1,w
 15560  0A57  0087               	movwf	7
 15561  0A58  314A               	addfsr 1,10
 15562  0A59  0801               	movf	1,w
 15563  0A5A  3A80               	xorlw	128
 15564  0A5B  00B1               	movwf	??_Button_State_ReleaseDebounce
 15565  0A5C  082F               	movf	Button_State_ReleaseDebounce@button,w
 15566  0A5D  0086               	movwf	6
 15567  0A5E  0830               	movf	Button_State_ReleaseDebounce@button+1,w
 15568  0A5F  0087               	movwf	7
 15569  0A60  314F               	addfsr 1,15
 15570  0A61  082F               	movf	Button_State_ReleaseDebounce@button,w
 15571  0A62  0084               	movwf	4
 15572  0A63  0830               	movf	Button_State_ReleaseDebounce@button+1,w
 15573  0A64  0085               	movwf	5
 15574  0A65  310F               	addfsr 0,15
 15575  0A66  3600               	lsrf	0,w
 15576  0A67  0201               	subwf	1,w
 15577  0A68  3A80               	xorlw	128
 15578  0A69  02B1               	subwf	??_Button_State_ReleaseDebounce,f
 15579  0A6A  1803               	skipnc
 15580  0A6B  2AB5               	goto	l6898
 15581                           
 15582                           ;mcc_generated_files/mtouch/mtouch_button.c: 395:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 396:         (button->counter)++;
 15583  0A6C  082F               	movf	Button_State_ReleaseDebounce@button,w
 15584  0A6D  0086               	movwf	6
 15585  0A6E  0830               	movf	Button_State_ReleaseDebounce@button+1,w
 15586  0A6F  0087               	movwf	7
 15587  0A70  314B               	addfsr 1,11
 15588  0A71  3001               	movlw	1
 15589  0A72  0781               	addwf	1,f
 15590  0A73  3141               	addfsr 1,1
 15591  0A74  1803               	skipnc
 15592  0A75  0A81               	incf	1,f
 15593                           
 15594                           ;mcc_generated_files/mtouch/mtouch_button.c: 397:         if ((button->counter) >= (4u))
 15595  0A76  082F               	movf	Button_State_ReleaseDebounce@button,w
 15596  0A77  0086               	movwf	6
 15597  0A78  0830               	movf	Button_State_ReleaseDebounce@button+1,w
 15598  0A79  0087               	movwf	7
 15599  0A7A  314B               	addfsr 1,11
 15600  0A7B  3F40               	moviw [0]fsr1
 15601  0A7C  00B1               	movwf	??_Button_State_ReleaseDebounce
 15602  0A7D  3F41               	moviw [1]fsr1
 15603  0A7E  00B2               	movwf	??_Button_State_ReleaseDebounce+1
 15604  0A7F  3000               	movlw	0
 15605  0A80  0232               	subwf	??_Button_State_ReleaseDebounce+1,w
 15606  0A81  3004               	movlw	4
 15607  0A82  1903               	skipnz
 15608  0A83  0231               	subwf	??_Button_State_ReleaseDebounce,w
 15609  0A84  1C03               	skipc
 15610  0A85  2AAE               	goto	l6896
 15611                           
 15612                           ;mcc_generated_files/mtouch/mtouch_button.c: 398:         {;mcc_generated_files/mtouch/m
      +                          touch_button.c: 399:             button->state = MTOUCH_BUTTON_STATE_notPressed;
 15613  0A86  082F               	movf	Button_State_ReleaseDebounce@button,w
 15614  0A87  3E02               	addlw	2
 15615  0A88  00B1               	movwf	??_Button_State_ReleaseDebounce
 15616  0A89  3000               	movlw	0
 15617  0A8A  3D30               	addwfc	Button_State_ReleaseDebounce@button+1,w
 15618  0A8B  00B2               	movwf	??_Button_State_ReleaseDebounce+1
 15619  0A8C  0831               	movf	??_Button_State_ReleaseDebounce,w
 15620  0A8D  0086               	movwf	6
 15621  0A8E  0832               	movf	??_Button_State_ReleaseDebounce+1,w
 15622  0A8F  0087               	movwf	7
 15623  0A90  3001               	movlw	1
 15624  0A91  0081               	movwf	1
 15625                           
 15626                           ;mcc_generated_files/mtouch/mtouch_button.c: 400:             button->counter = 0;
 15627  0A92  082F               	movf	Button_State_ReleaseDebounce@button,w
 15628  0A93  0086               	movwf	6
 15629  0A94  0830               	movf	Button_State_ReleaseDebounce@button+1,w
 15630  0A95  0087               	movwf	7
 15631  0A96  314B               	addfsr 1,11
 15632  0A97  3000               	movlw	0
 15633  0A98  3FC0               	movwi [0]fsr1
 15634  0A99  3FC1               	movwi [1]fsr1
 15635                           
 15636                           ;mcc_generated_files/mtouch/mtouch_button.c: 401:             button->baseline_count = (
      +                          mtouch_button_baselinecounter_t)((0xffff))-((mtouch_button_baselinecounter_t)1024u);
 15637  0A9A  082F               	movf	Button_State_ReleaseDebounce@button,w
 15638  0A9B  0086               	movwf	6
 15639  0A9C  0830               	movf	Button_State_ReleaseDebounce@button+1,w
 15640  0A9D  0087               	movwf	7
 15641  0A9E  314D               	addfsr 1,13
 15642  0A9F  30FF               	movlw	255
 15643  0AA0  3FC0               	movwi [0]fsr1
 15644  0AA1  30FB               	movlw	251
 15645  0AA2  3FC1               	movwi [1]fsr1
 15646                           
 15647                           ;mcc_generated_files/mtouch/mtouch_button.c: 402:             callback_notPressed(button
      +                          ->name);
 15648  0AA3  082F               	movf	Button_State_ReleaseDebounce@button,w
 15649  0AA4  0086               	movwf	6
 15650  0AA5  0830               	movf	Button_State_ReleaseDebounce@button+1,w
 15651  0AA6  0087               	movwf	7
 15652  0AA7  0801               	movf	1,w
 15653  0AA8  00B1               	movwf	??_Button_State_ReleaseDebounce
 15654  0AA9  0831               	movf	??_Button_State_ReleaseDebounce,w
 15655  0AAA  00F2               	movwf	Button_DefaultCallback@button
 15656  0AAB  319A  22FA  318A   	fcall	_Button_DefaultCallback
 15657  0AAE                     l6896:
 15658                           
 15659                           ;mcc_generated_files/mtouch/mtouch_button.c: 404:         Button_Reburst_Request(button)
      +                          ;
 15660  0AAE  0830               	movf	Button_State_ReleaseDebounce@button+1,w
 15661  0AAF  00F9               	movwf	Button_Reburst_Request@button+1
 15662  0AB0  082F               	movf	Button_State_ReleaseDebounce@button,w
 15663  0AB1  00F8               	movwf	Button_Reburst_Request@button
 15664  0AB2  319B  2302         	fcall	_Button_Reburst_Request
 15665                           
 15666                           ;mcc_generated_files/mtouch/mtouch_button.c: 405:     }
 15667  0AB4  0008               	return
 15668  0AB5                     l6898:
 15669                           
 15670                           ;mcc_generated_files/mtouch/mtouch_button.c: 407:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 408:         button->state = MTOUCH_BUTTON_STATE_pressed;
 15671  0AB5  082F               	movf	Button_State_ReleaseDebounce@button,w
 15672  0AB6  3E02               	addlw	2
 15673  0AB7  00B1               	movwf	??_Button_State_ReleaseDebounce
 15674  0AB8  3000               	movlw	0
 15675  0AB9  3D30               	addwfc	Button_State_ReleaseDebounce@button+1,w
 15676  0ABA  00B2               	movwf	??_Button_State_ReleaseDebounce+1
 15677  0ABB  0831               	movf	??_Button_State_ReleaseDebounce,w
 15678  0ABC  0086               	movwf	6
 15679  0ABD  0832               	movf	??_Button_State_ReleaseDebounce+1,w
 15680  0ABE  0087               	movwf	7
 15681  0ABF  3003               	movlw	3
 15682  0AC0  0081               	movwf	1
 15683                           
 15684                           ;mcc_generated_files/mtouch/mtouch_button.c: 409:         button->counter = (mtouch_butt
      +                          on_statecounter_t)0;
 15685  0AC1  082F               	movf	Button_State_ReleaseDebounce@button,w
 15686  0AC2  0086               	movwf	6
 15687  0AC3  0830               	movf	Button_State_ReleaseDebounce@button+1,w
 15688  0AC4  0087               	movwf	7
 15689  0AC5  314B               	addfsr 1,11
 15690  0AC6  3000               	movlw	0
 15691  0AC7  3FC0               	movwi [0]fsr1
 15692  0AC8  3FC1               	movwi [1]fsr1
 15693  0AC9  0008               	return
 15694  0ACA                     __end_of_Button_State_ReleaseDebounce:
 15695                           
 15696                           	psect	text99
 15697  15C6                     __ptext99:	
 15698 ;; *************** function _Button_State_Pressed *****************
 15699 ;; Defined at:
 15700 ;;		line 343 in file "mcc_generated_files/mtouch/mtouch_button.c"
 15701 ;; Parameters:    Size  Location     Type
 15702 ;;  button          2   15[BANK0 ] PTR struct .
 15703 ;;		 -> mtouch_button(85), 
 15704 ;; Auto vars:     Size  Location     Type
 15705 ;;		None
 15706 ;; Return value:  Size  Location     Type
 15707 ;;                  1    wreg      void 
 15708 ;; Registers used:
 15709 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15710 ;; Tracked objects:
 15711 ;;		On entry : 1F/0
 15712 ;;		On exit  : 1F/0
 15713 ;;		Unchanged: 0/0
 15714 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15715 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15716 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15717 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15718 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15719 ;;Total ram usage:        4 bytes
 15720 ;; Hardware stack levels used: 1
 15721 ;; Hardware stack levels required when called: 6
 15722 ;; This function calls:
 15723 ;;		_Button_DefaultCallback
 15724 ;;		_Button_Reburst_Request
 15725 ;;		_MTOUCH_Button_Initialize
 15726 ;; This function is called by:
 15727 ;;		_Button_Service
 15728 ;; This function uses a non-reentrant model
 15729 ;;
 15730                           
 15731                           
 15732                           ;psect for function _Button_State_Pressed
 15733  15C6                     _Button_State_Pressed:
 15734                           
 15735                           ;mcc_generated_files/mtouch/mtouch_button.c: 343: static void Button_State_Pressed(mtouc
      +                          h_button_t* button);mcc_generated_files/mtouch/mtouch_button.c: 344: {;mcc_generated_fil
      +                          es/mtouch/mtouch_button.c: 346:     if ((button->counter) >= ((mtouch_button_statecounte
      +                          r_t)500u))
 15736                           
 15737                           ;incstack = 0
 15738                           ; Regs used in _Button_State_Pressed: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15739  15C6  082F               	movf	Button_State_Pressed@button,w
 15740  15C7  0086               	movwf	6
 15741  15C8  0830               	movf	Button_State_Pressed@button+1,w
 15742  15C9  0087               	movwf	7
 15743  15CA  314B               	addfsr 1,11
 15744  15CB  3F40               	moviw [0]fsr1
 15745  15CC  00B1               	movwf	??_Button_State_Pressed
 15746  15CD  3F41               	moviw [1]fsr1
 15747  15CE  00B2               	movwf	??_Button_State_Pressed+1
 15748  15CF  3001               	movlw	1
 15749  15D0  0232               	subwf	??_Button_State_Pressed+1,w
 15750  15D1  30F4               	movlw	244
 15751  15D2  1903               	skipnz
 15752  15D3  0231               	subwf	??_Button_State_Pressed,w
 15753  15D4  1C03               	skipc
 15754  15D5  2DE9               	goto	l6846
 15755                           
 15756                           ;mcc_generated_files/mtouch/mtouch_button.c: 347:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 348:         MTOUCH_Button_Initialize(button->name);
 15757  15D6  082F               	movf	Button_State_Pressed@button,w
 15758  15D7  0086               	movwf	6
 15759  15D8  0830               	movf	Button_State_Pressed@button+1,w
 15760  15D9  0087               	movwf	7
 15761  15DA  0801               	movf	1,w
 15762  15DB  3193  2356  3195   	fcall	_MTOUCH_Button_Initialize
 15763                           
 15764                           ;mcc_generated_files/mtouch/mtouch_button.c: 349:         callback_notPressed(button->na
      +                          me);
 15765  15DE  082F               	movf	Button_State_Pressed@button,w
 15766  15DF  0086               	movwf	6
 15767  15E0  0830               	movf	Button_State_Pressed@button+1,w
 15768  15E1  0087               	movwf	7
 15769  15E2  0801               	movf	1,w
 15770  15E3  00B1               	movwf	??_Button_State_Pressed
 15771  15E4  0831               	movf	??_Button_State_Pressed,w
 15772  15E5  00F2               	movwf	Button_DefaultCallback@button
 15773  15E6  319A  22FA         	fcall	_Button_DefaultCallback
 15774                           
 15775                           ;mcc_generated_files/mtouch/mtouch_button.c: 350:     }
 15776  15E8  0008               	return
 15777  15E9                     l6846:
 15778  15E9  082F               	movf	Button_State_Pressed@button,w
 15779  15EA  0086               	movwf	6
 15780  15EB  0830               	movf	Button_State_Pressed@button+1,w
 15781  15EC  0087               	movwf	7
 15782  15ED  314A               	addfsr 1,10
 15783  15EE  0801               	movf	1,w
 15784  15EF  3A80               	xorlw	128
 15785  15F0  00B1               	movwf	??_Button_State_Pressed
 15786  15F1  082F               	movf	Button_State_Pressed@button,w
 15787  15F2  0086               	movwf	6
 15788  15F3  0830               	movf	Button_State_Pressed@button+1,w
 15789  15F4  0087               	movwf	7
 15790  15F5  314F               	addfsr 1,15
 15791  15F6  082F               	movf	Button_State_Pressed@button,w
 15792  15F7  0084               	movwf	4
 15793  15F8  0830               	movf	Button_State_Pressed@button+1,w
 15794  15F9  0085               	movwf	5
 15795  15FA  310F               	addfsr 0,15
 15796  15FB  3600               	lsrf	0,w
 15797  15FC  0201               	subwf	1,w
 15798  15FD  3A80               	xorlw	128
 15799  15FE  02B1               	subwf	??_Button_State_Pressed,f
 15800  15FF  1803               	skipnc
 15801  1600  0008               	return
 15802                           
 15803                           ;mcc_generated_files/mtouch/mtouch_button.c: 354:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 355:         button->state = MTOUCH_BUTTON_STATE_releaseDebounce;
 15804  1601  082F               	movf	Button_State_Pressed@button,w
 15805  1602  3E02               	addlw	2
 15806  1603  00B1               	movwf	??_Button_State_Pressed
 15807  1604  3000               	movlw	0
 15808  1605  3D30               	addwfc	Button_State_Pressed@button+1,w
 15809  1606  00B2               	movwf	??_Button_State_Pressed+1
 15810  1607  0831               	movf	??_Button_State_Pressed,w
 15811  1608  0086               	movwf	6
 15812  1609  0832               	movf	??_Button_State_Pressed+1,w
 15813  160A  0087               	movwf	7
 15814  160B  3004               	movlw	4
 15815  160C  0081               	movwf	1
 15816                           
 15817                           ;mcc_generated_files/mtouch/mtouch_button.c: 356:         button->counter = (mtouch_butt
      +                          on_statecounter_t)0;
 15818  160D  082F               	movf	Button_State_Pressed@button,w
 15819  160E  0086               	movwf	6
 15820  160F  0830               	movf	Button_State_Pressed@button+1,w
 15821  1610  0087               	movwf	7
 15822  1611  314B               	addfsr 1,11
 15823  1612  3000               	movlw	0
 15824  1613  3FC0               	movwi [0]fsr1
 15825  1614  3FC1               	movwi [1]fsr1
 15826                           
 15827                           ;mcc_generated_files/mtouch/mtouch_button.c: 357:         Button_Reburst_Request(button)
      +                          ;
 15828  1615  0830               	movf	Button_State_Pressed@button+1,w
 15829  1616  00F9               	movwf	Button_Reburst_Request@button+1
 15830  1617  082F               	movf	Button_State_Pressed@button,w
 15831  1618  00F8               	movwf	Button_Reburst_Request@button
 15832  1619  319B  2302         	fcall	_Button_Reburst_Request
 15833  161B  0008               	return
 15834  161C                     __end_of_Button_State_Pressed:
 15835                           
 15836                           	psect	text100
 15837  0CF3                     __ptext100:	
 15838 ;; *************** function _Button_State_PressDebounce *****************
 15839 ;; Defined at:
 15840 ;;		line 361 in file "mcc_generated_files/mtouch/mtouch_button.c"
 15841 ;; Parameters:    Size  Location     Type
 15842 ;;  button          2   15[BANK0 ] PTR struct .
 15843 ;;		 -> mtouch_button(85), 
 15844 ;; Auto vars:     Size  Location     Type
 15845 ;;		None
 15846 ;; Return value:  Size  Location     Type
 15847 ;;                  1    wreg      void 
 15848 ;; Registers used:
 15849 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15850 ;; Tracked objects:
 15851 ;;		On entry : 1F/0
 15852 ;;		On exit  : 1F/0
 15853 ;;		Unchanged: 0/0
 15854 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15855 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15856 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15857 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15858 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15859 ;;Total ram usage:        4 bytes
 15860 ;; Hardware stack levels used: 1
 15861 ;; Hardware stack levels required when called: 7
 15862 ;; This function calls:
 15863 ;;		_Button_Check_AKS_Block
 15864 ;;		_Button_DefaultCallback
 15865 ;;		_Button_Reburst_Request
 15866 ;; This function is called by:
 15867 ;;		_Button_Service
 15868 ;; This function uses a non-reentrant model
 15869 ;;
 15870                           
 15871                           
 15872                           ;psect for function _Button_State_PressDebounce
 15873  0CF3                     _Button_State_PressDebounce:
 15874                           
 15875                           ;mcc_generated_files/mtouch/mtouch_button.c: 361: static void Button_State_PressDebounce
      +                           (mtouch_button_t* button);mcc_generated_files/mtouch/mtouch_button.c: 362: {;mcc_genera
      +                          ted_files/mtouch/mtouch_button.c: 363:     if(button->aks_group != No_AKS_Group)
 15876                           
 15877                           ;incstack = 0
 15878                           ; Regs used in _Button_State_PressDebounce: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15879  0CF3  082F               	movf	Button_State_PressDebounce@button,w
 15880  0CF4  0086               	movwf	6
 15881  0CF5  0830               	movf	Button_State_PressDebounce@button+1,w
 15882  0CF6  0087               	movwf	7
 15883  0CF7  3143               	addfsr 1,3
 15884  0CF8  0801               	movf	1,w
 15885  0CF9  1903               	btfsc	3,2
 15886  0CFA  2D1B               	goto	l6864
 15887                           
 15888                           ;mcc_generated_files/mtouch/mtouch_button.c: 364:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 365:         if(Button_Check_AKS_Block(button))
 15889  0CFB  0830               	movf	Button_State_PressDebounce@button+1,w
 15890  0CFC  00A5               	movwf	Button_Check_AKS_Block@button+1
 15891  0CFD  082F               	movf	Button_State_PressDebounce@button,w
 15892  0CFE  00A4               	movwf	Button_Check_AKS_Block@button
 15893  0CFF  318D  258B  318C   	fcall	_Button_Check_AKS_Block
 15894  0D02  3A00               	xorlw	0
 15895  0D03  1903               	skipnz
 15896  0D04  2D1B               	goto	l6864
 15897                           
 15898                           ;mcc_generated_files/mtouch/mtouch_button.c: 366:         {;mcc_generated_files/mtouch/m
      +                          touch_button.c: 367:             button->state = MTOUCH_BUTTON_STATE_notPressed;
 15899  0D05  0020               	movlb	0	; select bank0
 15900  0D06  082F               	movf	Button_State_PressDebounce@button,w
 15901  0D07  3E02               	addlw	2
 15902  0D08  00B1               	movwf	??_Button_State_PressDebounce
 15903  0D09  3000               	movlw	0
 15904  0D0A  3D30               	addwfc	Button_State_PressDebounce@button+1,w
 15905  0D0B  00B2               	movwf	??_Button_State_PressDebounce+1
 15906  0D0C  0831               	movf	??_Button_State_PressDebounce,w
 15907  0D0D  0086               	movwf	6
 15908  0D0E  0832               	movf	??_Button_State_PressDebounce+1,w
 15909  0D0F  0087               	movwf	7
 15910  0D10  3001               	movlw	1
 15911  0D11  0081               	movwf	1
 15912                           
 15913                           ;mcc_generated_files/mtouch/mtouch_button.c: 368:             button->counter = (mtouch_
      +                          button_statecounter_t)0;
 15914  0D12  082F               	movf	Button_State_PressDebounce@button,w
 15915  0D13  0086               	movwf	6
 15916  0D14  0830               	movf	Button_State_PressDebounce@button+1,w
 15917  0D15  0087               	movwf	7
 15918  0D16  314B               	addfsr 1,11
 15919  0D17  3000               	movlw	0
 15920  0D18  3FC0               	movwi [0]fsr1
 15921  0D19  3FC1               	movwi [1]fsr1
 15922  0D1A  0008               	return
 15923  0D1B                     l6864:
 15924                           
 15925                           ;mcc_generated_files/mtouch/mtouch_button.c: 374:     if((button->deviation) > (button->
      +                          threshold))
 15926  0D1B  0020               	movlb	0	; select bank0
 15927  0D1C  082F               	movf	Button_State_PressDebounce@button,w
 15928  0D1D  0086               	movwf	6
 15929  0D1E  0830               	movf	Button_State_PressDebounce@button+1,w
 15930  0D1F  0087               	movwf	7
 15931  0D20  314A               	addfsr 1,10
 15932  0D21  0801               	movf	1,w
 15933  0D22  00B1               	movwf	??_Button_State_PressDebounce
 15934  0D23  01B2               	clrf	??_Button_State_PressDebounce+1
 15935  0D24  1BB1               	btfsc	??_Button_State_PressDebounce,7
 15936  0D25  03B2               	decf	??_Button_State_PressDebounce+1,f
 15937  0D26  082F               	movf	Button_State_PressDebounce@button,w
 15938  0D27  0086               	movwf	6
 15939  0D28  0830               	movf	Button_State_PressDebounce@button+1,w
 15940  0D29  0087               	movwf	7
 15941  0D2A  314F               	addfsr 1,15
 15942  0D2B  0832               	movf	??_Button_State_PressDebounce+1,w
 15943  0D2C  3A80               	xorlw	128
 15944  0D2D  3C80               	sublw	128
 15945  0D2E  1D03               	skipz
 15946  0D2F  2D32               	goto	u7005
 15947  0D30  0831               	movf	??_Button_State_PressDebounce,w
 15948  0D31  0201               	subwf	1,w
 15949  0D32                     u7005:
 15950  0D32  1803               	skipnc
 15951  0D33  2D75               	goto	l6878
 15952                           
 15953                           ;mcc_generated_files/mtouch/mtouch_button.c: 375:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 376:         (button->counter)++;
 15954  0D34  0020               	movlb	0	; select bank0
 15955  0D35  082F               	movf	Button_State_PressDebounce@button,w
 15956  0D36  0086               	movwf	6
 15957  0D37  0830               	movf	Button_State_PressDebounce@button+1,w
 15958  0D38  0087               	movwf	7
 15959  0D39  314B               	addfsr 1,11
 15960  0D3A  3001               	movlw	1
 15961  0D3B  0781               	addwf	1,f
 15962  0D3C  3141               	addfsr 1,1
 15963  0D3D  1803               	skipnc
 15964  0D3E  0A81               	incf	1,f
 15965                           
 15966                           ;mcc_generated_files/mtouch/mtouch_button.c: 377:         if ((button->counter) >= (4u))
 15967  0D3F  082F               	movf	Button_State_PressDebounce@button,w
 15968  0D40  0086               	movwf	6
 15969  0D41  0830               	movf	Button_State_PressDebounce@button+1,w
 15970  0D42  0087               	movwf	7
 15971  0D43  314B               	addfsr 1,11
 15972  0D44  3F40               	moviw [0]fsr1
 15973  0D45  00B1               	movwf	??_Button_State_PressDebounce
 15974  0D46  3F41               	moviw [1]fsr1
 15975  0D47  00B2               	movwf	??_Button_State_PressDebounce+1
 15976  0D48  3000               	movlw	0
 15977  0D49  0232               	subwf	??_Button_State_PressDebounce+1,w
 15978  0D4A  3004               	movlw	4
 15979  0D4B  1903               	skipnz
 15980  0D4C  0231               	subwf	??_Button_State_PressDebounce,w
 15981  0D4D  1C03               	skipc
 15982  0D4E  2D6E               	goto	l6876
 15983                           
 15984                           ;mcc_generated_files/mtouch/mtouch_button.c: 378:         {;mcc_generated_files/mtouch/m
      +                          touch_button.c: 379:             button->state = MTOUCH_BUTTON_STATE_pressed;
 15985  0D4F  082F               	movf	Button_State_PressDebounce@button,w
 15986  0D50  3E02               	addlw	2
 15987  0D51  00B1               	movwf	??_Button_State_PressDebounce
 15988  0D52  3000               	movlw	0
 15989  0D53  3D30               	addwfc	Button_State_PressDebounce@button+1,w
 15990  0D54  00B2               	movwf	??_Button_State_PressDebounce+1
 15991  0D55  0831               	movf	??_Button_State_PressDebounce,w
 15992  0D56  0086               	movwf	6
 15993  0D57  0832               	movf	??_Button_State_PressDebounce+1,w
 15994  0D58  0087               	movwf	7
 15995  0D59  3003               	movlw	3
 15996  0D5A  0081               	movwf	1
 15997                           
 15998                           ;mcc_generated_files/mtouch/mtouch_button.c: 380:             button->counter = (mtouch_
      +                          button_statecounter_t)0;
 15999  0D5B  082F               	movf	Button_State_PressDebounce@button,w
 16000  0D5C  0086               	movwf	6
 16001  0D5D  0830               	movf	Button_State_PressDebounce@button+1,w
 16002  0D5E  0087               	movwf	7
 16003  0D5F  314B               	addfsr 1,11
 16004  0D60  3000               	movlw	0
 16005  0D61  3FC0               	movwi [0]fsr1
 16006  0D62  3FC1               	movwi [1]fsr1
 16007                           
 16008                           ;mcc_generated_files/mtouch/mtouch_button.c: 381:             callback_pressed(button->n
      +                          ame);
 16009  0D63  082F               	movf	Button_State_PressDebounce@button,w
 16010  0D64  0086               	movwf	6
 16011  0D65  0830               	movf	Button_State_PressDebounce@button+1,w
 16012  0D66  0087               	movwf	7
 16013  0D67  0801               	movf	1,w
 16014  0D68  00B1               	movwf	??_Button_State_PressDebounce
 16015  0D69  0831               	movf	??_Button_State_PressDebounce,w
 16016  0D6A  00F2               	movwf	Button_DefaultCallback@button
 16017  0D6B  319A  22FA  318C   	fcall	_Button_DefaultCallback
 16018  0D6E                     l6876:
 16019                           
 16020                           ;mcc_generated_files/mtouch/mtouch_button.c: 383:         Button_Reburst_Request(button)
      +                          ;
 16021  0D6E  0830               	movf	Button_State_PressDebounce@button+1,w
 16022  0D6F  00F9               	movwf	Button_Reburst_Request@button+1
 16023  0D70  082F               	movf	Button_State_PressDebounce@button,w
 16024  0D71  00F8               	movwf	Button_Reburst_Request@button
 16025  0D72  319B  2302         	fcall	_Button_Reburst_Request
 16026                           
 16027                           ;mcc_generated_files/mtouch/mtouch_button.c: 384:     }
 16028  0D74  0008               	return
 16029  0D75                     l6878:
 16030                           
 16031                           ;mcc_generated_files/mtouch/mtouch_button.c: 386:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 387:         button->state = MTOUCH_BUTTON_STATE_notPressed;
 16032  0D75  0020               	movlb	0	; select bank0
 16033  0D76  082F               	movf	Button_State_PressDebounce@button,w
 16034  0D77  3E02               	addlw	2
 16035  0D78  00B1               	movwf	??_Button_State_PressDebounce
 16036  0D79  3000               	movlw	0
 16037  0D7A  3D30               	addwfc	Button_State_PressDebounce@button+1,w
 16038  0D7B  00B2               	movwf	??_Button_State_PressDebounce+1
 16039  0D7C  0831               	movf	??_Button_State_PressDebounce,w
 16040  0D7D  0086               	movwf	6
 16041  0D7E  0832               	movf	??_Button_State_PressDebounce+1,w
 16042  0D7F  0087               	movwf	7
 16043  0D80  3001               	movlw	1
 16044  0D81  0081               	movwf	1
 16045                           
 16046                           ;mcc_generated_files/mtouch/mtouch_button.c: 388:         button->counter = (mtouch_butt
      +                          on_statecounter_t)0;
 16047  0D82  082F               	movf	Button_State_PressDebounce@button,w
 16048  0D83  0086               	movwf	6
 16049  0D84  0830               	movf	Button_State_PressDebounce@button+1,w
 16050  0D85  0087               	movwf	7
 16051  0D86  314B               	addfsr 1,11
 16052  0D87  3000               	movlw	0
 16053  0D88  3FC0               	movwi [0]fsr1
 16054  0D89  3FC1               	movwi [1]fsr1
 16055  0D8A  0008               	return
 16056  0D8B                     __end_of_Button_State_PressDebounce:
 16057                           
 16058                           	psect	text101
 16059  0E2A                     __ptext101:	
 16060 ;; *************** function _Button_State_NotPressed *****************
 16061 ;; Defined at:
 16062 ;;		line 291 in file "mcc_generated_files/mtouch/mtouch_button.c"
 16063 ;; Parameters:    Size  Location     Type
 16064 ;;  button          2   15[BANK0 ] PTR struct .
 16065 ;;		 -> mtouch_button(85), 
 16066 ;; Auto vars:     Size  Location     Type
 16067 ;;		None
 16068 ;; Return value:  Size  Location     Type
 16069 ;;                  1    wreg      void 
 16070 ;; Registers used:
 16071 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16072 ;; Tracked objects:
 16073 ;;		On entry : 1F/0
 16074 ;;		On exit  : 0/0
 16075 ;;		Unchanged: 0/0
 16076 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16077 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16078 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16079 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16080 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16081 ;;Total ram usage:        4 bytes
 16082 ;; Hardware stack levels used: 1
 16083 ;; Hardware stack levels required when called: 7
 16084 ;; This function calls:
 16085 ;;		_Button_Baseline_Update
 16086 ;;		_Button_Check_AKS_Block
 16087 ;;		_Button_Reburst_Request
 16088 ;;		_MTOUCH_Button_Initialize
 16089 ;; This function is called by:
 16090 ;;		_Button_Service
 16091 ;; This function uses a non-reentrant model
 16092 ;;
 16093                           
 16094                           
 16095                           ;psect for function _Button_State_NotPressed
 16096  0E2A                     _Button_State_NotPressed:
 16097                           
 16098                           ;mcc_generated_files/mtouch/mtouch_button.c: 291: static void Button_State_NotPressed(mt
      +                          ouch_button_t* button);mcc_generated_files/mtouch/mtouch_button.c: 292: {;mcc_generated_
      +                          files/mtouch/mtouch_button.c: 294:     if ((button->deviation) < (mtouch_button_deviatio
      +                          n_t)(-button->threshold))
 16099                           
 16100                           ;incstack = 0
 16101                           ; Regs used in _Button_State_NotPressed: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 16102  0E2A  082F               	movf	Button_State_NotPressed@button,w
 16103  0E2B  0086               	movwf	6
 16104  0E2C  0830               	movf	Button_State_NotPressed@button+1,w
 16105  0E2D  0087               	movwf	7
 16106  0E2E  314A               	addfsr 1,10
 16107  0E2F  0801               	movf	1,w
 16108  0E30  3A80               	xorlw	128
 16109  0E31  00B1               	movwf	??_Button_State_NotPressed
 16110  0E32  082F               	movf	Button_State_NotPressed@button,w
 16111  0E33  0086               	movwf	6
 16112  0E34  0830               	movf	Button_State_NotPressed@button+1,w
 16113  0E35  0087               	movwf	7
 16114  0E36  314F               	addfsr 1,15
 16115  0E37  0301               	decf	1,w
 16116  0E38  3AFF               	xorlw	255
 16117  0E39  3A80               	xorlw	128
 16118  0E3A  02B1               	subwf	??_Button_State_NotPressed,f
 16119  0E3B  1803               	skipnc
 16120  0E3C  2E6F               	goto	l6812
 16121                           
 16122                           ;mcc_generated_files/mtouch/mtouch_button.c: 295:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 296:         (button->counter)++;
 16123  0E3D  082F               	movf	Button_State_NotPressed@button,w
 16124  0E3E  0086               	movwf	6
 16125  0E3F  0830               	movf	Button_State_NotPressed@button+1,w
 16126  0E40  0087               	movwf	7
 16127  0E41  314B               	addfsr 1,11
 16128  0E42  3001               	movlw	1
 16129  0E43  0781               	addwf	1,f
 16130  0E44  3141               	addfsr 1,1
 16131  0E45  1803               	skipnc
 16132  0E46  0A81               	incf	1,f
 16133                           
 16134                           ;mcc_generated_files/mtouch/mtouch_button.c: 297:         if ((button->counter) > (mtouc
      +                          h_button_statecounter_t)((mtouch_button_statecounter_t)8u))
 16135  0E47  082F               	movf	Button_State_NotPressed@button,w
 16136  0E48  0086               	movwf	6
 16137  0E49  0830               	movf	Button_State_NotPressed@button+1,w
 16138  0E4A  0087               	movwf	7
 16139  0E4B  314B               	addfsr 1,11
 16140  0E4C  3F40               	moviw [0]fsr1
 16141  0E4D  00B1               	movwf	??_Button_State_NotPressed
 16142  0E4E  3F41               	moviw [1]fsr1
 16143  0E4F  00B2               	movwf	??_Button_State_NotPressed+1
 16144  0E50  3000               	movlw	0
 16145  0E51  0232               	subwf	??_Button_State_NotPressed+1,w
 16146  0E52  3009               	movlw	9
 16147  0E53  1903               	skipnz
 16148  0E54  0231               	subwf	??_Button_State_NotPressed,w
 16149  0E55  1C03               	skipc
 16150  0E56  2EB9               	goto	l6828
 16151                           
 16152                           ;mcc_generated_files/mtouch/mtouch_button.c: 298:         {;mcc_generated_files/mtouch/m
      +                          touch_button.c: 299:             button->counter = (mtouch_button_statecounter_t)0;
 16153  0E57  082F               	movf	Button_State_NotPressed@button,w
 16154  0E58  0086               	movwf	6
 16155  0E59  0830               	movf	Button_State_NotPressed@button+1,w
 16156  0E5A  0087               	movwf	7
 16157  0E5B  314B               	addfsr 1,11
 16158  0E5C  3000               	movlw	0
 16159  0E5D  3FC0               	movwi [0]fsr1
 16160  0E5E  3FC1               	movwi [1]fsr1
 16161                           
 16162                           ;mcc_generated_files/mtouch/mtouch_button.c: 300:             MTOUCH_Button_Initialize(b
      +                          utton->name);
 16163  0E5F  082F               	movf	Button_State_NotPressed@button,w
 16164  0E60  0086               	movwf	6
 16165  0E61  0830               	movf	Button_State_NotPressed@button+1,w
 16166  0E62  0087               	movwf	7
 16167  0E63  0801               	movf	1,w
 16168  0E64  3193  2356  318E   	fcall	_MTOUCH_Button_Initialize
 16169  0E67                     l6810:
 16170                           
 16171                           ;mcc_generated_files/mtouch/mtouch_button.c: 301:             Button_Reburst_Request(but
      +                          ton);
 16172  0E67  0830               	movf	Button_State_NotPressed@button+1,w
 16173  0E68  00F9               	movwf	Button_Reburst_Request@button+1
 16174  0E69  082F               	movf	Button_State_NotPressed@button,w
 16175  0E6A  00F8               	movwf	Button_Reburst_Request@button
 16176  0E6B  319B  2302  318E   	fcall	_Button_Reburst_Request
 16177  0E6E  2EB9               	goto	l6828
 16178  0E6F                     l6812:
 16179  0E6F  082F               	movf	Button_State_NotPressed@button,w
 16180  0E70  0086               	movwf	6
 16181  0E71  0830               	movf	Button_State_NotPressed@button+1,w
 16182  0E72  0087               	movwf	7
 16183  0E73  314A               	addfsr 1,10
 16184  0E74  0801               	movf	1,w
 16185  0E75  00B1               	movwf	??_Button_State_NotPressed
 16186  0E76  01B2               	clrf	??_Button_State_NotPressed+1
 16187  0E77  1BB1               	btfsc	??_Button_State_NotPressed,7
 16188  0E78  03B2               	decf	??_Button_State_NotPressed+1,f
 16189  0E79  082F               	movf	Button_State_NotPressed@button,w
 16190  0E7A  0086               	movwf	6
 16191  0E7B  0830               	movf	Button_State_NotPressed@button+1,w
 16192  0E7C  0087               	movwf	7
 16193  0E7D  314F               	addfsr 1,15
 16194  0E7E  0832               	movf	??_Button_State_NotPressed+1,w
 16195  0E7F  3A80               	xorlw	128
 16196  0E80  3C80               	sublw	128
 16197  0E81  1D03               	skipz
 16198  0E82  2E85               	goto	u6905
 16199  0E83  0831               	movf	??_Button_State_NotPressed,w
 16200  0E84  0201               	subwf	1,w
 16201  0E85                     u6905:
 16202  0E85  1803               	skipnc
 16203  0E86  2EB0               	goto	l6826
 16204                           
 16205                           ;mcc_generated_files/mtouch/mtouch_button.c: 306:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 307:         if(button->aks_group != No_AKS_Group)
 16206  0E87  0020               	movlb	0	; select bank0
 16207  0E88  082F               	movf	Button_State_NotPressed@button,w
 16208  0E89  0086               	movwf	6
 16209  0E8A  0830               	movf	Button_State_NotPressed@button+1,w
 16210  0E8B  0087               	movwf	7
 16211  0E8C  3143               	addfsr 1,3
 16212  0E8D  0801               	movf	1,w
 16213  0E8E  1903               	btfsc	3,2
 16214  0E8F  2E9A               	goto	l6820
 16215                           
 16216                           ;mcc_generated_files/mtouch/mtouch_button.c: 308:         {;mcc_generated_files/mtouch/m
      +                          touch_button.c: 309:             if(Button_Check_AKS_Block(button))
 16217  0E90  0830               	movf	Button_State_NotPressed@button+1,w
 16218  0E91  00A5               	movwf	Button_Check_AKS_Block@button+1
 16219  0E92  082F               	movf	Button_State_NotPressed@button,w
 16220  0E93  00A4               	movwf	Button_Check_AKS_Block@button
 16221  0E94  318D  258B  318E   	fcall	_Button_Check_AKS_Block
 16222  0E97  3A00               	xorlw	0
 16223  0E98  1D03               	btfss	3,2
 16224  0E99  0008               	return
 16225  0E9A                     l6820:
 16226                           
 16227                           ;mcc_generated_files/mtouch/mtouch_button.c: 313:         button->state = MTOUCH_BUTTON_
      +                          STATE_pressDebounce;
 16228  0E9A  0020               	movlb	0	; select bank0
 16229  0E9B  082F               	movf	Button_State_NotPressed@button,w
 16230  0E9C  3E02               	addlw	2
 16231  0E9D  00B1               	movwf	??_Button_State_NotPressed
 16232  0E9E  3000               	movlw	0
 16233  0E9F  3D30               	addwfc	Button_State_NotPressed@button+1,w
 16234  0EA0  00B2               	movwf	??_Button_State_NotPressed+1
 16235  0EA1  0831               	movf	??_Button_State_NotPressed,w
 16236  0EA2  0086               	movwf	6
 16237  0EA3  0832               	movf	??_Button_State_NotPressed+1,w
 16238  0EA4  0087               	movwf	7
 16239  0EA5  3002               	movlw	2
 16240  0EA6  0081               	movwf	1
 16241                           
 16242                           ;mcc_generated_files/mtouch/mtouch_button.c: 314:         button->counter = (mtouch_butt
      +                          on_statecounter_t)0;
 16243  0EA7  082F               	movf	Button_State_NotPressed@button,w
 16244  0EA8  0086               	movwf	6
 16245  0EA9  0830               	movf	Button_State_NotPressed@button+1,w
 16246  0EAA  0087               	movwf	7
 16247  0EAB  314B               	addfsr 1,11
 16248  0EAC  3000               	movlw	0
 16249  0EAD  3FC0               	movwi [0]fsr1
 16250  0EAE  3FC1               	movwi [1]fsr1
 16251  0EAF  2E67               	goto	l6810
 16252  0EB0                     l6826:
 16253                           
 16254                           ;mcc_generated_files/mtouch/mtouch_button.c: 318:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 320:         button->counter = (mtouch_button_statecounter_t)0;
 16255  0EB0  0020               	movlb	0	; select bank0
 16256  0EB1  082F               	movf	Button_State_NotPressed@button,w
 16257  0EB2  0086               	movwf	6
 16258  0EB3  0830               	movf	Button_State_NotPressed@button+1,w
 16259  0EB4  0087               	movwf	7
 16260  0EB5  314B               	addfsr 1,11
 16261  0EB6  3000               	movlw	0
 16262  0EB7  3FC0               	movwi [0]fsr1
 16263  0EB8  3FC1               	movwi [1]fsr1
 16264  0EB9                     l6828:
 16265                           
 16266                           ;mcc_generated_files/mtouch/mtouch_button.c: 325:     if(button->aks_group != No_AKS_Gro
      +                          up)
 16267  0EB9  082F               	movf	Button_State_NotPressed@button,w
 16268  0EBA  0086               	movwf	6
 16269  0EBB  0830               	movf	Button_State_NotPressed@button+1,w
 16270  0EBC  0087               	movwf	7
 16271  0EBD  3143               	addfsr 1,3
 16272  0EBE  0801               	movf	1,w
 16273  0EBF  1903               	btfsc	3,2
 16274  0EC0  2ED6               	goto	l6836
 16275                           
 16276                           ;mcc_generated_files/mtouch/mtouch_button.c: 326:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 327:         if(Button_Check_AKS_Block(button))
 16277  0EC1  0830               	movf	Button_State_NotPressed@button+1,w
 16278  0EC2  00A5               	movwf	Button_Check_AKS_Block@button+1
 16279  0EC3  082F               	movf	Button_State_NotPressed@button,w
 16280  0EC4  00A4               	movwf	Button_Check_AKS_Block@button
 16281  0EC5  318D  258B  318E   	fcall	_Button_Check_AKS_Block
 16282  0EC8  3A00               	xorlw	0
 16283  0EC9  1903               	skipnz
 16284  0ECA  2ED6               	goto	l6836
 16285                           
 16286                           ;mcc_generated_files/mtouch/mtouch_button.c: 328:         {;mcc_generated_files/mtouch/m
      +                          touch_button.c: 329:             button->baseline_count = (mtouch_button_baselinecounter
      +                          _t)
 16287  0ECB  0020               	movlb	0	; select bank0
 16288  0ECC  082F               	movf	Button_State_NotPressed@button,w
 16289  0ECD  0086               	movwf	6
 16290  0ECE  0830               	movf	Button_State_NotPressed@button+1,w
 16291  0ECF  0087               	movwf	7
 16292  0ED0  314D               	addfsr 1,13
 16293  0ED1  30FF               	movlw	255
 16294  0ED2  3FC0               	movwi [0]fsr1
 16295  0ED3  30FB               	movlw	251
 16296  0ED4  3FC1               	movwi [1]fsr1
 16297  0ED5  0008               	return
 16298  0ED6                     l6836:
 16299                           
 16300                           ;mcc_generated_files/mtouch/mtouch_button.c: 335:     (button->baseline_count)++;
 16301  0ED6  0020               	movlb	0	; select bank0
 16302  0ED7  082F               	movf	Button_State_NotPressed@button,w
 16303  0ED8  0086               	movwf	6
 16304  0ED9  0830               	movf	Button_State_NotPressed@button+1,w
 16305  0EDA  0087               	movwf	7
 16306  0EDB  314D               	addfsr 1,13
 16307  0EDC  3001               	movlw	1
 16308  0EDD  0781               	addwf	1,f
 16309  0EDE  3141               	addfsr 1,1
 16310  0EDF  1803               	skipnc
 16311  0EE0  0A81               	incf	1,f
 16312                           
 16313                           ;mcc_generated_files/mtouch/mtouch_button.c: 336:     if ((button->baseline_count) == ((
      +                          mtouch_button_baselinecounter_t)64u))
 16314  0EE1  082F               	movf	Button_State_NotPressed@button,w
 16315  0EE2  0086               	movwf	6
 16316  0EE3  0830               	movf	Button_State_NotPressed@button+1,w
 16317  0EE4  0087               	movwf	7
 16318  0EE5  314D               	addfsr 1,13
 16319  0EE6  0016               	moviw fsr1++
 16320  0EE7  3A40               	xorlw	64
 16321  0EE8  00B1               	movwf	??_Button_State_NotPressed
 16322  0EE9  0016               	moviw fsr1++
 16323  0EEA  04B1               	iorwf	??_Button_State_NotPressed,f
 16324  0EEB  1D03               	btfss	3,2
 16325  0EEC  0008               	return
 16326                           
 16327                           ;mcc_generated_files/mtouch/mtouch_button.c: 337:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 338:         button->baseline_count = (mtouch_button_baselinecounter_t)0;
 16328  0EED  082F               	movf	Button_State_NotPressed@button,w
 16329  0EEE  0086               	movwf	6
 16330  0EEF  0830               	movf	Button_State_NotPressed@button+1,w
 16331  0EF0  0087               	movwf	7
 16332  0EF1  314D               	addfsr 1,13
 16333  0EF2  3000               	movlw	0
 16334  0EF3  3FC0               	movwi [0]fsr1
 16335  0EF4  3FC1               	movwi [1]fsr1
 16336                           
 16337                           ;mcc_generated_files/mtouch/mtouch_button.c: 339:         Button_Baseline_Update(button)
      +                          ;
 16338  0EF5  0830               	movf	Button_State_NotPressed@button+1,w
 16339  0EF6  00F3               	movwf	Button_Baseline_Update@button+1
 16340  0EF7  082F               	movf	Button_State_NotPressed@button,w
 16341  0EF8  00F2               	movwf	Button_Baseline_Update@button
 16342  0EF9  318B  23CF         	fcall	_Button_Baseline_Update
 16343  0EFB  0008               	return
 16344  0EFC                     __end_of_Button_State_NotPressed:
 16345                           
 16346                           	psect	text102
 16347  09E3                     __ptext102:	
 16348 ;; *************** function _Button_State_Initializing *****************
 16349 ;; Defined at:
 16350 ;;		line 270 in file "mcc_generated_files/mtouch/mtouch_button.c"
 16351 ;; Parameters:    Size  Location     Type
 16352 ;;  button          2   15[BANK0 ] PTR struct .
 16353 ;;		 -> mtouch_button(85), 
 16354 ;; Auto vars:     Size  Location     Type
 16355 ;;		None
 16356 ;; Return value:  Size  Location     Type
 16357 ;;                  1    wreg      void 
 16358 ;; Registers used:
 16359 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16360 ;; Tracked objects:
 16361 ;;		On entry : 1F/0
 16362 ;;		On exit  : 1F/0
 16363 ;;		Unchanged: 0/0
 16364 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16365 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16366 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16367 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16368 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16369 ;;Total ram usage:        6 bytes
 16370 ;; Hardware stack levels used: 1
 16371 ;; Hardware stack levels required when called: 7
 16372 ;; This function calls:
 16373 ;;		_Button_Baseline_Initialize
 16374 ;;		_Button_Baseline_Update
 16375 ;;		_Button_Reburst_Request
 16376 ;; This function is called by:
 16377 ;;		_Button_Service
 16378 ;; This function uses a non-reentrant model
 16379 ;;
 16380                           
 16381                           
 16382                           ;psect for function _Button_State_Initializing
 16383  09E3                     _Button_State_Initializing:
 16384                           
 16385                           ;mcc_generated_files/mtouch/mtouch_button.c: 270: static void Button_State_Initializing(
      +                          mtouch_button_t* button);mcc_generated_files/mtouch/mtouch_button.c: 271: {;mcc_generate
      +                          d_files/mtouch/mtouch_button.c: 273:     if ((button->counter) <= (mtouch_button_stateco
      +                          unter_t)((mtouch_button_baselinecounter_t)16u)/2)
 16386                           
 16387                           ;incstack = 0
 16388                           ; Regs used in _Button_State_Initializing: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cs
      +                          tack]
 16389  09E3  082F               	movf	Button_State_Initializing@button,w
 16390  09E4  0086               	movwf	6
 16391  09E5  0830               	movf	Button_State_Initializing@button+1,w
 16392  09E6  0087               	movwf	7
 16393  09E7  314B               	addfsr 1,11
 16394  09E8  3F40               	moviw [0]fsr1
 16395  09E9  00B1               	movwf	??_Button_State_Initializing
 16396  09EA  3F41               	moviw [1]fsr1
 16397  09EB  00B2               	movwf	??_Button_State_Initializing+1
 16398  09EC  3000               	movlw	0
 16399  09ED  0232               	subwf	??_Button_State_Initializing+1,w
 16400  09EE  3009               	movlw	9
 16401  09EF  1903               	skipnz
 16402  09F0  0231               	subwf	??_Button_State_Initializing,w
 16403  09F1  1803               	skipnc
 16404  09F2  29FB               	goto	l6788
 16405                           
 16406                           ;mcc_generated_files/mtouch/mtouch_button.c: 274:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 275:         Button_Baseline_Initialize(button);
 16407  09F3  0830               	movf	Button_State_Initializing@button+1,w
 16408  09F4  00A6               	movwf	Button_Baseline_Initialize@button+1
 16409  09F5  082F               	movf	Button_State_Initializing@button,w
 16410  09F6  00A5               	movwf	Button_Baseline_Initialize@button
 16411  09F7  3192  2248  3189   	fcall	_Button_Baseline_Initialize
 16412                           
 16413                           ;mcc_generated_files/mtouch/mtouch_button.c: 276:     } else {
 16414  09FA  2A02               	goto	l6790
 16415  09FB                     l6788:
 16416                           
 16417                           ;mcc_generated_files/mtouch/mtouch_button.c: 277:         Button_Baseline_Update(button)
      +                          ;
 16418  09FB  0830               	movf	Button_State_Initializing@button+1,w
 16419  09FC  00F3               	movwf	Button_Baseline_Update@button+1
 16420  09FD  082F               	movf	Button_State_Initializing@button,w
 16421  09FE  00F2               	movwf	Button_Baseline_Update@button
 16422  09FF  318B  23CF  3189   	fcall	_Button_Baseline_Update
 16423  0A02                     l6790:
 16424                           
 16425                           ;mcc_generated_files/mtouch/mtouch_button.c: 281:     (button->counter)++;
 16426  0A02  082F               	movf	Button_State_Initializing@button,w
 16427  0A03  0086               	movwf	6
 16428  0A04  0830               	movf	Button_State_Initializing@button+1,w
 16429  0A05  0087               	movwf	7
 16430  0A06  314B               	addfsr 1,11
 16431  0A07  3001               	movlw	1
 16432  0A08  0781               	addwf	1,f
 16433  0A09  3141               	addfsr 1,1
 16434  0A0A  1803               	skipnc
 16435  0A0B  0A81               	incf	1,f
 16436                           
 16437                           ;mcc_generated_files/mtouch/mtouch_button.c: 282:     if ((button->counter) >= (mtouch_b
      +                          utton_statecounter_t)((mtouch_button_baselinecounter_t)16u))
 16438  0A0C  082F               	movf	Button_State_Initializing@button,w
 16439  0A0D  0086               	movwf	6
 16440  0A0E  0830               	movf	Button_State_Initializing@button+1,w
 16441  0A0F  0087               	movwf	7
 16442  0A10  314B               	addfsr 1,11
 16443  0A11  3F40               	moviw [0]fsr1
 16444  0A12  00B1               	movwf	??_Button_State_Initializing
 16445  0A13  3F41               	moviw [1]fsr1
 16446  0A14  00B2               	movwf	??_Button_State_Initializing+1
 16447  0A15  3000               	movlw	0
 16448  0A16  0232               	subwf	??_Button_State_Initializing+1,w
 16449  0A17  3010               	movlw	16
 16450  0A18  1903               	skipnz
 16451  0A19  0231               	subwf	??_Button_State_Initializing,w
 16452  0A1A  1C03               	skipc
 16453  0A1B  2A4D               	goto	l6798
 16454                           
 16455                           ;mcc_generated_files/mtouch/mtouch_button.c: 283:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 284:         button->reading = (mtouch_button_reading_t)((button->baseline)>
      +                          >((uint8_t)4u));
 16456  0A1C  082F               	movf	Button_State_Initializing@button,w
 16457  0A1D  0086               	movwf	6
 16458  0A1E  0830               	movf	Button_State_Initializing@button+1,w
 16459  0A1F  0087               	movwf	7
 16460  0A20  3146               	addfsr 1,6
 16461  0A21  3F40               	moviw [0]fsr1
 16462  0A22  00B1               	movwf	??_Button_State_Initializing
 16463  0A23  3F41               	moviw [1]fsr1
 16464  0A24  00B2               	movwf	??_Button_State_Initializing+1
 16465  0A25  3F42               	moviw [2]fsr1
 16466  0A26  00B3               	movwf	??_Button_State_Initializing+2
 16467  0A27  3F43               	moviw [3]fsr1
 16468  0A28  00B4               	movwf	??_Button_State_Initializing+3
 16469  0A29  3004               	movlw	4
 16470  0A2A                     u6875:
 16471  0A2A  36B4               	lsrf	??_Button_State_Initializing+3,f
 16472  0A2B  0CB3               	rrf	??_Button_State_Initializing+2,f
 16473  0A2C  0CB2               	rrf	??_Button_State_Initializing+1,f
 16474  0A2D  0CB1               	rrf	??_Button_State_Initializing,f
 16475  0A2E  0B89               	decfsz	9,f
 16476  0A2F  2A2A               	goto	u6875
 16477  0A30  082F               	movf	Button_State_Initializing@button,w
 16478  0A31  0086               	movwf	6
 16479  0A32  0830               	movf	Button_State_Initializing@button+1,w
 16480  0A33  0087               	movwf	7
 16481  0A34  3144               	addfsr 1,4
 16482  0A35  0831               	movf	??_Button_State_Initializing,w
 16483  0A36  3FC0               	movwi [0]fsr1
 16484  0A37  0832               	movf	??_Button_State_Initializing+1,w
 16485  0A38  3FC1               	movwi [1]fsr1
 16486                           
 16487                           ;mcc_generated_files/mtouch/mtouch_button.c: 285:         button->state = MTOUCH_BUTTON_
      +                          STATE_notPressed;
 16488  0A39  082F               	movf	Button_State_Initializing@button,w
 16489  0A3A  3E02               	addlw	2
 16490  0A3B  00B1               	movwf	??_Button_State_Initializing
 16491  0A3C  3000               	movlw	0
 16492  0A3D  3D30               	addwfc	Button_State_Initializing@button+1,w
 16493  0A3E  00B2               	movwf	??_Button_State_Initializing+1
 16494  0A3F  0831               	movf	??_Button_State_Initializing,w
 16495  0A40  0086               	movwf	6
 16496  0A41  0832               	movf	??_Button_State_Initializing+1,w
 16497  0A42  0087               	movwf	7
 16498  0A43  3001               	movlw	1
 16499  0A44  0081               	movwf	1
 16500                           
 16501                           ;mcc_generated_files/mtouch/mtouch_button.c: 286:         button->counter = (mtouch_butt
      +                          on_statecounter_t)0;
 16502  0A45  082F               	movf	Button_State_Initializing@button,w
 16503  0A46  0086               	movwf	6
 16504  0A47  0830               	movf	Button_State_Initializing@button+1,w
 16505  0A48  0087               	movwf	7
 16506  0A49  314B               	addfsr 1,11
 16507  0A4A  3000               	movlw	0
 16508  0A4B  3FC0               	movwi [0]fsr1
 16509  0A4C  3FC1               	movwi [1]fsr1
 16510  0A4D                     l6798:
 16511                           
 16512                           ;mcc_generated_files/mtouch/mtouch_button.c: 289:     Button_Reburst_Request(button);
 16513  0A4D  0830               	movf	Button_State_Initializing@button+1,w
 16514  0A4E  00F9               	movwf	Button_Reburst_Request@button+1
 16515  0A4F  082F               	movf	Button_State_Initializing@button,w
 16516  0A50  00F8               	movwf	Button_Reburst_Request@button
 16517  0A51  319B  2302         	fcall	_Button_Reburst_Request
 16518  0A53  0008               	return
 16519  0A54                     __end_of_Button_State_Initializing:
 16520                           
 16521                           	psect	text103
 16522  1CD3                     __ptext103:	
 16523 ;; *************** function _Button_State_Suspended *****************
 16524 ;; Defined at:
 16525 ;;		line 412 in file "mcc_generated_files/mtouch/mtouch_button.c"
 16526 ;; Parameters:    Size  Location     Type
 16527 ;;  button          2   15[BANK0 ] PTR struct .
 16528 ;;		 -> mtouch_button(85), 
 16529 ;; Auto vars:     Size  Location     Type
 16530 ;;		None
 16531 ;; Return value:  Size  Location     Type
 16532 ;;                  1    wreg      void 
 16533 ;; Registers used:
 16534 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16535 ;; Tracked objects:
 16536 ;;		On entry : 1F/0
 16537 ;;		On exit  : 1F/0
 16538 ;;		Unchanged: 0/0
 16539 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16540 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16541 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16542 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16543 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16544 ;;Total ram usage:        2 bytes
 16545 ;; Hardware stack levels used: 1
 16546 ;; Hardware stack levels required when called: 6
 16547 ;; This function calls:
 16548 ;;		_Button_Baseline_Update
 16549 ;;		_MTOUCH_Sensor_Disable
 16550 ;; This function is called by:
 16551 ;;		_Button_Service
 16552 ;; This function uses a non-reentrant model
 16553 ;;
 16554                           
 16555                           
 16556                           ;psect for function _Button_State_Suspended
 16557  1CD3                     _Button_State_Suspended:
 16558                           
 16559                           ;mcc_generated_files/mtouch/mtouch_button.c: 412: static void Button_State_Suspended(mto
      +                          uch_button_t* button);mcc_generated_files/mtouch/mtouch_button.c: 413: {;mcc_generated_f
      +                          iles/mtouch/mtouch_button.c: 415:     Button_Baseline_Update(button);
 16560                           
 16561                           ;incstack = 0
 16562                           ; Regs used in _Button_State_Suspended: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstac
      +                          k]
 16563  1CD3  0830               	movf	Button_State_Suspended@button+1,w
 16564  1CD4  00F3               	movwf	Button_Baseline_Update@button+1
 16565  1CD5  082F               	movf	Button_State_Suspended@button,w
 16566  1CD6  00F2               	movwf	Button_Baseline_Update@button
 16567  1CD7  318B  23CF  319C   	fcall	_Button_Baseline_Update
 16568                           
 16569                           ;mcc_generated_files/mtouch/mtouch_button.c: 416:     button->counter = (mtouch_button_s
      +                          tatecounter_t)0;
 16570  1CDA  082F               	movf	Button_State_Suspended@button,w
 16571  1CDB  0086               	movwf	6
 16572  1CDC  0830               	movf	Button_State_Suspended@button+1,w
 16573  1CDD  0087               	movwf	7
 16574  1CDE  314B               	addfsr 1,11
 16575  1CDF  3000               	movlw	0
 16576  1CE0  3FC0               	movwi [0]fsr1
 16577  1CE1  3FC1               	movwi [1]fsr1
 16578                           
 16579                           ;mcc_generated_files/mtouch/mtouch_button.c: 419:     MTOUCH_Sensor_Disable(button->sens
      +                          or);
 16580  1CE2  082F               	movf	Button_State_Suspended@button,w
 16581  1CE3  0086               	movwf	6
 16582  1CE4  0830               	movf	Button_State_Suspended@button+1,w
 16583  1CE5  0087               	movwf	7
 16584  1CE6  3141               	addfsr 1,1
 16585  1CE7  0801               	movf	1,w
 16586  1CE8  319D  25C5         	fcall	_MTOUCH_Sensor_Disable
 16587  1CEA  0008               	return
 16588  1CEB                     __end_of_Button_State_Suspended:
 16589                           
 16590                           	psect	text104
 16591  1DC5                     __ptext104:	
 16592 ;; *************** function _MTOUCH_Sensor_Disable *****************
 16593 ;; Defined at:
 16594 ;;		line 484 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
 16595 ;; Parameters:    Size  Location     Type
 16596 ;;  sensor          1    wreg     enum E2707
 16597 ;; Auto vars:     Size  Location     Type
 16598 ;;  sensor          1    8[COMMON] enum E2707
 16599 ;; Return value:  Size  Location     Type
 16600 ;;                  1    wreg      void 
 16601 ;; Registers used:
 16602 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16603 ;; Tracked objects:
 16604 ;;		On entry : 1F/0
 16605 ;;		On exit  : 1F/0
 16606 ;;		Unchanged: 0/0
 16607 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16608 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16609 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16610 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16611 ;;      Totals:         1       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16612 ;;Total ram usage:        5 bytes
 16613 ;; Hardware stack levels used: 1
 16614 ;; Hardware stack levels required when called: 5
 16615 ;; This function calls:
 16616 ;;		___wmul
 16617 ;; This function is called by:
 16618 ;;		_Button_State_Suspended
 16619 ;; This function uses a non-reentrant model
 16620 ;;
 16621                           
 16622                           
 16623                           ;psect for function _MTOUCH_Sensor_Disable
 16624  1DC5                     _MTOUCH_Sensor_Disable:
 16625                           
 16626                           ;incstack = 0
 16627                           ; Regs used in _MTOUCH_Sensor_Disable: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 16628                           ;MTOUCH_Sensor_Disable@sensor stored from wreg
 16629  1DC5  00F8               	movwf	MTOUCH_Sensor_Disable@sensor
 16630                           
 16631                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 484: void MTOUCH_Sensor_Disable(enum mtouch
      +                          _sensor_names sensor);mcc_generated_files/mtouch/mtouch_sensor.c: 485: {;mcc_generated_f
      +                          iles/mtouch/mtouch_sensor.c: 486:     if(sensor < 11u)
 16632  1DC6  300B               	movlw	11
 16633  1DC7  0278               	subwf	MTOUCH_Sensor_Disable@sensor,w
 16634  1DC8  1803               	skipnc
 16635  1DC9  0008               	return
 16636                           
 16637                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 487:         mtouch_sensor[sensor].enabled 
      +                          = 0;
 16638  1DCA  0878               	movf	MTOUCH_Sensor_Disable@sensor,w
 16639  1DCB  00A0               	movwf	??_MTOUCH_Sensor_Disable
 16640  1DCC  01A1               	clrf	??_MTOUCH_Sensor_Disable+1
 16641  1DCD  0820               	movf	??_MTOUCH_Sensor_Disable,w
 16642  1DCE  00F2               	movwf	___wmul@multiplier
 16643  1DCF  0821               	movf	??_MTOUCH_Sensor_Disable+1,w
 16644  1DD0  00F3               	movwf	___wmul@multiplier+1
 16645  1DD1  3009               	movlw	9
 16646  1DD2  00F4               	movwf	___wmul@multiplicand
 16647  1DD3  3000               	movlw	0
 16648  1DD4  00F5               	movwf	___wmul@multiplicand+1
 16649  1DD5  319D  2538         	fcall	___wmul
 16650  1DD7  3040               	movlw	64
 16651  1DD8  00A2               	movwf	??_MTOUCH_Sensor_Disable+2
 16652  1DD9  3023               	movlw	35
 16653  1DDA  00A3               	movwf	??_MTOUCH_Sensor_Disable+3
 16654  1DDB  0872               	movf	?___wmul,w
 16655  1DDC  0722               	addwf	??_MTOUCH_Sensor_Disable+2,w
 16656  1DDD  0086               	movwf	6
 16657  1DDE  0873               	movf	?___wmul+1,w
 16658  1DDF  3D23               	addwfc	??_MTOUCH_Sensor_Disable+3,w
 16659  1DE0  0087               	movwf	7
 16660  1DE1  1001               	bcf	1,0
 16661  1DE2  0008               	return
 16662  1DE3                     __end_of_MTOUCH_Sensor_Disable:
 16663                           
 16664                           	psect	text105
 16665  1AFA                     __ptext105:	
 16666 ;; *************** function _Button_DefaultCallback *****************
 16667 ;; Defined at:
 16668 ;;		line 786 in file "mcc_generated_files/mtouch/mtouch_button.c"
 16669 ;; Parameters:    Size  Location     Type
 16670 ;;  button          1    2[COMMON] enum E2936
 16671 ;; Auto vars:     Size  Location     Type
 16672 ;;		None
 16673 ;; Return value:  Size  Location     Type
 16674 ;;                  1    wreg      void 
 16675 ;; Registers used:
 16676 ;;		None
 16677 ;; Tracked objects:
 16678 ;;		On entry : 1F/0
 16679 ;;		On exit  : 1F/0
 16680 ;;		Unchanged: 1F/0
 16681 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16682 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16683 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16684 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16685 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16686 ;;Total ram usage:        1 bytes
 16687 ;; Hardware stack levels used: 1
 16688 ;; Hardware stack levels required when called: 4
 16689 ;; This function calls:
 16690 ;;		Nothing
 16691 ;; This function is called by:
 16692 ;;		_Button_State_Pressed
 16693 ;;		_Button_State_PressDebounce
 16694 ;;		_Button_State_ReleaseDebounce
 16695 ;; This function uses a non-reentrant model
 16696 ;;
 16697                           
 16698                           
 16699                           ;psect for function _Button_DefaultCallback
 16700  1AFA                     _Button_DefaultCallback:
 16701                           
 16702                           ;incstack = 0
 16703                           ; Regs used in _Button_DefaultCallback: []
 16704  1AFA  0008               	return
 16705  1AFB                     __end_of_Button_DefaultCallback:
 16706                           
 16707                           	psect	text106
 16708  1356                     __ptext106:	
 16709 ;; *************** function _MTOUCH_Button_Initialize *****************
 16710 ;; Defined at:
 16711 ;;		line 211 in file "mcc_generated_files/mtouch/mtouch_button.c"
 16712 ;; Parameters:    Size  Location     Type
 16713 ;;  name            1    wreg     enum E2936
 16714 ;; Auto vars:     Size  Location     Type
 16715 ;;  name            1    4[BANK0 ] enum E2936
 16716 ;;  button          2    5[BANK0 ] PTR struct .
 16717 ;;		 -> mtouch_button(85), 
 16718 ;; Return value:  Size  Location     Type
 16719 ;;                  1    wreg      void 
 16720 ;; Registers used:
 16721 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16722 ;; Tracked objects:
 16723 ;;		On entry : 1F/0
 16724 ;;		On exit  : 1F/0
 16725 ;;		Unchanged: 0/0
 16726 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16727 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16728 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16729 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16730 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16731 ;;Total ram usage:        7 bytes
 16732 ;; Hardware stack levels used: 1
 16733 ;; Hardware stack levels required when called: 5
 16734 ;; This function calls:
 16735 ;;		_MTOUCH_Sensor_Calibrate
 16736 ;;		___wmul
 16737 ;; This function is called by:
 16738 ;;		_MTOUCH_Button_InitializeAll
 16739 ;;		_Button_Service
 16740 ;;		_Button_State_NotPressed
 16741 ;;		_Button_State_Pressed
 16742 ;; This function uses a non-reentrant model
 16743 ;;
 16744                           
 16745                           
 16746                           ;psect for function _MTOUCH_Button_Initialize
 16747  1356                     _MTOUCH_Button_Initialize:
 16748                           
 16749                           ;incstack = 0
 16750                           ; Regs used in _MTOUCH_Button_Initialize: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cst
      +                          ack]
 16751                           ;MTOUCH_Button_Initialize@name stored from wreg
 16752  1356  00A4               	movwf	MTOUCH_Button_Initialize@name
 16753                           
 16754                           ;mcc_generated_files/mtouch/mtouch_button.c: 211: void MTOUCH_Button_Initialize(enum mto
      +                          uch_button_names name);mcc_generated_files/mtouch/mtouch_button.c: 212: {;mcc_generated_
      +                          files/mtouch/mtouch_button.c: 213:     mtouch_button_t* button = &mtouch_button[name];
 16755  1357  0824               	movf	MTOUCH_Button_Initialize@name,w
 16756  1358  00A0               	movwf	??_MTOUCH_Button_Initialize
 16757  1359  01A1               	clrf	??_MTOUCH_Button_Initialize+1
 16758  135A  0820               	movf	??_MTOUCH_Button_Initialize,w
 16759  135B  00F2               	movwf	___wmul@multiplier
 16760  135C  0821               	movf	??_MTOUCH_Button_Initialize+1,w
 16761  135D  00F3               	movwf	___wmul@multiplier+1
 16762  135E  3011               	movlw	17
 16763  135F  00F4               	movwf	___wmul@multiplicand
 16764  1360  3000               	movlw	0
 16765  1361  00F5               	movwf	___wmul@multiplicand+1
 16766  1362  319D  2538  3193   	fcall	___wmul
 16767  1365  309B               	movlw	155
 16768  1366  00A2               	movwf	??_MTOUCH_Button_Initialize+2
 16769  1367  3023               	movlw	35
 16770  1368  00A3               	movwf	??_MTOUCH_Button_Initialize+3
 16771  1369  0872               	movf	?___wmul,w
 16772  136A  0722               	addwf	??_MTOUCH_Button_Initialize+2,w
 16773  136B  00A5               	movwf	MTOUCH_Button_Initialize@button
 16774  136C  0873               	movf	?___wmul+1,w
 16775  136D  3D23               	addwfc	??_MTOUCH_Button_Initialize+3,w
 16776  136E  00A6               	movwf	MTOUCH_Button_Initialize@button+1
 16777                           
 16778                           ;mcc_generated_files/mtouch/mtouch_button.c: 215:     button->state = MTOUCH_BUTTON_STAT
      +                          E_initializing;
 16779  136F  0825               	movf	MTOUCH_Button_Initialize@button,w
 16780  1370  0086               	movwf	6
 16781  1371  0826               	movf	MTOUCH_Button_Initialize@button+1,w
 16782  1372  0087               	movwf	7
 16783  1373  3142               	addfsr 1,2
 16784  1374  0181               	clrf	1
 16785                           
 16786                           ;mcc_generated_files/mtouch/mtouch_button.c: 216:     button->baseline = (mtouch_button_
      +                          baseline_t)0;
 16787  1375  0825               	movf	MTOUCH_Button_Initialize@button,w
 16788  1376  3E06               	addlw	6
 16789  1377  00A0               	movwf	??_MTOUCH_Button_Initialize
 16790  1378  3000               	movlw	0
 16791  1379  3D26               	addwfc	MTOUCH_Button_Initialize@button+1,w
 16792  137A  00A1               	movwf	??_MTOUCH_Button_Initialize+1
 16793  137B  0820               	movf	??_MTOUCH_Button_Initialize,w
 16794  137C  0086               	movwf	6
 16795  137D  0821               	movf	??_MTOUCH_Button_Initialize+1,w
 16796  137E  0087               	movwf	7
 16797  137F  3000               	movlw	0
 16798  1380  3FC0               	movwi [0]fsr1
 16799  1381  3FC1               	movwi [1]fsr1
 16800  1382  3FC2               	movwi [2]fsr1
 16801  1383  3FC3               	movwi [3]fsr1
 16802                           
 16803                           ;mcc_generated_files/mtouch/mtouch_button.c: 217:     button->counter = (mtouch_button_s
      +                          tatecounter_t)0;
 16804  1384  0825               	movf	MTOUCH_Button_Initialize@button,w
 16805  1385  0086               	movwf	6
 16806  1386  0826               	movf	MTOUCH_Button_Initialize@button+1,w
 16807  1387  0087               	movwf	7
 16808  1388  314B               	addfsr 1,11
 16809  1389  3000               	movlw	0
 16810  138A  3FC0               	movwi [0]fsr1
 16811  138B  3FC1               	movwi [1]fsr1
 16812                           
 16813                           ;mcc_generated_files/mtouch/mtouch_button.c: 218:     button->baseline_count = (mtouch_b
      +                          utton_baselinecounter_t)0;
 16814  138C  0825               	movf	MTOUCH_Button_Initialize@button,w
 16815  138D  0086               	movwf	6
 16816  138E  0826               	movf	MTOUCH_Button_Initialize@button+1,w
 16817  138F  0087               	movwf	7
 16818  1390  314D               	addfsr 1,13
 16819  1391  3000               	movlw	0
 16820  1392  3FC0               	movwi [0]fsr1
 16821  1393  3FC1               	movwi [1]fsr1
 16822                           
 16823                           ;mcc_generated_files/mtouch/mtouch_button.c: 220:     MTOUCH_Sensor_Calibrate(button->se
      +                          nsor);
 16824  1394  0825               	movf	MTOUCH_Button_Initialize@button,w
 16825  1395  0086               	movwf	6
 16826  1396  0826               	movf	MTOUCH_Button_Initialize@button+1,w
 16827  1397  0087               	movwf	7
 16828  1398  3141               	addfsr 1,1
 16829  1399  0801               	movf	1,w
 16830  139A  319A  22F9         	fcall	_MTOUCH_Sensor_Calibrate
 16831  139C  0008               	return
 16832  139D                     __end_of_MTOUCH_Button_Initialize:
 16833                           
 16834                           	psect	text107
 16835  1AF9                     __ptext107:	
 16836 ;; *************** function _MTOUCH_Sensor_Calibrate *****************
 16837 ;; Defined at:
 16838 ;;		line 544 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
 16839 ;; Parameters:    Size  Location     Type
 16840 ;;  sensor          1    wreg     enum E2707
 16841 ;; Auto vars:     Size  Location     Type
 16842 ;;  sensor          1    0[COMMON] enum E2707
 16843 ;; Return value:  Size  Location     Type
 16844 ;;                  1    wreg      void 
 16845 ;; Registers used:
 16846 ;;		wreg
 16847 ;; Tracked objects:
 16848 ;;		On entry : 1F/0
 16849 ;;		On exit  : 1F/0
 16850 ;;		Unchanged: 1F/0
 16851 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16852 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16853 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16854 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16855 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16856 ;;Total ram usage:        0 bytes
 16857 ;; Hardware stack levels used: 1
 16858 ;; Hardware stack levels required when called: 4
 16859 ;; This function calls:
 16860 ;;		Nothing
 16861 ;; This function is called by:
 16862 ;;		_MTOUCH_Button_Initialize
 16863 ;; This function uses a non-reentrant model
 16864 ;;
 16865                           
 16866                           
 16867                           ;psect for function _MTOUCH_Sensor_Calibrate
 16868  1AF9                     _MTOUCH_Sensor_Calibrate:
 16869                           
 16870                           ;incstack = 0
 16871                           ; Regs used in _MTOUCH_Sensor_Calibrate: [wreg]
 16872  1AF9  0008               	return
 16873  1AFA                     __end_of_MTOUCH_Sensor_Calibrate:
 16874                           
 16875                           	psect	text108
 16876  0D8B                     __ptext108:	
 16877 ;; *************** function _Button_Check_AKS_Block *****************
 16878 ;; Defined at:
 16879 ;;		line 717 in file "mcc_generated_files/mtouch/mtouch_button.c"
 16880 ;; Parameters:    Size  Location     Type
 16881 ;;  button          2    4[BANK0 ] PTR struct .
 16882 ;;		 -> mtouch_button(85), 
 16883 ;; Auto vars:     Size  Location     Type
 16884 ;;  check_button    2   13[BANK0 ] PTR struct .
 16885 ;;		 -> mtouch_button(85), 
 16886 ;;  surplus_devi    2   11[BANK0 ] short 
 16887 ;;  surplus_devi    2    8[BANK0 ] short 
 16888 ;;  currentAKSGr    1   10[BANK0 ] enum E3165
 16889 ;; Return value:  Size  Location     Type
 16890 ;;                  1    wreg      _Bool 
 16891 ;; Registers used:
 16892 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16893 ;; Tracked objects:
 16894 ;;		On entry : 1F/0
 16895 ;;		On exit  : 0/0
 16896 ;;		Unchanged: 0/0
 16897 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16898 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16899 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16900 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16901 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16902 ;;Total ram usage:       11 bytes
 16903 ;; Hardware stack levels used: 1
 16904 ;; Hardware stack levels required when called: 6
 16905 ;; This function calls:
 16906 ;;		_Button_Unscaled_Deviation_Get
 16907 ;;		_MTOUCH_Sensor_isEnabled
 16908 ;; This function is called by:
 16909 ;;		_Button_State_NotPressed
 16910 ;;		_Button_State_PressDebounce
 16911 ;; This function uses a non-reentrant model
 16912 ;;
 16913                           
 16914                           
 16915                           ;psect for function _Button_Check_AKS_Block
 16916  0D8B                     _Button_Check_AKS_Block:
 16917                           
 16918                           ;mcc_generated_files/mtouch/mtouch_button.c: 717: static _Bool Button_Check_AKS_Block(mt
      +                          ouch_button_t* button);mcc_generated_files/mtouch/mtouch_button.c: 718: {;mcc_generated_
      +                          files/mtouch/mtouch_button.c: 719:     enum mtouch_button_aks_group currentAKSGroup = bu
      +                          tton->aks_group;
 16919                           
 16920                           ;incstack = 0
 16921                           ; Regs used in _Button_Check_AKS_Block: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 16922  0D8B  0824               	movf	Button_Check_AKS_Block@button,w
 16923  0D8C  0086               	movwf	6
 16924  0D8D  0825               	movf	Button_Check_AKS_Block@button+1,w
 16925  0D8E  0087               	movwf	7
 16926  0D8F  3143               	addfsr 1,3
 16927  0D90  0801               	movf	1,w
 16928  0D91  00A6               	movwf	??_Button_Check_AKS_Block
 16929  0D92  0826               	movf	??_Button_Check_AKS_Block,w
 16930  0D93  00AA               	movwf	Button_Check_AKS_Block@currentAKSGroup
 16931                           
 16932                           ;mcc_generated_files/mtouch/mtouch_button.c: 720:     int16_t surplus_deviation_this_but
      +                          ton,surplus_deviation_check_button;;mcc_generated_files/mtouch/mtouch_button.c: 721:    
      +                           mtouch_button_t* check_button;;mcc_generated_files/mtouch/mtouch_button.c: 723:     sur
      +                          plus_deviation_this_button = (int16_t)(Button_Unscaled_Deviation_Get(button) - (mtouch_b
      +                          utton_reading_t)button->threshold);
 16933  0D94  0824               	movf	Button_Check_AKS_Block@button,w
 16934  0D95  0086               	movwf	6
 16935  0D96  0825               	movf	Button_Check_AKS_Block@button+1,w
 16936  0D97  0087               	movwf	7
 16937  0D98  314F               	addfsr 1,15
 16938  0D99  0801               	movf	1,w
 16939  0D9A  00A6               	movwf	??_Button_Check_AKS_Block
 16940  0D9B  01A7               	clrf	??_Button_Check_AKS_Block+1
 16941  0D9C  0825               	movf	Button_Check_AKS_Block@button+1,w
 16942  0D9D  00F3               	movwf	Button_Unscaled_Deviation_Get@button+1
 16943  0D9E  0824               	movf	Button_Check_AKS_Block@button,w
 16944  0D9F  00F2               	movwf	Button_Unscaled_Deviation_Get@button
 16945  0DA0  3191  21AC  318D   	fcall	_Button_Unscaled_Deviation_Get
 16946  0DA3  0826               	movf	??_Button_Check_AKS_Block,w
 16947  0DA4  0272               	subwf	?_Button_Unscaled_Deviation_Get,w
 16948  0DA5  00A8               	movwf	Button_Check_AKS_Block@surplus_deviation_this_button
 16949  0DA6  0827               	movf	??_Button_Check_AKS_Block+1,w
 16950  0DA7  3B73               	subwfb	?_Button_Unscaled_Deviation_Get+1,w
 16951  0DA8  00A9               	movwf	Button_Check_AKS_Block@surplus_deviation_this_button+1
 16952                           
 16953                           ;mcc_generated_files/mtouch/mtouch_button.c: 725:     for(check_button = &mtouch_button[
      +                          0];check_button <= &mtouch_button[5u -1];check_button++)
 16954  0DA9  309B               	movlw	155
 16955  0DAA  00AD               	movwf	Button_Check_AKS_Block@check_button
 16956  0DAB  3023               	movlw	35
 16957  0DAC  00AE               	movwf	Button_Check_AKS_Block@check_button+1
 16958  0DAD  30DF               	movlw	223
 16959  0DAE  00A6               	movwf	??_Button_Check_AKS_Block
 16960  0DAF  3023               	movlw	35
 16961  0DB0  00A7               	movwf	??_Button_Check_AKS_Block+1
 16962  0DB1  082E               	movf	Button_Check_AKS_Block@check_button+1,w
 16963  0DB2  0227               	subwf	??_Button_Check_AKS_Block+1,w
 16964  0DB3  1D03               	skipz
 16965  0DB4  2DB7               	goto	u6345
 16966  0DB5  082D               	movf	Button_Check_AKS_Block@check_button,w
 16967  0DB6  0226               	subwf	??_Button_Check_AKS_Block,w
 16968  0DB7                     u6345:
 16969  0DB7  1C03               	btfss	3,0
 16970  0DB8  2E28               	goto	l6516
 16971  0DB9                     l6486:
 16972                           
 16973                           ;mcc_generated_files/mtouch/mtouch_button.c: 726:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 727:         if(check_button->name == button->name)
 16974  0DB9  0824               	movf	Button_Check_AKS_Block@button,w
 16975  0DBA  0086               	movwf	6
 16976  0DBB  0825               	movf	Button_Check_AKS_Block@button+1,w
 16977  0DBC  0087               	movwf	7
 16978  0DBD  082D               	movf	Button_Check_AKS_Block@check_button,w
 16979  0DBE  0084               	movwf	4
 16980  0DBF  082E               	movf	Button_Check_AKS_Block@check_button+1,w
 16981  0DC0  0085               	movwf	5
 16982  0DC1  0800               	movf	0,w
 16983  0DC2  0601               	xorwf	1,w
 16984  0DC3  1903               	btfsc	3,2
 16985  0DC4  2E17               	goto	l6514
 16986                           
 16987                           ;mcc_generated_files/mtouch/mtouch_button.c: 732:         {;mcc_generated_files/mtouch/m
      +                          touch_button.c: 733:             if(check_button->aks_group == currentAKSGroup)
 16988                           
 16989                           ;mcc_generated_files/mtouch/mtouch_button.c: 728:         {;mcc_generated_files/mtouch/m
      +                          touch_button.c: 730:         }
 16990  0DC5  082D               	movf	Button_Check_AKS_Block@check_button,w
 16991  0DC6  0086               	movwf	6
 16992  0DC7  082E               	movf	Button_Check_AKS_Block@check_button+1,w
 16993  0DC8  0087               	movwf	7
 16994  0DC9  3143               	addfsr 1,3
 16995  0DCA  0801               	movf	1,w
 16996  0DCB  062A               	xorwf	Button_Check_AKS_Block@currentAKSGroup,w
 16997  0DCC  1D03               	skipz
 16998  0DCD  2E17               	goto	l6514
 16999                           
 17000                           ;mcc_generated_files/mtouch/mtouch_button.c: 734:             {;mcc_generated_files/mtou
      +                          ch/mtouch_button.c: 735:                 if(MTOUCH_Sensor_isEnabled(check_button))
 17001  0DCE  082D               	movf	Button_Check_AKS_Block@check_button,w
 17002  0DCF  3191  2125  318D   	fcall	_MTOUCH_Sensor_isEnabled
 17003  0DD2  3A00               	xorlw	0
 17004  0DD3  1903               	skipnz
 17005  0DD4  2E17               	goto	l6514
 17006                           
 17007                           ;mcc_generated_files/mtouch/mtouch_button.c: 736:                 {;mcc_generated_files/
      +                          mtouch/mtouch_button.c: 737:                         if(check_button->state == MTOUCH_BU
      +                          TTON_STATE_pressed || check_button->state == MTOUCH_BUTTON_STATE_pressDebounce)
 17008  0DD5  082D               	movf	Button_Check_AKS_Block@check_button,w
 17009  0DD6  0086               	movwf	6
 17010  0DD7  082E               	movf	Button_Check_AKS_Block@check_button+1,w
 17011  0DD8  0087               	movwf	7
 17012  0DD9  3142               	addfsr 1,2
 17013  0DDA  3003               	movlw	3
 17014  0DDB  0601               	xorwf	1,w
 17015  0DDC  1903               	btfsc	3,2
 17016  0DDD  2DF5               	goto	l6498
 17017  0DDE  082D               	movf	Button_Check_AKS_Block@check_button,w
 17018  0DDF  0086               	movwf	6
 17019  0DE0  082E               	movf	Button_Check_AKS_Block@check_button+1,w
 17020  0DE1  0087               	movwf	7
 17021  0DE2  3142               	addfsr 1,2
 17022  0DE3  3002               	movlw	2
 17023  0DE4  0601               	xorwf	1,w
 17024  0DE5  1903               	btfsc	3,2
 17025  0DE6  2DF5               	goto	l6498
 17026  0DE7  2DF7               	goto	l6504
 17027  0DE8                     l6508:
 17028  0DE8  0020               	movlb	0	; select bank0
 17029  0DE9  0829               	movf	Button_Check_AKS_Block@surplus_deviation_this_button+1,w
 17030  0DEA  3A80               	xorlw	128
 17031  0DEB  00A6               	movwf	??_Button_Check_AKS_Block
 17032  0DEC  082C               	movf	Button_Check_AKS_Block@surplus_deviation_check_button+1,w
 17033  0DED  3A80               	xorlw	128
 17034  0DEE  0226               	subwf	??_Button_Check_AKS_Block,w
 17035  0DEF  1D03               	skipz
 17036  0DF0  2DF3               	goto	u6415
 17037  0DF1  082B               	movf	Button_Check_AKS_Block@surplus_deviation_check_button,w
 17038  0DF2  0228               	subwf	Button_Check_AKS_Block@surplus_deviation_this_button,w
 17039  0DF3                     u6415:
 17040  0DF3  1803               	skipnc
 17041  0DF4  2E17               	goto	l6514
 17042  0DF5                     l6498:
 17043                           
 17044                           ;mcc_generated_files/mtouch/mtouch_button.c: 738:                             return 1;
 17045  0DF5  3001               	movlw	1
 17046  0DF6  0008               	return
 17047  0DF7                     l6504:
 17048                           
 17049                           ;mcc_generated_files/mtouch/mtouch_button.c: 740:                             {;mcc_gene
      +                          rated_files/mtouch/mtouch_button.c: 741:                                 surplus_deviati
      +                          on_check_button = (int16_t)(Button_Unscaled_Deviation_Get(check_button) - (mtouch_button
      +                          _reading_t)check_button->threshold);
 17050  0DF7  082D               	movf	Button_Check_AKS_Block@check_button,w
 17051  0DF8  0086               	movwf	6
 17052  0DF9  082E               	movf	Button_Check_AKS_Block@check_button+1,w
 17053  0DFA  0087               	movwf	7
 17054  0DFB  314F               	addfsr 1,15
 17055  0DFC  0801               	movf	1,w
 17056  0DFD  00A6               	movwf	??_Button_Check_AKS_Block
 17057  0DFE  01A7               	clrf	??_Button_Check_AKS_Block+1
 17058  0DFF  082E               	movf	Button_Check_AKS_Block@check_button+1,w
 17059  0E00  00F3               	movwf	Button_Unscaled_Deviation_Get@button+1
 17060  0E01  082D               	movf	Button_Check_AKS_Block@check_button,w
 17061  0E02  00F2               	movwf	Button_Unscaled_Deviation_Get@button
 17062  0E03  3191  21AC  318D   	fcall	_Button_Unscaled_Deviation_Get
 17063  0E06  0826               	movf	??_Button_Check_AKS_Block,w
 17064  0E07  0272               	subwf	?_Button_Unscaled_Deviation_Get,w
 17065  0E08  00AB               	movwf	Button_Check_AKS_Block@surplus_deviation_check_button
 17066  0E09  0827               	movf	??_Button_Check_AKS_Block+1,w
 17067  0E0A  3B73               	subwfb	?_Button_Unscaled_Deviation_Get+1,w
 17068  0E0B  00AC               	movwf	Button_Check_AKS_Block@surplus_deviation_check_button+1
 17069                           
 17070                           ;mcc_generated_files/mtouch/mtouch_button.c: 742:                                 if(sur
      +                          plus_deviation_check_button > 0 && surplus_deviation_check_button > surplus_deviation_th
      +                          is_button)
 17071  0E0C  082C               	movf	Button_Check_AKS_Block@surplus_deviation_check_button+1,w
 17072  0E0D  3A80               	xorlw	128
 17073  0E0E  00A6               	movwf	??_Button_Check_AKS_Block
 17074  0E0F  3080               	movlw	128
 17075  0E10  0226               	subwf	??_Button_Check_AKS_Block,w
 17076  0E11  1D03               	skipz
 17077  0E12  2E15               	goto	u6405
 17078  0E13  3001               	movlw	1
 17079  0E14  022B               	subwf	Button_Check_AKS_Block@surplus_deviation_check_button,w
 17080  0E15                     u6405:
 17081  0E15  1803               	btfsc	3,0
 17082  0E16  2DE8               	goto	l6508
 17083  0E17                     l6514:
 17084                           
 17085                           ;mcc_generated_files/mtouch/mtouch_button.c: 749:     }
 17086  0E17  3011               	movlw	17
 17087  0E18  0020               	movlb	0	; select bank0
 17088  0E19  07AD               	addwf	Button_Check_AKS_Block@check_button,f
 17089  0E1A  3000               	movlw	0
 17090  0E1B  3DAE               	addwfc	Button_Check_AKS_Block@check_button+1,f
 17091  0E1C  30DF               	movlw	223
 17092  0E1D  00A6               	movwf	??_Button_Check_AKS_Block
 17093  0E1E  3023               	movlw	35
 17094  0E1F  00A7               	movwf	??_Button_Check_AKS_Block+1
 17095  0E20  082E               	movf	Button_Check_AKS_Block@check_button+1,w
 17096  0E21  0227               	subwf	??_Button_Check_AKS_Block+1,w
 17097  0E22  1D03               	skipz
 17098  0E23  2E26               	goto	u6425
 17099  0E24  082D               	movf	Button_Check_AKS_Block@check_button,w
 17100  0E25  0226               	subwf	??_Button_Check_AKS_Block,w
 17101  0E26                     u6425:
 17102  0E26  1803               	skipnc
 17103  0E27  2DB9               	goto	l6486
 17104  0E28                     l6516:
 17105                           
 17106                           ;mcc_generated_files/mtouch/mtouch_button.c: 750:     return 0;
 17107  0E28  3000               	movlw	0
 17108  0E29  0008               	return
 17109  0E2A                     __end_of_Button_Check_AKS_Block:
 17110                           
 17111                           	psect	text109
 17112  1125                     __ptext109:	
 17113 ;; *************** function _MTOUCH_Sensor_isEnabled *****************
 17114 ;; Defined at:
 17115 ;;		line 496 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
 17116 ;; Parameters:    Size  Location     Type
 17117 ;;  sensor          1    wreg     enum E2707
 17118 ;; Auto vars:     Size  Location     Type
 17119 ;;  sensor          1    8[COMMON] enum E2707
 17120 ;; Return value:  Size  Location     Type
 17121 ;;                  1    wreg      _Bool 
 17122 ;; Registers used:
 17123 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17124 ;; Tracked objects:
 17125 ;;		On entry : 1F/0
 17126 ;;		On exit  : 1F/0
 17127 ;;		Unchanged: 0/0
 17128 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17129 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17130 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17131 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17132 ;;      Totals:         1       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17133 ;;Total ram usage:        5 bytes
 17134 ;; Hardware stack levels used: 1
 17135 ;; Hardware stack levels required when called: 5
 17136 ;; This function calls:
 17137 ;;		___wmul
 17138 ;; This function is called by:
 17139 ;;		_Button_Check_AKS_Block
 17140 ;; This function uses a non-reentrant model
 17141 ;;
 17142                           
 17143                           
 17144                           ;psect for function _MTOUCH_Sensor_isEnabled
 17145  1125                     _MTOUCH_Sensor_isEnabled:
 17146                           
 17147                           ;incstack = 0
 17148                           ; Regs used in _MTOUCH_Sensor_isEnabled: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+csta
      +                          ck]
 17149                           ;MTOUCH_Sensor_isEnabled@sensor stored from wreg
 17150  1125  00F8               	movwf	MTOUCH_Sensor_isEnabled@sensor
 17151                           
 17152                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 496: _Bool MTOUCH_Sensor_isEnabled(enum mto
      +                          uch_sensor_names sensor);mcc_generated_files/mtouch/mtouch_sensor.c: 497: {;mcc_generate
      +                          d_files/mtouch/mtouch_sensor.c: 498:     if(sensor < 11u)
 17153  1126  300B               	movlw	11
 17154  1127  0278               	subwf	MTOUCH_Sensor_isEnabled@sensor,w
 17155  1128  1803               	skipnc
 17156  1129  2944               	goto	l6386
 17157                           
 17158                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 499:         return (_Bool)mtouch_sensor[se
      +                          nsor].enabled;
 17159  112A  0878               	movf	MTOUCH_Sensor_isEnabled@sensor,w
 17160  112B  00A0               	movwf	??_MTOUCH_Sensor_isEnabled
 17161  112C  01A1               	clrf	??_MTOUCH_Sensor_isEnabled+1
 17162  112D  0820               	movf	??_MTOUCH_Sensor_isEnabled,w
 17163  112E  00F2               	movwf	___wmul@multiplier
 17164  112F  0821               	movf	??_MTOUCH_Sensor_isEnabled+1,w
 17165  1130  00F3               	movwf	___wmul@multiplier+1
 17166  1131  3009               	movlw	9
 17167  1132  00F4               	movwf	___wmul@multiplicand
 17168  1133  3000               	movlw	0
 17169  1134  00F5               	movwf	___wmul@multiplicand+1
 17170  1135  319D  2538         	fcall	___wmul
 17171  1137  3040               	movlw	64
 17172  1138  00A2               	movwf	??_MTOUCH_Sensor_isEnabled+2
 17173  1139  3023               	movlw	35
 17174  113A  00A3               	movwf	??_MTOUCH_Sensor_isEnabled+3
 17175  113B  0872               	movf	?___wmul,w
 17176  113C  0722               	addwf	??_MTOUCH_Sensor_isEnabled+2,w
 17177  113D  0086               	movwf	6
 17178  113E  0873               	movf	?___wmul+1,w
 17179  113F  3D23               	addwfc	??_MTOUCH_Sensor_isEnabled+3,w
 17180  1140  0087               	movwf	7
 17181  1141  0801               	movf	1,w
 17182  1142  3901               	andlw	1
 17183  1143  0008               	return
 17184  1144                     l6386:
 17185                           
 17186                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 501:         return 0;
 17187  1144  3000               	movlw	0
 17188  1145  0008               	return
 17189  1146                     __end_of_MTOUCH_Sensor_isEnabled:
 17190                           
 17191                           	psect	text110
 17192  11AC                     __ptext110:	
 17193 ;; *************** function _Button_Unscaled_Deviation_Get *****************
 17194 ;; Defined at:
 17195 ;;		line 610 in file "mcc_generated_files/mtouch/mtouch_button.c"
 17196 ;; Parameters:    Size  Location     Type
 17197 ;;  button          2    2[COMMON] PTR struct .
 17198 ;;		 -> mtouch_button(85), 
 17199 ;; Auto vars:     Size  Location     Type
 17200 ;;		None
 17201 ;; Return value:  Size  Location     Type
 17202 ;;                  2    2[COMMON] unsigned short 
 17203 ;; Registers used:
 17204 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 17205 ;; Tracked objects:
 17206 ;;		On entry : 1F/0
 17207 ;;		On exit  : 1F/0
 17208 ;;		Unchanged: 1F/0
 17209 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17210 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17211 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17212 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17213 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17214 ;;Total ram usage:        8 bytes
 17215 ;; Hardware stack levels used: 1
 17216 ;; Hardware stack levels required when called: 4
 17217 ;; This function calls:
 17218 ;;		Nothing
 17219 ;; This function is called by:
 17220 ;;		_Button_Check_AKS_Block
 17221 ;; This function uses a non-reentrant model
 17222 ;;
 17223                           
 17224                           
 17225                           ;psect for function _Button_Unscaled_Deviation_Get
 17226  11AC                     _Button_Unscaled_Deviation_Get:
 17227                           
 17228                           ;mcc_generated_files/mtouch/mtouch_button.c: 610: static mtouch_button_reading_t Button_
      +                          Unscaled_Deviation_Get(mtouch_button_t* button);mcc_generated_files/mtouch/mtouch_button
      +                          .c: 611: {;mcc_generated_files/mtouch/mtouch_button.c: 612:     return (mtouch_button_re
      +                          ading_t)(button->reading - (mtouch_button_reading_t)((button->baseline)>>((uint8_t)4u)))
      +                          ;
 17229                           
 17230                           ;incstack = 0
 17231                           ; Regs used in _Button_Unscaled_Deviation_Get: [wreg+fsr1l+fsr1h+status,2+status,0]
 17232  11AC  0872               	movf	Button_Unscaled_Deviation_Get@button,w
 17233  11AD  0086               	movwf	6
 17234  11AE  0873               	movf	Button_Unscaled_Deviation_Get@button+1,w
 17235  11AF  0087               	movwf	7
 17236  11B0  3146               	addfsr 1,6
 17237  11B1  3F40               	moviw [0]fsr1
 17238  11B2  00F4               	movwf	??_Button_Unscaled_Deviation_Get
 17239  11B3  3F41               	moviw [1]fsr1
 17240  11B4  00F5               	movwf	??_Button_Unscaled_Deviation_Get+1
 17241  11B5  3F42               	moviw [2]fsr1
 17242  11B6  00F6               	movwf	??_Button_Unscaled_Deviation_Get+2
 17243  11B7  3F43               	moviw [3]fsr1
 17244  11B8  00F7               	movwf	??_Button_Unscaled_Deviation_Get+3
 17245  11B9  3004               	movlw	4
 17246  11BA                     u3185:
 17247  11BA  36F7               	lsrf	??_Button_Unscaled_Deviation_Get+3,f
 17248  11BB  0CF6               	rrf	??_Button_Unscaled_Deviation_Get+2,f
 17249  11BC  0CF5               	rrf	??_Button_Unscaled_Deviation_Get+1,f
 17250  11BD  0CF4               	rrf	??_Button_Unscaled_Deviation_Get,f
 17251  11BE  0B89               	decfsz	9,f
 17252  11BF  29BA               	goto	u3185
 17253  11C0  0872               	movf	Button_Unscaled_Deviation_Get@button,w
 17254  11C1  0086               	movwf	6
 17255  11C2  0873               	movf	Button_Unscaled_Deviation_Get@button+1,w
 17256  11C3  0087               	movwf	7
 17257  11C4  3144               	addfsr 1,4
 17258  11C5  3F40               	moviw [0]fsr1
 17259  11C6  00F8               	movwf	??_Button_Unscaled_Deviation_Get+4
 17260  11C7  3F41               	moviw [1]fsr1
 17261  11C8  00F9               	movwf	??_Button_Unscaled_Deviation_Get+5
 17262  11C9  0874               	movf	??_Button_Unscaled_Deviation_Get,w
 17263  11CA  0278               	subwf	??_Button_Unscaled_Deviation_Get+4,w
 17264  11CB  00F2               	movwf	?_Button_Unscaled_Deviation_Get
 17265  11CC  0875               	movf	??_Button_Unscaled_Deviation_Get+1,w
 17266  11CD  3B79               	subwfb	??_Button_Unscaled_Deviation_Get+5,w
 17267  11CE  00F3               	movwf	?_Button_Unscaled_Deviation_Get+1
 17268  11CF  0008               	return
 17269  11D0                     __end_of_Button_Unscaled_Deviation_Get:
 17270                           
 17271                           	psect	text111
 17272  1B02                     __ptext111:	
 17273 ;; *************** function _Button_Reburst_Request *****************
 17274 ;; Defined at:
 17275 ;;		line 759 in file "mcc_generated_files/mtouch/mtouch_button.c"
 17276 ;; Parameters:    Size  Location     Type
 17277 ;;  button          2    8[COMMON] PTR struct .
 17278 ;;		 -> mtouch_button(85), 
 17279 ;; Auto vars:     Size  Location     Type
 17280 ;;		None
 17281 ;; Return value:  Size  Location     Type
 17282 ;;                  1    wreg      void 
 17283 ;; Registers used:
 17284 ;;		None
 17285 ;; Tracked objects:
 17286 ;;		On entry : 1F/0
 17287 ;;		On exit  : 1F/0
 17288 ;;		Unchanged: 1F/0
 17289 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17290 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17291 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17292 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17293 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17294 ;;Total ram usage:        2 bytes
 17295 ;; Hardware stack levels used: 1
 17296 ;; Hardware stack levels required when called: 4
 17297 ;; This function calls:
 17298 ;;		Nothing
 17299 ;; This function is called by:
 17300 ;;		_Button_State_Initializing
 17301 ;;		_Button_State_NotPressed
 17302 ;;		_Button_State_Pressed
 17303 ;;		_Button_State_PressDebounce
 17304 ;;		_Button_State_ReleaseDebounce
 17305 ;;		_MTOUCH_Button_Reburst_Request
 17306 ;; This function uses a non-reentrant model
 17307 ;;
 17308                           
 17309                           
 17310                           ;psect for function _Button_Reburst_Request
 17311  1B02                     _Button_Reburst_Request:
 17312                           
 17313                           ;mcc_generated_files/mtouch/mtouch_button.c: 759: static __attribute__((inline)) void Bu
      +                          tton_Reburst_Request(mtouch_button_t* button);mcc_generated_files/mtouch/mtouch_button.c
      +                          : 760: {;mcc_generated_files/mtouch/mtouch_button.c: 761:     button_reburst_request = 1
      +                          ;
 17314                           
 17315                           ;incstack = 0
 17316                           ; Regs used in _Button_Reburst_Request: []
 17317  1B02  01FB               	clrf	_button_reburst_request
 17318  1B03  0AFB               	incf	_button_reburst_request,f
 17319  1B04  0008               	return
 17320  1B05                     __end_of_Button_Reburst_Request:
 17321                           
 17322                           	psect	text112
 17323  0BCF                     __ptext112:	
 17324 ;; *************** function _Button_Baseline_Update *****************
 17325 ;; Defined at:
 17326 ;;		line 674 in file "mcc_generated_files/mtouch/mtouch_button.c"
 17327 ;; Parameters:    Size  Location     Type
 17328 ;;  button          2    2[COMMON] PTR struct .
 17329 ;;		 -> mtouch_button(85), 
 17330 ;; Auto vars:     Size  Location     Type
 17331 ;;		None
 17332 ;; Return value:  Size  Location     Type
 17333 ;;                  1    wreg      void 
 17334 ;; Registers used:
 17335 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 17336 ;; Tracked objects:
 17337 ;;		On entry : 1F/0
 17338 ;;		On exit  : 1F/0
 17339 ;;		Unchanged: 1F/0
 17340 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17341 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17342 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17343 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17344 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17345 ;;Total ram usage:        8 bytes
 17346 ;; Hardware stack levels used: 1
 17347 ;; Hardware stack levels required when called: 4
 17348 ;; This function calls:
 17349 ;;		Nothing
 17350 ;; This function is called by:
 17351 ;;		_Button_State_Initializing
 17352 ;;		_Button_State_NotPressed
 17353 ;;		_Button_State_Suspended
 17354 ;; This function uses a non-reentrant model
 17355 ;;
 17356                           
 17357                           
 17358                           ;psect for function _Button_Baseline_Update
 17359  0BCF                     _Button_Baseline_Update:
 17360                           
 17361                           ;mcc_generated_files/mtouch/mtouch_button.c: 674: static void Button_Baseline_Update(mto
      +                          uch_button_t* button);mcc_generated_files/mtouch/mtouch_button.c: 675: {;mcc_generated_f
      +                          iles/mtouch/mtouch_button.c: 676:     if (GIE == (uint8_t)1)
 17362                           
 17363                           ;incstack = 0
 17364                           ; Regs used in _Button_Baseline_Update: [wreg+fsr1l+fsr1h+status,2+status,0]
 17365  0BCF  1F8B               	btfss	11,7	;volatile
 17366  0BD0  2C18               	goto	l4386
 17367                           
 17368                           ;mcc_generated_files/mtouch/mtouch_button.c: 677:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 678:         GIE = (uint8_t)0;
 17369  0BD1  138B               	bcf	11,7	;volatile
 17370                           
 17371                           ;mcc_generated_files/mtouch/mtouch_button.c: 679:         button->baseline -= (button->b
      +                          aseline) >> ((uint8_t)4u);
 17372  0BD2  0872               	movf	Button_Baseline_Update@button,w
 17373  0BD3  0086               	movwf	6
 17374  0BD4  0873               	movf	Button_Baseline_Update@button+1,w
 17375  0BD5  0087               	movwf	7
 17376  0BD6  3146               	addfsr 1,6
 17377  0BD7  3F40               	moviw [0]fsr1
 17378  0BD8  00F4               	movwf	??_Button_Baseline_Update
 17379  0BD9  3F41               	moviw [1]fsr1
 17380  0BDA  00F5               	movwf	??_Button_Baseline_Update+1
 17381  0BDB  3F42               	moviw [2]fsr1
 17382  0BDC  00F6               	movwf	??_Button_Baseline_Update+2
 17383  0BDD  3F43               	moviw [3]fsr1
 17384  0BDE  00F7               	movwf	??_Button_Baseline_Update+3
 17385  0BDF  3004               	movlw	4
 17386  0BE0                     u3365:
 17387  0BE0  36F7               	lsrf	??_Button_Baseline_Update+3,f
 17388  0BE1  0CF6               	rrf	??_Button_Baseline_Update+2,f
 17389  0BE2  0CF5               	rrf	??_Button_Baseline_Update+1,f
 17390  0BE3  0CF4               	rrf	??_Button_Baseline_Update,f
 17391  0BE4  0B89               	decfsz	9,f
 17392  0BE5  2BE0               	goto	u3365
 17393  0BE6  0872               	movf	Button_Baseline_Update@button,w
 17394  0BE7  0086               	movwf	6
 17395  0BE8  0873               	movf	Button_Baseline_Update@button+1,w
 17396  0BE9  0087               	movwf	7
 17397  0BEA  3146               	addfsr 1,6
 17398  0BEB  0874               	movf	??_Button_Baseline_Update,w
 17399  0BEC  0281               	subwf	1,f
 17400  0BED  3141               	addfsr 1,1
 17401  0BEE  0875               	movf	??_Button_Baseline_Update+1,w
 17402  0BEF  3B81               	subwfb	1,f
 17403  0BF0  3141               	addfsr 1,1
 17404  0BF1  0876               	movf	??_Button_Baseline_Update+2,w
 17405  0BF2  3B81               	subwfb	1,f
 17406  0BF3  3141               	addfsr 1,1
 17407  0BF4  0877               	movf	??_Button_Baseline_Update+3,w
 17408  0BF5  3B81               	subwfb	1,f
 17409  0BF6  317D               	addfsr 1,-3
 17410                           
 17411                           ;mcc_generated_files/mtouch/mtouch_button.c: 680:         button->baseline += button->re
      +                          ading;
 17412  0BF7  0872               	movf	Button_Baseline_Update@button,w
 17413  0BF8  0086               	movwf	6
 17414  0BF9  0873               	movf	Button_Baseline_Update@button+1,w
 17415  0BFA  0087               	movwf	7
 17416  0BFB  3144               	addfsr 1,4
 17417  0BFC  3F40               	moviw [0]fsr1
 17418  0BFD  00F4               	movwf	??_Button_Baseline_Update
 17419  0BFE  3F41               	moviw [1]fsr1
 17420  0BFF  00F5               	movwf	??_Button_Baseline_Update+1
 17421  0C00  0874               	movf	??_Button_Baseline_Update,w
 17422  0C01  00F6               	movwf	??_Button_Baseline_Update+2
 17423  0C02  0875               	movf	??_Button_Baseline_Update+1,w
 17424  0C03  00F7               	movwf	??_Button_Baseline_Update+3
 17425  0C04  01F8               	clrf	??_Button_Baseline_Update+4
 17426  0C05  01F9               	clrf	??_Button_Baseline_Update+5
 17427  0C06  0872               	movf	Button_Baseline_Update@button,w
 17428  0C07  0086               	movwf	6
 17429  0C08  0873               	movf	Button_Baseline_Update@button+1,w
 17430  0C09  0087               	movwf	7
 17431  0C0A  3146               	addfsr 1,6
 17432  0C0B  0876               	movf	??_Button_Baseline_Update+2,w
 17433  0C0C  0781               	addwf	1,f
 17434  0C0D  3141               	addfsr 1,1
 17435  0C0E  0877               	movf	??_Button_Baseline_Update+3,w
 17436  0C0F  3D81               	addwfc	1,f
 17437  0C10  3141               	addfsr 1,1
 17438  0C11  0878               	movf	??_Button_Baseline_Update+4,w
 17439  0C12  3D81               	addwfc	1,f
 17440  0C13  3141               	addfsr 1,1
 17441  0C14  0879               	movf	??_Button_Baseline_Update+5,w
 17442  0C15  3D81               	addwfc	1,f
 17443                           
 17444                           ;mcc_generated_files/mtouch/mtouch_button.c: 681:         GIE = (uint8_t)1;
 17445  0C16  178B               	bsf	11,7	;volatile
 17446                           
 17447                           ;mcc_generated_files/mtouch/mtouch_button.c: 682:     }
 17448  0C17  0008               	return
 17449  0C18                     l4386:
 17450                           
 17451                           ;mcc_generated_files/mtouch/mtouch_button.c: 684:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 685:         button->baseline -= (button->baseline) >> ((uint8_t)4u);
 17452  0C18  0872               	movf	Button_Baseline_Update@button,w
 17453  0C19  0086               	movwf	6
 17454  0C1A  0873               	movf	Button_Baseline_Update@button+1,w
 17455  0C1B  0087               	movwf	7
 17456  0C1C  3146               	addfsr 1,6
 17457  0C1D  3F40               	moviw [0]fsr1
 17458  0C1E  00F4               	movwf	??_Button_Baseline_Update
 17459  0C1F  3F41               	moviw [1]fsr1
 17460  0C20  00F5               	movwf	??_Button_Baseline_Update+1
 17461  0C21  3F42               	moviw [2]fsr1
 17462  0C22  00F6               	movwf	??_Button_Baseline_Update+2
 17463  0C23  3F43               	moviw [3]fsr1
 17464  0C24  00F7               	movwf	??_Button_Baseline_Update+3
 17465  0C25  3004               	movlw	4
 17466  0C26                     u3375:
 17467  0C26  36F7               	lsrf	??_Button_Baseline_Update+3,f
 17468  0C27  0CF6               	rrf	??_Button_Baseline_Update+2,f
 17469  0C28  0CF5               	rrf	??_Button_Baseline_Update+1,f
 17470  0C29  0CF4               	rrf	??_Button_Baseline_Update,f
 17471  0C2A  0B89               	decfsz	9,f
 17472  0C2B  2C26               	goto	u3375
 17473  0C2C  0872               	movf	Button_Baseline_Update@button,w
 17474  0C2D  0086               	movwf	6
 17475  0C2E  0873               	movf	Button_Baseline_Update@button+1,w
 17476  0C2F  0087               	movwf	7
 17477  0C30  3146               	addfsr 1,6
 17478  0C31  0874               	movf	??_Button_Baseline_Update,w
 17479  0C32  0281               	subwf	1,f
 17480  0C33  3141               	addfsr 1,1
 17481  0C34  0875               	movf	??_Button_Baseline_Update+1,w
 17482  0C35  3B81               	subwfb	1,f
 17483  0C36  3141               	addfsr 1,1
 17484  0C37  0876               	movf	??_Button_Baseline_Update+2,w
 17485  0C38  3B81               	subwfb	1,f
 17486  0C39  3141               	addfsr 1,1
 17487  0C3A  0877               	movf	??_Button_Baseline_Update+3,w
 17488  0C3B  3B81               	subwfb	1,f
 17489  0C3C  317D               	addfsr 1,-3
 17490                           
 17491                           ;mcc_generated_files/mtouch/mtouch_button.c: 686:         button->baseline += button->re
      +                          ading;
 17492  0C3D  0872               	movf	Button_Baseline_Update@button,w
 17493  0C3E  0086               	movwf	6
 17494  0C3F  0873               	movf	Button_Baseline_Update@button+1,w
 17495  0C40  0087               	movwf	7
 17496  0C41  3144               	addfsr 1,4
 17497  0C42  3F40               	moviw [0]fsr1
 17498  0C43  00F4               	movwf	??_Button_Baseline_Update
 17499  0C44  3F41               	moviw [1]fsr1
 17500  0C45  00F5               	movwf	??_Button_Baseline_Update+1
 17501  0C46  0874               	movf	??_Button_Baseline_Update,w
 17502  0C47  00F6               	movwf	??_Button_Baseline_Update+2
 17503  0C48  0875               	movf	??_Button_Baseline_Update+1,w
 17504  0C49  00F7               	movwf	??_Button_Baseline_Update+3
 17505  0C4A  01F8               	clrf	??_Button_Baseline_Update+4
 17506  0C4B  01F9               	clrf	??_Button_Baseline_Update+5
 17507  0C4C  0872               	movf	Button_Baseline_Update@button,w
 17508  0C4D  0086               	movwf	6
 17509  0C4E  0873               	movf	Button_Baseline_Update@button+1,w
 17510  0C4F  0087               	movwf	7
 17511  0C50  3146               	addfsr 1,6
 17512  0C51  0876               	movf	??_Button_Baseline_Update+2,w
 17513  0C52  0781               	addwf	1,f
 17514  0C53  3141               	addfsr 1,1
 17515  0C54  0877               	movf	??_Button_Baseline_Update+3,w
 17516  0C55  3D81               	addwfc	1,f
 17517  0C56  3141               	addfsr 1,1
 17518  0C57  0878               	movf	??_Button_Baseline_Update+4,w
 17519  0C58  3D81               	addwfc	1,f
 17520  0C59  3141               	addfsr 1,1
 17521  0C5A  0879               	movf	??_Button_Baseline_Update+5,w
 17522  0C5B  3D81               	addwfc	1,f
 17523  0C5C  0008               	return
 17524  0C5D                     __end_of_Button_Baseline_Update:
 17525                           
 17526                           	psect	text113
 17527  1248                     __ptext113:	
 17528 ;; *************** function _Button_Baseline_Initialize *****************
 17529 ;; Defined at:
 17530 ;;		line 668 in file "mcc_generated_files/mtouch/mtouch_button.c"
 17531 ;; Parameters:    Size  Location     Type
 17532 ;;  button          2    5[BANK0 ] PTR struct .
 17533 ;;		 -> mtouch_button(85), 
 17534 ;; Auto vars:     Size  Location     Type
 17535 ;;		None
 17536 ;; Return value:  Size  Location     Type
 17537 ;;                  1    wreg      void 
 17538 ;; Registers used:
 17539 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17540 ;; Tracked objects:
 17541 ;;		On entry : 1F/0
 17542 ;;		On exit  : 1F/0
 17543 ;;		Unchanged: 0/0
 17544 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17545 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17546 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17547 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17548 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17549 ;;Total ram usage:        6 bytes
 17550 ;; Hardware stack levels used: 1
 17551 ;; Hardware stack levels required when called: 6
 17552 ;; This function calls:
 17553 ;;		_MTOUCH_Sensor_RawSample_Get
 17554 ;; This function is called by:
 17555 ;;		_Button_State_Initializing
 17556 ;; This function uses a non-reentrant model
 17557 ;;
 17558                           
 17559                           
 17560                           ;psect for function _Button_Baseline_Initialize
 17561  1248                     _Button_Baseline_Initialize:
 17562                           
 17563                           ;mcc_generated_files/mtouch/mtouch_button.c: 668: static void Button_Baseline_Initialize
      +                          (mtouch_button_t* button);mcc_generated_files/mtouch/mtouch_button.c: 669: {;mcc_generat
      +                          ed_files/mtouch/mtouch_button.c: 670:     button->baseline = MTOUCH_Sensor_RawSample_Get
      +                          (button->sensor);
 17564                           
 17565                           ;incstack = 0
 17566                           ; Regs used in _Button_Baseline_Initialize: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
 17567  1248  0825               	movf	Button_Baseline_Initialize@button,w
 17568  1249  0086               	movwf	6
 17569  124A  0826               	movf	Button_Baseline_Initialize@button+1,w
 17570  124B  0087               	movwf	7
 17571  124C  3141               	addfsr 1,1
 17572  124D  0801               	movf	1,w
 17573  124E  3191  2188  3192   	fcall	_MTOUCH_Sensor_RawSample_Get
 17574  1251  0878               	movf	?_MTOUCH_Sensor_RawSample_Get,w
 17575  1252  00A7               	movwf	??_Button_Baseline_Initialize
 17576  1253  0879               	movf	?_MTOUCH_Sensor_RawSample_Get+1,w
 17577  1254  00A8               	movwf	??_Button_Baseline_Initialize+1
 17578  1255  01A9               	clrf	??_Button_Baseline_Initialize+2
 17579  1256  01AA               	clrf	??_Button_Baseline_Initialize+3
 17580  1257  0825               	movf	Button_Baseline_Initialize@button,w
 17581  1258  0086               	movwf	6
 17582  1259  0826               	movf	Button_Baseline_Initialize@button+1,w
 17583  125A  0087               	movwf	7
 17584  125B  3146               	addfsr 1,6
 17585  125C  0827               	movf	??_Button_Baseline_Initialize,w
 17586  125D  3FC0               	movwi [0]fsr1
 17587  125E  0828               	movf	??_Button_Baseline_Initialize+1,w
 17588  125F  3FC1               	movwi [1]fsr1
 17589  1260  0829               	movf	??_Button_Baseline_Initialize+2,w
 17590  1261  3FC2               	movwi [2]fsr1
 17591  1262  082A               	movf	??_Button_Baseline_Initialize+3,w
 17592  1263  3FC3               	movwi [3]fsr1
 17593                           
 17594                           ;mcc_generated_files/mtouch/mtouch_button.c: 671:     button->baseline <<= ((uint8_t)4u)
      +                          ;
 17595  1264  0825               	movf	Button_Baseline_Initialize@button,w
 17596  1265  0086               	movwf	6
 17597  1266  0826               	movf	Button_Baseline_Initialize@button+1,w
 17598  1267  0087               	movwf	7
 17599  1268  3146               	addfsr 1,6
 17600  1269  3004               	movlw	4
 17601  126A                     u6335:
 17602  126A  3581               	lslf	1,f
 17603  126B  3141               	addfsr 1,1
 17604  126C  0D81               	rlf	1,f
 17605  126D  3141               	addfsr 1,1
 17606  126E  0D81               	rlf	1,f
 17607  126F  3141               	addfsr 1,1
 17608  1270  0D81               	rlf	1,f
 17609  1271  317D               	addfsr 1,-3
 17610  1272  0B89               	decfsz	9,f
 17611  1273  2A6A               	goto	u6335
 17612  1274  0008               	return
 17613  1275                     __end_of_Button_Baseline_Initialize:
 17614                           
 17615                           	psect	text114
 17616  1BE7                     __ptext114:	
 17617 ;; *************** function _Button_Reading_Update *****************
 17618 ;; Defined at:
 17619 ;;		line 641 in file "mcc_generated_files/mtouch/mtouch_button.c"
 17620 ;; Parameters:    Size  Location     Type
 17621 ;;  button          2    9[BANK0 ] PTR struct .
 17622 ;;		 -> mtouch_button(85), 
 17623 ;; Auto vars:     Size  Location     Type
 17624 ;;		None
 17625 ;; Return value:  Size  Location     Type
 17626 ;;                  1    wreg      void 
 17627 ;; Registers used:
 17628 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17629 ;; Tracked objects:
 17630 ;;		On entry : 1F/0
 17631 ;;		On exit  : 1F/0
 17632 ;;		Unchanged: 0/0
 17633 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17634 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17635 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17636 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17637 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17638 ;;Total ram usage:        2 bytes
 17639 ;; Hardware stack levels used: 1
 17640 ;; Hardware stack levels required when called: 7
 17641 ;; This function calls:
 17642 ;;		_Button_Reading_Update_Helper
 17643 ;; This function is called by:
 17644 ;;		_Button_Service
 17645 ;; This function uses a non-reentrant model
 17646 ;;
 17647                           
 17648                           
 17649                           ;psect for function _Button_Reading_Update
 17650  1BE7                     _Button_Reading_Update:
 17651                           
 17652                           ;mcc_generated_files/mtouch/mtouch_button.c: 641: static void Button_Reading_Update(mtou
      +                          ch_button_t* button);mcc_generated_files/mtouch/mtouch_button.c: 642: {;mcc_generated_fi
      +                          les/mtouch/mtouch_button.c: 643:     if (GIE == (uint8_t) 1)
 17653                           
 17654                           ;incstack = 0
 17655                           ; Regs used in _Button_Reading_Update: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 17656  1BE7  1F8B               	btfss	11,7	;volatile
 17657  1BE8  2BF2               	goto	l6782
 17658                           
 17659                           ;mcc_generated_files/mtouch/mtouch_button.c: 644:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 645:         GIE = (uint8_t) 0;
 17660  1BE9  138B               	bcf	11,7	;volatile
 17661                           
 17662                           ;mcc_generated_files/mtouch/mtouch_button.c: 646:         Button_Reading_Update_Helper(b
      +                          utton);
 17663  1BEA  082A               	movf	Button_Reading_Update@button+1,w
 17664  1BEB  00A6               	movwf	Button_Reading_Update_Helper@button+1
 17665  1BEC  0829               	movf	Button_Reading_Update@button,w
 17666  1BED  00A5               	movwf	Button_Reading_Update_Helper@button
 17667  1BEE  3194  24D0         	fcall	_Button_Reading_Update_Helper
 17668                           
 17669                           ;mcc_generated_files/mtouch/mtouch_button.c: 647:         GIE = (uint8_t) 1;
 17670  1BF0  178B               	bsf	11,7	;volatile
 17671                           
 17672                           ;mcc_generated_files/mtouch/mtouch_button.c: 648:     }
 17673  1BF1  0008               	return
 17674  1BF2                     l6782:
 17675                           
 17676                           ;mcc_generated_files/mtouch/mtouch_button.c: 650:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 651:         Button_Reading_Update_Helper(button);
 17677  1BF2  082A               	movf	Button_Reading_Update@button+1,w
 17678  1BF3  00A6               	movwf	Button_Reading_Update_Helper@button+1
 17679  1BF4  0829               	movf	Button_Reading_Update@button,w
 17680  1BF5  00A5               	movwf	Button_Reading_Update_Helper@button
 17681  1BF6  3194  24D0         	fcall	_Button_Reading_Update_Helper
 17682  1BF8  0008               	return
 17683  1BF9                     __end_of_Button_Reading_Update:
 17684                           
 17685                           	psect	text115
 17686  14D0                     __ptext115:	
 17687 ;; *************** function _Button_Reading_Update_Helper *****************
 17688 ;; Defined at:
 17689 ;;		line 655 in file "mcc_generated_files/mtouch/mtouch_button.c"
 17690 ;; Parameters:    Size  Location     Type
 17691 ;;  button          2    5[BANK0 ] PTR struct .
 17692 ;;		 -> mtouch_button(85), 
 17693 ;; Auto vars:     Size  Location     Type
 17694 ;;		None
 17695 ;; Return value:  Size  Location     Type
 17696 ;;                  1    wreg      void 
 17697 ;; Registers used:
 17698 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17699 ;; Tracked objects:
 17700 ;;		On entry : 1F/0
 17701 ;;		On exit  : 1F/0
 17702 ;;		Unchanged: 0/0
 17703 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17704 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17705 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17706 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17707 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17708 ;;Total ram usage:        4 bytes
 17709 ;; Hardware stack levels used: 1
 17710 ;; Hardware stack levels required when called: 6
 17711 ;; This function calls:
 17712 ;;		_MTOUCH_Sensor_RawSample_Get
 17713 ;; This function is called by:
 17714 ;;		_Button_Reading_Update
 17715 ;; This function uses a non-reentrant model
 17716 ;;
 17717                           
 17718                           
 17719                           ;psect for function _Button_Reading_Update_Helper
 17720  14D0                     _Button_Reading_Update_Helper:
 17721                           
 17722                           ;mcc_generated_files/mtouch/mtouch_button.c: 655: static void Button_Reading_Update_Help
      +                          er(mtouch_button_t* button);mcc_generated_files/mtouch/mtouch_button.c: 656: {;mcc_gener
      +                          ated_files/mtouch/mtouch_button.c: 657:     if (button->state != MTOUCH_BUTTON_STATE_ini
      +                          tializing)
 17723                           
 17724                           ;incstack = 0
 17725                           ; Regs used in _Button_Reading_Update_Helper: [wreg+fsr1l+fsr1h+status,2+status,0+pclath
      +                          +cstack]
 17726  14D0  0825               	movf	Button_Reading_Update_Helper@button,w
 17727  14D1  0086               	movwf	6
 17728  14D2  0826               	movf	Button_Reading_Update_Helper@button+1,w
 17729  14D3  0087               	movwf	7
 17730  14D4  3142               	addfsr 1,2
 17731  14D5  0801               	movf	1,w
 17732  14D6  1903               	btfsc	3,2
 17733  14D7  2D0F               	goto	l6534
 17734                           
 17735                           ;mcc_generated_files/mtouch/mtouch_button.c: 658:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 659:         button->reading -= button->reading>>((uint8_t)4u);
 17736  14D8  0825               	movf	Button_Reading_Update_Helper@button,w
 17737  14D9  0086               	movwf	6
 17738  14DA  0826               	movf	Button_Reading_Update_Helper@button+1,w
 17739  14DB  0087               	movwf	7
 17740  14DC  3144               	addfsr 1,4
 17741  14DD  3F40               	moviw [0]fsr1
 17742  14DE  00A7               	movwf	??_Button_Reading_Update_Helper
 17743  14DF  3F41               	moviw [1]fsr1
 17744  14E0  00A8               	movwf	??_Button_Reading_Update_Helper+1
 17745  14E1  3004               	movlw	4
 17746  14E2                     u6465:
 17747  14E2  36A8               	lsrf	??_Button_Reading_Update_Helper+1,f
 17748  14E3  0CA7               	rrf	??_Button_Reading_Update_Helper,f
 17749  14E4  0B89               	decfsz	9,f
 17750  14E5  2CE2               	goto	u6465
 17751  14E6  0825               	movf	Button_Reading_Update_Helper@button,w
 17752  14E7  0086               	movwf	6
 17753  14E8  0826               	movf	Button_Reading_Update_Helper@button+1,w
 17754  14E9  0087               	movwf	7
 17755  14EA  3144               	addfsr 1,4
 17756  14EB  0827               	movf	??_Button_Reading_Update_Helper,w
 17757  14EC  0281               	subwf	1,f
 17758  14ED  3141               	addfsr 1,1
 17759  14EE  0828               	movf	??_Button_Reading_Update_Helper+1,w
 17760  14EF  3B81               	subwfb	1,f
 17761  14F0  317F               	addfsr 1,-1
 17762                           
 17763                           ;mcc_generated_files/mtouch/mtouch_button.c: 660:         button->reading += MTOUCH_Sens
      +                          or_RawSample_Get(button->sensor) >> ((uint8_t)4u);
 17764  14F1  0825               	movf	Button_Reading_Update_Helper@button,w
 17765  14F2  0086               	movwf	6
 17766  14F3  0826               	movf	Button_Reading_Update_Helper@button+1,w
 17767  14F4  0087               	movwf	7
 17768  14F5  3141               	addfsr 1,1
 17769  14F6  0801               	movf	1,w
 17770  14F7  3191  2188  3194   	fcall	_MTOUCH_Sensor_RawSample_Get
 17771  14FA  0878               	movf	?_MTOUCH_Sensor_RawSample_Get,w
 17772  14FB  00A7               	movwf	??_Button_Reading_Update_Helper
 17773  14FC  0879               	movf	?_MTOUCH_Sensor_RawSample_Get+1,w
 17774  14FD  00A8               	movwf	??_Button_Reading_Update_Helper+1
 17775  14FE  3004               	movlw	4
 17776  14FF                     u6475:
 17777  14FF  36A8               	lsrf	??_Button_Reading_Update_Helper+1,f
 17778  1500  0CA7               	rrf	??_Button_Reading_Update_Helper,f
 17779  1501  0B89               	decfsz	9,f
 17780  1502  2CFF               	goto	u6475
 17781  1503  0825               	movf	Button_Reading_Update_Helper@button,w
 17782  1504  0086               	movwf	6
 17783  1505  0826               	movf	Button_Reading_Update_Helper@button+1,w
 17784  1506  0087               	movwf	7
 17785  1507  3144               	addfsr 1,4
 17786  1508  0827               	movf	??_Button_Reading_Update_Helper,w
 17787  1509  0781               	addwf	1,f
 17788  150A  3141               	addfsr 1,1
 17789  150B  0828               	movf	??_Button_Reading_Update_Helper+1,w
 17790  150C  3D81               	addwfc	1,f
 17791  150D  317F               	addfsr 1,-1
 17792                           
 17793                           ;mcc_generated_files/mtouch/mtouch_button.c: 661:     }
 17794  150E  0008               	return
 17795  150F                     l6534:
 17796                           
 17797                           ;mcc_generated_files/mtouch/mtouch_button.c: 663:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 664:         button->reading = MTOUCH_Sensor_RawSample_Get(button->sensor);
 17798  150F  0825               	movf	Button_Reading_Update_Helper@button,w
 17799  1510  0086               	movwf	6
 17800  1511  0826               	movf	Button_Reading_Update_Helper@button+1,w
 17801  1512  0087               	movwf	7
 17802  1513  3141               	addfsr 1,1
 17803  1514  0801               	movf	1,w
 17804  1515  3191  2188         	fcall	_MTOUCH_Sensor_RawSample_Get
 17805  1517  0825               	movf	Button_Reading_Update_Helper@button,w
 17806  1518  0086               	movwf	6
 17807  1519  0826               	movf	Button_Reading_Update_Helper@button+1,w
 17808  151A  0087               	movwf	7
 17809  151B  3144               	addfsr 1,4
 17810  151C  0878               	movf	?_MTOUCH_Sensor_RawSample_Get,w
 17811  151D  3FC0               	movwi [0]fsr1
 17812  151E  0879               	movf	?_MTOUCH_Sensor_RawSample_Get+1,w
 17813  151F  3FC1               	movwi [1]fsr1
 17814  1520  0008               	return
 17815  1521                     __end_of_Button_Reading_Update_Helper:
 17816                           
 17817                           	psect	text116
 17818  1188                     __ptext116:	
 17819 ;; *************** function _MTOUCH_Sensor_RawSample_Get *****************
 17820 ;; Defined at:
 17821 ;;		line 429 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
 17822 ;; Parameters:    Size  Location     Type
 17823 ;;  name            1    wreg     enum E2707
 17824 ;; Auto vars:     Size  Location     Type
 17825 ;;  name            1    4[BANK0 ] enum E2707
 17826 ;; Return value:  Size  Location     Type
 17827 ;;                  2    8[COMMON] unsigned short 
 17828 ;; Registers used:
 17829 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17830 ;; Tracked objects:
 17831 ;;		On entry : 1F/0
 17832 ;;		On exit  : 1F/0
 17833 ;;		Unchanged: 0/0
 17834 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17835 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17836 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17837 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17838 ;;      Totals:         2       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17839 ;;Total ram usage:        7 bytes
 17840 ;; Hardware stack levels used: 1
 17841 ;; Hardware stack levels required when called: 5
 17842 ;; This function calls:
 17843 ;;		___wmul
 17844 ;; This function is called by:
 17845 ;;		_Button_Reading_Update_Helper
 17846 ;;		_Button_Baseline_Initialize
 17847 ;; This function uses a non-reentrant model
 17848 ;;
 17849                           
 17850                           
 17851                           ;psect for function _MTOUCH_Sensor_RawSample_Get
 17852  1188                     _MTOUCH_Sensor_RawSample_Get:
 17853                           
 17854                           ;incstack = 0
 17855                           ; Regs used in _MTOUCH_Sensor_RawSample_Get: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
 17856                           ;MTOUCH_Sensor_RawSample_Get@name stored from wreg
 17857  1188  00A4               	movwf	MTOUCH_Sensor_RawSample_Get@name
 17858  1189  300B               	movlw	11
 17859  118A  0224               	subwf	MTOUCH_Sensor_RawSample_Get@name,w
 17860  118B  1803               	skipnc
 17861  118C  29A9               	goto	l6374
 17862  118D  0824               	movf	MTOUCH_Sensor_RawSample_Get@name,w
 17863  118E  00A0               	movwf	??_MTOUCH_Sensor_RawSample_Get
 17864  118F  01A1               	clrf	??_MTOUCH_Sensor_RawSample_Get+1
 17865  1190  0820               	movf	??_MTOUCH_Sensor_RawSample_Get,w
 17866  1191  00F2               	movwf	___wmul@multiplier
 17867  1192  0821               	movf	??_MTOUCH_Sensor_RawSample_Get+1,w
 17868  1193  00F3               	movwf	___wmul@multiplier+1
 17869  1194  3009               	movlw	9
 17870  1195  00F4               	movwf	___wmul@multiplicand
 17871  1196  3000               	movlw	0
 17872  1197  00F5               	movwf	___wmul@multiplicand+1
 17873  1198  319D  2538         	fcall	___wmul
 17874  119A  303E               	movlw	62
 17875  119B  00A2               	movwf	??_MTOUCH_Sensor_RawSample_Get+2
 17876  119C  3023               	movlw	35
 17877  119D  00A3               	movwf	??_MTOUCH_Sensor_RawSample_Get+3
 17878  119E  0872               	movf	?___wmul,w
 17879  119F  0722               	addwf	??_MTOUCH_Sensor_RawSample_Get+2,w
 17880  11A0  0086               	movwf	6
 17881  11A1  0873               	movf	?___wmul+1,w
 17882  11A2  3D23               	addwfc	??_MTOUCH_Sensor_RawSample_Get+3,w
 17883  11A3  0087               	movwf	7
 17884  11A4  3F40               	moviw [0]fsr1
 17885  11A5  00F8               	movwf	?_MTOUCH_Sensor_RawSample_Get
 17886  11A6  3F41               	moviw [1]fsr1
 17887  11A7  00F9               	movwf	?_MTOUCH_Sensor_RawSample_Get+1
 17888  11A8  0008               	return
 17889  11A9                     l6374:
 17890  11A9  01F8               	clrf	?_MTOUCH_Sensor_RawSample_Get
 17891  11AA  01F9               	clrf	?_MTOUCH_Sensor_RawSample_Get+1
 17892  11AB  0008               	return
 17893  11AC                     __end_of_MTOUCH_Sensor_RawSample_Get:
 17894                           
 17895                           	psect	text117
 17896  1D38                     __ptext117:	
 17897 ;; *************** function ___wmul *****************
 17898 ;; Defined at:
 17899 ;;		line 15 in file "/Applications/microchip/xc8/v2.32/pic/sources/c99/common/Umul16.c"
 17900 ;; Parameters:    Size  Location     Type
 17901 ;;  multiplier      2    2[COMMON] unsigned int 
 17902 ;;  multiplicand    2    4[COMMON] unsigned int 
 17903 ;; Auto vars:     Size  Location     Type
 17904 ;;  product         2    6[COMMON] unsigned int 
 17905 ;; Return value:  Size  Location     Type
 17906 ;;                  2    2[COMMON] unsigned int 
 17907 ;; Registers used:
 17908 ;;		wreg, status,2, status,0
 17909 ;; Tracked objects:
 17910 ;;		On entry : 1F/0
 17911 ;;		On exit  : 1F/0
 17912 ;;		Unchanged: 1F/0
 17913 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17914 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17915 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17916 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17917 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17918 ;;Total ram usage:        6 bytes
 17919 ;; Hardware stack levels used: 1
 17920 ;; Hardware stack levels required when called: 4
 17921 ;; This function calls:
 17922 ;;		Nothing
 17923 ;; This function is called by:
 17924 ;;		_MTOUCH_Button_Initialize
 17925 ;;		_Button_Service
 17926 ;;		_MTOUCH_Button_Tick
 17927 ;;		_MTOUCH_Button_isPressed
 17928 ;;		_MTOUCH_Button_Deviation_Get
 17929 ;;		_MTOUCH_Button_Reburst_Request
 17930 ;;		_MTOUCH_Sensor_Initialize
 17931 ;;		_Sensor_Service
 17932 ;;		_Sensor_Acq_ExecuteScan
 17933 ;;		_MTOUCH_Sensor_RawSample_Get
 17934 ;;		_MTOUCH_Sensor_Disable
 17935 ;;		_MTOUCH_Sensor_Enable
 17936 ;;		_MTOUCH_Sensor_isEnabled
 17937 ;;		_MTOUCH_Sensor_wasSampled
 17938 ;; This function uses a non-reentrant model
 17939 ;;
 17940                           
 17941                           
 17942                           ;psect for function ___wmul
 17943  1D38                     ___wmul:
 17944                           
 17945                           ;incstack = 0
 17946                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 17947  1D38  01F6               	clrf	___wmul@product
 17948  1D39  01F7               	clrf	___wmul@product+1
 17949  1D3A                     l6342:
 17950  1D3A  1C72               	btfss	___wmul@multiplier,0
 17951  1D3B  2D40               	goto	l1381
 17952  1D3C  0874               	movf	___wmul@multiplicand,w
 17953  1D3D  07F6               	addwf	___wmul@product,f
 17954  1D3E  0875               	movf	___wmul@multiplicand+1,w
 17955  1D3F  3DF7               	addwfc	___wmul@product+1,f
 17956  1D40                     l1381:
 17957  1D40  3001               	movlw	1
 17958  1D41                     u6175:
 17959  1D41  35F4               	lslf	___wmul@multiplicand,f
 17960  1D42  0DF5               	rlf	___wmul@multiplicand+1,f
 17961  1D43  0B89               	decfsz	9,f
 17962  1D44  2D41               	goto	u6175
 17963  1D45  3001               	movlw	1
 17964  1D46                     u6185:
 17965  1D46  36F3               	lsrf	___wmul@multiplier+1,f
 17966  1D47  0CF2               	rrf	___wmul@multiplier,f
 17967  1D48  0B89               	decfsz	9,f
 17968  1D49  2D46               	goto	u6185
 17969  1D4A  0872               	movf	___wmul@multiplier,w
 17970  1D4B  0473               	iorwf	___wmul@multiplier+1,w
 17971  1D4C  1D03               	btfss	3,2
 17972  1D4D  2D3A               	goto	l6342
 17973  1D4E  0877               	movf	___wmul@product+1,w
 17974  1D4F  00F3               	movwf	?___wmul+1
 17975  1D50  0876               	movf	___wmul@product,w
 17976  1D51  00F2               	movwf	?___wmul
 17977  1D52  0008               	return
 17978  1D53                     __end_of___wmul:
 17979                           
 17980                           	psect	text118
 17981  0B46                     __ptext118:	
 17982 ;; *************** function _Button_Deviation_Update *****************
 17983 ;; Defined at:
 17984 ;;		line 588 in file "mcc_generated_files/mtouch/mtouch_button.c"
 17985 ;; Parameters:    Size  Location     Type
 17986 ;;  button          2    2[COMMON] PTR struct .
 17987 ;;		 -> mtouch_button(85), 
 17988 ;; Auto vars:     Size  Location     Type
 17989 ;;  deviation       4    4[COMMON] long 
 17990 ;; Return value:  Size  Location     Type
 17991 ;;                  1    wreg      void 
 17992 ;; Registers used:
 17993 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 17994 ;; Tracked objects:
 17995 ;;		On entry : 1F/0
 17996 ;;		On exit  : 1F/0
 17997 ;;		Unchanged: 0/0
 17998 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17999 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18000 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18001 ;;      Temps:          0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18002 ;;      Totals:         6      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18003 ;;Total ram usage:       16 bytes
 18004 ;; Hardware stack levels used: 1
 18005 ;; Hardware stack levels required when called: 4
 18006 ;; This function calls:
 18007 ;;		Nothing
 18008 ;; This function is called by:
 18009 ;;		_Button_Service
 18010 ;; This function uses a non-reentrant model
 18011 ;;
 18012                           
 18013                           
 18014                           ;psect for function _Button_Deviation_Update
 18015  0B46                     _Button_Deviation_Update:
 18016                           
 18017                           ;mcc_generated_files/mtouch/mtouch_button.c: 588: static void Button_Deviation_Update(mt
      +                          ouch_button_t* button);mcc_generated_files/mtouch/mtouch_button.c: 589: {;mcc_generated_
      +                          files/mtouch/mtouch_button.c: 590:     int32_t deviation;;mcc_generated_files/mtouch/mto
      +                          uch_button.c: 592:     deviation = (int32_t)((int32_t)(button->reading) - (int32_t)((but
      +                          ton->baseline)>>((uint8_t)4u)));
 18018                           
 18019                           ;incstack = 0
 18020                           ; Regs used in _Button_Deviation_Update: [wreg+fsr1l+fsr1h+status,2+status,0]
 18021  0B46  0872               	movf	Button_Deviation_Update@button,w
 18022  0B47  0086               	movwf	6
 18023  0B48  0873               	movf	Button_Deviation_Update@button+1,w
 18024  0B49  0087               	movwf	7
 18025  0B4A  3146               	addfsr 1,6
 18026  0B4B  3F40               	moviw [0]fsr1
 18027  0B4C  00A0               	movwf	??_Button_Deviation_Update
 18028  0B4D  3F41               	moviw [1]fsr1
 18029  0B4E  00A1               	movwf	??_Button_Deviation_Update+1
 18030  0B4F  3F42               	moviw [2]fsr1
 18031  0B50  00A2               	movwf	??_Button_Deviation_Update+2
 18032  0B51  3F43               	moviw [3]fsr1
 18033  0B52  00A3               	movwf	??_Button_Deviation_Update+3
 18034  0B53  3004               	movlw	4
 18035  0B54                     u3925:
 18036  0B54  36A3               	lsrf	??_Button_Deviation_Update+3,f
 18037  0B55  0CA2               	rrf	??_Button_Deviation_Update+2,f
 18038  0B56  0CA1               	rrf	??_Button_Deviation_Update+1,f
 18039  0B57  0CA0               	rrf	??_Button_Deviation_Update,f
 18040  0B58  0B89               	decfsz	9,f
 18041  0B59  2B54               	goto	u3925
 18042  0B5A  0872               	movf	Button_Deviation_Update@button,w
 18043  0B5B  0086               	movwf	6
 18044  0B5C  0873               	movf	Button_Deviation_Update@button+1,w
 18045  0B5D  0087               	movwf	7
 18046  0B5E  3144               	addfsr 1,4
 18047  0B5F  3F40               	moviw [0]fsr1
 18048  0B60  00A4               	movwf	??_Button_Deviation_Update+4
 18049  0B61  3F41               	moviw [1]fsr1
 18050  0B62  00A5               	movwf	??_Button_Deviation_Update+5
 18051  0B63  0824               	movf	??_Button_Deviation_Update+4,w
 18052  0B64  00A6               	movwf	??_Button_Deviation_Update+6
 18053  0B65  0825               	movf	??_Button_Deviation_Update+5,w
 18054  0B66  00A7               	movwf	??_Button_Deviation_Update+7
 18055  0B67  01A8               	clrf	??_Button_Deviation_Update+8
 18056  0B68  01A9               	clrf	??_Button_Deviation_Update+9
 18057  0B69  0820               	movf	??_Button_Deviation_Update,w
 18058  0B6A  02A6               	subwf	??_Button_Deviation_Update+6,f
 18059  0B6B  0821               	movf	??_Button_Deviation_Update+1,w
 18060  0B6C  3BA7               	subwfb	??_Button_Deviation_Update+7,f
 18061  0B6D  0822               	movf	??_Button_Deviation_Update+2,w
 18062  0B6E  3BA8               	subwfb	??_Button_Deviation_Update+8,f
 18063  0B6F  0823               	movf	??_Button_Deviation_Update+3,w
 18064  0B70  3BA9               	subwfb	??_Button_Deviation_Update+9,f
 18065  0B71  0829               	movf	??_Button_Deviation_Update+9,w
 18066  0B72  00F7               	movwf	Button_Deviation_Update@deviation+3
 18067  0B73  0828               	movf	??_Button_Deviation_Update+8,w
 18068  0B74  00F6               	movwf	Button_Deviation_Update@deviation+2
 18069  0B75  0827               	movf	??_Button_Deviation_Update+7,w
 18070  0B76  00F5               	movwf	Button_Deviation_Update@deviation+1
 18071  0B77  0826               	movf	??_Button_Deviation_Update+6,w
 18072  0B78  00F4               	movwf	Button_Deviation_Update@deviation
 18073                           
 18074                           ;mcc_generated_files/mtouch/mtouch_button.c: 595:     deviation = deviation >> (button->
      +                          scaling);
 18075  0B79  0874               	movf	Button_Deviation_Update@deviation,w
 18076  0B7A  00A0               	movwf	??_Button_Deviation_Update
 18077  0B7B  0875               	movf	Button_Deviation_Update@deviation+1,w
 18078  0B7C  00A1               	movwf	??_Button_Deviation_Update+1
 18079  0B7D  0876               	movf	Button_Deviation_Update@deviation+2,w
 18080  0B7E  00A2               	movwf	??_Button_Deviation_Update+2
 18081  0B7F  0877               	movf	Button_Deviation_Update@deviation+3,w
 18082  0B80  00A3               	movwf	??_Button_Deviation_Update+3
 18083  0B81  0872               	movf	Button_Deviation_Update@button,w
 18084  0B82  0086               	movwf	6
 18085  0B83  0873               	movf	Button_Deviation_Update@button+1,w
 18086  0B84  0087               	movwf	7
 18087  0B85  3150               	addfsr 1,16
 18088  0B86  0A01               	incf	1,w
 18089  0B87  2B8C               	goto	u3930
 18090  0B88                     u3935:
 18091  0B88  37A3               	asrf	??_Button_Deviation_Update+3,f
 18092  0B89  0CA2               	rrf	??_Button_Deviation_Update+2,f
 18093  0B8A  0CA1               	rrf	??_Button_Deviation_Update+1,f
 18094  0B8B  0CA0               	rrf	??_Button_Deviation_Update,f
 18095  0B8C                     u3930:
 18096  0B8C  0B89               	decfsz	9,f
 18097  0B8D  2B88               	goto	u3935
 18098  0B8E  0823               	movf	??_Button_Deviation_Update+3,w
 18099  0B8F  00F7               	movwf	Button_Deviation_Update@deviation+3
 18100  0B90  0822               	movf	??_Button_Deviation_Update+2,w
 18101  0B91  00F6               	movwf	Button_Deviation_Update@deviation+2
 18102  0B92  0821               	movf	??_Button_Deviation_Update+1,w
 18103  0B93  00F5               	movwf	Button_Deviation_Update@deviation+1
 18104  0B94  0820               	movf	??_Button_Deviation_Update,w
 18105  0B95  00F4               	movwf	Button_Deviation_Update@deviation
 18106                           
 18107                           ;mcc_generated_files/mtouch/mtouch_button.c: 598:     if (deviation > ((0x7f)))
 18108  0B96  1BF7               	btfsc	Button_Deviation_Update@deviation+3,7
 18109  0B97  2BAD               	goto	l4744
 18110  0B98  0877               	movf	Button_Deviation_Update@deviation+3,w
 18111  0B99  1D03               	btfss	3,2
 18112  0B9A  2BA5               	goto	l4742
 18113  0B9B  0876               	movf	Button_Deviation_Update@deviation+2,w
 18114  0B9C  1D03               	btfss	3,2
 18115  0B9D  2BA5               	goto	l4742
 18116  0B9E  0875               	movf	Button_Deviation_Update@deviation+1,w
 18117  0B9F  1D03               	btfss	3,2
 18118  0BA0  2BA5               	goto	l4742
 18119  0BA1  3080               	movlw	128
 18120  0BA2  0274               	subwf	Button_Deviation_Update@deviation,w
 18121  0BA3  1C03               	btfss	3,0
 18122  0BA4  2BAD               	goto	l4744
 18123  0BA5                     l4742:
 18124                           
 18125                           ;mcc_generated_files/mtouch/mtouch_button.c: 599:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 600:         deviation = ((0x7f));
 18126  0BA5  3000               	movlw	0
 18127  0BA6  00F7               	movwf	Button_Deviation_Update@deviation+3
 18128  0BA7  3000               	movlw	0
 18129  0BA8  00F6               	movwf	Button_Deviation_Update@deviation+2
 18130  0BA9  3000               	movlw	0
 18131  0BAA  00F5               	movwf	Button_Deviation_Update@deviation+1
 18132  0BAB  307F               	movlw	127
 18133  0BAC  00F4               	movwf	Button_Deviation_Update@deviation
 18134  0BAD                     l4744:
 18135                           
 18136                           ;mcc_generated_files/mtouch/mtouch_button.c: 602:     if (deviation < ((-1-0x7f)))
 18137  0BAD  1FF7               	btfss	Button_Deviation_Update@deviation+3,7
 18138  0BAE  2BC1               	goto	l4748
 18139  0BAF  3080               	movlw	128
 18140  0BB0  0274               	subwf	Button_Deviation_Update@deviation,w
 18141  0BB1  30FF               	movlw	255
 18142  0BB2  3B75               	subwfb	Button_Deviation_Update@deviation+1,w
 18143  0BB3  30FF               	movlw	255
 18144  0BB4  3B76               	subwfb	Button_Deviation_Update@deviation+2,w
 18145  0BB5  30FF               	movlw	255
 18146  0BB6  3B77               	subwfb	Button_Deviation_Update@deviation+3,w
 18147  0BB7  1803               	btfsc	3,0
 18148  0BB8  2BC1               	goto	l4748
 18149                           
 18150                           ;mcc_generated_files/mtouch/mtouch_button.c: 603:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 604:         deviation = ((-1-0x7f));
 18151  0BB9  30FF               	movlw	255
 18152  0BBA  00F7               	movwf	Button_Deviation_Update@deviation+3
 18153  0BBB  30FF               	movlw	255
 18154  0BBC  00F6               	movwf	Button_Deviation_Update@deviation+2
 18155  0BBD  30FF               	movlw	255
 18156  0BBE  00F5               	movwf	Button_Deviation_Update@deviation+1
 18157  0BBF  3080               	movlw	128
 18158  0BC0  00F4               	movwf	Button_Deviation_Update@deviation
 18159  0BC1                     l4748:
 18160                           
 18161                           ;mcc_generated_files/mtouch/mtouch_button.c: 607:     button->deviation = (mtouch_button
      +                          _deviation_t)deviation;
 18162  0BC1  0872               	movf	Button_Deviation_Update@button,w
 18163  0BC2  3E0A               	addlw	10
 18164  0BC3  0020               	movlb	0	; select bank0
 18165  0BC4  00A0               	movwf	??_Button_Deviation_Update
 18166  0BC5  3000               	movlw	0
 18167  0BC6  3D73               	addwfc	Button_Deviation_Update@button+1,w
 18168  0BC7  00A1               	movwf	??_Button_Deviation_Update+1
 18169  0BC8  0820               	movf	??_Button_Deviation_Update,w
 18170  0BC9  0086               	movwf	6
 18171  0BCA  0821               	movf	??_Button_Deviation_Update+1,w
 18172  0BCB  0087               	movwf	7
 18173  0BCC  0874               	movf	Button_Deviation_Update@deviation,w
 18174  0BCD  0081               	movwf	1
 18175  0BCE  0008               	return
 18176  0BCF                     __end_of_Button_Deviation_Update:
 18177                           
 18178                           	psect	text119
 18179  1AFE                     __ptext119:	
 18180 ;; *************** function _Button_Reburst_Clear *****************
 18181 ;; Defined at:
 18182 ;;		line 764 in file "mcc_generated_files/mtouch/mtouch_button.c"
 18183 ;; Parameters:    Size  Location     Type
 18184 ;;		None
 18185 ;; Auto vars:     Size  Location     Type
 18186 ;;		None
 18187 ;; Return value:  Size  Location     Type
 18188 ;;                  1    wreg      void 
 18189 ;; Registers used:
 18190 ;;		status,2
 18191 ;; Tracked objects:
 18192 ;;		On entry : 1F/0
 18193 ;;		On exit  : 1F/0
 18194 ;;		Unchanged: 1F/0
 18195 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18196 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18197 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18198 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18199 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18200 ;;Total ram usage:        0 bytes
 18201 ;; Hardware stack levels used: 1
 18202 ;; Hardware stack levels required when called: 4
 18203 ;; This function calls:
 18204 ;;		Nothing
 18205 ;; This function is called by:
 18206 ;;		_MTOUCH_Button_ServiceAll
 18207 ;; This function uses a non-reentrant model
 18208 ;;
 18209                           
 18210                           
 18211                           ;psect for function _Button_Reburst_Clear
 18212  1AFE                     _Button_Reburst_Clear:
 18213                           
 18214                           ;mcc_generated_files/mtouch/mtouch_button.c: 766:     button_reburst_request = 0;
 18215                           
 18216                           ;incstack = 0
 18217                           ; Regs used in _Button_Reburst_Clear: [status,2]
 18218  1AFE  01FB               	clrf	_button_reburst_request
 18219  1AFF  0008               	return
 18220  1B00                     __end_of_Button_Reburst_Clear:
 18221                           
 18222                           	psect	text120
 18223  1B3D                     __ptext120:	
 18224 ;; *************** function _EUSART_Write *****************
 18225 ;; Defined at:
 18226 ;;		line 132 in file "mcc_generated_files/eusart.c"
 18227 ;; Parameters:    Size  Location     Type
 18228 ;;  txData          1    wreg     unsigned char 
 18229 ;; Auto vars:     Size  Location     Type
 18230 ;;  txData          1    2[COMMON] unsigned char 
 18231 ;; Return value:  Size  Location     Type
 18232 ;;                  1    wreg      void 
 18233 ;; Registers used:
 18234 ;;		wreg
 18235 ;; Tracked objects:
 18236 ;;		On entry : 1E/1
 18237 ;;		On exit  : 1F/3
 18238 ;;		Unchanged: 0/0
 18239 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18240 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18241 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18242 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18243 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18244 ;;Total ram usage:        1 bytes
 18245 ;; Hardware stack levels used: 1
 18246 ;; Hardware stack levels required when called: 4
 18247 ;; This function calls:
 18248 ;;		Nothing
 18249 ;; This function is called by:
 18250 ;;		_main
 18251 ;; This function uses a non-reentrant model
 18252 ;;
 18253                           
 18254                           
 18255                           ;psect for function _EUSART_Write
 18256  1B3D                     _EUSART_Write:
 18257                           
 18258                           ;incstack = 0
 18259                           ; Regs used in _EUSART_Write: [wreg]
 18260                           ;EUSART_Write@txData stored from wreg
 18261  1B3D  00F2               	movwf	EUSART_Write@txData
 18262  1B3E                     l1098:	
 18263                           ;mcc_generated_files/eusart.c: 135:     {;mcc_generated_files/eusart.c: 136:     }
 18264                           
 18265                           
 18266                           ;mcc_generated_files/eusart.c: 134:     while(0 == PIR1bits.TXIF)
 18267  1B3E  0020               	movlb	0	; select bank0
 18268  1B3F  1E11               	btfss	17,4	;volatile
 18269  1B40  2B3E               	goto	l1098
 18270                           
 18271                           ;mcc_generated_files/eusart.c: 138:     TXREG = txData;
 18272  1B41  0872               	movf	EUSART_Write@txData,w
 18273  1B42  0023               	movlb	3	; select bank3
 18274  1B43  009A               	movwf	26	;volatile
 18275  1B44  0008               	return
 18276  1B45                     __end_of_EUSART_Write:
 18277                           
 18278                           	psect	text121
 18279  1BD5                     __ptext121:	
 18280 ;; *************** function _DELAY_milliseconds *****************
 18281 ;; Defined at:
 18282 ;;		line 38 in file "mcc_generated_files/delay.c"
 18283 ;; Parameters:    Size  Location     Type
 18284 ;;  milliseconds    2    2[COMMON] unsigned short 
 18285 ;; Auto vars:     Size  Location     Type
 18286 ;;		None
 18287 ;; Return value:  Size  Location     Type
 18288 ;;                  1    wreg      void 
 18289 ;; Registers used:
 18290 ;;		wreg, status,2, status,0
 18291 ;; Tracked objects:
 18292 ;;		On entry : 1F/2
 18293 ;;		On exit  : 0/0
 18294 ;;		Unchanged: 0/0
 18295 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18296 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18297 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18298 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18299 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18300 ;;Total ram usage:        3 bytes
 18301 ;; Hardware stack levels used: 1
 18302 ;; Hardware stack levels required when called: 4
 18303 ;; This function calls:
 18304 ;;		Nothing
 18305 ;; This function is called by:
 18306 ;;		_main
 18307 ;; This function uses a non-reentrant model
 18308 ;;
 18309                           
 18310                           
 18311                           ;psect for function _DELAY_milliseconds
 18312  1BD5                     _DELAY_milliseconds:
 18313  1BD5                     l5446:	
 18314                           ;mcc_generated_files/delay.c: 39:     while(milliseconds--){
 18315                           
 18316                           ;incstack = 0
 18317                           ; Regs used in _DELAY_milliseconds: [wreg+status,2+status,0]
 18318                           
 18319                           
 18320                           ;mcc_generated_files/delay.c: 39:     while(milliseconds--){
 18321  1BD5  3001               	movlw	1
 18322  1BD6  02F2               	subwf	DELAY_milliseconds@milliseconds,f
 18323  1BD7  3000               	movlw	0
 18324  1BD8  3BF3               	subwfb	DELAY_milliseconds@milliseconds+1,f
 18325  1BD9  0A72               	incf	DELAY_milliseconds@milliseconds,w
 18326  1BDA  1903               	btfsc	3,2
 18327  1BDB  0A73               	incf	DELAY_milliseconds@milliseconds+1,w
 18328  1BDC  1903               	btfsc	3,2
 18329  1BDD  0008               	return
 18330                           
 18331                           ;mcc_generated_files/delay.c: 40:         _delay((unsigned long)((1)*(32000000/4000.0)))
      +                          ;
 18332  1BDE  300B               	movlw	11
 18333  1BDF  00F4               	movwf	??_DELAY_milliseconds
 18334  1BE0  3062               	movlw	98
 18335  1BE1                     u8347:
 18336  1BE1  0B89               	decfsz	9,f
 18337  1BE2  2BE1               	goto	u8347
 18338  1BE3  0BF4               	decfsz	??_DELAY_milliseconds,f
 18339  1BE4  2BE1               	goto	u8347
 18340  1BE5  3200               	nop2
 18341  1BE6  2BD5               	goto	l5446
 18342  1BE7                     __end_of_DELAY_milliseconds:
 18343                           
 18344                           	psect	intentry
 18345  0004                     __pintentry:	
 18346 ;; *************** function _INTERRUPT_InterruptManager *****************
 18347 ;; Defined at:
 18348 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 18349 ;; Parameters:    Size  Location     Type
 18350 ;;		None
 18351 ;; Auto vars:     Size  Location     Type
 18352 ;;		None
 18353 ;; Return value:  Size  Location     Type
 18354 ;;                  1    wreg      void 
 18355 ;; Registers used:
 18356 ;;		wreg, status,2, status,0, pclath, cstack
 18357 ;; Tracked objects:
 18358 ;;		On entry : 0/0
 18359 ;;		On exit  : 0/0
 18360 ;;		Unchanged: 0/0
 18361 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18362 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18363 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18364 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18365 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18366 ;;Total ram usage:        0 bytes
 18367 ;; Hardware stack levels used: 1
 18368 ;; Hardware stack levels required when called: 3
 18369 ;; This function calls:
 18370 ;;		_TMR1_ISR
 18371 ;; This function is called by:
 18372 ;;		Interrupt level 1
 18373 ;; This function uses a non-reentrant model
 18374 ;;
 18375                           
 18376  0004                     _INTERRUPT_InterruptManager:
 18377                           
 18378                           ;incstack = 0
 18379  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
 18380                           
 18381                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+status,2+status,0+pclath+cstack]
 18382  0005  3180               	pagesel	$
 18383                           
 18384                           ;mcc_generated_files/interrupt_manager.c: 55:     if(INTCONbits.PEIE == 1)
 18385  0006  1F0B               	btfss	11,6	;volatile
 18386  0007  2810               	goto	i1l1231
 18387                           
 18388                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         if(PIE1bits.TMR1IE == 1 && PIR1bits.TMR1IF == 1)
 18389  0008  0021               	movlb	1	; select bank1
 18390  0009  1C11               	btfss	17,0	;volatile
 18391  000A  2810               	goto	i1l1231
 18392  000B  0020               	movlb	0	; select bank0
 18393  000C  1C11               	btfss	17,0	;volatile
 18394  000D  2810               	goto	i1l1231
 18395                           
 18396                           ;mcc_generated_files/interrupt_manager.c: 58:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 59:             TMR1_ISR();
 18397  000E  319C  2453         	fcall	_TMR1_ISR
 18398  0010                     i1l1231:	
 18399                           ;mcc_generated_files/interrupt_manager.c: 60:         }
 18400                           
 18401  0010  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
 18402  0011  0009               	retfie
 18403  0012                     __end_of_INTERRUPT_InterruptManager:
 18404                           
 18405                           	psect	text123
 18406  1C53                     __ptext123:	
 18407 ;; *************** function _TMR1_ISR *****************
 18408 ;; Defined at:
 18409 ;;		line 157 in file "mcc_generated_files/tmr1.c"
 18410 ;; Parameters:    Size  Location     Type
 18411 ;;		None
 18412 ;; Auto vars:     Size  Location     Type
 18413 ;;		None
 18414 ;; Return value:  Size  Location     Type
 18415 ;;                  1    wreg      void 
 18416 ;; Registers used:
 18417 ;;		wreg, status,2, status,0, pclath, cstack
 18418 ;; Tracked objects:
 18419 ;;		On entry : 1F/0
 18420 ;;		On exit  : 0/0
 18421 ;;		Unchanged: 0/0
 18422 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18423 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18424 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18425 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18426 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18427 ;;Total ram usage:        0 bytes
 18428 ;; Hardware stack levels used: 1
 18429 ;; Hardware stack levels required when called: 2
 18430 ;; This function calls:
 18431 ;;		Absolute function
 18432 ;;		_MTOUCH_ScanScheduler
 18433 ;;		_TMR1_DefaultInterruptHandler
 18434 ;;		_TMR1_WriteTimer
 18435 ;; This function is called by:
 18436 ;;		_INTERRUPT_InterruptManager
 18437 ;; This function uses a non-reentrant model
 18438 ;;
 18439                           
 18440                           
 18441                           ;psect for function _TMR1_ISR
 18442  1C53                     _TMR1_ISR:
 18443                           
 18444                           ;mcc_generated_files/tmr1.c: 161:     PIR1bits.TMR1IF = 0;
 18445                           
 18446                           ;incstack = 0
 18447                           ; Regs used in _TMR1_ISR: [wreg+status,2+status,0+pclath+cstack]
 18448  1C53  1011               	bcf	17,0	;volatile
 18449                           
 18450                           ;mcc_generated_files/tmr1.c: 162:     TMR1_WriteTimer(timer1ReloadVal);
 18451  1C54  0021               	movlb	1	; select bank1
 18452  1C55  0864               	movf	(_timer1ReloadVal+1)^(0+128),w	;volatile
 18453  1C56  00F1               	movwf	TMR1_WriteTimer@timerVal+1
 18454  1C57  0863               	movf	_timer1ReloadVal^(0+128),w	;volatile
 18455  1C58  00F0               	movwf	TMR1_WriteTimer@timerVal
 18456  1C59  319B  23A7  319C   	fcall	_TMR1_WriteTimer
 18457                           
 18458                           ;mcc_generated_files/tmr1.c: 164:     if(TMR1_InterruptHandler)
 18459  1C5C  0021               	movlb	1	; select bank1
 18460  1C5D  0861               	movf	_TMR1_InterruptHandler^(0+128),w
 18461  1C5E  0462               	iorwf	(_TMR1_InterruptHandler+1)^(0+128),w
 18462  1C5F  1903               	btfsc	3,2
 18463  1C60  0008               	return
 18464                           
 18465                           ;mcc_generated_files/tmr1.c: 165:     {;mcc_generated_files/tmr1.c: 166:         TMR1_In
      +                          terruptHandler();
 18466  1C61  0862               	movf	(_TMR1_InterruptHandler+1)^(0+128),w
 18467  1C62  008A               	movwf	10
 18468  1C63  0861               	movf	_TMR1_InterruptHandler^(0+128),w
 18469  1C64  000A               	callw
 18470  1C65  319C               	pagesel	$
 18471  1C66  0008               	return
 18472  1C67                     __end_of_TMR1_ISR:
 18473                           
 18474                           	psect	text124
 18475  1B45                     __ptext124:	
 18476 ;; *************** function _MTOUCH_ScanScheduler *****************
 18477 ;; Defined at:
 18478 ;;		line 72 in file "mcc_generated_files/mtouch/mtouch.c"
 18479 ;; Parameters:    Size  Location     Type
 18480 ;;		None
 18481 ;; Auto vars:     Size  Location     Type
 18482 ;;		None
 18483 ;; Return value:  Size  Location     Type
 18484 ;;                  1    wreg      void 
 18485 ;; Registers used:
 18486 ;;		wreg, status,2, status,0, pclath, cstack
 18487 ;; Tracked objects:
 18488 ;;		On entry : 1F/1
 18489 ;;		On exit  : 1F/0
 18490 ;;		Unchanged: 0/0
 18491 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18492 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18493 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18494 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18495 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18496 ;;Total ram usage:        0 bytes
 18497 ;; Hardware stack levels used: 1
 18498 ;; Hardware stack levels required when called: 1
 18499 ;; This function calls:
 18500 ;;		_TMR1_WriteTimer
 18501 ;; This function is called by:
 18502 ;;		_MTOUCH_Initialize
 18503 ;;		_TMR1_ISR
 18504 ;; This function uses a non-reentrant model
 18505 ;;
 18506                           
 18507                           
 18508                           ;psect for function _MTOUCH_ScanScheduler
 18509  1B45                     _MTOUCH_ScanScheduler:
 18510                           
 18511                           ;mcc_generated_files/mtouch/mtouch.c: 76:     TMR1_WriteTimer(mTouchScanReload);
 18512                           
 18513                           ;incstack = 0
 18514                           ; Regs used in _MTOUCH_ScanScheduler: [wreg+status,2+status,0+pclath+cstack]
 18515  1B45  083F               	movf	(_mTouchScanReload+1)^(0+128),w
 18516  1B46  00F1               	movwf	TMR1_WriteTimer@timerVal+1
 18517  1B47  083E               	movf	_mTouchScanReload^(0+128),w
 18518  1B48  00F0               	movwf	TMR1_WriteTimer@timerVal
 18519  1B49  319B  23A7         	fcall	_TMR1_WriteTimer
 18520                           
 18521                           ;mcc_generated_files/mtouch/mtouch.c: 79:     mtouch_time_toScan = 1;
 18522  1B4B  01EE               	clrf	_mtouch_time_toScan
 18523  1B4C  0AEE               	incf	_mtouch_time_toScan,f
 18524  1B4D  0008               	return
 18525  1B4E                     __end_of_MTOUCH_ScanScheduler:
 18526                           
 18527                           	psect	text125
 18528  1AF8                     __ptext125:	
 18529 ;; *************** function _TMR1_DefaultInterruptHandler *****************
 18530 ;; Defined at:
 18531 ;;		line 175 in file "mcc_generated_files/tmr1.c"
 18532 ;; Parameters:    Size  Location     Type
 18533 ;;		None
 18534 ;; Auto vars:     Size  Location     Type
 18535 ;;		None
 18536 ;; Return value:  Size  Location     Type
 18537 ;;                  1    wreg      void 
 18538 ;; Registers used:
 18539 ;;		None
 18540 ;; Tracked objects:
 18541 ;;		On entry : 1F/1
 18542 ;;		On exit  : 1F/1
 18543 ;;		Unchanged: 1F/0
 18544 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18545 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18546 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18547 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18548 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18549 ;;Total ram usage:        0 bytes
 18550 ;; Hardware stack levels used: 1
 18551 ;; This function calls:
 18552 ;;		Nothing
 18553 ;; This function is called by:
 18554 ;;		_TMR1_Initialize
 18555 ;;		_TMR1_ISR
 18556 ;; This function uses a non-reentrant model
 18557 ;;
 18558                           
 18559                           
 18560                           ;psect for function _TMR1_DefaultInterruptHandler
 18561  1AF8                     _TMR1_DefaultInterruptHandler:
 18562                           
 18563                           ;incstack = 0
 18564                           ; Regs used in _TMR1_DefaultInterruptHandler: []
 18565  1AF8  0008               	return
 18566  1AF9                     __end_of_TMR1_DefaultInterruptHandler:
 18567                           
 18568                           	psect	text126
 18569  1BA7                     __ptext126:	
 18570 ;; *************** function _TMR1_WriteTimer *****************
 18571 ;; Defined at:
 18572 ;;		line 120 in file "mcc_generated_files/tmr1.c"
 18573 ;; Parameters:    Size  Location     Type
 18574 ;;  timerVal        2    0[COMMON] unsigned short 
 18575 ;; Auto vars:     Size  Location     Type
 18576 ;;		None
 18577 ;; Return value:  Size  Location     Type
 18578 ;;                  1    wreg      void 
 18579 ;; Registers used:
 18580 ;;		wreg
 18581 ;; Tracked objects:
 18582 ;;		On entry : 1F/1
 18583 ;;		On exit  : 1F/0
 18584 ;;		Unchanged: 0/0
 18585 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18586 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18587 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18588 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18589 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18590 ;;Total ram usage:        2 bytes
 18591 ;; Hardware stack levels used: 1
 18592 ;; This function calls:
 18593 ;;		Nothing
 18594 ;; This function is called by:
 18595 ;;		_MTOUCH_ScanScheduler
 18596 ;;		_TMR1_ISR
 18597 ;; This function uses a non-reentrant model
 18598 ;;
 18599                           
 18600                           
 18601                           ;psect for function _TMR1_WriteTimer
 18602  1BA7                     _TMR1_WriteTimer:
 18603                           
 18604                           ;mcc_generated_files/tmr1.c: 120: void TMR1_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr1.c: 121: {;mcc_generated_files/tmr1.c: 122:     if (T1CONbits.nT1SYNC == 1)
 18605                           
 18606                           ;incstack = 0
 18607                           ; Regs used in _TMR1_WriteTimer: [wreg]
 18608  1BA7  0020               	movlb	0	; select bank0
 18609  1BA8  1D18               	btfss	24,2	;volatile
 18610  1BA9  2BB1               	goto	i1l5026
 18611                           
 18612                           ;mcc_generated_files/tmr1.c: 123:     {;mcc_generated_files/tmr1.c: 125:         T1CONbi
      +                          ts.TMR1ON = 0;
 18613  1BAA  1018               	bcf	24,0	;volatile
 18614                           
 18615                           ;mcc_generated_files/tmr1.c: 128:         TMR1H = (uint8_t)(timerVal >> 8);
 18616  1BAB  0871               	movf	TMR1_WriteTimer@timerVal+1,w
 18617  1BAC  0097               	movwf	23	;volatile
 18618                           
 18619                           ;mcc_generated_files/tmr1.c: 129:         TMR1L = (uint8_t)timerVal;
 18620  1BAD  0870               	movf	TMR1_WriteTimer@timerVal,w
 18621  1BAE  0096               	movwf	22	;volatile
 18622                           
 18623                           ;mcc_generated_files/tmr1.c: 132:         T1CONbits.TMR1ON =1;
 18624  1BAF  1418               	bsf	24,0	;volatile
 18625                           
 18626                           ;mcc_generated_files/tmr1.c: 133:     }
 18627  1BB0  0008               	return
 18628  1BB1                     i1l5026:
 18629                           
 18630                           ;mcc_generated_files/tmr1.c: 135:     {;mcc_generated_files/tmr1.c: 137:         TMR1H =
      +                           (uint8_t)(timerVal >> 8);
 18631  1BB1  0871               	movf	TMR1_WriteTimer@timerVal+1,w
 18632  1BB2  0097               	movwf	23	;volatile
 18633                           
 18634                           ;mcc_generated_files/tmr1.c: 138:         TMR1L = (uint8_t)timerVal;
 18635  1BB3  0870               	movf	TMR1_WriteTimer@timerVal,w
 18636  1BB4  0096               	movwf	22	;volatile
 18637  1BB5  0008               	return
 18638  1BB6                     __end_of_TMR1_WriteTimer:
 18639  007E                     btemp	set	126	;btemp
 18640  007E                     int$flags	set	126
 18641  007E                     wtemp0	set	126
 18642  2338                     
 18643                           	psect	idloc
 18644                           
 18645                           ;Config register IDLOC0 @ 0x8000
 18646                           ;	unspecified, using default values
 18647  8000                     	org	32768
 18648  8000  3FFF               	dw	16383
 18649                           
 18650                           ;Config register IDLOC1 @ 0x8001
 18651                           ;	unspecified, using default values
 18652  8001                     	org	32769
 18653  8001  3FFF               	dw	16383
 18654                           
 18655                           ;Config register IDLOC2 @ 0x8002
 18656                           ;	unspecified, using default values
 18657  8002                     	org	32770
 18658  8002  3FFF               	dw	16383
 18659                           
 18660                           ;Config register IDLOC3 @ 0x8003
 18661                           ;	unspecified, using default values
 18662  8003                     	org	32771
 18663  8003  3FFF               	dw	16383
 18664                           
 18665                           	psect	config
 18666                           
 18667                           ;Config register CONFIG1 @ 0x8007
 18668                           ;	Oscillator Selection
 18669                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
 18670                           ;	Watchdog Timer Enable
 18671                           ;	WDTE = OFF, WDT disabled
 18672                           ;	Power-up Timer Enable
 18673                           ;	PWRTE = OFF, PWRT disabled
 18674                           ;	MCLR Pin Function Select
 18675                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
 18676                           ;	Flash Program Memory Code Protection
 18677                           ;	CP = OFF, Program memory code protection is disabled
 18678                           ;	Data Memory Code Protection
 18679                           ;	CPD = OFF, Data memory code protection is disabled
 18680                           ;	Brown-out Reset Enable
 18681                           ;	BOREN = NSLEEP, Brown-out Reset enabled while running and disabled in Sleep
 18682                           ;	Clock Out Enable
 18683                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
 18684                           ;	Internal/External Switchover
 18685                           ;	IESO = ON, Internal/External Switchover mode is enabled
 18686                           ;	Fail-Safe Clock Monitor Enable
 18687                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
 18688  8007                     	org	32775
 18689  8007  3DE4               	dw	15844
 18690                           
 18691                           ;Config register CONFIG2 @ 0x8008
 18692                           ;	Flash Memory Self-Write Protection
 18693                           ;	WRT = OFF, Write protection off
 18694                           ;	Voltage Regulator Capacitor Enable
 18695                           ;	VCAPEN = OFF, All VCAP pin functionality is disabled
 18696                           ;	PLL Enable
 18697                           ;	PLLEN = ON, 4x PLL enabled
 18698                           ;	Stack Overflow/Underflow Reset Enable
 18699                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
 18700                           ;	Brown-out Reset Voltage Selection
 18701                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
 18702                           ;	Low-Voltage Programming Enable
 18703                           ;	LVP = ON, Low-voltage programming enabled
 18704  8008                     	org	32776
 18705  8008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    85
    Data        148
    BSS         24
    Persistent  42
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      12
    BANK0            80     65      80
    BANK1            80     16      80
    BANK2            80      0       2
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           24      0       0
    BANK11            0      0       0
    BANK12            0      0       0

Pointer List with Targets:

    Button_Service$2892$0	PTR struct . size(2) Largest target is 85
		 -> mtouch_button(BIGRAM[85]), 

    Button_Service$2892	PTR FTN(PTR struct .,)void  size(2) Largest target is 1
		 -> Button_State_Disabled(), Button_State_Suspended(), Button_State_ReleaseDebounce(), Button_State_Pressed(), 
		 -> Button_State_PressDebounce(), Button_State_NotPressed(), Button_State_Initializing(), 

    Button_State_Disabled@button	PTR struct . size(2) Largest target is 85
		 -> mtouch_button(BIGRAM[85]), 

    MTOUCH_Button_Tick$2890	PTR struct . size(2) Largest target is 85
		 -> mtouch_button(BIGRAM[85]), 

    Button_Reburst_Request@button	PTR struct . size(2) Largest target is 85
		 -> mtouch_button(BIGRAM[85]), 

    Button_StateMachine$0	PTR struct . size(2) Largest target is 85
		 -> mtouch_button(BIGRAM[85]), 

    memcpy@d1	PTR void  size(2) Largest target is 85
		 -> mtouch_button(BIGRAM[85]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 85
		 -> mtouch_button(BIGRAM[85]), 

    memcpy@s1	PTR const void  size(2) Largest target is 85
		 -> mtouch_button_init(CODE[85]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 85
		 -> mtouch_button_init(CODE[85]), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_DefaultInterruptHandler(), MTOUCH_ScanScheduler(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), TMR1_DefaultInterruptHandler(), MTOUCH_ScanScheduler(), 

    EUSART_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), 

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultErrorHandler(), 

    EUSART_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultOverrunErrorHandler(), 

    EUSART_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultFramingErrorHandler(), 

    Slider_Initialize@slider	PTR struct . size(1) Largest target is 17
		 -> mtouch_slider(BANK1[17]), 

    Slider_Service@slider	PTR struct . size(1) Largest target is 17
		 -> mtouch_slider(BANK1[17]), 

    calculate_position@slider	PTR struct . size(1) Largest target is 17
		 -> mtouch_slider(BANK1[17]), 

    calculate_contact_size@slider	PTR struct . size(1) Largest target is 17
		 -> mtouch_slider(BANK1[17]), 

    calculate_raw_position@slider	PTR struct . size(1) Largest target is 17
		 -> mtouch_slider(BANK1[17]), 

    Slider_FindRight@slider	PTR struct . size(1) Largest target is 17
		 -> mtouch_slider(BANK1[17]), 

    Slider_FindLeft@slider	PTR struct . size(1) Largest target is 17
		 -> mtouch_slider(BANK1[17]), 

    Slider_FindMiddle@slider	PTR struct . size(1) Largest target is 17
		 -> mtouch_slider(BANK1[17]), 

    moving_average_filter@slider	PTR struct . size(1) Largest target is 17
		 -> mtouch_slider(BANK1[17]), 

    positional_hysteresis@slider	PTR struct . size(1) Largest target is 17
		 -> mtouch_slider(BANK1[17]), 

    get_difference@slider	PTR struct . size(1) Largest target is 17
		 -> mtouch_slider(BANK1[17]), 

    callback_released	PTR FTN(enum E2914,)void  size(2) Largest target is 1
		 -> Slider_DefaultCallback(), 

    callback_pressed@mtouch_slider$F1186	PTR FTN(enum E2914,)void  size(2) Largest target is 1
		 -> Slider_DefaultCallback(), 

    callback_position_changed	PTR FTN(enum E2914,)void  size(2) Largest target is 1
		 -> Slider_DefaultCallback(), 

    Sensor_setSampled@sensor.scanB	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanB_10(), MTOUCH_CVD_ScanB_9(), MTOUCH_CVD_ScanB_8(), MTOUCH_CVD_ScanB_7(), 
		 -> MTOUCH_CVD_ScanB_6(), MTOUCH_CVD_ScanB_5(), MTOUCH_CVD_ScanB_4(), MTOUCH_CVD_ScanB_3(), 
		 -> MTOUCH_CVD_ScanB_2(), MTOUCH_CVD_ScanB_1(), MTOUCH_CVD_ScanB_0(), 

    Sensor_setSampled@sensor.scanA	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanA_10(), MTOUCH_CVD_ScanA_9(), MTOUCH_CVD_ScanA_8(), MTOUCH_CVD_ScanA_7(), 
		 -> MTOUCH_CVD_ScanA_6(), MTOUCH_CVD_ScanA_5(), MTOUCH_CVD_ScanA_4(), MTOUCH_CVD_ScanA_3(), 
		 -> MTOUCH_CVD_ScanA_2(), MTOUCH_CVD_ScanA_1(), MTOUCH_CVD_ScanA_0(), 

    Sensor_setSampled@sensor	PTR struct . size(2) Largest target is 99
		 -> mtouch_sensor(BIGRAM[99]), 

    Sensor_Sampled_Reset@sensor.scanB	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanB_10(), MTOUCH_CVD_ScanB_9(), MTOUCH_CVD_ScanB_8(), MTOUCH_CVD_ScanB_7(), 
		 -> MTOUCH_CVD_ScanB_6(), MTOUCH_CVD_ScanB_5(), MTOUCH_CVD_ScanB_4(), MTOUCH_CVD_ScanB_3(), 
		 -> MTOUCH_CVD_ScanB_2(), MTOUCH_CVD_ScanB_1(), MTOUCH_CVD_ScanB_0(), 

    Sensor_Sampled_Reset@sensor.scanA	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanA_10(), MTOUCH_CVD_ScanA_9(), MTOUCH_CVD_ScanA_8(), MTOUCH_CVD_ScanA_7(), 
		 -> MTOUCH_CVD_ScanA_6(), MTOUCH_CVD_ScanA_5(), MTOUCH_CVD_ScanA_4(), MTOUCH_CVD_ScanA_3(), 
		 -> MTOUCH_CVD_ScanA_2(), MTOUCH_CVD_ScanA_1(), MTOUCH_CVD_ScanA_0(), 

    Sensor_Sampled_Reset@sensor	PTR struct . size(2) Largest target is 99
		 -> mtouch_sensor(BIGRAM[99]), 

    MTOUCH_Sensor_Sampled_ResetAll@sensor	PTR struct . size(2) Largest target is 99
		 -> mtouch_sensor(BIGRAM[99]), 

    Sensor_setInactive@sensor.scanB	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanB_10(), MTOUCH_CVD_ScanB_9(), MTOUCH_CVD_ScanB_8(), MTOUCH_CVD_ScanB_7(), 
		 -> MTOUCH_CVD_ScanB_6(), MTOUCH_CVD_ScanB_5(), MTOUCH_CVD_ScanB_4(), MTOUCH_CVD_ScanB_3(), 
		 -> MTOUCH_CVD_ScanB_2(), MTOUCH_CVD_ScanB_1(), MTOUCH_CVD_ScanB_0(), 

    Sensor_setInactive@sensor.scanA	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanA_10(), MTOUCH_CVD_ScanA_9(), MTOUCH_CVD_ScanA_8(), MTOUCH_CVD_ScanA_7(), 
		 -> MTOUCH_CVD_ScanA_6(), MTOUCH_CVD_ScanA_5(), MTOUCH_CVD_ScanA_4(), MTOUCH_CVD_ScanA_3(), 
		 -> MTOUCH_CVD_ScanA_2(), MTOUCH_CVD_ScanA_1(), MTOUCH_CVD_ScanA_0(), 

    Sensor_setInactive@sensor	PTR struct . size(2) Largest target is 99
		 -> mtouch_sensor(BIGRAM[99]), 

    Sensor_setActive@sensor.scanB	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanB_10(), MTOUCH_CVD_ScanB_9(), MTOUCH_CVD_ScanB_8(), MTOUCH_CVD_ScanB_7(), 
		 -> MTOUCH_CVD_ScanB_6(), MTOUCH_CVD_ScanB_5(), MTOUCH_CVD_ScanB_4(), MTOUCH_CVD_ScanB_3(), 
		 -> MTOUCH_CVD_ScanB_2(), MTOUCH_CVD_ScanB_1(), MTOUCH_CVD_ScanB_0(), 

    Sensor_setActive@sensor.scanA	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanA_10(), MTOUCH_CVD_ScanA_9(), MTOUCH_CVD_ScanA_8(), MTOUCH_CVD_ScanA_7(), 
		 -> MTOUCH_CVD_ScanA_6(), MTOUCH_CVD_ScanA_5(), MTOUCH_CVD_ScanA_4(), MTOUCH_CVD_ScanA_3(), 
		 -> MTOUCH_CVD_ScanA_2(), MTOUCH_CVD_ScanA_1(), MTOUCH_CVD_ScanA_0(), 

    Sensor_setActive@sensor	PTR struct . size(2) Largest target is 99
		 -> mtouch_sensor(BIGRAM[99]), 

    Sensor_isEnabled@sensor.scanB	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanB_10(), MTOUCH_CVD_ScanB_9(), MTOUCH_CVD_ScanB_8(), MTOUCH_CVD_ScanB_7(), 
		 -> MTOUCH_CVD_ScanB_6(), MTOUCH_CVD_ScanB_5(), MTOUCH_CVD_ScanB_4(), MTOUCH_CVD_ScanB_3(), 
		 -> MTOUCH_CVD_ScanB_2(), MTOUCH_CVD_ScanB_1(), MTOUCH_CVD_ScanB_0(), 

    Sensor_isEnabled@sensor.scanA	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanA_10(), MTOUCH_CVD_ScanA_9(), MTOUCH_CVD_ScanA_8(), MTOUCH_CVD_ScanA_7(), 
		 -> MTOUCH_CVD_ScanA_6(), MTOUCH_CVD_ScanA_5(), MTOUCH_CVD_ScanA_4(), MTOUCH_CVD_ScanA_3(), 
		 -> MTOUCH_CVD_ScanA_2(), MTOUCH_CVD_ScanA_1(), MTOUCH_CVD_ScanA_0(), 

    Sensor_isEnabled@sensor	PTR struct . size(2) Largest target is 99
		 -> mtouch_sensor(BIGRAM[99]), 

    Sensor_setScanFunction@sensor.scanB	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanB_10(), MTOUCH_CVD_ScanB_9(), MTOUCH_CVD_ScanB_8(), MTOUCH_CVD_ScanB_7(), 
		 -> MTOUCH_CVD_ScanB_6(), MTOUCH_CVD_ScanB_5(), MTOUCH_CVD_ScanB_4(), MTOUCH_CVD_ScanB_3(), 
		 -> MTOUCH_CVD_ScanB_2(), MTOUCH_CVD_ScanB_1(), MTOUCH_CVD_ScanB_0(), 

    Sensor_setScanFunction@sensor.scanA	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanA_10(), MTOUCH_CVD_ScanA_9(), MTOUCH_CVD_ScanA_8(), MTOUCH_CVD_ScanA_7(), 
		 -> MTOUCH_CVD_ScanA_6(), MTOUCH_CVD_ScanA_5(), MTOUCH_CVD_ScanA_4(), MTOUCH_CVD_ScanA_3(), 
		 -> MTOUCH_CVD_ScanA_2(), MTOUCH_CVD_ScanA_1(), MTOUCH_CVD_ScanA_0(), 

    Sensor_setScanFunction@sensor	PTR struct . size(2) Largest target is 99
		 -> mtouch_sensor(BIGRAM[99]), 

    Sensor_RawSample_Update@sensor.scanB	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanB_10(), MTOUCH_CVD_ScanB_9(), MTOUCH_CVD_ScanB_8(), MTOUCH_CVD_ScanB_7(), 
		 -> MTOUCH_CVD_ScanB_6(), MTOUCH_CVD_ScanB_5(), MTOUCH_CVD_ScanB_4(), MTOUCH_CVD_ScanB_3(), 
		 -> MTOUCH_CVD_ScanB_2(), MTOUCH_CVD_ScanB_1(), MTOUCH_CVD_ScanB_0(), 

    Sensor_RawSample_Update@sensor.scanA	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanA_10(), MTOUCH_CVD_ScanA_9(), MTOUCH_CVD_ScanA_8(), MTOUCH_CVD_ScanA_7(), 
		 -> MTOUCH_CVD_ScanA_6(), MTOUCH_CVD_ScanA_5(), MTOUCH_CVD_ScanA_4(), MTOUCH_CVD_ScanA_3(), 
		 -> MTOUCH_CVD_ScanA_2(), MTOUCH_CVD_ScanA_1(), MTOUCH_CVD_ScanA_0(), 

    Sensor_RawSample_Update@sensor	PTR struct . size(2) Largest target is 99
		 -> mtouch_sensor(BIGRAM[99]), 

    Sensor_Acq_ExecutePacket@sensor.scanB	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanB_10(), MTOUCH_CVD_ScanB_9(), MTOUCH_CVD_ScanB_8(), MTOUCH_CVD_ScanB_7(), 
		 -> MTOUCH_CVD_ScanB_6(), MTOUCH_CVD_ScanB_5(), MTOUCH_CVD_ScanB_4(), MTOUCH_CVD_ScanB_3(), 
		 -> MTOUCH_CVD_ScanB_2(), MTOUCH_CVD_ScanB_1(), MTOUCH_CVD_ScanB_0(), 

    Sensor_Acq_ExecutePacket@sensor.scanA	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanA_10(), MTOUCH_CVD_ScanA_9(), MTOUCH_CVD_ScanA_8(), MTOUCH_CVD_ScanA_7(), 
		 -> MTOUCH_CVD_ScanA_6(), MTOUCH_CVD_ScanA_5(), MTOUCH_CVD_ScanA_4(), MTOUCH_CVD_ScanA_3(), 
		 -> MTOUCH_CVD_ScanA_2(), MTOUCH_CVD_ScanA_1(), MTOUCH_CVD_ScanA_0(), 

    Sensor_Acq_ExecutePacket@sensor	PTR struct . size(2) Largest target is 99
		 -> mtouch_sensor(BIGRAM[99]), 

    Sensor_Acquisition@sensor.scanB	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanB_10(), MTOUCH_CVD_ScanB_9(), MTOUCH_CVD_ScanB_8(), MTOUCH_CVD_ScanB_7(), 
		 -> MTOUCH_CVD_ScanB_6(), MTOUCH_CVD_ScanB_5(), MTOUCH_CVD_ScanB_4(), MTOUCH_CVD_ScanB_3(), 
		 -> MTOUCH_CVD_ScanB_2(), MTOUCH_CVD_ScanB_1(), MTOUCH_CVD_ScanB_0(), 

    Sensor_Acquisition@sensor.scanA	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanA_10(), MTOUCH_CVD_ScanA_9(), MTOUCH_CVD_ScanA_8(), MTOUCH_CVD_ScanA_7(), 
		 -> MTOUCH_CVD_ScanA_6(), MTOUCH_CVD_ScanA_5(), MTOUCH_CVD_ScanA_4(), MTOUCH_CVD_ScanA_3(), 
		 -> MTOUCH_CVD_ScanA_2(), MTOUCH_CVD_ScanA_1(), MTOUCH_CVD_ScanA_0(), 

    Sensor_Acquisition@sensor	PTR struct . size(2) Largest target is 99
		 -> mtouch_sensor(BIGRAM[99]), 

    Sensor_Service@sensor	PTR struct . size(2) Largest target is 99
		 -> mtouch_sensor(BIGRAM[99]), 

    S720$scanB	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanB_10(), MTOUCH_CVD_ScanB_9(), MTOUCH_CVD_ScanB_8(), MTOUCH_CVD_ScanB_7(), 
		 -> MTOUCH_CVD_ScanB_6(), MTOUCH_CVD_ScanB_5(), MTOUCH_CVD_ScanB_4(), MTOUCH_CVD_ScanB_3(), 
		 -> MTOUCH_CVD_ScanB_2(), MTOUCH_CVD_ScanB_1(), MTOUCH_CVD_ScanB_0(), 

    mtouch_sensor.scanB	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanB_10(), MTOUCH_CVD_ScanB_9(), MTOUCH_CVD_ScanB_8(), MTOUCH_CVD_ScanB_7(), 
		 -> MTOUCH_CVD_ScanB_6(), MTOUCH_CVD_ScanB_5(), MTOUCH_CVD_ScanB_4(), MTOUCH_CVD_ScanB_3(), 
		 -> MTOUCH_CVD_ScanB_2(), MTOUCH_CVD_ScanB_1(), MTOUCH_CVD_ScanB_0(), 

    S720$scanA	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanA_10(), MTOUCH_CVD_ScanA_9(), MTOUCH_CVD_ScanA_8(), MTOUCH_CVD_ScanA_7(), 
		 -> MTOUCH_CVD_ScanA_6(), MTOUCH_CVD_ScanA_5(), MTOUCH_CVD_ScanA_4(), MTOUCH_CVD_ScanA_3(), 
		 -> MTOUCH_CVD_ScanA_2(), MTOUCH_CVD_ScanA_1(), MTOUCH_CVD_ScanA_0(), 

    mtouch_sensor.scanA	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanA_10(), MTOUCH_CVD_ScanA_9(), MTOUCH_CVD_ScanA_8(), MTOUCH_CVD_ScanA_7(), 
		 -> MTOUCH_CVD_ScanA_6(), MTOUCH_CVD_ScanA_5(), MTOUCH_CVD_ScanA_4(), MTOUCH_CVD_ScanA_3(), 
		 -> MTOUCH_CVD_ScanA_2(), MTOUCH_CVD_ScanA_1(), MTOUCH_CVD_ScanA_0(), 

    Sensor_scanB	PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanB_10(), MTOUCH_CVD_ScanB_9(), MTOUCH_CVD_ScanB_8(), MTOUCH_CVD_ScanB_7(), 
		 -> MTOUCH_CVD_ScanB_6(), MTOUCH_CVD_ScanB_5(), MTOUCH_CVD_ScanB_4(), MTOUCH_CVD_ScanB_3(), 
		 -> MTOUCH_CVD_ScanB_2(), MTOUCH_CVD_ScanB_1(), MTOUCH_CVD_ScanB_0(), 

    Sensor_scanA	PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanA_10(), MTOUCH_CVD_ScanA_9(), MTOUCH_CVD_ScanA_8(), MTOUCH_CVD_ScanA_7(), 
		 -> MTOUCH_CVD_ScanA_6(), MTOUCH_CVD_ScanA_5(), MTOUCH_CVD_ScanA_4(), MTOUCH_CVD_ScanA_3(), 
		 -> MTOUCH_CVD_ScanA_2(), MTOUCH_CVD_ScanA_1(), MTOUCH_CVD_ScanA_0(), 

    callback_sampled	PTR FTN(enum E2707,)void  size(2) Largest target is 1
		 -> Sensor_DefaultCallback(), 

    Button_Check_AKS_Block@check_button	PTR struct . size(2) Largest target is 85
		 -> mtouch_button(BIGRAM[85]), 

    Button_Check_AKS_Block@button	PTR struct . size(2) Largest target is 85
		 -> mtouch_button(BIGRAM[85]), 

    Button_Baseline_Update@button	PTR struct . size(2) Largest target is 85
		 -> mtouch_button(BIGRAM[85]), 

    Button_Baseline_Initialize@button	PTR struct . size(2) Largest target is 85
		 -> mtouch_button(BIGRAM[85]), 

    Button_Reading_Update_Helper@button	PTR struct . size(2) Largest target is 85
		 -> mtouch_button(BIGRAM[85]), 

    Button_Reading_Update@button	PTR struct . size(2) Largest target is 85
		 -> mtouch_button(BIGRAM[85]), 

    Button_Unscaled_Deviation_Get@button	PTR struct . size(2) Largest target is 85
		 -> mtouch_button(BIGRAM[85]), 

    Button_Deviation_Update@button	PTR struct . size(2) Largest target is 85
		 -> mtouch_button(BIGRAM[85]), 

    Button_Tick_helper@button	PTR struct . size(2) Largest target is 85
		 -> mtouch_button(BIGRAM[85]), 

    Button_State_Suspended@button	PTR struct . size(2) Largest target is 85
		 -> mtouch_button(BIGRAM[85]), 

    Button_State_ReleaseDebounce@button	PTR struct . size(2) Largest target is 85
		 -> mtouch_button(BIGRAM[85]), 

    Button_State_PressDebounce@button	PTR struct . size(2) Largest target is 85
		 -> mtouch_button(BIGRAM[85]), 

    Button_State_Pressed@button	PTR struct . size(2) Largest target is 85
		 -> mtouch_button(BIGRAM[85]), 

    Button_State_NotPressed@button	PTR struct . size(2) Largest target is 85
		 -> mtouch_button(BIGRAM[85]), 

    Button_State_Initializing@button	PTR struct . size(2) Largest target is 85
		 -> mtouch_button(BIGRAM[85]), 

    Button_Service@button	PTR struct . size(2) Largest target is 85
		 -> mtouch_button(BIGRAM[85]), 

    sp__memcpy	PTR void  size(2) Largest target is 85
		 -> mtouch_button(BIGRAM[85]), 

    MTOUCH_Button_Initialize@button	PTR struct . size(2) Largest target is 85
		 -> mtouch_button(BIGRAM[85]), 

    Button_StateMachine	PTR FTN(PTR struct .,)void [7] size(2) Largest target is 1
		 -> Button_State_Disabled(), Button_State_Suspended(), Button_State_ReleaseDebounce(), Button_State_Pressed(), 
		 -> Button_State_PressDebounce(), Button_State_NotPressed(), Button_State_Initializing(), 

    callback_notPressed	PTR FTN(enum E2936,)void  size(2) Largest target is 1
		 -> Button_DefaultCallback(), 

    callback_pressed	PTR FTN(enum E2936,)void  size(2) Largest target is 1
		 -> Button_DefaultCallback(), 


Critical Paths under _main in COMMON

    _main->___fldiv
    _main->___xxtofl
    ___flmul->___fldiv
    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _EUSART_Initialize->_EUSART_SetErrorHandler
    _EUSART_Initialize->_EUSART_SetFramingErrorHandler
    _EUSART_Initialize->_EUSART_SetOverrunErrorHandler
    _MTOUCH_Button_Reburst_Request->_Button_Reburst_Request
    _Button_Tick_helper->_MTOUCH_Sensor_Enable
    _Slider_Service->_MTOUCH_Button_isPressed
    _positional_hysteresis->_get_difference
    _moving_average_filter->_get_difference
    _calculate_raw_position->_divide
    _interpolate->_divide
    _calculate_contact_size->_Slider_FindLeft
    _Slider_FindRight->_MTOUCH_Button_Deviation_Get
    _Slider_FindMiddle->_MTOUCH_Button_Deviation_Get
    _Slider_FindLeft->_MTOUCH_Button_Deviation_Get
    _MTOUCH_Button_Deviation_Get->___wmul
    _MTOUCH_Button_isPressed->___wmul
    _Sensor_Acq_ExecutePacket->_Sensor_Acq_ExecuteScan
    _Sensor_Acq_ExecuteScan->___wmul
    _MTOUCH_Initialize->_MTOUCH_Button_InitializeAll
    _MTOUCH_Slider_InitializeAll->_Slider_Initialize
    _MTOUCH_Sensor_Sampled_ResetAll->_Sensor_Sampled_Reset
    _MTOUCH_Sensor_Initialize->_Sensor_Sampled_Reset
    _Sensor_Sampled_Reset->___wmul
    _MTOUCH_Sensor_Enable->___wmul
    _MTOUCH_Button_InitializeAll->_memcpy
    _MTOUCH_Sensor_wasSampled->___wmul
    _Button_State_Suspended->_Button_Baseline_Update
    _MTOUCH_Sensor_Disable->___wmul
    _Button_State_ReleaseDebounce->_Button_Reburst_Request
    _Button_State_Pressed->_Button_Reburst_Request
    _Button_State_PressDebounce->_Button_Reburst_Request
    _Button_State_NotPressed->_Button_Baseline_Update
    _Button_State_NotPressed->_Button_Reburst_Request
    _MTOUCH_Button_Initialize->___wmul
    _Button_Check_AKS_Block->_Button_Unscaled_Deviation_Get
    _MTOUCH_Sensor_isEnabled->___wmul
    _Button_State_Initializing->_Button_Baseline_Update
    _Button_State_Initializing->_Button_Reburst_Request
    _Button_Reburst_Request->___wmul
    _Button_Baseline_Initialize->_MTOUCH_Sensor_RawSample_Get
    _Button_Reading_Update_Helper->_MTOUCH_Sensor_RawSample_Get
    _MTOUCH_Sensor_RawSample_Get->___wmul

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _TMR1_ISR->_TMR1_WriteTimer
    _MTOUCH_ScanScheduler->_TMR1_WriteTimer

Critical Paths under _main in BANK0

    _main->___fladd
    ___flmul->___fldiv
    ___fladd->___flmul
    _MTOUCH_Service_Mainloop->_MTOUCH_Slider_ServiceAll
    _MTOUCH_needReburst->_MTOUCH_Slider_Reburst_Service
    _MTOUCH_Slider_Reburst_Service->_MTOUCH_Button_Reburst_Request
    _MTOUCH_Tick->_MTOUCH_Button_Tick
    _MTOUCH_Button_Tick->_Button_Tick_helper
    _Button_Tick_helper->_MTOUCH_Sensor_Enable
    _MTOUCH_Slider_ServiceAll->_Slider_Service
    _Slider_Service->_calculate_position
    _calculate_position->_calculate_raw_position
    _positional_hysteresis->_get_difference
    _moving_average_filter->_get_difference
    _calculate_raw_position->_interpolate
    _calculate_contact_size->_Slider_FindMiddle
    _Slider_FindRight->_MTOUCH_Button_Deviation_Get
    _Slider_FindMiddle->_MTOUCH_Button_Deviation_Get
    _Slider_FindLeft->_MTOUCH_Button_Deviation_Get
    _MTOUCH_Sensor_SampleAll->_Sensor_Service
    _Sensor_Service->_Sensor_Acquisition
    _Sensor_Acquisition->_Sensor_Acq_ExecutePacket
    _Sensor_Acq_ExecutePacket->_Sensor_Acq_ExecuteScan
    _MTOUCH_Initialize->_MTOUCH_Sensor_InitializeAll
    _MTOUCH_Sensor_InitializeAll->_MTOUCH_Sensor_Initialize
    _MTOUCH_Sensor_Initialize->_MTOUCH_Sensor_Enable
    _MTOUCH_Button_InitializeAll->_MTOUCH_Button_Initialize
    _MTOUCH_Button_ServiceAll->_Button_Service
    _Button_Service->_Button_State_Initializing
    _Button_State_PressDebounce->_Button_Check_AKS_Block
    _Button_State_NotPressed->_Button_Check_AKS_Block
    _Button_Check_AKS_Block->_MTOUCH_Sensor_isEnabled
    _Button_Baseline_Initialize->_MTOUCH_Sensor_RawSample_Get
    _Button_Reading_Update->_Button_Reading_Update_Helper
    _Button_Reading_Update_Helper->_MTOUCH_Sensor_RawSample_Get

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                17    17      0  237658
                                             64 BANK0      1     1      0
                                              0 BANK1     16    16      0
                 _DELAY_milliseconds
                       _EUSART_Write
            _MTOUCH_Service_Mainloop
         _MTOUCH_Slider_Position_Get
    _MTOUCH_Slider_isPositionChanged
            _MTOUCH_Slider_isPressed
                  _SYSTEM_Initialize
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     398
                                              2 COMMON     8     4      4
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (1) ___fltol                                             11     7      4     427
                                              2 COMMON     6     2      4
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (1) ___flmul                                             26    18      8    3716
                                             18 BANK0     26    18      8
                          __Umul8_16
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (2) __Umul8_16                                            9     7      2     980
                                              2 COMMON     4     2      2
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (1) ___fldiv                                             26    18      8    1273
                                              2 COMMON     8     0      8
                                              0 BANK0     18    18      0
 ---------------------------------------------------------------------------------
 (1) ___fladd                                             20    12      8    2262
                                             44 BANK0     20    12      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0   25956
                  _EUSART_Initialize
                  _MTOUCH_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR1_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0     174
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0     294
             _EUSART_SetErrorHandler
      _EUSART_SetFramingErrorHandler
      _EUSART_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetOverrunErrorHandler                        2     0      2      98
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetFramingErrorHandler                        2     0      2      98
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetErrorHandler                               2     0      2      98
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _MTOUCH_Slider_isPressed                              2     2      0      44
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _MTOUCH_Slider_isPositionChanged                      1     1      0      44
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _MTOUCH_Slider_Position_Get                           3     1      2      44
                                              2 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 (1) _MTOUCH_Service_Mainloop                              1     1      0  203060
                                             56 BANK0      1     1      0
           _MTOUCH_Button_ServiceAll
                  _MTOUCH_Initialize
            _MTOUCH_Sensor_SampleAll
     _MTOUCH_Sensor_Sampled_ResetAll
           _MTOUCH_Slider_ServiceAll
                        _MTOUCH_Tick
                 _MTOUCH_needReburst
 ---------------------------------------------------------------------------------
 (2) _MTOUCH_needReburst                                   2     2      0    8781
                                              7 BANK0      2     2      0
      _MTOUCH_Button_Reburst_Service
      _MTOUCH_Slider_Reburst_Service
 ---------------------------------------------------------------------------------
 (3) _MTOUCH_Slider_Reburst_Service                        2     2      0    8741
                                              5 BANK0      2     2      0
      _MTOUCH_Button_Reburst_Request
     _MTOUCH_Slider_isReburstRequest
 ---------------------------------------------------------------------------------
 (4) _MTOUCH_Slider_isReburstRequest                       1     1      0      44
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _MTOUCH_Button_Reburst_Request                        5     5      0    8567
                                              0 BANK0      5     5      0
             _Button_Reburst_Request
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) _MTOUCH_Button_Reburst_Service                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _MTOUCH_Tick                                          0     0      0   16376
                 _MTOUCH_Button_Tick
 ---------------------------------------------------------------------------------
 (3) _MTOUCH_Button_Tick                                   7     7      0   16376
                                              8 BANK0      7     7      0
                 _Button_Tick_helper
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) _Button_Tick_helper                                   4     2      2    8337
                                              4 BANK0      4     2      2
               _MTOUCH_Sensor_Enable
 ---------------------------------------------------------------------------------
 (2) _MTOUCH_Slider_ServiceAll                             2     2      0   43421
                                             54 BANK0      2     2      0
                     _Slider_Service
 ---------------------------------------------------------------------------------
 (3) _Slider_Service                                      13    13      0   43322
                                             41 BANK0     13    13      0
            _MTOUCH_Button_isPressed
             _Slider_DefaultCallback
             _calculate_contact_size
                 _calculate_position
 ---------------------------------------------------------------------------------
 (4) _calculate_position                                  10     8      2    9119
                                             31 BANK0     10     8      2
             _calculate_raw_position
              _moving_average_filter
              _positional_hysteresis
 ---------------------------------------------------------------------------------
 (5) _positional_hysteresis                               13    11      2    1651
                                              6 COMMON     2     2      0
                                             10 BANK0     11     9      2
                     _get_difference
 ---------------------------------------------------------------------------------
 (5) _moving_average_filter                               13    11      2    1505
                                              6 COMMON     2     2      0
                                             10 BANK0     11     9      2
                     _get_difference
 ---------------------------------------------------------------------------------
 (6) _get_difference                                      14    10      4     785
                                              2 COMMON     4     0      4
                                              0 BANK0     10    10      0
 ---------------------------------------------------------------------------------
 (5) _calculate_raw_position                              18    16      2    5605
                                             13 BANK0     18    16      2
                             _divide
                        _interpolate
 ---------------------------------------------------------------------------------
 (6) _interpolate                                         13     6      7    2753
                                              0 BANK0     13     6      7
                             _divide
 ---------------------------------------------------------------------------------
 (7) _divide                                               8     3      5    1823
                                              2 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 (4) _calculate_contact_size                               7     5      2   24946
                                             16 BANK0      7     5      2
                    _Slider_FindLeft
                  _Slider_FindMiddle
                   _Slider_FindRight
 ---------------------------------------------------------------------------------
 (5) _Slider_FindRight                                     8     6      2    8162
                                              4 BANK0      8     6      2
        _MTOUCH_Button_Deviation_Get
 ---------------------------------------------------------------------------------
 (5) _Slider_FindMiddle                                   12    10      2    8360
                                              4 BANK0     12    10      2
        _MTOUCH_Button_Deviation_Get
 ---------------------------------------------------------------------------------
 (5) _Slider_FindLeft                                      5     3      2    8193
                                              9 COMMON     1     1      0
                                              4 BANK0      4     2      2
        _MTOUCH_Button_Deviation_Get
 ---------------------------------------------------------------------------------
 (6) _MTOUCH_Button_Deviation_Get                          5     5      0    7968
                                              8 COMMON     1     1      0
                                              0 BANK0      4     4      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) _Slider_DefaultCallback                               1     0      1     159
                                              2 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (4) _MTOUCH_Button_isPressed                              6     6      0    8036
                                              8 COMMON     2     2      0
                                              0 BANK0      4     4      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) _MTOUCH_Sensor_SampleAll                              2     2      0   18035
                                             23 BANK0      2     2      0
                     _Sensor_Service
 ---------------------------------------------------------------------------------
 (3) _Sensor_Service                                       8     8      0   17936
                                             15 BANK0      8     8      0
                 _Sensor_Acquisition
             _Sensor_DefaultCallback
            _Sensor_RawSample_Update
                   _Sensor_isEnabled
                  _Sensor_setSampled
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) _Sensor_setSampled                                    2     0      2      98
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (4) _Sensor_RawSample_Update                              2     0      2     120
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (4) _Sensor_DefaultCallback                               1     0      1      53
                                              2 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (4) _Sensor_Acquisition                                   4     2      2    9309
                                             11 BANK0      4     2      2
           _Sensor_Acq_ExecutePacket
                   _Sensor_isEnabled
                   _Sensor_setActive
                 _Sensor_setInactive
                                _abs
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                              2 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (5) _Sensor_setInactive                                   2     0      2      98
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (5) _Sensor_setActive                                     2     0      2      98
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (4) _Sensor_isEnabled                                     2     0      2     196
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (5) _Sensor_Acq_ExecutePacket                             7     5      2    8493
                                              4 BANK0      7     5      2
                       _MTOUCH_Delay
                      _MTOUCH_Random
      _MTOUCH_Sensor_Scan_Initialize
             _Sensor_Acq_ExecuteScan
             _Sensor_setScanFunction
 ---------------------------------------------------------------------------------
 (6) _Sensor_setScanFunction                               2     0      2     120
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (6) _Sensor_Acq_ExecuteScan                               6     6      0    8005
                                              8 COMMON     2     2      0
                                              0 BANK0      4     4      0
                 _MTOUCH_CVD_ScanA_0 *
                 _MTOUCH_CVD_ScanA_1 *
                _MTOUCH_CVD_ScanA_10 *
                 _MTOUCH_CVD_ScanA_2 *
                 _MTOUCH_CVD_ScanA_3 *
                 _MTOUCH_CVD_ScanA_4 *
                 _MTOUCH_CVD_ScanA_5 *
                 _MTOUCH_CVD_ScanA_6 *
                 _MTOUCH_CVD_ScanA_7 *
                 _MTOUCH_CVD_ScanA_8 *
                 _MTOUCH_CVD_ScanA_9 *
                 _MTOUCH_CVD_ScanB_0 *
                 _MTOUCH_CVD_ScanB_1 *
                _MTOUCH_CVD_ScanB_10 *
                 _MTOUCH_CVD_ScanB_2 *
                 _MTOUCH_CVD_ScanB_3 *
                 _MTOUCH_CVD_ScanB_4 *
                 _MTOUCH_CVD_ScanB_5 *
                 _MTOUCH_CVD_ScanB_6 *
                 _MTOUCH_CVD_ScanB_7 *
                 _MTOUCH_CVD_ScanB_8 *
                 _MTOUCH_CVD_ScanB_9 *
                             ___wmul
 ---------------------------------------------------------------------------------
 (7) _MTOUCH_CVD_ScanB_9                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _MTOUCH_CVD_ScanB_8                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _MTOUCH_CVD_ScanB_7                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _MTOUCH_CVD_ScanB_6                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _MTOUCH_CVD_ScanB_5                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _MTOUCH_CVD_ScanB_4                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _MTOUCH_CVD_ScanB_3                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _MTOUCH_CVD_ScanB_2                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _MTOUCH_CVD_ScanB_10                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _MTOUCH_CVD_ScanB_1                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _MTOUCH_CVD_ScanB_0                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _MTOUCH_CVD_ScanA_9                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _MTOUCH_CVD_ScanA_8                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _MTOUCH_CVD_ScanA_7                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _MTOUCH_CVD_ScanA_6                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _MTOUCH_CVD_ScanA_5                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _MTOUCH_CVD_ScanA_4                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _MTOUCH_CVD_ScanA_3                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _MTOUCH_CVD_ScanA_2                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _MTOUCH_CVD_ScanA_10                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _MTOUCH_CVD_ScanA_1                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _MTOUCH_CVD_ScanA_0                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _MTOUCH_Random                                        1     1      0       0
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (6) _MTOUCH_Delay                                         2     2      0      46
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _MTOUCH_Initialize                                    0     0      0   25488
        _MTOUCH_Button_InitializeAll
        _MTOUCH_Sensor_InitializeAll
     _MTOUCH_Sensor_Sampled_ResetAll
      _MTOUCH_Sensor_Scan_Initialize
        _MTOUCH_Slider_InitializeAll
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR1_SetInterruptHandler                             2     0      2     174
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _MTOUCH_Slider_InitializeAll                          2     2      0     267
                                              5 COMMON     2     2      0
                  _Slider_Initialize
 ---------------------------------------------------------------------------------
 (4) _Slider_Initialize                                    3     3      0     199
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (3) _MTOUCH_Sensor_Scan_Initialize                        0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _MTOUCH_Sensor_Sampled_ResetAll                       4     4      0     273
                                              0 BANK0      4     4      0
               _Sensor_Sampled_Reset
 ---------------------------------------------------------------------------------
 (3) _MTOUCH_Sensor_InitializeAll                          2     2      0   16209
                                              9 BANK0      2     2      0
           _MTOUCH_Sensor_Initialize
 ---------------------------------------------------------------------------------
 (4) _MTOUCH_Sensor_Initialize                             5     5      0   16110
                                              4 BANK0      5     5      0
               _MTOUCH_Sensor_Enable
               _Sensor_Sampled_Reset
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) _Sensor_Sampled_Reset                                 2     0      2     174
                                              8 COMMON     2     0      2
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (5) _MTOUCH_Sensor_Enable                                 5     5      0    7968
                                              8 COMMON     1     1      0
                                              0 BANK0      4     4      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) _MTOUCH_Button_InitializeAll                          2     2      0    8565
                                              9 COMMON     1     1      0
                                              7 BANK0      1     1      0
           _MTOUCH_Button_Initialize
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) _memcpy                                              12     6      6     371
                                              2 COMMON     7     1      6
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (2) _MTOUCH_Button_ServiceAll                             2     2      0   90686
                                             28 BANK0      2     2      0
               _Button_Reburst_Clear
                     _Button_Service
 ---------------------------------------------------------------------------------
 (3) _Button_Service                                       7     7      0   90587
                                             21 BANK0      7     7      0
            _Button_Deviation_Update
              _Button_Reading_Update
              _Button_State_Disabled *
          _Button_State_Initializing *
            _Button_State_NotPressed *
         _Button_State_PressDebounce *
               _Button_State_Pressed *
       _Button_State_ReleaseDebounce *
             _Button_State_Suspended *
           _MTOUCH_Button_Initialize
         _MTOUCH_Sensor_isCalibrated
           _MTOUCH_Sensor_wasSampled
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) _MTOUCH_Sensor_wasSampled                             5     5      0    7968
                                              8 COMMON     1     1      0
                                              0 BANK0      4     4      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) _MTOUCH_Sensor_isCalibrated                           1     1      0       0
 ---------------------------------------------------------------------------------
 (4) _Button_State_Suspended                               2     0      2    8465
                                             15 BANK0      2     0      2
             _Button_Baseline_Update
              _MTOUCH_Sensor_Disable
 ---------------------------------------------------------------------------------
 (5) _MTOUCH_Sensor_Disable                                5     5      0    7968
                                              8 COMMON     1     1      0
                                              0 BANK0      4     4      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) _Button_State_ReleaseDebounce                         4     2      2    1241
                                             15 BANK0      4     2      2
             _Button_DefaultCallback
             _Button_Reburst_Request
 ---------------------------------------------------------------------------------
 (4) _Button_State_Pressed                                 4     2      2    9243
                                             15 BANK0      4     2      2
             _Button_DefaultCallback
             _Button_Reburst_Request
           _MTOUCH_Button_Initialize
 ---------------------------------------------------------------------------------
 (4) _Button_State_PressDebounce                           4     2      2   10279
                                             15 BANK0      4     2      2
             _Button_Check_AKS_Block
             _Button_DefaultCallback
             _Button_Reburst_Request
 ---------------------------------------------------------------------------------
 (5) _Button_DefaultCallback                               1     0      1     239
                                              2 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (4) _Button_State_NotPressed                              4     2      2   18787
                                             15 BANK0      4     2      2
             _Button_Baseline_Update
             _Button_Check_AKS_Block
             _Button_Reburst_Request
           _MTOUCH_Button_Initialize
 ---------------------------------------------------------------------------------
 (4) _MTOUCH_Button_Initialize                             7     7      0    8095
                                              0 BANK0      7     7      0
            _MTOUCH_Sensor_Calibrate
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) _MTOUCH_Sensor_Calibrate                              1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _Button_Check_AKS_Block                              11     9      2    8976
                                              4 BANK0     11     9      2
      _Button_Unscaled_Deviation_Get
            _MTOUCH_Sensor_isEnabled
 ---------------------------------------------------------------------------------
 (6) _MTOUCH_Sensor_isEnabled                              5     5      0    7968
                                              8 COMMON     1     1      0
                                              0 BANK0      4     4      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (6) _Button_Unscaled_Deviation_Get                        8     6      2     196
                                              2 COMMON     8     6      2
 ---------------------------------------------------------------------------------
 (4) _Button_State_Initializing                            6     4      2    9495
                                             15 BANK0      6     4      2
         _Button_Baseline_Initialize
             _Button_Baseline_Update
             _Button_Reburst_Request
 ---------------------------------------------------------------------------------
 (5) _Button_Reburst_Request                               2     0      2     630
                                              8 COMMON     2     0      2
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (5) _Button_Baseline_Update                               8     6      2     404
                                              2 COMMON     8     6      2
 ---------------------------------------------------------------------------------
 (5) _Button_Baseline_Initialize                           6     4      2    8151
                                              5 BANK0      6     4      2
        _MTOUCH_Sensor_RawSample_Get
 ---------------------------------------------------------------------------------
 (4) _Button_State_Disabled                                2     0      2      53
                                             15 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) _Button_Reading_Update                                2     0      2    8517
                                              9 BANK0      2     0      2
       _Button_Reading_Update_Helper
 ---------------------------------------------------------------------------------
 (5) _Button_Reading_Update_Helper                         4     2      2    8365
                                              5 BANK0      4     2      2
        _MTOUCH_Sensor_RawSample_Get
 ---------------------------------------------------------------------------------
 (6) _MTOUCH_Sensor_RawSample_Get                          7     5      2    7968
                                              8 COMMON     2     0      2
                                              0 BANK0      5     5      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4    7906
                                              2 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (4) _Button_Deviation_Update                             16    14      2     256
                                              2 COMMON     6     4      2
                                              0 BANK0     10    10      0
 ---------------------------------------------------------------------------------
 (3) _Button_Reburst_Clear                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART_Write                                         1     1      0      22
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _DELAY_milliseconds                                   3     1      2     174
                                              2 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _INTERRUPT_InterruptManager                           0     0      0     610
                           _TMR1_ISR
 ---------------------------------------------------------------------------------
 (9) _TMR1_ISR                                             0     0      0     610
                   Absolute function *
               _MTOUCH_ScanScheduler *
       _TMR1_DefaultInterruptHandler *
                    _TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (10) _TMR1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _MTOUCH_ScanScheduler                                0     0      0     305
                    _TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (10) _TMR1_WriteTimer                                     2     0      2     305
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (10) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DELAY_milliseconds
   _EUSART_Write
   _MTOUCH_Service_Mainloop
     _MTOUCH_Button_ServiceAll
       _Button_Reburst_Clear
       _Button_Service
         _Button_Deviation_Update
         _Button_Reading_Update
           _Button_Reading_Update_Helper
             _MTOUCH_Sensor_RawSample_Get
               ___wmul
         _Button_State_Disabled *
         _Button_State_Initializing *
           _Button_Baseline_Initialize
             _MTOUCH_Sensor_RawSample_Get
           _Button_Baseline_Update
           _Button_Reburst_Request
             ___wmul (ARG)
         _Button_State_NotPressed *
           _Button_Baseline_Update
           _Button_Check_AKS_Block
             _Button_Unscaled_Deviation_Get
             _MTOUCH_Sensor_isEnabled
               ___wmul
           _Button_Reburst_Request
           _MTOUCH_Button_Initialize
             _MTOUCH_Sensor_Calibrate
             ___wmul
         _Button_State_PressDebounce *
           _Button_Check_AKS_Block
           _Button_DefaultCallback
           _Button_Reburst_Request
         _Button_State_Pressed *
           _Button_DefaultCallback
           _Button_Reburst_Request
           _MTOUCH_Button_Initialize
         _Button_State_ReleaseDebounce *
           _Button_DefaultCallback
           _Button_Reburst_Request
         _Button_State_Suspended *
           _Button_Baseline_Update
           _MTOUCH_Sensor_Disable
             ___wmul
         _MTOUCH_Button_Initialize *
         _MTOUCH_Sensor_isCalibrated *
         _MTOUCH_Sensor_wasSampled *
           ___wmul
         ___wmul *
     _MTOUCH_Initialize
       _MTOUCH_Button_InitializeAll
         _MTOUCH_Button_Initialize
         _memcpy
       _MTOUCH_Sensor_InitializeAll
         _MTOUCH_Sensor_Initialize
           _MTOUCH_Sensor_Enable
             ___wmul
           _Sensor_Sampled_Reset
             ___wmul (ARG)
           ___wmul
       _MTOUCH_Sensor_Sampled_ResetAll
         _Sensor_Sampled_Reset
       _MTOUCH_Sensor_Scan_Initialize
       _MTOUCH_Slider_InitializeAll
         _Slider_Initialize
       _TMR1_SetInterruptHandler
     _MTOUCH_Sensor_SampleAll
       _Sensor_Service
         _Sensor_Acquisition
           _Sensor_Acq_ExecutePacket
             _MTOUCH_Delay
             _MTOUCH_Random
             _MTOUCH_Sensor_Scan_Initialize
             _Sensor_Acq_ExecuteScan
               _MTOUCH_CVD_ScanA_0 *
               _MTOUCH_CVD_ScanA_1 *
               _MTOUCH_CVD_ScanA_10 *
               _MTOUCH_CVD_ScanA_2 *
               _MTOUCH_CVD_ScanA_3 *
               _MTOUCH_CVD_ScanA_4 *
               _MTOUCH_CVD_ScanA_5 *
               _MTOUCH_CVD_ScanA_6 *
               _MTOUCH_CVD_ScanA_7 *
               _MTOUCH_CVD_ScanA_8 *
               _MTOUCH_CVD_ScanA_9 *
               _MTOUCH_CVD_ScanB_0 *
               _MTOUCH_CVD_ScanB_1 *
               _MTOUCH_CVD_ScanB_10 *
               _MTOUCH_CVD_ScanB_2 *
               _MTOUCH_CVD_ScanB_3 *
               _MTOUCH_CVD_ScanB_4 *
               _MTOUCH_CVD_ScanB_5 *
               _MTOUCH_CVD_ScanB_6 *
               _MTOUCH_CVD_ScanB_7 *
               _MTOUCH_CVD_ScanB_8 *
               _MTOUCH_CVD_ScanB_9 *
               ___wmul *
             _Sensor_setScanFunction
           _Sensor_isEnabled
           _Sensor_setActive
           _Sensor_setInactive
           _abs
         _Sensor_DefaultCallback
         _Sensor_RawSample_Update
         _Sensor_isEnabled
         _Sensor_setSampled
         ___wmul
     _MTOUCH_Sensor_Sampled_ResetAll
     _MTOUCH_Slider_ServiceAll
       _Slider_Service
         _MTOUCH_Button_isPressed
           ___wmul
         _Slider_DefaultCallback
         _calculate_contact_size
           _Slider_FindLeft
             _MTOUCH_Button_Deviation_Get
               ___wmul
           _Slider_FindMiddle
             _MTOUCH_Button_Deviation_Get
           _Slider_FindRight
             _MTOUCH_Button_Deviation_Get
         _calculate_position
           _calculate_raw_position
             _divide
             _interpolate
               _divide
           _moving_average_filter
             _get_difference
           _positional_hysteresis
             _get_difference
     _MTOUCH_Tick
       _MTOUCH_Button_Tick
         _Button_Tick_helper
           _MTOUCH_Sensor_Enable
         ___wmul
     _MTOUCH_needReburst
       _MTOUCH_Button_Reburst_Service
       _MTOUCH_Slider_Reburst_Service
         _MTOUCH_Button_Reburst_Request
           _Button_Reburst_Request
           ___wmul
         _MTOUCH_Slider_isReburstRequest
   _MTOUCH_Slider_Position_Get
   _MTOUCH_Slider_isPositionChanged
   _MTOUCH_Slider_isPressed
   _SYSTEM_Initialize
     _EUSART_Initialize
       _EUSART_SetErrorHandler
       _EUSART_SetFramingErrorHandler
       _EUSART_SetOverrunErrorHandler
     _MTOUCH_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
     _WDT_Initialize
   ___fladd
     ___flmul (ARG)
       __Umul8_16
       ___fldiv (ARG)
   ___fldiv
   ___flmul
   ___fltol
   ___xxtofl

 _INTERRUPT_InterruptManager (ROOT)
   _TMR1_ISR
     Absolute function(Fake) *
     _MTOUCH_ScanScheduler *
       _TMR1_WriteTimer
     _TMR1_DefaultInterruptHandler *
     _TMR1_WriteTimer *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      A       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     41      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     10      50       7      100.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       2       9        2.5%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      AE      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              18      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BANK11               0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12               0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      AE      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Thu Jul  7 06:18:58 2022

                    __size_of_MTOUCH_Slider_isPressed 0017                        calculate_raw_position@ref_node 0034  
                        ?_MTOUCH_Sensor_RawSample_Get 0078                                          ___fldiv@aexp 0031  
                                        ___fldiv@bexp 0030                        MTOUCH_Slider_ServiceAll@slider 0057  
                                        ___fldiv@sign 0029                                      _Slider_FindRight 12DD  
                              _Sensor_setScanFunction 1C67                       __size_of_Sensor_Acq_ExecuteScan 0065  
                          __end_of_Sensor_setInactive 1B2F                                   ___wmul@multiplicand 0074  
                                   _Slider_FindMiddle 13E6                                   __Umul8_16@word_mpld 0022  
                                                 LATA 010C                                                   LATB 010D  
              positional_hysteresis@filtered_position 002E                        calculate_raw_position@position 003D  
                                                 l613 16D4                                                   l609 16C0  
                                                 l761 156E                                                   l781 099B  
                                                 l773 0AF5                                                   l786 09CE  
                                                 _GIE 005F                            __end_of_DELAY_milliseconds 1BE7  
                                  ?_Slider_FindMiddle 0024                                       _timer1ReloadVal 00E3  
                                                 _abs 1CA5                        ?_EUSART_SetFramingErrorHandler 0072  
                                                 wreg 0009                      ??_MTOUCH_Sensor_Sampled_ResetAll 0020  
                     ?_MTOUCH_Sensor_Sampled_ResetAll 0070                                          ___flmul@aexp 0040  
                                        ___flmul@bexp 0041                      __size_of_MTOUCH_Sensor_SampleAll 0014  
                                        divide@result 0078                                          ___flmul@sign 003F  
                                        ___flmul@temp 004A                                          ___flmul@prod 0046  
                   __size_of_MTOUCH_Sensor_Initialize 0020                             ?_MTOUCH_Sensor_Initialize 0070  
                                                INDF0 0000                                ?_positional_hysteresis 002A  
                                                FSR0H 0005                                                  FSR1H 0007  
                                                FSR0L 0004                                                  FSR1L 0006  
                                  _MTOUCH_CVD_ScanA_0 1E60                                    _MTOUCH_CVD_ScanA_1 1E80  
                                  _MTOUCH_CVD_ScanA_2 1EA0                                    _MTOUCH_CVD_ScanA_3 1EC0  
                                  _MTOUCH_CVD_ScanB_0 1FC0                                    _MTOUCH_CVD_ScanA_4 1EE0  
                                  _MTOUCH_CVD_ScanB_1 1FE0                                    _MTOUCH_CVD_ScanA_5 1F00  
                                  _MTOUCH_CVD_ScanB_2 1005                                    _MTOUCH_CVD_ScanA_6 1F20  
                                  _MTOUCH_CVD_ScanB_3 1025                                    _MTOUCH_CVD_ScanA_7 1F40  
                                  _MTOUCH_CVD_ScanB_4 1045                                    _MTOUCH_CVD_ScanA_8 1F60  
                                  _MTOUCH_CVD_ScanB_5 1065                                    _MTOUCH_CVD_ScanA_9 1E40  
                                  _MTOUCH_CVD_ScanB_6 1085                                    _MTOUCH_CVD_ScanB_7 10A5  
                                  _MTOUCH_CVD_ScanB_8 10C5                                    _MTOUCH_CVD_ScanB_9 1FA0  
                      ??_Button_State_ReleaseDebounce 0031                                          ___fltol@exp1 0077  
                                 ??_Slider_FindMiddle 0026                                _calculate_contact_size 1573  
                                                ?_abs 0072                                                  l1144 0F03  
                                                l1098 1B3E                                                  l1381 1D40  
                                                l1703 03CD                                                  l1724 0444  
                                                l1716 042C                                                  l5014 1C1B  
                                                l1582 08F0                                                  l1822 0C7B  
                                                l1760 05B4                                                  l1682 02B7  
                                                l1762 05C1                                                  l1738 0495  
                                                l6010 0CEA                                                  l1835 0CC5  
                                                l5060 1B71                                                  l1836 0CCF  
                                                l1828 0CB1                                                  l1686 034A  
                                                l1790 025E                                                  l1759 059C  
                                                l1688 032D                                                  l7002 081D  
                                                l5410 1C3F                                                  l4276 1BC9  
                                                l1797 1E11                                                  l4710 11FF  
                                                l4462 1B89                                                  l5422 1C2C  
                                                l5510 0284                                                  l7032 1D9B  
                                                l6400 084D                                                  l6312 1538  
                                                l6304 152C                                                  l5600 0358  
                                                l4386 0C18                                                  l7018 1BB8  
                                                l6402 0854                                                  l7106 17E1  
                                                l7202 1C7C                                                  l7130 0712  
                                                l5434 1CD1                                                  l5610 036C  
                                                l5514 0287                                                  l7108 17FE  
                                                l6316 1540                                                  l6308 1532  
                                                l6332 1563                                                  l5516 028F  
                                                l5446 1BD5                                                  l4742 0BA5  
                                                l6342 1D3A                                                  l6414 0895  
                                                l6406 085B                                                  l6334 1567  
                                                l6326 1559                                                  l6318 1543  
                                                l7150 077D                                                  l7142 0761  
                                                l7054 1220                                                  l5534 02AC  
                                                l5710 0471                                                  l7310 08B9  
                                                l4744 0BAD                                                  l6504 0DF7  
                                                l7224 1BFD                                                  l6416 089A  
                                                l6408 086C                                                  l7208 1C85  
                                                l6328 155E                                                  l6440 147A  
                                                l7144 076C                                                  l7072 1D81  
                                                l5608 036A                                                  l5544 02C1  
                                                l5800 055B                                                  l5704 0466  
                                                l6514 0E17                                                  l6418 089E  
                                                l6362 1123                                                  l6450 0948  
                                                l6602 0B38                                                  l7162 07BB  
                                                l7154 0798                                                  l5650 03F3  
                                                l5618 037B                                                  l5538 02AF  
                                                l5810 0584                                                  l7306 08B0  
                                                TRISA 008C                                                  l4748 0BC1  
                                                l6508 0DE8                                                  l6516 0E28  
                                                l7092 1726                                                  l6436 1467  
                                                l6604 0B41                                                  l7164 07C2  
                                                l7236 1B8D                                                  l7068 1D70  
                                                l5644 03EC                                                  l5636 03DF  
                                                l5628 03C5                                                  l5652 03F5  
                                                l5724 048A                                                  l5708 0469  
                                                l7500 0F27                                                  TRISB 008D  
                                                l6374 11A9                                                  l6534 150F  
                                                l4950 1D13                                                  l6454 096E  
                                                l6710 05DB                                                  l7174 07E9  
                                                l5662 0400                                                  l5582 0335  
                                                l5574 02FD                                                  l7326 08DE  
                                                l6712 05E3                                                  l6632 09DE  
                                                l6616 0996                                                  l5680 043C  
                                                l5584 0337                                                  l5592 0345  
                                                l5824 05BD                                                  l5744 04C0  
                                                l5728 048D                                                  l7336 08FD  
                                                l7328 08EC                                                  l7512 0F60  
                                                l6386 1144                                                  l6810 0E67  
                                                l7098 17C0                                                  l6650 13F3  
                                                l6626 09BC                                                  l7178 07EB  
                                                l7282 11E4                                                  l7274 11D9  
                                                l5658 03FE                                                  l5770 0520  
                                                l5738 04B4                                                  l7258 1E0B  
                                                l7354 006C                                                  l6820 0E9A  
                                                l6812 0E6F                                                  l6652 142E  
                                                l6732 065F                                                  l6716 05F5  
                                                l5684 0440                                                  l5764 0507  
                                                l5772 04E9                                                  l7444 01F4  
                                                l7436 01C6                                                  l7372 008F  
                                                l7356 006E                                                  l7508 0F50  
                                                l6486 0DB9                                                  l6558 16B4  
                                                l6670 14BA                                                  l6750 0699  
                                                l6742 067B                                                  l6726 063E  
                                                l7278 11E2                                                  l5790 0542  
                                                l5774 0525                                                  l7462 0234  
                                                l7438 01DD                                                  l7374 0091  
                                                l7358 0076                                                  l6672 14BD  
                                                l6648 1428                                                  l6744 0688  
                                                l6752 06B8                                                  l6728 0654  
                                                l6592 0B13                                                  l7448 01F6  
                                                l7384 00A7                                                  l7376 0099  
                                                l6498 0DF5                                                  l6826 0EB0  
                                                l6770 1165                                                  l6674 14C6  
                                                l6690 12FF                                                  l6594 0B18  
                                                l6914 1642                                                  l7458 021F  
                                                l6836 0ED6                                                  l6828 0EB9  
                                                l7580 17F3                                                  l6940 1354  
                                                l6692 1302                                                  l6748 0693  
                                                l5796 0559                                                  l5788 052B  
                                                l7468 024B                                                  l6782 1BF2  
                                                l6790 0A02                                                  l6846 15E9  
                                                l7582 0864                                                  l6934 1352  
                                                l6678 14CB                                                  l6694 130B  
                                                l6758 06F0                                                  l5982 0C8A  
                                                l6864 0D1B                                                  l5976 0C73  
                                                l6970 13DD                                                  l6954 13AB  
                                                l7578 17EE                                                  l6698 130F  
                                                l5986 0C8E                                                  l6788 09FB  
                                                l6876 0D6E                                                  l6964 13B4  
                                                l5996 0CC3                                                  l5988 0C9E  
                                                l6798 0A4D                                                  l6878 0D75  
                                                l6958 13AD                                                  l5998 0CB6  
                                                l6896 0AAE                                                  l6992 15C1  
                                                l6898 0AB5                                                  l6986 15A4  
                       ?_Button_Reading_Update_Helper 0025                                                  _LATA 010C  
                                                _LATB 010D                                                  _LATC 010E  
                                                _LATE 0110                                                  u5000 031D  
                                                u4320 1C19                                                  u3185 11BA  
                                                u5113 038D                                                  u5105 0370  
                                                u5035 033B                                                  u3365 0BE0  
                                                u3375 0C26                                                  u6115 154F  
                                                u5155 03E0                                                  u4700 1C3D  
                                                u7005 0D32                                                  u3565 1CAE  
                                                u6125 155A                                                  u5255 0417  
                                                u5415 04F1                                                  u6305 1471  
                                                u5505 0537                                                  u5425 04F8  
                                                u3930 0B8C                                                  u6315 0912  
                                                u6324 092E                                                  u4740 1CCF  
                                                u3925 0B54                                                  u6405 0E15  
                                                u7205 1DB7                                                  u6325 092C  
                                                u5445 0501                                                  u3935 0B88  
                                                u6175 1D41                                                  u6335 126A  
                                                u6415 0DF3                                                  u8007 104B  
                                                u5455 0515                                                  u6185 1D46  
                                                u6425 0E26                                                  u6345 0DB7  
                                                u8017 105A                                                  u8107 1FA6  
                                                u8027 102B                                                  u7155 159A  
                                                u8117 1FB5                                                  u8037 103A  
                                                u6605 1409                                                  u7165 15BD  
                                                u7405 07D8                                                  u7325 0719  
                                                u5485 052E                                                  u7334 0729  
                                                u8207 1F06                                                  u8127 1F86  
                                                u8047 100B                                                  u6295 145E  
                                                u6535 0B03                                                  u7335 0727  
                                                u5575 0572                                                  u6704 05EF  
                                                u6465 14E2                                                  u8217 1F15  
                                                u8137 1F95                                                  u8057 101A  
                                                u6705 05ED                                                  u7345 0751  
                                                u5585 058D                                                  u6714 0604  
                                                u6475 14FF                                                  u8307 1E66  
                                                u8227 1EE6                                                  u8147 1F66  
                                                u8067 1FE6                                                  u6635 14B4  
                                                u6715 0602                                                  u6555 0B27  
                                                u5595 05A6                                                  u5915 0CAB  
                                                u6804 06D0                                                  u8317 1E75  
                                                u8237 1EF5                                                  u8157 1F75  
                                                u8077 1FF5                                                  u6805 06CE  
                                                u7525 08C2                                                  u4990 031C  
                                                u8327 1E46                                                  u8247 1EC6  
                                                u8167 1F46                                                  u8087 1FC6  
                                                u6815 06DE                                                  u7375 0796  
                                                u5935 0CBD                                                  u6824 06E8  
                                                u6905 0E85                                                  u8337 1E55  
                                                u8257 1ED5                                                  u8177 1F55  
                                                u8097 1FD5                                                  u6825 06E6  
                                                u4985 0311                                                  u7465 1E12  
                                                u7705 0147                                                  u8347 1BE1  
                                                u8267 1EA6                                                  u8187 1F26  
                                                u6595 141D                                                  u7715 0199  
                                                u7555 08DF                                                  u8277 1EB5  
                                                u8197 1F35                                                  u7725 01B5  
                                                u8287 1E86                                                  u7735 01C9  
                                                u5975 0CD7                                                  u5895 0C97  
                                                u8297 1E95                                                  u6785 068E  
                                                u7825 020D                                                  u7585 08F4  
                                                u6794 06C2                                                  u6875 0A2A  
                                                u7907 10EB                                                  u6795 06C0  
                                                u7835 0228                                                  u7755 01D2  
                                                u7917 10FA                                                  u7845 023E  
                                                u7927 10CB                                                  u7695 011A  
                                                u7937 10DA                                                  u7865 0F25  
                                                u7947 10AB                                                  u7957 10BA  
                          Button_State_Pressed@button 002F                                                  u7967 108B  
                                                u7977 109A                                                  u7987 106B  
                                                u7997 107A                                                  _WPUB 020D  
                                                _WPUE 0210                     __size_of_Sensor_Acq_ExecutePacket 0060  
             __end_of_MTOUCH_Slider_isPositionChanged 1C41              __size_of_MTOUCH_Slider_isPositionChanged 0012  
                   ??_MTOUCH_Slider_isPositionChanged 0072                      ?_MTOUCH_Slider_isPositionChanged 0070  
                     _MTOUCH_Slider_isPositionChanged 1C2F                             ?_Sensor_Acq_ExecutePacket 0024  
                               _Button_State_Disabled 1AFB                                    _MTOUCH_needReburst 1B99  
               __end_of_MTOUCH_Button_Reburst_Request 1D6F                __size_of_MTOUCH_Button_Reburst_Request 001C  
                       _MTOUCH_Button_Reburst_Request 1D53                                                  abs@a 0072  
               __end_of_MTOUCH_Button_Reburst_Service 0004                __size_of_MTOUCH_Button_Reburst_Service 0002  
                       _MTOUCH_Button_Reburst_Service 0002                                                  _main 0EFC  
                __size_of_MTOUCH_Button_InitializeAll 001D                                                  fsr0h 0005  
                                                fsr1h 0007                                                  indf0 0000  
                                                fsr0l 0004                                                  indf1 0001  
                                                fsr1l 0006                  __size_of_MTOUCH_Sensor_InitializeAll 000F  
                                                btemp 007E                                   ?_MTOUCH_CVD_ScanA_0 0070  
                                 ?_MTOUCH_CVD_ScanA_1 0070                                   ?_MTOUCH_CVD_ScanA_2 0070  
                                 ?_MTOUCH_CVD_ScanA_3 0070                                   ?_MTOUCH_CVD_ScanA_4 0070  
                                 ?_MTOUCH_CVD_ScanB_0 0070                                   ?_MTOUCH_CVD_ScanA_5 0070  
                                 ?_MTOUCH_CVD_ScanB_1 0070                        get_difference@current_position 0074  
                                 ?_MTOUCH_CVD_ScanA_6 0070                                   ?_MTOUCH_CVD_ScanB_2 0070  
                                 ?_MTOUCH_CVD_ScanA_7 0070                                   ?_MTOUCH_CVD_ScanB_3 0070  
                                 ?_MTOUCH_CVD_ScanA_8 0070                                   ?_MTOUCH_CVD_ScanB_4 0070  
                                 ?_MTOUCH_CVD_ScanA_9 0070                                   ?_MTOUCH_CVD_ScanB_5 0070  
                                 ?_MTOUCH_CVD_ScanB_6 0070                                   ?_MTOUCH_CVD_ScanB_7 0070  
                         moving_average_filter@slider 002E                                   ?_MTOUCH_CVD_ScanB_8 0070  
                                 ?_MTOUCH_CVD_ScanB_9 0070                                                  start 0012  
                                     ___fldiv@new_exp 002A                            ??_TMR1_SetInterruptHandler 0074  
                                 ?_MTOUCH_needReburst 0070                  MTOUCH_Slider_Position_Get@sliderName 0074  
                    __end_of_MTOUCH_Slider_ServiceAll 1B99                                                 ADCON0 009D  
                             __size_of_Slider_Service 0108                                  get_difference@slider 0025  
                            ?_MTOUCH_Service_Mainloop 0070                      __size_of_MTOUCH_Button_isPressed 0042  
                       __size_of_Button_State_Pressed 0056                               ?_Button_Check_AKS_Block 0024  
                                               ??_abs 0074                             __end_of_Slider_FindMiddle 1433  
                                        main@f_slider 00D7                           ?_Button_Baseline_Initialize 0025  
                                 _MTOUCH_CVD_ScanA_10 1F80                                   _MTOUCH_CVD_ScanB_10 10E5  
                       ??_MTOUCH_Sensor_RawSample_Get 0020                         Sensor_RawSample_Update@sensor 0072  
                           __size_of_Sensor_isEnabled 000E                                         ?_EUSART_Write 0070  
                      __size_of_OSCILLATOR_Initialize 0007                           ?_Button_State_PressDebounce 002F  
                       __end_of_OSCILLATOR_Initialize 1B3D                                     _Slider_Initialize 12A6  
                                       ___fltol@sign1 0076                                       __end_of___fladd 044C  
                                               ?_main 0070                                       __end_of___fldiv 05C6  
                                               _ADRES 009B                                  ??_MTOUCH_CVD_ScanA_0 0072  
                                ??_MTOUCH_CVD_ScanA_1 0072                                  ??_MTOUCH_CVD_ScanA_2 0072  
                                ??_MTOUCH_CVD_ScanA_3 0072                                  ??_MTOUCH_CVD_ScanA_4 0072  
                                ??_MTOUCH_CVD_ScanB_0 0072                                  ??_MTOUCH_CVD_ScanA_5 0072  
                                ??_MTOUCH_CVD_ScanB_1 0072                                  ??_MTOUCH_CVD_ScanA_6 0072  
                                ??_MTOUCH_CVD_ScanB_2 0072                                  ??_MTOUCH_CVD_ScanA_7 0072  
                                ??_MTOUCH_CVD_ScanB_3 0072                                       __end_of___flmul 026B  
                                ??_MTOUCH_CVD_ScanA_8 0072                                  ??_MTOUCH_CVD_ScanB_4 0072  
                                ??_MTOUCH_CVD_ScanA_9 0072                                  ??_MTOUCH_CVD_ScanB_5 0072  
                                ??_MTOUCH_CVD_ScanB_6 0072                                  ??_MTOUCH_CVD_ScanB_7 0072  
                                ??_MTOUCH_CVD_ScanB_8 0072                                  ??_MTOUCH_CVD_ScanB_9 0072  
                                     __end_of___fltol 090C                                                 _T1CON 0018  
                             __size_of_Button_Service 0063                                                 _RCSTA 019D  
                                               _TMR1H 0017                                                 _TMR1L 0016  
                                  ?_Slider_Initialize 0070                                                 _TRISA 008C  
                                               _TRISB 008D                                                 _TRISC 008E  
                                               _TRISE 0090                     MTOUCH_Slider_InitializeAll@slider 0076  
                                               _TXREG 019A                                                 _TXSTA 019E  
                     __size_of_Button_DefaultCallback 0001                           MTOUCH_Sensor_Disable@sensor 0078  
                                ??_MTOUCH_needReburst 0027                                      __end_of_TMR1_ISR 1C67  
                     __size_of_Button_State_Suspended 0018                           __size_of_calculate_position 003C  
                     __size_of_Sensor_DefaultCallback 0001                               __size_of_Sensor_Service 0064  
               __end_of_MTOUCH_Sensor_Scan_Initialize 1B0E                __size_of_MTOUCH_Sensor_Scan_Initialize 0005  
                       _MTOUCH_Sensor_Scan_Initialize 1B09                                        _WDT_Initialize 1B05  
                             Sensor_setSampled@sensor 0072                                  _Button_Reburst_Clear 1AFE  
                                 ??_Slider_Initialize 0072                              __size_of_Slider_FindLeft 0050  
                              _Sensor_Acq_ExecuteScan 0841                                                 main@i 00DF  
                    __size_of_Button_State_NotPressed 00D2                                  ?_MTOUCH_CVD_ScanA_10 0070  
                                ?_MTOUCH_CVD_ScanB_10 0070                               __end_of_TMR1_Initialize 1D04  
                            ??_calculate_raw_position 002F                                                 pclath 000A  
                                _Sensor_Sampled_Reset 1B1A                moving_average_filter@filtered_position 002C  
                  __end_of_MTOUCH_Slider_Position_Get 1C2F                            _MTOUCH_Slider_Position_Get 1C1D  
                                               status 0003                      __size_of_MTOUCH_Sensor_isEnabled 0021  
                                               wtemp0 007E                             __size_of_Sensor_setActive 0007  
                                      divide@exponent 0076                                       _TMR1_WriteTimer 1BA7  
                              Sensor_isEnabled@sensor 0072                   MTOUCH_Button_Reburst_Request@button 0024  
                                        ?_interpolate 0020                                       __initialization 0014  
                      __end_of_Button_Check_AKS_Block 0E2A                                          __end_of_main 1000  
                               __end_of_MTOUCH_Random 1BD5                             __end_of_Slider_Initialize 12DD  
                             _MTOUCH_Button_Tick$2890 002C                                        ??_EUSART_Write 0072  
                         ?_INTERRUPT_InterruptManager 0070                          __end_of_MTOUCH_ScanScheduler 1B4E  
                    __end_of_MTOUCH_Button_Initialize 139D                                                ??_main 0060  
                                    ??_get_difference 0020                               _MTOUCH_Sensor_Calibrate 1AF9  
                             ??_Button_Reading_Update 007A                  MTOUCH_Sensor_Sampled_ResetAll@sensor 0022  
                            ?_Button_Deviation_Update 0072                                __end_of_WDT_Initialize 1B09  
                                        ?_MTOUCH_Tick 0070                          Button_Baseline_Update@button 0072  
                               ?_Button_Reburst_Clear 0070                     _EUSART_DefaultFramingErrorHandler 0000  
                                              _ADCON0 009D                                                _ADCON1 009E  
                          _EUSART_OverrunErrorHandler 00E5                  __size_of_MTOUCH_Sensor_RawSample_Get 0024  
                               ??_MTOUCH_CVD_ScanA_10 0072                                 ??_MTOUCH_CVD_ScanB_10 0072  
                                   interpolate@delta1 0020                                     interpolate@delta2 0022  
                                   interpolate@delta3 0024                                                _APFCON 011D  
                                              _ANSELA 018C                                                _ANSELB 018D  
                                              _BORCON 0116                                                _T1GCON 0019  
                              ?_Button_State_Disabled 002F                           positional_hysteresis@slider 0034  
                             TMR1_WriteTimer@timerVal 0070                                                i1l1231 0010  
                                              i1l5026 1BB1                                 ?_Sensor_Sampled_Reset 0078  
                                              _OSCCON 0099                   __end_of_MTOUCH_Slider_InitializeAll 1B7D  
                         _MTOUCH_Slider_InitializeAll 1B70                                                _SPBRGH 019C  
                                              _SPBRGL 019B                                                _WDTCON 0097  
                                   interpolate@rtnval 002B                     MTOUCH_Button_InitializeAll@button 0027  
                                    __end_of___xxtofl 0CF3                        ??_Button_Reading_Update_Helper 0027  
                              _Button_DefaultCallback 1AFA                       __end_of_MTOUCH_Service_Mainloop 11F7  
                             _MTOUCH_Slider_isPressed 1CBC                                _Button_State_Suspended 1CD3  
                      ?_MTOUCH_Button_Reburst_Request 0070                        ?_MTOUCH_Button_Reburst_Service 0070  
                __end_of_TMR1_DefaultInterruptHandler 1AF9                 __size_of_TMR1_DefaultInterruptHandler 0001  
                        _TMR1_DefaultInterruptHandler 1AF8                                _Sensor_DefaultCallback 1AFC  
                      __size_of_MTOUCH_Sensor_Disable 001E                                         _packet_sample 00EB  
                       __end_of_MTOUCH_Sensor_Disable 1DE3                                             ??___fladd 0054  
                                              ___wmul 1D38                          Sensor_DefaultCallback@sensor 0072  
                                           ??___fldiv 0020                        __size_of_moving_average_filter 0070  
                                           ??___flmul 003A                                             ??___fltol 0020  
                       __end_of_moving_average_filter 09E3                            __size_of_Slider_FindMiddle 004D  
                                              _divide 1521                              ??_Button_Reburst_Request 007A  
                                              _memcpy 11F7                      __end_of_MTOUCH_Button_ServiceAll 1C0B  
                            _MTOUCH_Slider_ServiceAll 1B8B                                          __pdataBIGRAM 2338  
                                       _middle_signal 00E9                     MTOUCH_Slider_isPressed@sliderName 0073  
                             _MTOUCH_Sensor_SampleAll 1C7B                                    __size_of__Umul8_16 001F  
                        Button_DefaultCallback@button 0072                                       ?_WDT_Initialize 0070  
                            ?_Sensor_RawSample_Update 0072                            __end_of_Sensor_Acquisition 13E6  
                             ?_Button_Baseline_Update 0072              TMR1_SetInterruptHandler@InterruptHandler 0072  
                  Button_State_ReleaseDebounce@button 002F                               __end_of_TMR1_WriteTimer 1BB6  
                  calculate_contact_size@contact_size 0034                       MTOUCH_Sensor_RawSample_Get@name 0024  
                            __end_of_Slider_FindRight 1314                                      ?_TMR1_Initialize 0070  
                                        ___xxtofl@arg 0022                                          ___xxtofl@exp 0021  
                                   _SYSTEM_Initialize 1C41                                          ___xxtofl@val 0072  
                     __size_of_calculate_raw_position 012F                               __end_of__initialization 004F  
                 __size_of_Button_Baseline_Initialize 002D                           _MTOUCH_Button_isPressed$498 0078  
                      ?_MTOUCH_Sensor_Scan_Initialize 0070                   __size_of_Button_State_PressDebounce 0098  
                                  ?_SYSTEM_Initialize 0070                                   _Button_StateMachine 00A0  
                                          ___fltol@f1 0072                            __end_of_Button_Tick_helper 1676  
                                   ??_Slider_FindLeft 0079                         Slider_FindMiddle@channelDelta 002A  
            calculate_raw_position@interpolation_bits 003A                         MTOUCH_Sensor_Calibrate@sensor 0070  
                             ?_Sensor_setScanFunction 0072                                        __pcstackCOMMON 0070  
                                      _Slider_Service 06F5                               _MTOUCH_Button_isPressed 1314  
                                        __pidataBANK1 1275                                       divide@numerator 0072  
                                 ??_SYSTEM_Initialize 007A                        ?_Button_Unscaled_Deviation_Get 0072  
                                           ?_TMR1_ISR 0070                         ?_TMR1_DefaultInterruptHandler 0070  
                          __end_of_MTOUCH_Button_Tick 1248                      ??_MTOUCH_Slider_isReburstRequest 0072  
                     ?_MTOUCH_Slider_isReburstRequest 0070                            __size_of_Slider_Initialize 0037  
                    __end_of_MTOUCH_Sensor_Initialize 1E40                             ??_MTOUCH_Sensor_Calibrate 0072  
                                    _Sensor_isEnabled 1B7D                              calculate_position@slider 0048  
                     __end_of_Button_Deviation_Update 0BCF                              Sensor_setInactive@sensor 0072  
                                      _Button_Service 16D6                      __end_of_Sensor_Acq_ExecutePacket 16D6  
                          ?_Button_State_Initializing 002F                                  Button_Service@button 003A  
                                      _OPTION_REGbits 0095                               ??_positional_hysteresis 0076  
                      __end_of_Button_Baseline_Update 0C5D                               ?_calculate_contact_size 0030  
                              ??_Button_Reburst_Clear 0072                                  Sensor_Service@sensor 0035  
                            _MTOUCH_Button_Initialize 1356                              ??_Slider_DefaultCallback 0073  
                     ??_EUSART_SetOverrunErrorHandler 0074                                        _Sensor_Service 179C  
                             _Button_State_NotPressed 0E2A                         __size_of_MTOUCH_Sensor_Enable 001E  
                                  _Sensor_setInactive 1B28                             __end_of_SYSTEM_Initialize 1C53  
                                   _lowpowerActivated 00EF                      MTOUCH_Sensor_isCalibrated@sensor 0070  
                              ??_Sensor_Sampled_Reset 007A                                            __pbssBANK0 0061  
                                          __pbssBANK1 00E9                                  __end_of_EUSART_Write 1B45  
                             _MTOUCH_Sensor_isEnabled 1125                                    _DELAY_milliseconds 1BD5  
                                _MTOUCH_ScanScheduler 1B45                             ??_MTOUCH_Slider_isPressed 0072  
                                    _mTouchScanReload 00BE              MTOUCH_Slider_isReburstRequest@sliderName 0072  
                  calculate_raw_position@deadband_set 0035                                   ?_Sensor_setInactive 0072  
                                    _Sensor_setActive 1B21                                    Sensor_Service@name 0033  
                          __end_of_mtouch_button_init 1855                                        main@ave_slider 00DB  
                      __end_of_Sensor_setScanFunction 1C7B                                __end_of_Slider_Service 07FD  
                                   __end_of__Umul8_16 1E20                   calculate_position@filtered_position 0044  
                                 ?_DELAY_milliseconds 0072                                            __pmaintext 0EFC  
                                       ?_MTOUCH_Delay 0070                                               ?___wmul 0072  
                                          ??_TMR1_ISR 0072                                  __size_of_interpolate 0067  
                      MTOUCH_Sensor_wasSampled@sensor 0078                                            __pintentry 0004  
                                             ?_divide 0072                                __end_of_Button_Service 1739  
                                             ?_memcpy 0072                                               _BAUDCON 019F  
                              _calculate_raw_position 05C6                       __size_of_Button_Reburst_Request 0003  
                 __end_of_MTOUCH_Button_InitializeAll 1DA8                           _MTOUCH_Button_InitializeAll 1D8B  
                 __end_of_MTOUCH_Sensor_InitializeAll 1BC5                           _MTOUCH_Sensor_InitializeAll 1BB6  
                           ??_MTOUCH_Sensor_SampleAll 0037                          Button_Reburst_Request@button 0078  
                     __end_of_Sensor_RawSample_Update 1D1E                                  ??_Sensor_setInactive 0074  
                   __size_of_MTOUCH_Sensor_wasSampled 0021                             ?_MTOUCH_Sensor_wasSampled 0070  
                      __end_of_calculate_contact_size 15C6                           Button_State_Disabled@button 002F  
                   __end_of_Button_State_Initializing 0A54                                __end_of_Sensor_Service 1800  
                                           ?___xxtofl 0072                                        main@map_slider 00D1  
                            _MTOUCH_Button_ServiceAll 1BF9                                  ??_DELAY_milliseconds 0074  
                          calculate_raw_position@size 003B                               ?_Sensor_Acq_ExecuteScan 0070  
                       MTOUCH_Sensor_SampleAll@sensor 0038                                               _OSCTUNE 0098  
                    __size_of_MTOUCH_Service_Mainloop 0027                          __end_of_Button_State_Pressed 161C  
                        ?_MTOUCH_Button_Deviation_Get 0070                              ??_EUSART_SetErrorHandler 0074  
                    Button_Baseline_Initialize@button 0025                                      ?_TMR1_WriteTimer 0070  
                                __size_of_MTOUCH_Tick 0003                                 ?_MTOUCH_ScanScheduler 0070  
               positional_hysteresis@current_position 002A                           ?_MTOUCH_Slider_Position_Get 0072  
               __end_of_MTOUCH_Slider_Reburst_Service 1D8B                __size_of_MTOUCH_Slider_Reburst_Service 001C  
                       _MTOUCH_Slider_Reburst_Service 1D6F                             ??_MTOUCH_Button_isPressed 0020  
                                     ?_Slider_Service 0070                                        ??_MTOUCH_Delay 0072  
                                      _packet_counter 006A                               Sensor_Acquisition@retry 002E  
                                             ___fladd 026B                                               ___fldiv 044C  
                                             ___flmul 0053                                               ___fltol 08A6  
                      MTOUCH_Button_Initialize@button 0025                                       __size_of___wmul 001B  
             MTOUCH_Slider_Reburst_Service@sliderName 0026                                       __size_of_divide 0052  
                                     ?_Button_Service 0070                                       __size_of_memcpy 0028  
                                             __ptext1 0C5D                                               __ptext2 08A6  
                                             __ptext3 0053                                               __ptext4 1E01  
                                             __ptext5 044C                                               __ptext6 026B  
                                             __ptext7 1C41                                               __ptext8 1B05  
                                             __ptext9 1CEB                           Button_Reading_Update@button 0029  
                      ??_TMR1_DefaultInterruptHandler 0070                           __size_of_MTOUCH_CVD_ScanA_0 0020  
                         __size_of_MTOUCH_CVD_ScanA_1 0020                           __size_of_MTOUCH_CVD_ScanA_2 0020  
                         __size_of_MTOUCH_CVD_ScanA_3 0020                           __size_of_MTOUCH_CVD_ScanA_4 0020  
                         __size_of_MTOUCH_CVD_ScanB_0 0020                           __size_of_MTOUCH_CVD_ScanA_5 0020  
                         __size_of_MTOUCH_CVD_ScanB_1 0020                           __size_of_MTOUCH_CVD_ScanA_6 0020  
                         __size_of_MTOUCH_CVD_ScanB_2 0020                           __size_of_MTOUCH_CVD_ScanA_7 0020  
                         __size_of_MTOUCH_CVD_ScanB_3 0020                           __size_of_MTOUCH_CVD_ScanA_8 0020  
                         __size_of_MTOUCH_CVD_ScanB_4 0020                           __size_of_MTOUCH_CVD_ScanA_9 0020  
                         __size_of_MTOUCH_CVD_ScanB_5 0020                           __size_of_MTOUCH_CVD_ScanB_6 0020  
                         __size_of_MTOUCH_CVD_ScanB_7 0020                           __size_of_MTOUCH_CVD_ScanB_8 0020  
                         __size_of_MTOUCH_CVD_ScanB_9 0020                                             _T1CONbits 0018  
                            _MTOUCH_Sensor_Initialize 1E20                        __end_of_Sensor_Acq_ExecuteScan 08A6  
                               _OSCILLATOR_Initialize 1B36                                          __size_of_abs 0017  
                          __end_of_calculate_position 0841                                            ??___xxtofl 0076  
                           ??_Button_State_NotPressed 0031                                       ?_Sensor_Service 0070  
                   __size_of_TMR1_SetInterruptHandler 0005                              ??_PIN_MANAGER_Initialize 0072  
                           ?_TMR1_SetInterruptHandler 0072                               ??_Button_State_Disabled 007A  
                      __size_of_Button_Reading_Update 0012                           __size_of_MTOUCH_needReburst 000E  
                             Slider_Initialize@slider 0074                         __end_of_Button_Reading_Update 1BF9  
                   MTOUCH_Sensor_InitializeAll@sensor 002A                       __size_of_Slider_DefaultCallback 0001  
                            _Sensor_Acq_ExecutePacket 1676                                      _callback_sampled 00B8  
                           ??_MTOUCH_Sensor_isEnabled 0020                            __size_of_SYSTEM_Initialize 0012  
                                             clrloop0 1B59                          Button_Check_AKS_Block@button 0024  
                                    _callback_pressed 00BC                        MTOUCH_Sensor_Initialize@sensor 0028  
                                end_of_initialization 004F                                _Button_Reburst_Request 1B02  
                            Slider_Service@sliderName 0054                         ??_MTOUCH_Button_Deviation_Get 0020  
                            Slider_FindRight@ref_node 002A                               ?_Button_DefaultCallback 0072  
               __end_of_EUSART_SetOverrunErrorHandler 0805                __size_of_EUSART_SetOverrunErrorHandler 0005  
                       _EUSART_SetOverrunErrorHandler 0800                                               memcpy@d 0020  
                                             memcpy@n 0076                                               memcpy@s 0022  
                                             init_ram 1B64                                               initloop 1B65  
                             ?_Button_State_Suspended 002F                        calculate_position@raw_position 0046  
                             ?_Sensor_DefaultCallback 0072                      __size_of_Button_Deviation_Update 0089  
                                   _EUSART_Initialize 1167                          calculate_raw_position@slider 003C  
                       positional_hysteresis@distance 0032                          ??_MTOUCH_Sensor_isCalibrated 0072  
                          ??_MTOUCH_Slider_ServiceAll 0056                                    ?_EUSART_Initialize 0070  
                 __end_of_MTOUCH_Sensor_RawSample_Get 11AC                           _MTOUCH_Sensor_RawSample_Get 1188  
                        calculate_contact_size@slider 0036                                            _resol_bits 006F  
                                 _mtouch_request_init 006D                                         MTOUCH_Delay@i 0073  
                                 ??_EUSART_Initialize 0074                                      ??_WDT_Initialize 0072  
                       positional_hysteresis@polarity 0031                                Sensor_setActive@sensor 0072  
                         __end_of_MTOUCH_CVD_ScanA_10 1FA0                           __end_of_MTOUCH_CVD_ScanB_10 1105  
                                         ___fladd@grs 005F                       ??_MTOUCH_Button_Reburst_Request 0020  
                     ??_MTOUCH_Button_Reburst_Service 0072                                         ___xxtofl@sign 0020  
                       Button_Deviation_Update@button 0072                                 __size_of_EUSART_Write 0008  
                       MTOUCH_Sensor_isEnabled@sensor 0078                            MTOUCH_Sensor_Enable@sensor 0078  
                                         ___fldiv@grs 002C                                           ___fldiv@rem 0025  
                                     _Slider_FindLeft 1480                                   _callback_notPressed 00BA  
                 __size_of_MTOUCH_Sensor_isCalibrated 0002                        __end_of_Button_DefaultCallback 1AFB  
                     __size_of_EUSART_SetErrorHandler 0006                                ??_MTOUCH_ScanScheduler 0072  
                              _button_reburst_request 007B                     Slider_Service@valid_contact_found 004E  
                                  _sensor_globalFlags 006C                        __end_of_Button_State_Suspended 1CEB  
                              __size_of_MTOUCH_Random 0010                              __end_of_Sensor_isEnabled 1B8B  
                                   ?_Slider_FindRight 0024                                    get_difference@diff 0028  
                      __end_of_Sensor_DefaultCallback 1AFD                                           ___flmul@grs 0042  
                           __end_of_EUSART_Initialize 1188                          Sensor_Acq_ExecuteScan@result 0078  
                                  ??_Slider_FindRight 0026             calculate_raw_position@interpolation_scale 0037  
                      moving_average_filter@dist_temp 0031                      __size_of_Sensor_RawSample_Update 001A  
                                  _Sensor_Acquisition 139D                                _Slider_DefaultCallback 1AFD  
                                   main@sliderPostion 00D5                  __size_of_MTOUCH_Button_Deviation_Get 0020  
                      ?_MTOUCH_Slider_Reburst_Service 0070                                  _Button_State_Pressed 15C6  
                          _EUSART_DefaultErrorHandler 0000                                   ?_Sensor_Acquisition 002B  
                               _MTOUCH_Sensor_Disable 1DC5                                         __pidataBIGRAM 1739  
                                      __end_of___wmul 1D53                            ??_MTOUCH_Button_Initialize 0020  
                     ??_MTOUCH_Sensor_Scan_Initialize 0072                                          _EUSART_Write 1B3D  
                                   __size_of_TMR1_ISR 0014                                        __end_of_divide 1573  
                               _moving_average_filter 0973                         Sensor_Acq_ExecutePacket@error 002A  
                                  _Button_Tick_helper 161C                                        __end_of_memcpy 121F  
                              ?_OSCILLATOR_Initialize 0070                                   MTOUCH_Button_Tick@i 002E  
                            __end_of_Sensor_setActive 1B28                           ??_Button_State_Initializing 0031  
                                 start_initialization 0014                               _MTOUCH_Service_Mainloop 11D0  
                     __size_of_PIN_MANAGER_Initialize 001A                        __size_of_positional_hysteresis 007C  
                                __end_of_MTOUCH_Delay 1B58                                    _MTOUCH_Button_Tick 121F  
                     ??_Button_Unscaled_Deviation_Get 0074                                   ?_Button_Tick_helper 0024  
                                         __end_of_abs 1CBC                         __end_of_positional_hysteresis 0B46  
                                ??_Sensor_Acquisition 002D                               __size_of_get_difference 004D  
                                 ?_MTOUCH_Button_Tick 0070                       Button_State_Initializing@button 002F  
                            ??_Button_Check_AKS_Block 0026                      _wheel_sensor_middle_channel_zero 00EE  
                      ?_EUSART_SetOverrunErrorHandler 0072                      __end_of_MTOUCH_Sensor_wasSampled 1167  
                                ??_Button_Tick_helper 0026                              __size_of_TMR1_Initialize 0019  
                        __end_of_MTOUCH_Sensor_Enable 1E01                       get_difference@previous_position 0072  
                             ?_calculate_raw_position 002D                            _EUSART_FramingErrorHandler 00E7  
                               ?_Button_State_Pressed 002F                                              ??___wmul 0076  
                              _EUSART_SetErrorHandler 1B0E                                             __Umul8_16 1E01  
                                            ??_divide 0077                            ??_MTOUCH_Button_ServiceAll 003C  
                                         __pdataBANK1 00A0                                         _MTOUCH_Random 1BC5  
                                            ??_memcpy 0078                          ??_Button_Baseline_Initialize 0027  
                              Slider_FindRight@slider 002B                                  ??_MTOUCH_Button_Tick 0028  
                                  _mtouch_button_init 1800                            Sensor_Sampled_Reset@sensor 0078  
                        ??_Button_State_PressDebounce 0031                               __end_of_Slider_FindLeft 14D0  
                                           ___fladd@a 0050                                             ___fladd@b 004C  
                                           ___fldiv@a 0072                                             ___fldiv@b 0076  
                                         __pbssBIGRAM 239B                                             ___flmul@a 0036  
                                           ___flmul@b 0032                                           __pbssCOMMON 007A  
                                           ___latbits 0003                                         __pcstackBANK0 0020  
                                       __pcstackBANK1 00D1                                     __size_of___xxtofl 0096  
                             Slider_FindLeft@ref_node 0027             MTOUCH_Slider_isPositionChanged@sliderName 0072  
                       __size_of_Button_Reburst_Clear 0002                        MTOUCH_Button_ServiceAll@button 003D  
                                    ??_Slider_Service 0049                                   Sensor_Service@error 0034  
                       __size_of_Sensor_Sampled_Reset 0007                            __size_of_EUSART_Initialize 0021  
                             _Button_Deviation_Update 0B46                             _Button_State_Initializing 09E3  
                  __end_of_MTOUCH_Sensor_isCalibrated 1B02                            _MTOUCH_Sensor_isCalibrated 1B00  
                                           __pnvBANK1 00E1                                             __pnvBANK2 0120  
                                   _Sensor_setSampled 1B2F                        __end_of_calculate_raw_position 06F5  
                               Slider_FindLeft@slider 0026                                         ??_interpolate 0027  
                              _PIN_MANAGER_Initialize 1D1E                                      ??_Button_Service 0035  
                            ?_MTOUCH_Sensor_Calibrate 0070                                    ?_Sensor_setSampled 0072  
                       Slider_FindMiddle@maximumDelta 002C                    Button_Reading_Update_Helper@button 0025  
                    __end_of_TMR1_SetInterruptHandler 1005                            ??_MTOUCH_Sensor_Initialize 0024  
              positional_hysteresis@previous_position 002C                                              ?___fladd 004C  
                              ?_MTOUCH_Sensor_Disable 0070                                              ?___fldiv 0072  
                                           __ptext100 0CF3                                             __ptext101 0E2A  
                                           __ptext110 11AC                                             __ptext102 09E3  
                                           __ptext111 1B02                                             __ptext103 1CD3  
                                           __ptext120 1B3D                                             __ptext112 0BCF  
                                           __ptext104 1DC5                                             __ptext121 1BD5  
                                           __ptext113 1248                                             __ptext105 1AFA  
                                           __ptext114 1BE7                                             __ptext106 1356  
                                           __ptext123 1C53                                             __ptext115 14D0  
                                           __ptext107 1AF9                                             __ptext124 1B45  
                                           __ptext116 1188                                             __ptext108 0D8B  
                                           __ptext125 1AF8                                             __ptext117 1D38  
                                           __ptext109 1125                                             __ptext126 1BA7  
                                           __ptext118 0B46                                             __ptext119 1AFE  
                                            ?___flmul 0032                                              ?___fltol 0072  
                                      ?_MTOUCH_Random 0070                                            ?__Umul8_16 0072  
                              ?_moving_average_filter 002A                                      ??_Sensor_Service 002F  
                          ??_Sensor_Acq_ExecutePacket 0026                          ??_INTERRUPT_InterruptManager 0072  
                                 ??_Sensor_setSampled 0074                             ??_MTOUCH_Service_Mainloop 0058  
                    get_difference@rollover_threshold 0026                           __size_of_Sensor_setInactive 0007  
                      Sensor_Acq_ExecutePacket@sensor 0024                               ?_Button_Reburst_Request 0078  
                         __size_of_DELAY_milliseconds 0012                                         ??_MTOUCH_Tick 0079  
                      __size_of_Button_State_Disabled 0001                              ?_MTOUCH_Slider_isPressed 0070  
                       __end_of_Button_State_Disabled 1AFC                                     _sliderGroupStatus 0068  
Button_Check_AKS_Block@surplus_deviation_check_button 002B                                    Slider_FindMiddle@i 002E  
               __end_of_Button_Unscaled_Deviation_Get 11D0                __size_of_Button_Unscaled_Deviation_Get 0024  
                       _Button_Unscaled_Deviation_Get 11AC                    Button_Check_AKS_Block@check_button 002D  
                           __end_of_Sensor_setSampled 1B36                                        ___wmul@product 0076  
                                  _calculate_position 0805                          ?_MTOUCH_Slider_InitializeAll 0070  
                     positional_hysteresis@hyst_width 0030                EUSART_SetErrorHandler@interruptHandler 0072  
                                            _LATCbits 010E                                    _currentScannSensor 006B  
                     __size_of_Button_Check_AKS_Block 009F                               _Sensor_RawSample_Update 1D04  
                                           clear_ram0 1B58                                              _PIE1bits 0091  
                                   _eusartRxLastError 00ED                              __size_of_TMR1_WriteTimer 000F  
                 __size_of_INTERRUPT_InterruptManager 000E                                              _PIR1bits 0011  
                     ??_EUSART_SetFramingErrorHandler 0074                                ??_Button_State_Pressed 0031  
                                 ?_calculate_position 003F                        DELAY_milliseconds@milliseconds 0072  
              __end_of_MTOUCH_Sensor_Sampled_ResetAll 1DC5               __size_of_MTOUCH_Sensor_Sampled_ResetAll 001D  
                      _MTOUCH_Sensor_Sampled_ResetAll 1DA8                                   interpolate@num_bits 0026  
                            ?_MTOUCH_Sensor_SampleAll 0070                     _EUSART_DefaultOverrunErrorHandler 0000  
                                            _TMR1_ISR 1C53                              _MTOUCH_Sensor_wasSampled 1146  
                                  _mtouch_time_toScan 006E                            __end_of_MTOUCH_CVD_ScanA_0 1E80  
                          __end_of_MTOUCH_CVD_ScanA_1 1EA0                            __end_of_MTOUCH_CVD_ScanA_2 1EC0  
                          __end_of_MTOUCH_CVD_ScanA_3 1EE0                            __end_of_MTOUCH_CVD_ScanA_4 1F00  
                          __end_of_MTOUCH_CVD_ScanB_0 1FE0                            __end_of_MTOUCH_CVD_ScanA_5 1F20  
                          __end_of_MTOUCH_CVD_ScanB_1 2000                            __end_of_MTOUCH_CVD_ScanA_6 1F40  
                          __end_of_MTOUCH_CVD_ScanB_2 1025                            __end_of_MTOUCH_CVD_ScanA_7 1F60  
                          __end_of_MTOUCH_CVD_ScanB_3 1045                            __end_of_MTOUCH_CVD_ScanA_8 1F80  
                          __end_of_MTOUCH_CVD_ScanB_4 1065                            __end_of_MTOUCH_CVD_ScanA_9 1E60  
                          __end_of_MTOUCH_CVD_ScanB_5 1085                            __end_of_MTOUCH_CVD_ScanB_6 10A5  
                          __end_of_MTOUCH_CVD_ScanB_7 10C5                            __end_of_MTOUCH_CVD_ScanB_8 10E5  
                          __end_of_MTOUCH_CVD_ScanB_9 1FC0                              ??_Button_Baseline_Update 0074  
                                 __end_of_interpolate 0973                                     ??_TMR1_Initialize 0074  
                                          _ADCON0bits 009D                                 __size_of_MTOUCH_Delay 000A  
                                   ___wmul@multiplier 0072                 Button_Check_AKS_Block@currentAKSGroup 002A  
                                    ?_Slider_FindLeft 0024                            __end_of_MTOUCH_needReburst 1BA7  
                      __end_of_Button_Reburst_Request 1B05                                  ??_calculate_position 0041  
              moving_average_filter@previous_position 002F                                  _MTOUCH_Sensor_Enable 1DE3  
                           _callback_position_changed 00B2                              Button_Tick_helper@button 0024  
                           ??_Button_Deviation_Update 0020                                 _Button_Reading_Update 1BE7  
                            ??_Sensor_setScanFunction 0074                                        _get_difference 1433  
                            ?_MTOUCH_Button_isPressed 0070                                     ?_Sensor_isEnabled 0072  
                                 __end_of_MTOUCH_Tick 0800                                     _MTOUCH_Initialize 1C8F  
                     __end_of_MTOUCH_Sensor_Calibrate 1AFA                               ?_Slider_DefaultCallback 0072  
                                  ??_Sensor_isEnabled 0074                                           _left_signal 0063  
                       ??_MTOUCH_Slider_InitializeAll 0075                                    ?_MTOUCH_Initialize 0070  
                                           memcpy@tmp 0024                               Slider_FindMiddle@slider 002F  
                                     ??_MTOUCH_Random 0072                                          _MTOUCH_Delay 1B4E  
                                        _sample_delay 0069                            Slider_Service@group_status 004D  
                                         _middle_node 0067                                     divide@denominator 0074  
                            ??_calculate_contact_size 0032                               ??_OSCILLATOR_Initialize 0072  
                  __end_of_Button_Baseline_Initialize 1275                            _Button_Baseline_Initialize 1248  
                            Sensor_Acquisition@sensor 002B                                           ??__Umul8_16 0074  
                                 _EUSART_ErrorHandler 0120                                      __size_of___fladd 01E1  
                                 ??_MTOUCH_Initialize 007A                             __size_of_Slider_FindRight 0037  
                                    __size_of___fldiv 017A                                      __size_of___flmul 0218  
                                    __size_of___fltol 0066                    __end_of_Button_State_PressDebounce 0D8B  
                          _Button_State_PressDebounce 0CF3                              ?_Button_State_NotPressed 002F  
                __end_of_Button_State_ReleaseDebounce 0ACA                 __size_of_Button_State_ReleaseDebounce 0076  
                        _Button_State_ReleaseDebounce 0A54                              _TMR1_SetInterruptHandler 1000  
                              _Button_Check_AKS_Block 0D8B                                    Button_Service@name 0039  
                               _TMR1_InterruptHandler 00E1                              ?_MTOUCH_Sensor_isEnabled 0070  
                                   ?_Sensor_setActive 0072                       __end_of_MTOUCH_Slider_isPressed 1CD3  
                                            ___xxtofl 0C5D                     __size_of_MTOUCH_Slider_ServiceAll 000E  
                           ?_MTOUCH_Slider_ServiceAll 0070                                          _Sensor_scanA 00B6  
                                        _Sensor_scanB 00B4                                    ??_Sensor_setActive 0074  
                 __end_of_MTOUCH_Button_Deviation_Get 1125                           _MTOUCH_Button_Deviation_Get 1105  
                     ??_MTOUCH_Slider_Reburst_Service 0025                                __end_of_get_difference 1480  
                               ?_MTOUCH_Sensor_Enable 0070                                              __ptext10 1D1E  
                                            __ptext11 1B36                                              __ptext20 1B99  
                                            __ptext12 1167                                              __ptext21 1D6F  
                                            __ptext13 0800                                              __ptext30 0805  
                                            __ptext22 1C0B                                              __ptext14 1B14  
                                            __ptext31 0ACA                                              __ptext23 1D53  
                                            __ptext15 1B0E                                              __ptext40 1480  
                                            __ptext32 0973                                              __ptext24 0002  
                                            __ptext16 1CBC                                              __ptext41 1105  
                                            __ptext33 1433                                              __ptext25 07FD  
                                            __ptext17 1C2F                                              __ptext50 1CA5  
                                            __ptext42 1AFD                                              __ptext34 05C6  
                                            __ptext26 121F                                              __ptext18 1C1D  
                                            __ptext51 1B28                                              __ptext43 1314  
                                            __ptext35 090C                                              __ptext27 161C  
                                            __ptext19 11D0                                              __ptext60 1085  
                                            __ptext52 1B21                                              __ptext44 1C7B  
                                            __ptext36 1521                                              __ptext28 1B8B  
                                            __ptext61 1065                                              __ptext53 1B7D  
                                            __ptext45 179C                                              __ptext37 1573  
                                            __ptext29 06F5                                              __ptext70 1F40  
                                            __ptext62 1045                                              __ptext54 1676  
                                            __ptext46 1B2F                                              __ptext38 12DD  
                                            __ptext71 1F20                                              __ptext63 1025  
                                            __ptext55 1C67                                              __ptext47 1D04  
                                            __ptext39 13E6                                              __ptext80 1B4E  
                                            __ptext72 1F00                                              __ptext64 1005  
                                            __ptext56 0841                                              __ptext48 1AFC  
                                            __ptext81 1C8F                                              __ptext73 1EE0  
                                            __ptext65 1FE0                                              __ptext57 10E5  
                                            __ptext49 139D                                              __ptext90 1DE3  
                                            __ptext82 1000                                              __ptext74 1EC0  
                                            __ptext66 1FC0                                              __ptext58 10C5  
                                            __ptext91 1D8B                                              __ptext83 1B70  
                                            __ptext75 1EA0                                              __ptext67 1FA0  
                                            __ptext59 10A5                                              __ptext92 11F7  
                                            __ptext84 12A6                                              __ptext76 1E80  
                                            __ptext68 1F80                                              __ptext93 1BF9  
                                            __ptext85 1B09                                              __ptext77 1E60  
                                            __ptext69 1F60                                              __ptext94 16D6  
                                            __ptext86 1DA8                                              __ptext78 1E40  
                                            __ptext95 1146                                              __ptext87 1BB6  
                                            __ptext79 1BC5                                              __ptext96 1B00  
                                            __ptext88 1E20                                              __ptext97 1AFB  
                                            __ptext89 1B1A                                              __ptext98 0A54  
                                            __ptext99 15C6                          Slider_DefaultCallback@slider 0072  
                                        _right_signal 0061                          __size_of_MTOUCH_CVD_ScanA_10 0020  
                        __size_of_MTOUCH_CVD_ScanB_10 0020                             __end_of_MTOUCH_Initialize 1CA5  
                           ??_Sensor_RawSample_Update 0074                   Sensor_Acq_ExecutePacket@ADCON0_temp 0027  
                 Sensor_Acq_ExecutePacket@ADCON1_temp 0028                        __end_of_Slider_DefaultCallback 1AFE  
                       __size_of_MTOUCH_ScanScheduler 0009                            __size_of_Sensor_setSampled 0007  
                                       __size_of_main 0104                       __end_of_MTOUCH_Sensor_SampleAll 1C8F  
                        Button_State_Suspended@button 002F                               ?_EUSART_SetErrorHandler 0072  
                       MTOUCH_needReburst@needReburst 0028                                           _interpolate 090C  
                              Slider_Service@position 004F         EUSART_SetOverrunErrorHandler@interruptHandler 0072  
                        Sensor_setScanFunction@sensor 0072                                              int$flags 007E  
                                   _callback_released 00AE                              ??_Sensor_Acq_ExecuteScan 0020  
                  __size_of_Button_State_Initializing 0071                    __end_of_INTERRUPT_InterruptManager 0012  
                          _INTERRUPT_InterruptManager 0004                     Sensor_Acq_ExecutePacket@GIE_state 0029  
               __end_of_EUSART_SetFramingErrorHandler 1B1A                __size_of_EUSART_SetFramingErrorHandler 0006  
                       _EUSART_SetFramingErrorHandler 1B14                                     ??_TMR1_WriteTimer 0072  
                     __size_of_Button_Baseline_Update 008E                          ?_MTOUCH_Button_InitializeAll 0070  
                        ?_MTOUCH_Sensor_InitializeAll 0070                  __size_of_MTOUCH_Slider_InitializeAll 000D  
                       ?_Button_State_ReleaseDebounce 002F   Button_Check_AKS_Block@surplus_deviation_this_button 0028  
                                       _mtouch_button 239B                                            _INTCONbits 000B  
                                       _mtouch_slider 00C0                                         _mtouch_sensor 2338  
                                            memcpy@d1 0072                                              memcpy@s1 0074  
                     __end_of_MTOUCH_Button_isPressed 1356                            calculate_position@position 0042  
                                     ?_get_difference 0072                                           _MTOUCH_Tick 07FD  
                              ?_Button_Reading_Update 0029                           Slider_Initialize@sliderName 0073  
                    Button_Deviation_Update@deviation 0074                               __size_of_WDT_Initialize 0004  
                        MTOUCH_Button_Initialize@name 0024                     __size_of_MTOUCH_Button_Initialize 0047  
                               _positional_hysteresis 0ACA                                              intlevel1 0000  
                           ?_MTOUCH_Button_Initialize 0070                           __size_of_Sensor_Acquisition 0049  
                     __size_of_Sensor_setScanFunction 0014                               ?_PIN_MANAGER_Initialize 0070  
                      __end_of_EUSART_SetErrorHandler 1B14                          ??_MTOUCH_Slider_Position_Get 0074  
                 Button_Unscaled_Deviation_Get@button 0072                           ?_MTOUCH_Sensor_isCalibrated 0070  
                _callback_pressed@mtouch_slider$F1186 00B0                                     MTOUCH_Random@seed 007A  
                               Slider_Service@segment 0052                               ??_MTOUCH_Sensor_Disable 0020  
               moving_average_filter@current_position 002A                               ??_moving_average_filter 0076  
                         __size_of_Button_Tick_helper 005A                          __end_of_Button_Reburst_Clear 1B00  
                     __end_of_Button_State_NotPressed 0EFC         EUSART_SetFramingErrorHandler@interruptHandler 0072  
                     __size_of_calculate_contact_size 0053                                           _resol_value 0065  
                        __end_of_Sensor_Sampled_Reset 1B21                       __end_of_MTOUCH_Sensor_isEnabled 1146  
                         __size_of_MTOUCH_Button_Tick 0029                                         __pstringtext1 1800  
                              __Umul8_16@multiplicand 0072                         ??_MTOUCH_Button_InitializeAll 0079  
                            ??_Button_DefaultCallback 0073                         ??_MTOUCH_Sensor_InitializeAll 0029  
                    __size_of_MTOUCH_Sensor_Calibrate 0001                       MTOUCH_Button_Deviation_Get@name 0078  
                              ??_MTOUCH_Sensor_Enable 0020                              ??_Button_State_Suspended 007A  
                                Slider_Service@slider 0055                              ??_Sensor_DefaultCallback 0073  
                       moving_average_filter@distance 0033                                  Slider_Service@status 0051  
                __end_of_Button_Reading_Update_Helper 1521                 __size_of_Button_Reading_Update_Helper 0051  
                        _Button_Reading_Update_Helper 14D0                   __size_of_MTOUCH_Slider_Position_Get 0012  
                      calculate_raw_position@deadband 0038                                         ___fladd@signs 005C  
                   __size_of_MTOUCH_Button_ServiceAll 0012                             ?_MTOUCH_Button_ServiceAll 0070  
                       Button_State_NotPressed@button 002F                                    EUSART_Write@txData 0072  
                          __size_of_MTOUCH_Initialize 0016                __end_of_MTOUCH_Slider_isReburstRequest 1C1D  
             __size_of_MTOUCH_Slider_isReburstRequest 0012                        _MTOUCH_Slider_isReburstRequest 1C0B  
                      __end_of_PIN_MANAGER_Initialize 1D38                                _Button_Baseline_Update 0BCF  
                                        ___fladd@aexp 005D                                          ___fladd@bexp 005E  
                         MTOUCH_Button_isPressed@name 0079                                  __Umul8_16@multiplier 0024  
                          ??_MTOUCH_Sensor_wasSampled 0020                                       _TMR1_Initialize 1CEB  
                                   __Umul8_16@product 0020                      Button_State_PressDebounce@button 002F  



Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Sun Sep 18 10:52:21 2022

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og9 
     1                           	processor	16F1938
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBIGRAM,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     6                           	psect	idataBANK2,global,class=CODE,delta=2,noexec
     7                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     8                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,noexec
     9                           	psect	cinit,global,class=CODE,merge=1,delta=2
    10                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    13                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    14                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,noexec
    15                           	psect	inittext,global,class=CODE,delta=2
    16                           	psect	clrtext,global,class=CODE,delta=2
    17                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    18                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    19                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    20                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    21                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    23                           	psect	text3,local,class=CODE,merge=1,delta=2
    24                           	psect	text4,local,class=CODE,merge=1,delta=2
    25                           	psect	text5,local,class=CODE,merge=1,delta=2
    26                           	psect	text6,local,class=CODE,merge=1,delta=2
    27                           	psect	text7,local,class=CODE,merge=1,delta=2
    28                           	psect	text8,local,class=CODE,merge=1,delta=2
    29                           	psect	text9,local,class=CODE,merge=1,delta=2
    30                           	psect	text10,local,class=CODE,merge=1,delta=2
    31                           	psect	text11,local,class=CODE,merge=1,delta=2
    32                           	psect	text12,local,class=CODE,merge=1,delta=2
    33                           	psect	text13,local,class=CODE,merge=1,delta=2
    34                           	psect	text14,local,class=CODE,merge=1,delta=2
    35                           	psect	text15,local,class=CODE,merge=1,delta=2
    36                           	psect	text16,local,class=CODE,merge=1,delta=2
    37                           	psect	text17,local,class=CODE,merge=1,delta=2
    38                           	psect	text18,local,class=CODE,merge=1,delta=2
    39                           	psect	text19,local,class=CODE,merge=1,delta=2
    40                           	psect	text20,local,class=CODE,merge=1,delta=2
    41                           	psect	text21,local,class=CODE,merge=1,delta=2
    42                           	psect	text22,local,class=CODE,merge=1,delta=2
    43                           	psect	text23,local,class=CODE,merge=1,delta=2
    44                           	psect	text24,local,class=CODE,merge=1,delta=2
    45                           	psect	text25,local,class=CODE,merge=1,delta=2
    46                           	psect	text26,local,class=CODE,merge=1,delta=2
    47                           	psect	text27,local,class=CODE,merge=1,delta=2
    48                           	psect	text28,local,class=CODE,merge=1,delta=2
    49                           	psect	text29,local,class=CODE,merge=1,delta=2
    50                           	psect	text30,local,class=CODE,merge=1,delta=2
    51                           	psect	text31,local,class=CODE,merge=1,delta=2
    52                           	psect	text32,local,class=CODE,merge=1,delta=2
    53                           	psect	text33,local,class=CODE,merge=1,delta=2
    54                           	psect	text34,local,class=CODE,merge=1,delta=2
    55                           	psect	text35,local,class=CODE,merge=1,delta=2
    56                           	psect	text36,local,class=CODE,merge=1,delta=2
    57                           	psect	text37,local,class=CODE,merge=1,delta=2
    58                           	psect	text38,local,class=CODE,merge=1,delta=2
    59                           	psect	text39,local,class=CODE,merge=1,delta=2
    60                           	psect	text40,local,class=CODE,merge=1,delta=2
    61                           	psect	text41,local,class=CODE,merge=1,delta=2
    62                           	psect	text42,local,class=CODE,merge=1,inline,delta=2
    63                           	psect	text43,local,class=CODE,merge=1,delta=2
    64                           	psect	text44,local,class=CODE,merge=1,delta=2
    65                           	psect	text45,local,class=CODE,merge=1,delta=2
    66                           	psect	text46,local,class=CODE,merge=1,delta=2,group=2
    67                           	psect	text47,local,class=CODE,merge=1,inline,delta=2
    68                           	psect	text48,local,class=CODE,merge=1,inline,delta=2
    69                           	psect	text49,local,class=CODE,merge=1,delta=2
    70                           	psect	text50,local,class=CODE,merge=1,delta=2
    71                           	psect	text51,local,class=CODE,merge=1,delta=2
    72                           	psect	text52,local,class=CODE,merge=1,delta=2
    73                           	psect	text53,local,class=CODE,merge=1,delta=2
    74                           	psect	text54,local,class=CODE,merge=1,delta=2
    75                           	psect	text55,local,class=CODE,merge=1,delta=2
    76                           	psect	text56,local,class=CODE,merge=1,delta=2
    77                           	psect	text57,local,class=CODE,merge=1,delta=2
    78                           	psect	text58,local,class=CODE,merge=1,delta=2
    79                           	psect	text59,local,class=CODE,merge=1,delta=2
    80                           	psect	text60,local,class=CODE,merge=1,delta=2
    81                           	psect	text61,local,class=CODE,merge=1,delta=2
    82                           	psect	text62,local,class=CODE,merge=1,delta=2
    83                           	psect	text63,local,class=CODE,merge=1,delta=2
    84                           	psect	text64,local,class=CODE,merge=1,delta=2
    85                           	psect	text65,local,class=CODE,merge=1,delta=2
    86                           	psect	text66,local,class=CODE,merge=1,delta=2
    87                           	psect	text67,local,class=CODE,merge=1,delta=2
    88                           	psect	text68,local,class=CODE,merge=1,delta=2
    89                           	psect	text69,local,class=CODE,merge=1,delta=2
    90                           	psect	text70,local,class=CODE,merge=1,delta=2
    91                           	psect	text71,local,class=CODE,merge=1,delta=2
    92                           	psect	text72,local,class=CODE,merge=1,delta=2
    93                           	psect	text73,local,class=CODE,merge=1,delta=2
    94                           	psect	text74,local,class=CODE,merge=1,delta=2
    95                           	psect	text75,local,class=CODE,merge=1,delta=2
    96                           	psect	text76,local,class=CODE,merge=1,delta=2
    97                           	psect	text77,local,class=CODE,merge=1,delta=2
    98                           	psect	text78,local,class=CODE,merge=1,delta=2
    99                           	psect	text79,local,class=CODE,merge=1,delta=2
   100                           	psect	text80,local,class=CODE,merge=1,delta=2
   101                           	psect	text81,local,class=CODE,merge=1,delta=2
   102                           	psect	text82,local,class=CODE,merge=1,delta=2
   103                           	psect	text83,local,class=CODE,merge=1,inline,delta=2
   104                           	psect	text84,local,class=CODE,merge=1,delta=2
   105                           	psect	text85,local,class=CODE,merge=1,delta=2
   106                           	psect	text86,local,class=CODE,merge=1,delta=2,group=2
   107                           	psect	text87,local,class=CODE,merge=1,delta=2
   108                           	psect	text88,local,class=CODE,merge=1,delta=2
   109                           	psect	text89,local,class=CODE,merge=1,delta=2
   110                           	psect	text90,local,class=CODE,merge=1,delta=2
   111                           	psect	text91,local,class=CODE,merge=1,delta=2
   112                           	psect	text92,local,class=CODE,merge=1,delta=2
   113                           	psect	text93,local,class=CODE,merge=1,delta=2
   114                           	psect	text94,local,class=CODE,merge=1,delta=2
   115                           	psect	text95,local,class=CODE,merge=1,delta=2
   116                           	psect	text96,local,class=CODE,merge=1,delta=2
   117                           	psect	text97,local,class=CODE,merge=1,delta=2
   118                           	psect	text98,local,class=CODE,merge=1,delta=2
   119                           	psect	text99,local,class=CODE,merge=1,delta=2
   120                           	psect	text100,local,class=CODE,merge=1,delta=2
   121                           	psect	text101,local,class=CODE,merge=1,delta=2
   122                           	psect	text102,local,class=CODE,merge=1,delta=2
   123                           	psect	text103,local,class=CODE,merge=1,delta=2
   124                           	psect	text104,local,class=CODE,merge=1,delta=2
   125                           	psect	text105,local,class=CODE,merge=1,inline,delta=2
   126                           	psect	text106,local,class=CODE,merge=1,delta=2
   127                           	psect	text107,local,class=CODE,merge=1,delta=2
   128                           	psect	text108,local,class=CODE,merge=1,delta=2
   129                           	psect	text109,local,class=CODE,merge=1,delta=2
   130                           	psect	text110,local,class=CODE,merge=1,delta=2
   131                           	psect	text111,local,class=CODE,merge=1,delta=2,group=1
   132                           	psect	text112,local,class=CODE,merge=1,delta=2
   133                           	psect	text113,local,class=CODE,merge=1,inline,delta=2
   134                           	psect	text114,local,class=CODE,merge=1,delta=2
   135                           	psect	text115,local,class=CODE,merge=1,delta=2
   136                           	psect	intentry,global,class=CODE,delta=2
   137                           	psect	text117,local,class=CODE,merge=1,delta=2
   138                           	psect	text118,local,class=CODE,merge=1,delta=2
   139                           	psect	text119,local,class=CODE,merge=1,delta=2
   140                           	psect	text120,local,class=CODE,merge=1,delta=2
   141                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
   142                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
   143                           	dabs	1,0x620,48
   144                           	dabs	1,0x5A0,80
   145                           	dabs	1,0x53C,52
   146                           	dabs	1,0x520,28
   147                           	dabs	1,0x4B2,62
   148                           	dabs	1,0x233C,0,_mtouch_button
   149                           	dabs	1,0x22E2,0,_mtouch_sensor
   150                           	dabs	1,0x7E,2
   151  0000                     
   152                           ; Version 2.40
   153                           ; Generated 17/11/2021 GMT
   154                           ; 
   155                           ; Copyright © 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
   156                           ; All rights reserved.
   157                           ; 
   158                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   159                           ; 
   160                           ; Redistribution and use in source and binary forms, with or without modification, are
   161                           ; permitted provided that the following conditions are met:
   162                           ; 
   163                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   164                           ;        conditions and the following disclaimer.
   165                           ; 
   166                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   167                           ;        of conditions and the following disclaimer in the documentation and/or other
   168                           ;        materials provided with the distribution. Publication is not required when
   169                           ;        this file is used in an embedded application.
   170                           ; 
   171                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   172                           ;        software without specific prior written permission.
   173                           ; 
   174                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   175                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   176                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   177                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   178                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   179                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   180                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   181                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   182                           ; 
   183                           ; 
   184                           ; Code-generator required, PIC16F1938 Definitions
   185                           ; 
   186                           ; SFR Addresses
   187  0000                     	;# 
   188  0001                     	;# 
   189  0002                     	;# 
   190  0003                     	;# 
   191  0004                     	;# 
   192  0005                     	;# 
   193  0006                     	;# 
   194  0007                     	;# 
   195  0008                     	;# 
   196  0009                     	;# 
   197  000A                     	;# 
   198  000B                     	;# 
   199  000C                     	;# 
   200  000D                     	;# 
   201  000E                     	;# 
   202  0010                     	;# 
   203  0011                     	;# 
   204  0012                     	;# 
   205  0013                     	;# 
   206  0015                     	;# 
   207  0016                     	;# 
   208  0016                     	;# 
   209  0017                     	;# 
   210  0018                     	;# 
   211  0019                     	;# 
   212  001A                     	;# 
   213  001B                     	;# 
   214  001C                     	;# 
   215  001E                     	;# 
   216  001F                     	;# 
   217  008C                     	;# 
   218  008D                     	;# 
   219  008E                     	;# 
   220  0090                     	;# 
   221  0091                     	;# 
   222  0092                     	;# 
   223  0093                     	;# 
   224  0095                     	;# 
   225  0096                     	;# 
   226  0097                     	;# 
   227  0098                     	;# 
   228  0099                     	;# 
   229  009A                     	;# 
   230  009B                     	;# 
   231  009B                     	;# 
   232  009C                     	;# 
   233  009D                     	;# 
   234  009E                     	;# 
   235  010C                     	;# 
   236  010D                     	;# 
   237  010E                     	;# 
   238  0110                     	;# 
   239  0111                     	;# 
   240  0112                     	;# 
   241  0113                     	;# 
   242  0114                     	;# 
   243  0115                     	;# 
   244  0116                     	;# 
   245  0117                     	;# 
   246  0118                     	;# 
   247  0119                     	;# 
   248  011A                     	;# 
   249  011B                     	;# 
   250  011D                     	;# 
   251  018C                     	;# 
   252  018D                     	;# 
   253  0191                     	;# 
   254  0191                     	;# 
   255  0192                     	;# 
   256  0193                     	;# 
   257  0193                     	;# 
   258  0193                     	;# 
   259  0194                     	;# 
   260  0195                     	;# 
   261  0196                     	;# 
   262  0199                     	;# 
   263  019A                     	;# 
   264  019B                     	;# 
   265  019B                     	;# 
   266  019B                     	;# 
   267  019B                     	;# 
   268  019C                     	;# 
   269  019C                     	;# 
   270  019D                     	;# 
   271  019E                     	;# 
   272  019F                     	;# 
   273  020D                     	;# 
   274  0210                     	;# 
   275  0211                     	;# 
   276  0212                     	;# 
   277  0213                     	;# 
   278  0214                     	;# 
   279  0215                     	;# 
   280  0215                     	;# 
   281  0216                     	;# 
   282  0217                     	;# 
   283  0291                     	;# 
   284  0291                     	;# 
   285  0292                     	;# 
   286  0293                     	;# 
   287  0294                     	;# 
   288  0295                     	;# 
   289  0295                     	;# 
   290  0296                     	;# 
   291  0298                     	;# 
   292  0298                     	;# 
   293  0299                     	;# 
   294  029A                     	;# 
   295  029B                     	;# 
   296  029C                     	;# 
   297  029C                     	;# 
   298  029D                     	;# 
   299  029E                     	;# 
   300  029F                     	;# 
   301  0311                     	;# 
   302  0311                     	;# 
   303  0312                     	;# 
   304  0313                     	;# 
   305  0314                     	;# 
   306  0315                     	;# 
   307  0315                     	;# 
   308  0316                     	;# 
   309  0318                     	;# 
   310  0318                     	;# 
   311  0319                     	;# 
   312  031A                     	;# 
   313  031C                     	;# 
   314  031C                     	;# 
   315  031D                     	;# 
   316  031E                     	;# 
   317  0394                     	;# 
   318  0395                     	;# 
   319  0396                     	;# 
   320  0415                     	;# 
   321  0416                     	;# 
   322  0417                     	;# 
   323  041C                     	;# 
   324  041D                     	;# 
   325  041E                     	;# 
   326  0791                     	;# 
   327  0792                     	;# 
   328  0793                     	;# 
   329  0794                     	;# 
   330  0795                     	;# 
   331  0798                     	;# 
   332  0799                     	;# 
   333  07A0                     	;# 
   334  07A1                     	;# 
   335  07A3                     	;# 
   336  07A4                     	;# 
   337  07A6                     	;# 
   338  07A7                     	;# 
   339  07A9                     	;# 
   340  07AA                     	;# 
   341  0FE4                     	;# 
   342  0FE5                     	;# 
   343  0FE6                     	;# 
   344  0FE7                     	;# 
   345  0FE8                     	;# 
   346  0FE9                     	;# 
   347  0FEA                     	;# 
   348  0FEB                     	;# 
   349  0FED                     	;# 
   350  0FEE                     	;# 
   351  0FEF                     	;# 
   352  0000                     	;# 
   353  0001                     	;# 
   354  0002                     	;# 
   355  0003                     	;# 
   356  0004                     	;# 
   357  0005                     	;# 
   358  0006                     	;# 
   359  0007                     	;# 
   360  0008                     	;# 
   361  0009                     	;# 
   362  000A                     	;# 
   363  000B                     	;# 
   364  000C                     	;# 
   365  000D                     	;# 
   366  000E                     	;# 
   367  0010                     	;# 
   368  0011                     	;# 
   369  0012                     	;# 
   370  0013                     	;# 
   371  0015                     	;# 
   372  0016                     	;# 
   373  0016                     	;# 
   374  0017                     	;# 
   375  0018                     	;# 
   376  0019                     	;# 
   377  001A                     	;# 
   378  001B                     	;# 
   379  001C                     	;# 
   380  001E                     	;# 
   381  001F                     	;# 
   382  008C                     	;# 
   383  008D                     	;# 
   384  008E                     	;# 
   385  0090                     	;# 
   386  0091                     	;# 
   387  0092                     	;# 
   388  0093                     	;# 
   389  0095                     	;# 
   390  0096                     	;# 
   391  0097                     	;# 
   392  0098                     	;# 
   393  0099                     	;# 
   394  009A                     	;# 
   395  009B                     	;# 
   396  009B                     	;# 
   397  009C                     	;# 
   398  009D                     	;# 
   399  009E                     	;# 
   400  010C                     	;# 
   401  010D                     	;# 
   402  010E                     	;# 
   403  0110                     	;# 
   404  0111                     	;# 
   405  0112                     	;# 
   406  0113                     	;# 
   407  0114                     	;# 
   408  0115                     	;# 
   409  0116                     	;# 
   410  0117                     	;# 
   411  0118                     	;# 
   412  0119                     	;# 
   413  011A                     	;# 
   414  011B                     	;# 
   415  011D                     	;# 
   416  018C                     	;# 
   417  018D                     	;# 
   418  0191                     	;# 
   419  0191                     	;# 
   420  0192                     	;# 
   421  0193                     	;# 
   422  0193                     	;# 
   423  0193                     	;# 
   424  0194                     	;# 
   425  0195                     	;# 
   426  0196                     	;# 
   427  0199                     	;# 
   428  019A                     	;# 
   429  019B                     	;# 
   430  019B                     	;# 
   431  019B                     	;# 
   432  019B                     	;# 
   433  019C                     	;# 
   434  019C                     	;# 
   435  019D                     	;# 
   436  019E                     	;# 
   437  019F                     	;# 
   438  020D                     	;# 
   439  0210                     	;# 
   440  0211                     	;# 
   441  0212                     	;# 
   442  0213                     	;# 
   443  0214                     	;# 
   444  0215                     	;# 
   445  0215                     	;# 
   446  0216                     	;# 
   447  0217                     	;# 
   448  0291                     	;# 
   449  0291                     	;# 
   450  0292                     	;# 
   451  0293                     	;# 
   452  0294                     	;# 
   453  0295                     	;# 
   454  0295                     	;# 
   455  0296                     	;# 
   456  0298                     	;# 
   457  0298                     	;# 
   458  0299                     	;# 
   459  029A                     	;# 
   460  029B                     	;# 
   461  029C                     	;# 
   462  029C                     	;# 
   463  029D                     	;# 
   464  029E                     	;# 
   465  029F                     	;# 
   466  0311                     	;# 
   467  0311                     	;# 
   468  0312                     	;# 
   469  0313                     	;# 
   470  0314                     	;# 
   471  0315                     	;# 
   472  0315                     	;# 
   473  0316                     	;# 
   474  0318                     	;# 
   475  0318                     	;# 
   476  0319                     	;# 
   477  031A                     	;# 
   478  031C                     	;# 
   479  031C                     	;# 
   480  031D                     	;# 
   481  031E                     	;# 
   482  0394                     	;# 
   483  0395                     	;# 
   484  0396                     	;# 
   485  0415                     	;# 
   486  0416                     	;# 
   487  0417                     	;# 
   488  041C                     	;# 
   489  041D                     	;# 
   490  041E                     	;# 
   491  0791                     	;# 
   492  0792                     	;# 
   493  0793                     	;# 
   494  0794                     	;# 
   495  0795                     	;# 
   496  0798                     	;# 
   497  0799                     	;# 
   498  07A0                     	;# 
   499  07A1                     	;# 
   500  07A3                     	;# 
   501  07A4                     	;# 
   502  07A6                     	;# 
   503  07A7                     	;# 
   504  07A9                     	;# 
   505  07AA                     	;# 
   506  0FE4                     	;# 
   507  0FE5                     	;# 
   508  0FE6                     	;# 
   509  0FE7                     	;# 
   510  0FE8                     	;# 
   511  0FE9                     	;# 
   512  0FEA                     	;# 
   513  0FEB                     	;# 
   514  0FED                     	;# 
   515  0FEE                     	;# 
   516  0FEF                     	;# 
   517  0000                     	;# 
   518  0001                     	;# 
   519  0002                     	;# 
   520  0003                     	;# 
   521  0004                     	;# 
   522  0005                     	;# 
   523  0006                     	;# 
   524  0007                     	;# 
   525  0008                     	;# 
   526  0009                     	;# 
   527  000A                     	;# 
   528  000B                     	;# 
   529  000C                     	;# 
   530  000D                     	;# 
   531  000E                     	;# 
   532  0010                     	;# 
   533  0011                     	;# 
   534  0012                     	;# 
   535  0013                     	;# 
   536  0015                     	;# 
   537  0016                     	;# 
   538  0016                     	;# 
   539  0017                     	;# 
   540  0018                     	;# 
   541  0019                     	;# 
   542  001A                     	;# 
   543  001B                     	;# 
   544  001C                     	;# 
   545  001E                     	;# 
   546  001F                     	;# 
   547  008C                     	;# 
   548  008D                     	;# 
   549  008E                     	;# 
   550  0090                     	;# 
   551  0091                     	;# 
   552  0092                     	;# 
   553  0093                     	;# 
   554  0095                     	;# 
   555  0096                     	;# 
   556  0097                     	;# 
   557  0098                     	;# 
   558  0099                     	;# 
   559  009A                     	;# 
   560  009B                     	;# 
   561  009B                     	;# 
   562  009C                     	;# 
   563  009D                     	;# 
   564  009E                     	;# 
   565  010C                     	;# 
   566  010D                     	;# 
   567  010E                     	;# 
   568  0110                     	;# 
   569  0111                     	;# 
   570  0112                     	;# 
   571  0113                     	;# 
   572  0114                     	;# 
   573  0115                     	;# 
   574  0116                     	;# 
   575  0117                     	;# 
   576  0118                     	;# 
   577  0119                     	;# 
   578  011A                     	;# 
   579  011B                     	;# 
   580  011D                     	;# 
   581  018C                     	;# 
   582  018D                     	;# 
   583  0191                     	;# 
   584  0191                     	;# 
   585  0192                     	;# 
   586  0193                     	;# 
   587  0193                     	;# 
   588  0193                     	;# 
   589  0194                     	;# 
   590  0195                     	;# 
   591  0196                     	;# 
   592  0199                     	;# 
   593  019A                     	;# 
   594  019B                     	;# 
   595  019B                     	;# 
   596  019B                     	;# 
   597  019B                     	;# 
   598  019C                     	;# 
   599  019C                     	;# 
   600  019D                     	;# 
   601  019E                     	;# 
   602  019F                     	;# 
   603  020D                     	;# 
   604  0210                     	;# 
   605  0211                     	;# 
   606  0212                     	;# 
   607  0213                     	;# 
   608  0214                     	;# 
   609  0215                     	;# 
   610  0215                     	;# 
   611  0216                     	;# 
   612  0217                     	;# 
   613  0291                     	;# 
   614  0291                     	;# 
   615  0292                     	;# 
   616  0293                     	;# 
   617  0294                     	;# 
   618  0295                     	;# 
   619  0295                     	;# 
   620  0296                     	;# 
   621  0298                     	;# 
   622  0298                     	;# 
   623  0299                     	;# 
   624  029A                     	;# 
   625  029B                     	;# 
   626  029C                     	;# 
   627  029C                     	;# 
   628  029D                     	;# 
   629  029E                     	;# 
   630  029F                     	;# 
   631  0311                     	;# 
   632  0311                     	;# 
   633  0312                     	;# 
   634  0313                     	;# 
   635  0314                     	;# 
   636  0315                     	;# 
   637  0315                     	;# 
   638  0316                     	;# 
   639  0318                     	;# 
   640  0318                     	;# 
   641  0319                     	;# 
   642  031A                     	;# 
   643  031C                     	;# 
   644  031C                     	;# 
   645  031D                     	;# 
   646  031E                     	;# 
   647  0394                     	;# 
   648  0395                     	;# 
   649  0396                     	;# 
   650  0415                     	;# 
   651  0416                     	;# 
   652  0417                     	;# 
   653  041C                     	;# 
   654  041D                     	;# 
   655  041E                     	;# 
   656  0791                     	;# 
   657  0792                     	;# 
   658  0793                     	;# 
   659  0794                     	;# 
   660  0795                     	;# 
   661  0798                     	;# 
   662  0799                     	;# 
   663  07A0                     	;# 
   664  07A1                     	;# 
   665  07A3                     	;# 
   666  07A4                     	;# 
   667  07A6                     	;# 
   668  07A7                     	;# 
   669  07A9                     	;# 
   670  07AA                     	;# 
   671  0FE4                     	;# 
   672  0FE5                     	;# 
   673  0FE6                     	;# 
   674  0FE7                     	;# 
   675  0FE8                     	;# 
   676  0FE9                     	;# 
   677  0FEA                     	;# 
   678  0FEB                     	;# 
   679  0FED                     	;# 
   680  0FEE                     	;# 
   681  0FEF                     	;# 
   682  0000                     	;# 
   683  0001                     	;# 
   684  0002                     	;# 
   685  0003                     	;# 
   686  0004                     	;# 
   687  0005                     	;# 
   688  0006                     	;# 
   689  0007                     	;# 
   690  0008                     	;# 
   691  0009                     	;# 
   692  000A                     	;# 
   693  000B                     	;# 
   694  000C                     	;# 
   695  000D                     	;# 
   696  000E                     	;# 
   697  0010                     	;# 
   698  0011                     	;# 
   699  0012                     	;# 
   700  0013                     	;# 
   701  0015                     	;# 
   702  0016                     	;# 
   703  0016                     	;# 
   704  0017                     	;# 
   705  0018                     	;# 
   706  0019                     	;# 
   707  001A                     	;# 
   708  001B                     	;# 
   709  001C                     	;# 
   710  001E                     	;# 
   711  001F                     	;# 
   712  008C                     	;# 
   713  008D                     	;# 
   714  008E                     	;# 
   715  0090                     	;# 
   716  0091                     	;# 
   717  0092                     	;# 
   718  0093                     	;# 
   719  0095                     	;# 
   720  0096                     	;# 
   721  0097                     	;# 
   722  0098                     	;# 
   723  0099                     	;# 
   724  009A                     	;# 
   725  009B                     	;# 
   726  009B                     	;# 
   727  009C                     	;# 
   728  009D                     	;# 
   729  009E                     	;# 
   730  010C                     	;# 
   731  010D                     	;# 
   732  010E                     	;# 
   733  0110                     	;# 
   734  0111                     	;# 
   735  0112                     	;# 
   736  0113                     	;# 
   737  0114                     	;# 
   738  0115                     	;# 
   739  0116                     	;# 
   740  0117                     	;# 
   741  0118                     	;# 
   742  0119                     	;# 
   743  011A                     	;# 
   744  011B                     	;# 
   745  011D                     	;# 
   746  018C                     	;# 
   747  018D                     	;# 
   748  0191                     	;# 
   749  0191                     	;# 
   750  0192                     	;# 
   751  0193                     	;# 
   752  0193                     	;# 
   753  0193                     	;# 
   754  0194                     	;# 
   755  0195                     	;# 
   756  0196                     	;# 
   757  0199                     	;# 
   758  019A                     	;# 
   759  019B                     	;# 
   760  019B                     	;# 
   761  019B                     	;# 
   762  019B                     	;# 
   763  019C                     	;# 
   764  019C                     	;# 
   765  019D                     	;# 
   766  019E                     	;# 
   767  019F                     	;# 
   768  020D                     	;# 
   769  0210                     	;# 
   770  0211                     	;# 
   771  0212                     	;# 
   772  0213                     	;# 
   773  0214                     	;# 
   774  0215                     	;# 
   775  0215                     	;# 
   776  0216                     	;# 
   777  0217                     	;# 
   778  0291                     	;# 
   779  0291                     	;# 
   780  0292                     	;# 
   781  0293                     	;# 
   782  0294                     	;# 
   783  0295                     	;# 
   784  0295                     	;# 
   785  0296                     	;# 
   786  0298                     	;# 
   787  0298                     	;# 
   788  0299                     	;# 
   789  029A                     	;# 
   790  029B                     	;# 
   791  029C                     	;# 
   792  029C                     	;# 
   793  029D                     	;# 
   794  029E                     	;# 
   795  029F                     	;# 
   796  0311                     	;# 
   797  0311                     	;# 
   798  0312                     	;# 
   799  0313                     	;# 
   800  0314                     	;# 
   801  0315                     	;# 
   802  0315                     	;# 
   803  0316                     	;# 
   804  0318                     	;# 
   805  0318                     	;# 
   806  0319                     	;# 
   807  031A                     	;# 
   808  031C                     	;# 
   809  031C                     	;# 
   810  031D                     	;# 
   811  031E                     	;# 
   812  0394                     	;# 
   813  0395                     	;# 
   814  0396                     	;# 
   815  0415                     	;# 
   816  0416                     	;# 
   817  0417                     	;# 
   818  041C                     	;# 
   819  041D                     	;# 
   820  041E                     	;# 
   821  0791                     	;# 
   822  0792                     	;# 
   823  0793                     	;# 
   824  0794                     	;# 
   825  0795                     	;# 
   826  0798                     	;# 
   827  0799                     	;# 
   828  07A0                     	;# 
   829  07A1                     	;# 
   830  07A3                     	;# 
   831  07A4                     	;# 
   832  07A6                     	;# 
   833  07A7                     	;# 
   834  07A9                     	;# 
   835  07AA                     	;# 
   836  0FE4                     	;# 
   837  0FE5                     	;# 
   838  0FE6                     	;# 
   839  0FE7                     	;# 
   840  0FE8                     	;# 
   841  0FE9                     	;# 
   842  0FEA                     	;# 
   843  0FEB                     	;# 
   844  0FED                     	;# 
   845  0FEE                     	;# 
   846  0FEF                     	;# 
   847  0000                     	;# 
   848  0001                     	;# 
   849  0002                     	;# 
   850  0003                     	;# 
   851  0004                     	;# 
   852  0005                     	;# 
   853  0006                     	;# 
   854  0007                     	;# 
   855  0008                     	;# 
   856  0009                     	;# 
   857  000A                     	;# 
   858  000B                     	;# 
   859  000C                     	;# 
   860  000D                     	;# 
   861  000E                     	;# 
   862  0010                     	;# 
   863  0011                     	;# 
   864  0012                     	;# 
   865  0013                     	;# 
   866  0015                     	;# 
   867  0016                     	;# 
   868  0016                     	;# 
   869  0017                     	;# 
   870  0018                     	;# 
   871  0019                     	;# 
   872  001A                     	;# 
   873  001B                     	;# 
   874  001C                     	;# 
   875  001E                     	;# 
   876  001F                     	;# 
   877  008C                     	;# 
   878  008D                     	;# 
   879  008E                     	;# 
   880  0090                     	;# 
   881  0091                     	;# 
   882  0092                     	;# 
   883  0093                     	;# 
   884  0095                     	;# 
   885  0096                     	;# 
   886  0097                     	;# 
   887  0098                     	;# 
   888  0099                     	;# 
   889  009A                     	;# 
   890  009B                     	;# 
   891  009B                     	;# 
   892  009C                     	;# 
   893  009D                     	;# 
   894  009E                     	;# 
   895  010C                     	;# 
   896  010D                     	;# 
   897  010E                     	;# 
   898  0110                     	;# 
   899  0111                     	;# 
   900  0112                     	;# 
   901  0113                     	;# 
   902  0114                     	;# 
   903  0115                     	;# 
   904  0116                     	;# 
   905  0117                     	;# 
   906  0118                     	;# 
   907  0119                     	;# 
   908  011A                     	;# 
   909  011B                     	;# 
   910  011D                     	;# 
   911  018C                     	;# 
   912  018D                     	;# 
   913  0191                     	;# 
   914  0191                     	;# 
   915  0192                     	;# 
   916  0193                     	;# 
   917  0193                     	;# 
   918  0193                     	;# 
   919  0194                     	;# 
   920  0195                     	;# 
   921  0196                     	;# 
   922  0199                     	;# 
   923  019A                     	;# 
   924  019B                     	;# 
   925  019B                     	;# 
   926  019B                     	;# 
   927  019B                     	;# 
   928  019C                     	;# 
   929  019C                     	;# 
   930  019D                     	;# 
   931  019E                     	;# 
   932  019F                     	;# 
   933  020D                     	;# 
   934  0210                     	;# 
   935  0211                     	;# 
   936  0212                     	;# 
   937  0213                     	;# 
   938  0214                     	;# 
   939  0215                     	;# 
   940  0215                     	;# 
   941  0216                     	;# 
   942  0217                     	;# 
   943  0291                     	;# 
   944  0291                     	;# 
   945  0292                     	;# 
   946  0293                     	;# 
   947  0294                     	;# 
   948  0295                     	;# 
   949  0295                     	;# 
   950  0296                     	;# 
   951  0298                     	;# 
   952  0298                     	;# 
   953  0299                     	;# 
   954  029A                     	;# 
   955  029B                     	;# 
   956  029C                     	;# 
   957  029C                     	;# 
   958  029D                     	;# 
   959  029E                     	;# 
   960  029F                     	;# 
   961  0311                     	;# 
   962  0311                     	;# 
   963  0312                     	;# 
   964  0313                     	;# 
   965  0314                     	;# 
   966  0315                     	;# 
   967  0315                     	;# 
   968  0316                     	;# 
   969  0318                     	;# 
   970  0318                     	;# 
   971  0319                     	;# 
   972  031A                     	;# 
   973  031C                     	;# 
   974  031C                     	;# 
   975  031D                     	;# 
   976  031E                     	;# 
   977  0394                     	;# 
   978  0395                     	;# 
   979  0396                     	;# 
   980  0415                     	;# 
   981  0416                     	;# 
   982  0417                     	;# 
   983  041C                     	;# 
   984  041D                     	;# 
   985  041E                     	;# 
   986  0791                     	;# 
   987  0792                     	;# 
   988  0793                     	;# 
   989  0794                     	;# 
   990  0795                     	;# 
   991  0798                     	;# 
   992  0799                     	;# 
   993  07A0                     	;# 
   994  07A1                     	;# 
   995  07A3                     	;# 
   996  07A4                     	;# 
   997  07A6                     	;# 
   998  07A7                     	;# 
   999  07A9                     	;# 
  1000  07AA                     	;# 
  1001  0FE4                     	;# 
  1002  0FE5                     	;# 
  1003  0FE6                     	;# 
  1004  0FE7                     	;# 
  1005  0FE8                     	;# 
  1006  0FE9                     	;# 
  1007  0FEA                     	;# 
  1008  0FEB                     	;# 
  1009  0FED                     	;# 
  1010  0FEE                     	;# 
  1011  0FEF                     	;# 
  1012  0000                     	;# 
  1013  0001                     	;# 
  1014  0002                     	;# 
  1015  0003                     	;# 
  1016  0004                     	;# 
  1017  0005                     	;# 
  1018  0006                     	;# 
  1019  0007                     	;# 
  1020  0008                     	;# 
  1021  0009                     	;# 
  1022  000A                     	;# 
  1023  000B                     	;# 
  1024  000C                     	;# 
  1025  000D                     	;# 
  1026  000E                     	;# 
  1027  0010                     	;# 
  1028  0011                     	;# 
  1029  0012                     	;# 
  1030  0013                     	;# 
  1031  0015                     	;# 
  1032  0016                     	;# 
  1033  0016                     	;# 
  1034  0017                     	;# 
  1035  0018                     	;# 
  1036  0019                     	;# 
  1037  001A                     	;# 
  1038  001B                     	;# 
  1039  001C                     	;# 
  1040  001E                     	;# 
  1041  001F                     	;# 
  1042  008C                     	;# 
  1043  008D                     	;# 
  1044  008E                     	;# 
  1045  0090                     	;# 
  1046  0091                     	;# 
  1047  0092                     	;# 
  1048  0093                     	;# 
  1049  0095                     	;# 
  1050  0096                     	;# 
  1051  0097                     	;# 
  1052  0098                     	;# 
  1053  0099                     	;# 
  1054  009A                     	;# 
  1055  009B                     	;# 
  1056  009B                     	;# 
  1057  009C                     	;# 
  1058  009D                     	;# 
  1059  009E                     	;# 
  1060  010C                     	;# 
  1061  010D                     	;# 
  1062  010E                     	;# 
  1063  0110                     	;# 
  1064  0111                     	;# 
  1065  0112                     	;# 
  1066  0113                     	;# 
  1067  0114                     	;# 
  1068  0115                     	;# 
  1069  0116                     	;# 
  1070  0117                     	;# 
  1071  0118                     	;# 
  1072  0119                     	;# 
  1073  011A                     	;# 
  1074  011B                     	;# 
  1075  011D                     	;# 
  1076  018C                     	;# 
  1077  018D                     	;# 
  1078  0191                     	;# 
  1079  0191                     	;# 
  1080  0192                     	;# 
  1081  0193                     	;# 
  1082  0193                     	;# 
  1083  0193                     	;# 
  1084  0194                     	;# 
  1085  0195                     	;# 
  1086  0196                     	;# 
  1087  0199                     	;# 
  1088  019A                     	;# 
  1089  019B                     	;# 
  1090  019B                     	;# 
  1091  019B                     	;# 
  1092  019B                     	;# 
  1093  019C                     	;# 
  1094  019C                     	;# 
  1095  019D                     	;# 
  1096  019E                     	;# 
  1097  019F                     	;# 
  1098  020D                     	;# 
  1099  0210                     	;# 
  1100  0211                     	;# 
  1101  0212                     	;# 
  1102  0213                     	;# 
  1103  0214                     	;# 
  1104  0215                     	;# 
  1105  0215                     	;# 
  1106  0216                     	;# 
  1107  0217                     	;# 
  1108  0291                     	;# 
  1109  0291                     	;# 
  1110  0292                     	;# 
  1111  0293                     	;# 
  1112  0294                     	;# 
  1113  0295                     	;# 
  1114  0295                     	;# 
  1115  0296                     	;# 
  1116  0298                     	;# 
  1117  0298                     	;# 
  1118  0299                     	;# 
  1119  029A                     	;# 
  1120  029B                     	;# 
  1121  029C                     	;# 
  1122  029C                     	;# 
  1123  029D                     	;# 
  1124  029E                     	;# 
  1125  029F                     	;# 
  1126  0311                     	;# 
  1127  0311                     	;# 
  1128  0312                     	;# 
  1129  0313                     	;# 
  1130  0314                     	;# 
  1131  0315                     	;# 
  1132  0315                     	;# 
  1133  0316                     	;# 
  1134  0318                     	;# 
  1135  0318                     	;# 
  1136  0319                     	;# 
  1137  031A                     	;# 
  1138  031C                     	;# 
  1139  031C                     	;# 
  1140  031D                     	;# 
  1141  031E                     	;# 
  1142  0394                     	;# 
  1143  0395                     	;# 
  1144  0396                     	;# 
  1145  0415                     	;# 
  1146  0416                     	;# 
  1147  0417                     	;# 
  1148  041C                     	;# 
  1149  041D                     	;# 
  1150  041E                     	;# 
  1151  0791                     	;# 
  1152  0792                     	;# 
  1153  0793                     	;# 
  1154  0794                     	;# 
  1155  0795                     	;# 
  1156  0798                     	;# 
  1157  0799                     	;# 
  1158  07A0                     	;# 
  1159  07A1                     	;# 
  1160  07A3                     	;# 
  1161  07A4                     	;# 
  1162  07A6                     	;# 
  1163  07A7                     	;# 
  1164  07A9                     	;# 
  1165  07AA                     	;# 
  1166  0FE4                     	;# 
  1167  0FE5                     	;# 
  1168  0FE6                     	;# 
  1169  0FE7                     	;# 
  1170  0FE8                     	;# 
  1171  0FE9                     	;# 
  1172  0FEA                     	;# 
  1173  0FEB                     	;# 
  1174  0FED                     	;# 
  1175  0FEE                     	;# 
  1176  0FEF                     	;# 
  1177  0000                     	;# 
  1178  0001                     	;# 
  1179  0002                     	;# 
  1180  0003                     	;# 
  1181  0004                     	;# 
  1182  0005                     	;# 
  1183  0006                     	;# 
  1184  0007                     	;# 
  1185  0008                     	;# 
  1186  0009                     	;# 
  1187  000A                     	;# 
  1188  000B                     	;# 
  1189  000C                     	;# 
  1190  000D                     	;# 
  1191  000E                     	;# 
  1192  0010                     	;# 
  1193  0011                     	;# 
  1194  0012                     	;# 
  1195  0013                     	;# 
  1196  0015                     	;# 
  1197  0016                     	;# 
  1198  0016                     	;# 
  1199  0017                     	;# 
  1200  0018                     	;# 
  1201  0019                     	;# 
  1202  001A                     	;# 
  1203  001B                     	;# 
  1204  001C                     	;# 
  1205  001E                     	;# 
  1206  001F                     	;# 
  1207  008C                     	;# 
  1208  008D                     	;# 
  1209  008E                     	;# 
  1210  0090                     	;# 
  1211  0091                     	;# 
  1212  0092                     	;# 
  1213  0093                     	;# 
  1214  0095                     	;# 
  1215  0096                     	;# 
  1216  0097                     	;# 
  1217  0098                     	;# 
  1218  0099                     	;# 
  1219  009A                     	;# 
  1220  009B                     	;# 
  1221  009B                     	;# 
  1222  009C                     	;# 
  1223  009D                     	;# 
  1224  009E                     	;# 
  1225  010C                     	;# 
  1226  010D                     	;# 
  1227  010E                     	;# 
  1228  0110                     	;# 
  1229  0111                     	;# 
  1230  0112                     	;# 
  1231  0113                     	;# 
  1232  0114                     	;# 
  1233  0115                     	;# 
  1234  0116                     	;# 
  1235  0117                     	;# 
  1236  0118                     	;# 
  1237  0119                     	;# 
  1238  011A                     	;# 
  1239  011B                     	;# 
  1240  011D                     	;# 
  1241  018C                     	;# 
  1242  018D                     	;# 
  1243  0191                     	;# 
  1244  0191                     	;# 
  1245  0192                     	;# 
  1246  0193                     	;# 
  1247  0193                     	;# 
  1248  0193                     	;# 
  1249  0194                     	;# 
  1250  0195                     	;# 
  1251  0196                     	;# 
  1252  0199                     	;# 
  1253  019A                     	;# 
  1254  019B                     	;# 
  1255  019B                     	;# 
  1256  019B                     	;# 
  1257  019B                     	;# 
  1258  019C                     	;# 
  1259  019C                     	;# 
  1260  019D                     	;# 
  1261  019E                     	;# 
  1262  019F                     	;# 
  1263  020D                     	;# 
  1264  0210                     	;# 
  1265  0211                     	;# 
  1266  0212                     	;# 
  1267  0213                     	;# 
  1268  0214                     	;# 
  1269  0215                     	;# 
  1270  0215                     	;# 
  1271  0216                     	;# 
  1272  0217                     	;# 
  1273  0291                     	;# 
  1274  0291                     	;# 
  1275  0292                     	;# 
  1276  0293                     	;# 
  1277  0294                     	;# 
  1278  0295                     	;# 
  1279  0295                     	;# 
  1280  0296                     	;# 
  1281  0298                     	;# 
  1282  0298                     	;# 
  1283  0299                     	;# 
  1284  029A                     	;# 
  1285  029B                     	;# 
  1286  029C                     	;# 
  1287  029C                     	;# 
  1288  029D                     	;# 
  1289  029E                     	;# 
  1290  029F                     	;# 
  1291  0311                     	;# 
  1292  0311                     	;# 
  1293  0312                     	;# 
  1294  0313                     	;# 
  1295  0314                     	;# 
  1296  0315                     	;# 
  1297  0315                     	;# 
  1298  0316                     	;# 
  1299  0318                     	;# 
  1300  0318                     	;# 
  1301  0319                     	;# 
  1302  031A                     	;# 
  1303  031C                     	;# 
  1304  031C                     	;# 
  1305  031D                     	;# 
  1306  031E                     	;# 
  1307  0394                     	;# 
  1308  0395                     	;# 
  1309  0396                     	;# 
  1310  0415                     	;# 
  1311  0416                     	;# 
  1312  0417                     	;# 
  1313  041C                     	;# 
  1314  041D                     	;# 
  1315  041E                     	;# 
  1316  0791                     	;# 
  1317  0792                     	;# 
  1318  0793                     	;# 
  1319  0794                     	;# 
  1320  0795                     	;# 
  1321  0798                     	;# 
  1322  0799                     	;# 
  1323  07A0                     	;# 
  1324  07A1                     	;# 
  1325  07A3                     	;# 
  1326  07A4                     	;# 
  1327  07A6                     	;# 
  1328  07A7                     	;# 
  1329  07A9                     	;# 
  1330  07AA                     	;# 
  1331  0FE4                     	;# 
  1332  0FE5                     	;# 
  1333  0FE6                     	;# 
  1334  0FE7                     	;# 
  1335  0FE8                     	;# 
  1336  0FE9                     	;# 
  1337  0FEA                     	;# 
  1338  0FEB                     	;# 
  1339  0FED                     	;# 
  1340  0FEE                     	;# 
  1341  0FEF                     	;# 
  1342  0000                     	;# 
  1343  0001                     	;# 
  1344  0002                     	;# 
  1345  0003                     	;# 
  1346  0004                     	;# 
  1347  0005                     	;# 
  1348  0006                     	;# 
  1349  0007                     	;# 
  1350  0008                     	;# 
  1351  0009                     	;# 
  1352  000A                     	;# 
  1353  000B                     	;# 
  1354  000C                     	;# 
  1355  000D                     	;# 
  1356  000E                     	;# 
  1357  0010                     	;# 
  1358  0011                     	;# 
  1359  0012                     	;# 
  1360  0013                     	;# 
  1361  0015                     	;# 
  1362  0016                     	;# 
  1363  0016                     	;# 
  1364  0017                     	;# 
  1365  0018                     	;# 
  1366  0019                     	;# 
  1367  001A                     	;# 
  1368  001B                     	;# 
  1369  001C                     	;# 
  1370  001E                     	;# 
  1371  001F                     	;# 
  1372  008C                     	;# 
  1373  008D                     	;# 
  1374  008E                     	;# 
  1375  0090                     	;# 
  1376  0091                     	;# 
  1377  0092                     	;# 
  1378  0093                     	;# 
  1379  0095                     	;# 
  1380  0096                     	;# 
  1381  0097                     	;# 
  1382  0098                     	;# 
  1383  0099                     	;# 
  1384  009A                     	;# 
  1385  009B                     	;# 
  1386  009B                     	;# 
  1387  009C                     	;# 
  1388  009D                     	;# 
  1389  009E                     	;# 
  1390  010C                     	;# 
  1391  010D                     	;# 
  1392  010E                     	;# 
  1393  0110                     	;# 
  1394  0111                     	;# 
  1395  0112                     	;# 
  1396  0113                     	;# 
  1397  0114                     	;# 
  1398  0115                     	;# 
  1399  0116                     	;# 
  1400  0117                     	;# 
  1401  0118                     	;# 
  1402  0119                     	;# 
  1403  011A                     	;# 
  1404  011B                     	;# 
  1405  011D                     	;# 
  1406  018C                     	;# 
  1407  018D                     	;# 
  1408  0191                     	;# 
  1409  0191                     	;# 
  1410  0192                     	;# 
  1411  0193                     	;# 
  1412  0193                     	;# 
  1413  0193                     	;# 
  1414  0194                     	;# 
  1415  0195                     	;# 
  1416  0196                     	;# 
  1417  0199                     	;# 
  1418  019A                     	;# 
  1419  019B                     	;# 
  1420  019B                     	;# 
  1421  019B                     	;# 
  1422  019B                     	;# 
  1423  019C                     	;# 
  1424  019C                     	;# 
  1425  019D                     	;# 
  1426  019E                     	;# 
  1427  019F                     	;# 
  1428  020D                     	;# 
  1429  0210                     	;# 
  1430  0211                     	;# 
  1431  0212                     	;# 
  1432  0213                     	;# 
  1433  0214                     	;# 
  1434  0215                     	;# 
  1435  0215                     	;# 
  1436  0216                     	;# 
  1437  0217                     	;# 
  1438  0291                     	;# 
  1439  0291                     	;# 
  1440  0292                     	;# 
  1441  0293                     	;# 
  1442  0294                     	;# 
  1443  0295                     	;# 
  1444  0295                     	;# 
  1445  0296                     	;# 
  1446  0298                     	;# 
  1447  0298                     	;# 
  1448  0299                     	;# 
  1449  029A                     	;# 
  1450  029B                     	;# 
  1451  029C                     	;# 
  1452  029C                     	;# 
  1453  029D                     	;# 
  1454  029E                     	;# 
  1455  029F                     	;# 
  1456  0311                     	;# 
  1457  0311                     	;# 
  1458  0312                     	;# 
  1459  0313                     	;# 
  1460  0314                     	;# 
  1461  0315                     	;# 
  1462  0315                     	;# 
  1463  0316                     	;# 
  1464  0318                     	;# 
  1465  0318                     	;# 
  1466  0319                     	;# 
  1467  031A                     	;# 
  1468  031C                     	;# 
  1469  031C                     	;# 
  1470  031D                     	;# 
  1471  031E                     	;# 
  1472  0394                     	;# 
  1473  0395                     	;# 
  1474  0396                     	;# 
  1475  0415                     	;# 
  1476  0416                     	;# 
  1477  0417                     	;# 
  1478  041C                     	;# 
  1479  041D                     	;# 
  1480  041E                     	;# 
  1481  0791                     	;# 
  1482  0792                     	;# 
  1483  0793                     	;# 
  1484  0794                     	;# 
  1485  0795                     	;# 
  1486  0798                     	;# 
  1487  0799                     	;# 
  1488  07A0                     	;# 
  1489  07A1                     	;# 
  1490  07A3                     	;# 
  1491  07A4                     	;# 
  1492  07A6                     	;# 
  1493  07A7                     	;# 
  1494  07A9                     	;# 
  1495  07AA                     	;# 
  1496  0FE4                     	;# 
  1497  0FE5                     	;# 
  1498  0FE6                     	;# 
  1499  0FE7                     	;# 
  1500  0FE8                     	;# 
  1501  0FE9                     	;# 
  1502  0FEA                     	;# 
  1503  0FEB                     	;# 
  1504  0FED                     	;# 
  1505  0FEE                     	;# 
  1506  0FEF                     	;# 
  1507  0000                     	;# 
  1508  0001                     	;# 
  1509  0002                     	;# 
  1510  0003                     	;# 
  1511  0004                     	;# 
  1512  0005                     	;# 
  1513  0006                     	;# 
  1514  0007                     	;# 
  1515  0008                     	;# 
  1516  0009                     	;# 
  1517  000A                     	;# 
  1518  000B                     	;# 
  1519  000C                     	;# 
  1520  000D                     	;# 
  1521  000E                     	;# 
  1522  0010                     	;# 
  1523  0011                     	;# 
  1524  0012                     	;# 
  1525  0013                     	;# 
  1526  0015                     	;# 
  1527  0016                     	;# 
  1528  0016                     	;# 
  1529  0017                     	;# 
  1530  0018                     	;# 
  1531  0019                     	;# 
  1532  001A                     	;# 
  1533  001B                     	;# 
  1534  001C                     	;# 
  1535  001E                     	;# 
  1536  001F                     	;# 
  1537  008C                     	;# 
  1538  008D                     	;# 
  1539  008E                     	;# 
  1540  0090                     	;# 
  1541  0091                     	;# 
  1542  0092                     	;# 
  1543  0093                     	;# 
  1544  0095                     	;# 
  1545  0096                     	;# 
  1546  0097                     	;# 
  1547  0098                     	;# 
  1548  0099                     	;# 
  1549  009A                     	;# 
  1550  009B                     	;# 
  1551  009B                     	;# 
  1552  009C                     	;# 
  1553  009D                     	;# 
  1554  009E                     	;# 
  1555  010C                     	;# 
  1556  010D                     	;# 
  1557  010E                     	;# 
  1558  0110                     	;# 
  1559  0111                     	;# 
  1560  0112                     	;# 
  1561  0113                     	;# 
  1562  0114                     	;# 
  1563  0115                     	;# 
  1564  0116                     	;# 
  1565  0117                     	;# 
  1566  0118                     	;# 
  1567  0119                     	;# 
  1568  011A                     	;# 
  1569  011B                     	;# 
  1570  011D                     	;# 
  1571  018C                     	;# 
  1572  018D                     	;# 
  1573  0191                     	;# 
  1574  0191                     	;# 
  1575  0192                     	;# 
  1576  0193                     	;# 
  1577  0193                     	;# 
  1578  0193                     	;# 
  1579  0194                     	;# 
  1580  0195                     	;# 
  1581  0196                     	;# 
  1582  0199                     	;# 
  1583  019A                     	;# 
  1584  019B                     	;# 
  1585  019B                     	;# 
  1586  019B                     	;# 
  1587  019B                     	;# 
  1588  019C                     	;# 
  1589  019C                     	;# 
  1590  019D                     	;# 
  1591  019E                     	;# 
  1592  019F                     	;# 
  1593  020D                     	;# 
  1594  0210                     	;# 
  1595  0211                     	;# 
  1596  0212                     	;# 
  1597  0213                     	;# 
  1598  0214                     	;# 
  1599  0215                     	;# 
  1600  0215                     	;# 
  1601  0216                     	;# 
  1602  0217                     	;# 
  1603  0291                     	;# 
  1604  0291                     	;# 
  1605  0292                     	;# 
  1606  0293                     	;# 
  1607  0294                     	;# 
  1608  0295                     	;# 
  1609  0295                     	;# 
  1610  0296                     	;# 
  1611  0298                     	;# 
  1612  0298                     	;# 
  1613  0299                     	;# 
  1614  029A                     	;# 
  1615  029B                     	;# 
  1616  029C                     	;# 
  1617  029C                     	;# 
  1618  029D                     	;# 
  1619  029E                     	;# 
  1620  029F                     	;# 
  1621  0311                     	;# 
  1622  0311                     	;# 
  1623  0312                     	;# 
  1624  0313                     	;# 
  1625  0314                     	;# 
  1626  0315                     	;# 
  1627  0315                     	;# 
  1628  0316                     	;# 
  1629  0318                     	;# 
  1630  0318                     	;# 
  1631  0319                     	;# 
  1632  031A                     	;# 
  1633  031C                     	;# 
  1634  031C                     	;# 
  1635  031D                     	;# 
  1636  031E                     	;# 
  1637  0394                     	;# 
  1638  0395                     	;# 
  1639  0396                     	;# 
  1640  0415                     	;# 
  1641  0416                     	;# 
  1642  0417                     	;# 
  1643  041C                     	;# 
  1644  041D                     	;# 
  1645  041E                     	;# 
  1646  0791                     	;# 
  1647  0792                     	;# 
  1648  0793                     	;# 
  1649  0794                     	;# 
  1650  0795                     	;# 
  1651  0798                     	;# 
  1652  0799                     	;# 
  1653  07A0                     	;# 
  1654  07A1                     	;# 
  1655  07A3                     	;# 
  1656  07A4                     	;# 
  1657  07A6                     	;# 
  1658  07A7                     	;# 
  1659  07A9                     	;# 
  1660  07AA                     	;# 
  1661  0FE4                     	;# 
  1662  0FE5                     	;# 
  1663  0FE6                     	;# 
  1664  0FE7                     	;# 
  1665  0FE8                     	;# 
  1666  0FE9                     	;# 
  1667  0FEA                     	;# 
  1668  0FEB                     	;# 
  1669  0FED                     	;# 
  1670  0FEE                     	;# 
  1671  0FEF                     	;# 
  1672  0000                     	;# 
  1673  0001                     	;# 
  1674  0002                     	;# 
  1675  0003                     	;# 
  1676  0004                     	;# 
  1677  0005                     	;# 
  1678  0006                     	;# 
  1679  0007                     	;# 
  1680  0008                     	;# 
  1681  0009                     	;# 
  1682  000A                     	;# 
  1683  000B                     	;# 
  1684  000C                     	;# 
  1685  000D                     	;# 
  1686  000E                     	;# 
  1687  0010                     	;# 
  1688  0011                     	;# 
  1689  0012                     	;# 
  1690  0013                     	;# 
  1691  0015                     	;# 
  1692  0016                     	;# 
  1693  0016                     	;# 
  1694  0017                     	;# 
  1695  0018                     	;# 
  1696  0019                     	;# 
  1697  001A                     	;# 
  1698  001B                     	;# 
  1699  001C                     	;# 
  1700  001E                     	;# 
  1701  001F                     	;# 
  1702  008C                     	;# 
  1703  008D                     	;# 
  1704  008E                     	;# 
  1705  0090                     	;# 
  1706  0091                     	;# 
  1707  0092                     	;# 
  1708  0093                     	;# 
  1709  0095                     	;# 
  1710  0096                     	;# 
  1711  0097                     	;# 
  1712  0098                     	;# 
  1713  0099                     	;# 
  1714  009A                     	;# 
  1715  009B                     	;# 
  1716  009B                     	;# 
  1717  009C                     	;# 
  1718  009D                     	;# 
  1719  009E                     	;# 
  1720  010C                     	;# 
  1721  010D                     	;# 
  1722  010E                     	;# 
  1723  0110                     	;# 
  1724  0111                     	;# 
  1725  0112                     	;# 
  1726  0113                     	;# 
  1727  0114                     	;# 
  1728  0115                     	;# 
  1729  0116                     	;# 
  1730  0117                     	;# 
  1731  0118                     	;# 
  1732  0119                     	;# 
  1733  011A                     	;# 
  1734  011B                     	;# 
  1735  011D                     	;# 
  1736  018C                     	;# 
  1737  018D                     	;# 
  1738  0191                     	;# 
  1739  0191                     	;# 
  1740  0192                     	;# 
  1741  0193                     	;# 
  1742  0193                     	;# 
  1743  0193                     	;# 
  1744  0194                     	;# 
  1745  0195                     	;# 
  1746  0196                     	;# 
  1747  0199                     	;# 
  1748  019A                     	;# 
  1749  019B                     	;# 
  1750  019B                     	;# 
  1751  019B                     	;# 
  1752  019B                     	;# 
  1753  019C                     	;# 
  1754  019C                     	;# 
  1755  019D                     	;# 
  1756  019E                     	;# 
  1757  019F                     	;# 
  1758  020D                     	;# 
  1759  0210                     	;# 
  1760  0211                     	;# 
  1761  0212                     	;# 
  1762  0213                     	;# 
  1763  0214                     	;# 
  1764  0215                     	;# 
  1765  0215                     	;# 
  1766  0216                     	;# 
  1767  0217                     	;# 
  1768  0291                     	;# 
  1769  0291                     	;# 
  1770  0292                     	;# 
  1771  0293                     	;# 
  1772  0294                     	;# 
  1773  0295                     	;# 
  1774  0295                     	;# 
  1775  0296                     	;# 
  1776  0298                     	;# 
  1777  0298                     	;# 
  1778  0299                     	;# 
  1779  029A                     	;# 
  1780  029B                     	;# 
  1781  029C                     	;# 
  1782  029C                     	;# 
  1783  029D                     	;# 
  1784  029E                     	;# 
  1785  029F                     	;# 
  1786  0311                     	;# 
  1787  0311                     	;# 
  1788  0312                     	;# 
  1789  0313                     	;# 
  1790  0314                     	;# 
  1791  0315                     	;# 
  1792  0315                     	;# 
  1793  0316                     	;# 
  1794  0318                     	;# 
  1795  0318                     	;# 
  1796  0319                     	;# 
  1797  031A                     	;# 
  1798  031C                     	;# 
  1799  031C                     	;# 
  1800  031D                     	;# 
  1801  031E                     	;# 
  1802  0394                     	;# 
  1803  0395                     	;# 
  1804  0396                     	;# 
  1805  0415                     	;# 
  1806  0416                     	;# 
  1807  0417                     	;# 
  1808  041C                     	;# 
  1809  041D                     	;# 
  1810  041E                     	;# 
  1811  0791                     	;# 
  1812  0792                     	;# 
  1813  0793                     	;# 
  1814  0794                     	;# 
  1815  0795                     	;# 
  1816  0798                     	;# 
  1817  0799                     	;# 
  1818  07A0                     	;# 
  1819  07A1                     	;# 
  1820  07A3                     	;# 
  1821  07A4                     	;# 
  1822  07A6                     	;# 
  1823  07A7                     	;# 
  1824  07A9                     	;# 
  1825  07AA                     	;# 
  1826  0FE4                     	;# 
  1827  0FE5                     	;# 
  1828  0FE6                     	;# 
  1829  0FE7                     	;# 
  1830  0FE8                     	;# 
  1831  0FE9                     	;# 
  1832  0FEA                     	;# 
  1833  0FEB                     	;# 
  1834  0FED                     	;# 
  1835  0FEE                     	;# 
  1836  0FEF                     	;# 
  1837  0000                     	;# 
  1838  0001                     	;# 
  1839  0002                     	;# 
  1840  0003                     	;# 
  1841  0004                     	;# 
  1842  0005                     	;# 
  1843  0006                     	;# 
  1844  0007                     	;# 
  1845  0008                     	;# 
  1846  0009                     	;# 
  1847  000A                     	;# 
  1848  000B                     	;# 
  1849  000C                     	;# 
  1850  000D                     	;# 
  1851  000E                     	;# 
  1852  0010                     	;# 
  1853  0011                     	;# 
  1854  0012                     	;# 
  1855  0013                     	;# 
  1856  0015                     	;# 
  1857  0016                     	;# 
  1858  0016                     	;# 
  1859  0017                     	;# 
  1860  0018                     	;# 
  1861  0019                     	;# 
  1862  001A                     	;# 
  1863  001B                     	;# 
  1864  001C                     	;# 
  1865  001E                     	;# 
  1866  001F                     	;# 
  1867  008C                     	;# 
  1868  008D                     	;# 
  1869  008E                     	;# 
  1870  0090                     	;# 
  1871  0091                     	;# 
  1872  0092                     	;# 
  1873  0093                     	;# 
  1874  0095                     	;# 
  1875  0096                     	;# 
  1876  0097                     	;# 
  1877  0098                     	;# 
  1878  0099                     	;# 
  1879  009A                     	;# 
  1880  009B                     	;# 
  1881  009B                     	;# 
  1882  009C                     	;# 
  1883  009D                     	;# 
  1884  009E                     	;# 
  1885  010C                     	;# 
  1886  010D                     	;# 
  1887  010E                     	;# 
  1888  0110                     	;# 
  1889  0111                     	;# 
  1890  0112                     	;# 
  1891  0113                     	;# 
  1892  0114                     	;# 
  1893  0115                     	;# 
  1894  0116                     	;# 
  1895  0117                     	;# 
  1896  0118                     	;# 
  1897  0119                     	;# 
  1898  011A                     	;# 
  1899  011B                     	;# 
  1900  011D                     	;# 
  1901  018C                     	;# 
  1902  018D                     	;# 
  1903  0191                     	;# 
  1904  0191                     	;# 
  1905  0192                     	;# 
  1906  0193                     	;# 
  1907  0193                     	;# 
  1908  0193                     	;# 
  1909  0194                     	;# 
  1910  0195                     	;# 
  1911  0196                     	;# 
  1912  0199                     	;# 
  1913  019A                     	;# 
  1914  019B                     	;# 
  1915  019B                     	;# 
  1916  019B                     	;# 
  1917  019B                     	;# 
  1918  019C                     	;# 
  1919  019C                     	;# 
  1920  019D                     	;# 
  1921  019E                     	;# 
  1922  019F                     	;# 
  1923  020D                     	;# 
  1924  0210                     	;# 
  1925  0211                     	;# 
  1926  0212                     	;# 
  1927  0213                     	;# 
  1928  0214                     	;# 
  1929  0215                     	;# 
  1930  0215                     	;# 
  1931  0216                     	;# 
  1932  0217                     	;# 
  1933  0291                     	;# 
  1934  0291                     	;# 
  1935  0292                     	;# 
  1936  0293                     	;# 
  1937  0294                     	;# 
  1938  0295                     	;# 
  1939  0295                     	;# 
  1940  0296                     	;# 
  1941  0298                     	;# 
  1942  0298                     	;# 
  1943  0299                     	;# 
  1944  029A                     	;# 
  1945  029B                     	;# 
  1946  029C                     	;# 
  1947  029C                     	;# 
  1948  029D                     	;# 
  1949  029E                     	;# 
  1950  029F                     	;# 
  1951  0311                     	;# 
  1952  0311                     	;# 
  1953  0312                     	;# 
  1954  0313                     	;# 
  1955  0314                     	;# 
  1956  0315                     	;# 
  1957  0315                     	;# 
  1958  0316                     	;# 
  1959  0318                     	;# 
  1960  0318                     	;# 
  1961  0319                     	;# 
  1962  031A                     	;# 
  1963  031C                     	;# 
  1964  031C                     	;# 
  1965  031D                     	;# 
  1966  031E                     	;# 
  1967  0394                     	;# 
  1968  0395                     	;# 
  1969  0396                     	;# 
  1970  0415                     	;# 
  1971  0416                     	;# 
  1972  0417                     	;# 
  1973  041C                     	;# 
  1974  041D                     	;# 
  1975  041E                     	;# 
  1976  0791                     	;# 
  1977  0792                     	;# 
  1978  0793                     	;# 
  1979  0794                     	;# 
  1980  0795                     	;# 
  1981  0798                     	;# 
  1982  0799                     	;# 
  1983  07A0                     	;# 
  1984  07A1                     	;# 
  1985  07A3                     	;# 
  1986  07A4                     	;# 
  1987  07A6                     	;# 
  1988  07A7                     	;# 
  1989  07A9                     	;# 
  1990  07AA                     	;# 
  1991  0FE4                     	;# 
  1992  0FE5                     	;# 
  1993  0FE6                     	;# 
  1994  0FE7                     	;# 
  1995  0FE8                     	;# 
  1996  0FE9                     	;# 
  1997  0FEA                     	;# 
  1998  0FEB                     	;# 
  1999  0FED                     	;# 
  2000  0FEE                     	;# 
  2001  0FEF                     	;# 
  2002  0000                     	;# 
  2003  0001                     	;# 
  2004  0002                     	;# 
  2005  0003                     	;# 
  2006  0004                     	;# 
  2007  0005                     	;# 
  2008  0006                     	;# 
  2009  0007                     	;# 
  2010  0008                     	;# 
  2011  0009                     	;# 
  2012  000A                     	;# 
  2013  000B                     	;# 
  2014  000C                     	;# 
  2015  000D                     	;# 
  2016  000E                     	;# 
  2017  0010                     	;# 
  2018  0011                     	;# 
  2019  0012                     	;# 
  2020  0013                     	;# 
  2021  0015                     	;# 
  2022  0016                     	;# 
  2023  0016                     	;# 
  2024  0017                     	;# 
  2025  0018                     	;# 
  2026  0019                     	;# 
  2027  001A                     	;# 
  2028  001B                     	;# 
  2029  001C                     	;# 
  2030  001E                     	;# 
  2031  001F                     	;# 
  2032  008C                     	;# 
  2033  008D                     	;# 
  2034  008E                     	;# 
  2035  0090                     	;# 
  2036  0091                     	;# 
  2037  0092                     	;# 
  2038  0093                     	;# 
  2039  0095                     	;# 
  2040  0096                     	;# 
  2041  0097                     	;# 
  2042  0098                     	;# 
  2043  0099                     	;# 
  2044  009A                     	;# 
  2045  009B                     	;# 
  2046  009B                     	;# 
  2047  009C                     	;# 
  2048  009D                     	;# 
  2049  009E                     	;# 
  2050  010C                     	;# 
  2051  010D                     	;# 
  2052  010E                     	;# 
  2053  0110                     	;# 
  2054  0111                     	;# 
  2055  0112                     	;# 
  2056  0113                     	;# 
  2057  0114                     	;# 
  2058  0115                     	;# 
  2059  0116                     	;# 
  2060  0117                     	;# 
  2061  0118                     	;# 
  2062  0119                     	;# 
  2063  011A                     	;# 
  2064  011B                     	;# 
  2065  011D                     	;# 
  2066  018C                     	;# 
  2067  018D                     	;# 
  2068  0191                     	;# 
  2069  0191                     	;# 
  2070  0192                     	;# 
  2071  0193                     	;# 
  2072  0193                     	;# 
  2073  0193                     	;# 
  2074  0194                     	;# 
  2075  0195                     	;# 
  2076  0196                     	;# 
  2077  0199                     	;# 
  2078  019A                     	;# 
  2079  019B                     	;# 
  2080  019B                     	;# 
  2081  019B                     	;# 
  2082  019B                     	;# 
  2083  019C                     	;# 
  2084  019C                     	;# 
  2085  019D                     	;# 
  2086  019E                     	;# 
  2087  019F                     	;# 
  2088  020D                     	;# 
  2089  0210                     	;# 
  2090  0211                     	;# 
  2091  0212                     	;# 
  2092  0213                     	;# 
  2093  0214                     	;# 
  2094  0215                     	;# 
  2095  0215                     	;# 
  2096  0216                     	;# 
  2097  0217                     	;# 
  2098  0291                     	;# 
  2099  0291                     	;# 
  2100  0292                     	;# 
  2101  0293                     	;# 
  2102  0294                     	;# 
  2103  0295                     	;# 
  2104  0295                     	;# 
  2105  0296                     	;# 
  2106  0298                     	;# 
  2107  0298                     	;# 
  2108  0299                     	;# 
  2109  029A                     	;# 
  2110  029B                     	;# 
  2111  029C                     	;# 
  2112  029C                     	;# 
  2113  029D                     	;# 
  2114  029E                     	;# 
  2115  029F                     	;# 
  2116  0311                     	;# 
  2117  0311                     	;# 
  2118  0312                     	;# 
  2119  0313                     	;# 
  2120  0314                     	;# 
  2121  0315                     	;# 
  2122  0315                     	;# 
  2123  0316                     	;# 
  2124  0318                     	;# 
  2125  0318                     	;# 
  2126  0319                     	;# 
  2127  031A                     	;# 
  2128  031C                     	;# 
  2129  031C                     	;# 
  2130  031D                     	;# 
  2131  031E                     	;# 
  2132  0394                     	;# 
  2133  0395                     	;# 
  2134  0396                     	;# 
  2135  0415                     	;# 
  2136  0416                     	;# 
  2137  0417                     	;# 
  2138  041C                     	;# 
  2139  041D                     	;# 
  2140  041E                     	;# 
  2141  0791                     	;# 
  2142  0792                     	;# 
  2143  0793                     	;# 
  2144  0794                     	;# 
  2145  0795                     	;# 
  2146  0798                     	;# 
  2147  0799                     	;# 
  2148  07A0                     	;# 
  2149  07A1                     	;# 
  2150  07A3                     	;# 
  2151  07A4                     	;# 
  2152  07A6                     	;# 
  2153  07A7                     	;# 
  2154  07A9                     	;# 
  2155  07AA                     	;# 
  2156  0FE4                     	;# 
  2157  0FE5                     	;# 
  2158  0FE6                     	;# 
  2159  0FE7                     	;# 
  2160  0FE8                     	;# 
  2161  0FE9                     	;# 
  2162  0FEA                     	;# 
  2163  0FEB                     	;# 
  2164  0FED                     	;# 
  2165  0FEE                     	;# 
  2166  0FEF                     	;# 
  2167  0000                     	;# 
  2168  0001                     	;# 
  2169  0002                     	;# 
  2170  0003                     	;# 
  2171  0004                     	;# 
  2172  0005                     	;# 
  2173  0006                     	;# 
  2174  0007                     	;# 
  2175  0008                     	;# 
  2176  0009                     	;# 
  2177  000A                     	;# 
  2178  000B                     	;# 
  2179  000C                     	;# 
  2180  000D                     	;# 
  2181  000E                     	;# 
  2182  0010                     	;# 
  2183  0011                     	;# 
  2184  0012                     	;# 
  2185  0013                     	;# 
  2186  0015                     	;# 
  2187  0016                     	;# 
  2188  0016                     	;# 
  2189  0017                     	;# 
  2190  0018                     	;# 
  2191  0019                     	;# 
  2192  001A                     	;# 
  2193  001B                     	;# 
  2194  001C                     	;# 
  2195  001E                     	;# 
  2196  001F                     	;# 
  2197  008C                     	;# 
  2198  008D                     	;# 
  2199  008E                     	;# 
  2200  0090                     	;# 
  2201  0091                     	;# 
  2202  0092                     	;# 
  2203  0093                     	;# 
  2204  0095                     	;# 
  2205  0096                     	;# 
  2206  0097                     	;# 
  2207  0098                     	;# 
  2208  0099                     	;# 
  2209  009A                     	;# 
  2210  009B                     	;# 
  2211  009B                     	;# 
  2212  009C                     	;# 
  2213  009D                     	;# 
  2214  009E                     	;# 
  2215  010C                     	;# 
  2216  010D                     	;# 
  2217  010E                     	;# 
  2218  0110                     	;# 
  2219  0111                     	;# 
  2220  0112                     	;# 
  2221  0113                     	;# 
  2222  0114                     	;# 
  2223  0115                     	;# 
  2224  0116                     	;# 
  2225  0117                     	;# 
  2226  0118                     	;# 
  2227  0119                     	;# 
  2228  011A                     	;# 
  2229  011B                     	;# 
  2230  011D                     	;# 
  2231  018C                     	;# 
  2232  018D                     	;# 
  2233  0191                     	;# 
  2234  0191                     	;# 
  2235  0192                     	;# 
  2236  0193                     	;# 
  2237  0193                     	;# 
  2238  0193                     	;# 
  2239  0194                     	;# 
  2240  0195                     	;# 
  2241  0196                     	;# 
  2242  0199                     	;# 
  2243  019A                     	;# 
  2244  019B                     	;# 
  2245  019B                     	;# 
  2246  019B                     	;# 
  2247  019B                     	;# 
  2248  019C                     	;# 
  2249  019C                     	;# 
  2250  019D                     	;# 
  2251  019E                     	;# 
  2252  019F                     	;# 
  2253  020D                     	;# 
  2254  0210                     	;# 
  2255  0211                     	;# 
  2256  0212                     	;# 
  2257  0213                     	;# 
  2258  0214                     	;# 
  2259  0215                     	;# 
  2260  0215                     	;# 
  2261  0216                     	;# 
  2262  0217                     	;# 
  2263  0291                     	;# 
  2264  0291                     	;# 
  2265  0292                     	;# 
  2266  0293                     	;# 
  2267  0294                     	;# 
  2268  0295                     	;# 
  2269  0295                     	;# 
  2270  0296                     	;# 
  2271  0298                     	;# 
  2272  0298                     	;# 
  2273  0299                     	;# 
  2274  029A                     	;# 
  2275  029B                     	;# 
  2276  029C                     	;# 
  2277  029C                     	;# 
  2278  029D                     	;# 
  2279  029E                     	;# 
  2280  029F                     	;# 
  2281  0311                     	;# 
  2282  0311                     	;# 
  2283  0312                     	;# 
  2284  0313                     	;# 
  2285  0314                     	;# 
  2286  0315                     	;# 
  2287  0315                     	;# 
  2288  0316                     	;# 
  2289  0318                     	;# 
  2290  0318                     	;# 
  2291  0319                     	;# 
  2292  031A                     	;# 
  2293  031C                     	;# 
  2294  031C                     	;# 
  2295  031D                     	;# 
  2296  031E                     	;# 
  2297  0394                     	;# 
  2298  0395                     	;# 
  2299  0396                     	;# 
  2300  0415                     	;# 
  2301  0416                     	;# 
  2302  0417                     	;# 
  2303  041C                     	;# 
  2304  041D                     	;# 
  2305  041E                     	;# 
  2306  0791                     	;# 
  2307  0792                     	;# 
  2308  0793                     	;# 
  2309  0794                     	;# 
  2310  0795                     	;# 
  2311  0798                     	;# 
  2312  0799                     	;# 
  2313  07A0                     	;# 
  2314  07A1                     	;# 
  2315  07A3                     	;# 
  2316  07A4                     	;# 
  2317  07A6                     	;# 
  2318  07A7                     	;# 
  2319  07A9                     	;# 
  2320  07AA                     	;# 
  2321  0FE4                     	;# 
  2322  0FE5                     	;# 
  2323  0FE6                     	;# 
  2324  0FE7                     	;# 
  2325  0FE8                     	;# 
  2326  0FE9                     	;# 
  2327  0FEA                     	;# 
  2328  0FEB                     	;# 
  2329  0FED                     	;# 
  2330  0FEE                     	;# 
  2331  0FEF                     	;# 
  2332  0000                     	;# 
  2333  0001                     	;# 
  2334  0002                     	;# 
  2335  0003                     	;# 
  2336  0004                     	;# 
  2337  0005                     	;# 
  2338  0006                     	;# 
  2339  0007                     	;# 
  2340  0008                     	;# 
  2341  0009                     	;# 
  2342  000A                     	;# 
  2343  000B                     	;# 
  2344  000C                     	;# 
  2345  000D                     	;# 
  2346  000E                     	;# 
  2347  0010                     	;# 
  2348  0011                     	;# 
  2349  0012                     	;# 
  2350  0013                     	;# 
  2351  0015                     	;# 
  2352  0016                     	;# 
  2353  0016                     	;# 
  2354  0017                     	;# 
  2355  0018                     	;# 
  2356  0019                     	;# 
  2357  001A                     	;# 
  2358  001B                     	;# 
  2359  001C                     	;# 
  2360  001E                     	;# 
  2361  001F                     	;# 
  2362  008C                     	;# 
  2363  008D                     	;# 
  2364  008E                     	;# 
  2365  0090                     	;# 
  2366  0091                     	;# 
  2367  0092                     	;# 
  2368  0093                     	;# 
  2369  0095                     	;# 
  2370  0096                     	;# 
  2371  0097                     	;# 
  2372  0098                     	;# 
  2373  0099                     	;# 
  2374  009A                     	;# 
  2375  009B                     	;# 
  2376  009B                     	;# 
  2377  009C                     	;# 
  2378  009D                     	;# 
  2379  009E                     	;# 
  2380  010C                     	;# 
  2381  010D                     	;# 
  2382  010E                     	;# 
  2383  0110                     	;# 
  2384  0111                     	;# 
  2385  0112                     	;# 
  2386  0113                     	;# 
  2387  0114                     	;# 
  2388  0115                     	;# 
  2389  0116                     	;# 
  2390  0117                     	;# 
  2391  0118                     	;# 
  2392  0119                     	;# 
  2393  011A                     	;# 
  2394  011B                     	;# 
  2395  011D                     	;# 
  2396  018C                     	;# 
  2397  018D                     	;# 
  2398  0191                     	;# 
  2399  0191                     	;# 
  2400  0192                     	;# 
  2401  0193                     	;# 
  2402  0193                     	;# 
  2403  0193                     	;# 
  2404  0194                     	;# 
  2405  0195                     	;# 
  2406  0196                     	;# 
  2407  0199                     	;# 
  2408  019A                     	;# 
  2409  019B                     	;# 
  2410  019B                     	;# 
  2411  019B                     	;# 
  2412  019B                     	;# 
  2413  019C                     	;# 
  2414  019C                     	;# 
  2415  019D                     	;# 
  2416  019E                     	;# 
  2417  019F                     	;# 
  2418  020D                     	;# 
  2419  0210                     	;# 
  2420  0211                     	;# 
  2421  0212                     	;# 
  2422  0213                     	;# 
  2423  0214                     	;# 
  2424  0215                     	;# 
  2425  0215                     	;# 
  2426  0216                     	;# 
  2427  0217                     	;# 
  2428  0291                     	;# 
  2429  0291                     	;# 
  2430  0292                     	;# 
  2431  0293                     	;# 
  2432  0294                     	;# 
  2433  0295                     	;# 
  2434  0295                     	;# 
  2435  0296                     	;# 
  2436  0298                     	;# 
  2437  0298                     	;# 
  2438  0299                     	;# 
  2439  029A                     	;# 
  2440  029B                     	;# 
  2441  029C                     	;# 
  2442  029C                     	;# 
  2443  029D                     	;# 
  2444  029E                     	;# 
  2445  029F                     	;# 
  2446  0311                     	;# 
  2447  0311                     	;# 
  2448  0312                     	;# 
  2449  0313                     	;# 
  2450  0314                     	;# 
  2451  0315                     	;# 
  2452  0315                     	;# 
  2453  0316                     	;# 
  2454  0318                     	;# 
  2455  0318                     	;# 
  2456  0319                     	;# 
  2457  031A                     	;# 
  2458  031C                     	;# 
  2459  031C                     	;# 
  2460  031D                     	;# 
  2461  031E                     	;# 
  2462  0394                     	;# 
  2463  0395                     	;# 
  2464  0396                     	;# 
  2465  0415                     	;# 
  2466  0416                     	;# 
  2467  0417                     	;# 
  2468  041C                     	;# 
  2469  041D                     	;# 
  2470  041E                     	;# 
  2471  0791                     	;# 
  2472  0792                     	;# 
  2473  0793                     	;# 
  2474  0794                     	;# 
  2475  0795                     	;# 
  2476  0798                     	;# 
  2477  0799                     	;# 
  2478  07A0                     	;# 
  2479  07A1                     	;# 
  2480  07A3                     	;# 
  2481  07A4                     	;# 
  2482  07A6                     	;# 
  2483  07A7                     	;# 
  2484  07A9                     	;# 
  2485  07AA                     	;# 
  2486  0FE4                     	;# 
  2487  0FE5                     	;# 
  2488  0FE6                     	;# 
  2489  0FE7                     	;# 
  2490  0FE8                     	;# 
  2491  0FE9                     	;# 
  2492  0FEA                     	;# 
  2493  0FEB                     	;# 
  2494  0FED                     	;# 
  2495  0FEE                     	;# 
  2496  0FEF                     	;# 
  2497  0000                     	;# 
  2498  0001                     	;# 
  2499  0002                     	;# 
  2500  0003                     	;# 
  2501  0004                     	;# 
  2502  0005                     	;# 
  2503  0006                     	;# 
  2504  0007                     	;# 
  2505  0008                     	;# 
  2506  0009                     	;# 
  2507  000A                     	;# 
  2508  000B                     	;# 
  2509  000C                     	;# 
  2510  000D                     	;# 
  2511  000E                     	;# 
  2512  0010                     	;# 
  2513  0011                     	;# 
  2514  0012                     	;# 
  2515  0013                     	;# 
  2516  0015                     	;# 
  2517  0016                     	;# 
  2518  0016                     	;# 
  2519  0017                     	;# 
  2520  0018                     	;# 
  2521  0019                     	;# 
  2522  001A                     	;# 
  2523  001B                     	;# 
  2524  001C                     	;# 
  2525  001E                     	;# 
  2526  001F                     	;# 
  2527  008C                     	;# 
  2528  008D                     	;# 
  2529  008E                     	;# 
  2530  0090                     	;# 
  2531  0091                     	;# 
  2532  0092                     	;# 
  2533  0093                     	;# 
  2534  0095                     	;# 
  2535  0096                     	;# 
  2536  0097                     	;# 
  2537  0098                     	;# 
  2538  0099                     	;# 
  2539  009A                     	;# 
  2540  009B                     	;# 
  2541  009B                     	;# 
  2542  009C                     	;# 
  2543  009D                     	;# 
  2544  009E                     	;# 
  2545  010C                     	;# 
  2546  010D                     	;# 
  2547  010E                     	;# 
  2548  0110                     	;# 
  2549  0111                     	;# 
  2550  0112                     	;# 
  2551  0113                     	;# 
  2552  0114                     	;# 
  2553  0115                     	;# 
  2554  0116                     	;# 
  2555  0117                     	;# 
  2556  0118                     	;# 
  2557  0119                     	;# 
  2558  011A                     	;# 
  2559  011B                     	;# 
  2560  011D                     	;# 
  2561  018C                     	;# 
  2562  018D                     	;# 
  2563  0191                     	;# 
  2564  0191                     	;# 
  2565  0192                     	;# 
  2566  0193                     	;# 
  2567  0193                     	;# 
  2568  0193                     	;# 
  2569  0194                     	;# 
  2570  0195                     	;# 
  2571  0196                     	;# 
  2572  0199                     	;# 
  2573  019A                     	;# 
  2574  019B                     	;# 
  2575  019B                     	;# 
  2576  019B                     	;# 
  2577  019B                     	;# 
  2578  019C                     	;# 
  2579  019C                     	;# 
  2580  019D                     	;# 
  2581  019E                     	;# 
  2582  019F                     	;# 
  2583  020D                     	;# 
  2584  0210                     	;# 
  2585  0211                     	;# 
  2586  0212                     	;# 
  2587  0213                     	;# 
  2588  0214                     	;# 
  2589  0215                     	;# 
  2590  0215                     	;# 
  2591  0216                     	;# 
  2592  0217                     	;# 
  2593  0291                     	;# 
  2594  0291                     	;# 
  2595  0292                     	;# 
  2596  0293                     	;# 
  2597  0294                     	;# 
  2598  0295                     	;# 
  2599  0295                     	;# 
  2600  0296                     	;# 
  2601  0298                     	;# 
  2602  0298                     	;# 
  2603  0299                     	;# 
  2604  029A                     	;# 
  2605  029B                     	;# 
  2606  029C                     	;# 
  2607  029C                     	;# 
  2608  029D                     	;# 
  2609  029E                     	;# 
  2610  029F                     	;# 
  2611  0311                     	;# 
  2612  0311                     	;# 
  2613  0312                     	;# 
  2614  0313                     	;# 
  2615  0314                     	;# 
  2616  0315                     	;# 
  2617  0315                     	;# 
  2618  0316                     	;# 
  2619  0318                     	;# 
  2620  0318                     	;# 
  2621  0319                     	;# 
  2622  031A                     	;# 
  2623  031C                     	;# 
  2624  031C                     	;# 
  2625  031D                     	;# 
  2626  031E                     	;# 
  2627  0394                     	;# 
  2628  0395                     	;# 
  2629  0396                     	;# 
  2630  0415                     	;# 
  2631  0416                     	;# 
  2632  0417                     	;# 
  2633  041C                     	;# 
  2634  041D                     	;# 
  2635  041E                     	;# 
  2636  0791                     	;# 
  2637  0792                     	;# 
  2638  0793                     	;# 
  2639  0794                     	;# 
  2640  0795                     	;# 
  2641  0798                     	;# 
  2642  0799                     	;# 
  2643  07A0                     	;# 
  2644  07A1                     	;# 
  2645  07A3                     	;# 
  2646  07A4                     	;# 
  2647  07A6                     	;# 
  2648  07A7                     	;# 
  2649  07A9                     	;# 
  2650  07AA                     	;# 
  2651  0FE4                     	;# 
  2652  0FE5                     	;# 
  2653  0FE6                     	;# 
  2654  0FE7                     	;# 
  2655  0FE8                     	;# 
  2656  0FE9                     	;# 
  2657  0FEA                     	;# 
  2658  0FEB                     	;# 
  2659  0FED                     	;# 
  2660  0FEE                     	;# 
  2661  0FEF                     	;_mtouch_sensor
  2662                           
  2663 ;; Function _EUSART_DefaultFramingErrorHandler is unused but had its address taken
  2664  0000                     
  2665 ;; Function _EUSART_DefaultOverrunErrorHandler is unused but had its address taken
  2666  0000                     
  2667 ;; Function _EUSART_DefaultErrorHandler is unused but had its address taken
  2668  0000                     
  2669                           	psect	idataBIGRAM
  2670  0AFC                     __pidataBIGRAM:
  2671                           
  2672                           ;initializer for _mtouch_sensor
  2673  0AFC  3400               	retlw	0
  2674  0AFD  3485               	retlw	low _MTOUCH_CVD_ScanA_0
  2675  0AFE  3413               	retlw	high _MTOUCH_CVD_ScanA_0
  2676  0AFF  34CF               	retlw	low _MTOUCH_CVD_ScanB_0
  2677  0B00  3414               	retlw	high _MTOUCH_CVD_ScanB_0
  2678  0B01  3420               	retlw	32
  2679  0B02  3400               	retlw	0
  2680  0B03  3400               	retlw	0
  2681  0B04  3400               	retlw	0
  2682  0B05  3401               	retlw	1
  2683  0B06  34A6               	retlw	low _MTOUCH_CVD_ScanA_1
  2684  0B07  3413               	retlw	high _MTOUCH_CVD_ScanA_1
  2685  0B08  34F0               	retlw	low _MTOUCH_CVD_ScanB_1
  2686  0B09  3414               	retlw	high _MTOUCH_CVD_ScanB_1
  2687  0B0A  3420               	retlw	32
  2688  0B0B  3400               	retlw	0
  2689  0B0C  3400               	retlw	0
  2690  0B0D  3400               	retlw	0
  2691  0B0E  3402               	retlw	2
  2692  0B0F  34C7               	retlw	low _MTOUCH_CVD_ScanA_2
  2693  0B10  3413               	retlw	high _MTOUCH_CVD_ScanA_2
  2694  0B11  3411               	retlw	low _MTOUCH_CVD_ScanB_2
  2695  0B12  3415               	retlw	high _MTOUCH_CVD_ScanB_2
  2696  0B13  3420               	retlw	32
  2697  0B14  3400               	retlw	0
  2698  0B15  3400               	retlw	0
  2699  0B16  3400               	retlw	0
  2700  0B17  3403               	retlw	3
  2701  0B18  34E8               	retlw	low _MTOUCH_CVD_ScanA_3
  2702  0B19  3413               	retlw	high _MTOUCH_CVD_ScanA_3
  2703  0B1A  3432               	retlw	low _MTOUCH_CVD_ScanB_3
  2704  0B1B  3415               	retlw	high _MTOUCH_CVD_ScanB_3
  2705  0B1C  3420               	retlw	32
  2706  0B1D  3400               	retlw	0
  2707  0B1E  3400               	retlw	0
  2708  0B1F  3400               	retlw	0
  2709  0B20  3404               	retlw	4
  2710  0B21  3409               	retlw	low _MTOUCH_CVD_ScanA_4
  2711  0B22  3414               	retlw	high _MTOUCH_CVD_ScanA_4
  2712  0B23  3453               	retlw	low _MTOUCH_CVD_ScanB_4
  2713  0B24  3415               	retlw	high _MTOUCH_CVD_ScanB_4
  2714  0B25  3420               	retlw	32
  2715  0B26  3400               	retlw	0
  2716  0B27  3400               	retlw	0
  2717  0B28  3400               	retlw	0
  2718  0B29  3405               	retlw	5
  2719  0B2A  342A               	retlw	low _MTOUCH_CVD_ScanA_5
  2720  0B2B  3414               	retlw	high _MTOUCH_CVD_ScanA_5
  2721  0B2C  3474               	retlw	low _MTOUCH_CVD_ScanB_5
  2722  0B2D  3415               	retlw	high _MTOUCH_CVD_ScanB_5
  2723  0B2E  3420               	retlw	32
  2724  0B2F  3400               	retlw	0
  2725  0B30  3400               	retlw	0
  2726  0B31  3400               	retlw	0
  2727  0B32  3406               	retlw	6
  2728  0B33  344B               	retlw	low _MTOUCH_CVD_ScanA_6
  2729  0B34  3414               	retlw	high _MTOUCH_CVD_ScanA_6
  2730  0B35  3495               	retlw	low _MTOUCH_CVD_ScanB_6
  2731  0B36  3415               	retlw	high _MTOUCH_CVD_ScanB_6
  2732  0B37  3420               	retlw	32
  2733  0B38  3400               	retlw	0
  2734  0B39  3400               	retlw	0
  2735  0B3A  3400               	retlw	0
  2736  0B3B  3407               	retlw	7
  2737  0B3C  346C               	retlw	low _MTOUCH_CVD_ScanA_7
  2738  0B3D  3414               	retlw	high _MTOUCH_CVD_ScanA_7
  2739  0B3E  34B6               	retlw	low _MTOUCH_CVD_ScanB_7
  2740  0B3F  3415               	retlw	high _MTOUCH_CVD_ScanB_7
  2741  0B40  3420               	retlw	32
  2742  0B41  3400               	retlw	0
  2743  0B42  3400               	retlw	0
  2744  0B43  3400               	retlw	0
  2745  0B44  3408               	retlw	8
  2746  0B45  348D               	retlw	low _MTOUCH_CVD_ScanA_8
  2747  0B46  3414               	retlw	high _MTOUCH_CVD_ScanA_8
  2748  0B47  34D7               	retlw	low _MTOUCH_CVD_ScanB_8
  2749  0B48  3415               	retlw	high _MTOUCH_CVD_ScanB_8
  2750  0B49  3420               	retlw	32
  2751  0B4A  3400               	retlw	0
  2752  0B4B  3400               	retlw	0
  2753  0B4C  3400               	retlw	0
  2754  0B4D  3409               	retlw	9
  2755  0B4E  3464               	retlw	low _MTOUCH_CVD_ScanA_9
  2756  0B4F  3413               	retlw	high _MTOUCH_CVD_ScanA_9
  2757  0B50  34AE               	retlw	low _MTOUCH_CVD_ScanB_9
  2758  0B51  3414               	retlw	high _MTOUCH_CVD_ScanB_9
  2759  0B52  3420               	retlw	32
  2760  0B53  3400               	retlw	0
  2761  0B54  3400               	retlw	0
  2762  0B55  3400               	retlw	0
  2763                           
  2764                           	psect	idataBANK1
  2765  1302                     __pidataBANK1:
  2766                           
  2767                           ;initializer for _Button_StateMachine
  2768  1302  3414               	retlw	low _Button_State_Initializing
  2769  1303  340E               	retlw	high _Button_State_Initializing
  2770  1304  34B7               	retlw	low _Button_State_NotPressed
  2771  1305  3402               	retlw	high _Button_State_NotPressed
  2772  1306  34A3               	retlw	low _Button_State_PressDebounce
  2773  1307  3405               	retlw	high _Button_State_PressDebounce
  2774  1308  3456               	retlw	low _Button_State_Pressed
  2775  1309  340B               	retlw	high _Button_State_Pressed
  2776  130A  34F8               	retlw	low _Button_State_ReleaseDebounce
  2777  130B  340E               	retlw	high _Button_State_ReleaseDebounce
  2778  130C  348B               	retlw	low _Button_State_Suspended
  2779  130D  3411               	retlw	high _Button_State_Suspended
  2780  130E  34AB               	retlw	low _Button_State_Disabled
  2781  130F  341F               	retlw	high _Button_State_Disabled
  2782                           
  2783                           ;initializer for _callback_released
  2784  1310  34AD               	retlw	low _Slider_DefaultCallback
  2785  1311  341F               	retlw	high _Slider_DefaultCallback
  2786                           
  2787                           ;initializer for _callback_pressed@mtouch_slider$F1195
  2788  1312  34AD               	retlw	low _Slider_DefaultCallback
  2789  1313  341F               	retlw	high _Slider_DefaultCallback
  2790                           
  2791                           ;initializer for _callback_position_changed
  2792  1314  34AD               	retlw	low _Slider_DefaultCallback
  2793  1315  341F               	retlw	high _Slider_DefaultCallback
  2794                           
  2795                           ;initializer for _callback_notPressed
  2796  1316  34AA               	retlw	low _Button_DefaultCallback
  2797  1317  341F               	retlw	high _Button_DefaultCallback
  2798                           
  2799                           ;initializer for _callback_pressed
  2800  1318  34AA               	retlw	low _Button_DefaultCallback
  2801  1319  341F               	retlw	high _Button_DefaultCallback
  2802                           
  2803                           ;initializer for _Sensor_scanB
  2804  131A  34CF               	retlw	low _MTOUCH_CVD_ScanB_0
  2805  131B  3414               	retlw	high _MTOUCH_CVD_ScanB_0
  2806                           
  2807                           ;initializer for _Sensor_scanA
  2808  131C  3485               	retlw	low _MTOUCH_CVD_ScanA_0
  2809  131D  3413               	retlw	high _MTOUCH_CVD_ScanA_0
  2810                           
  2811                           ;initializer for _callback_sampled
  2812  131E  34AC               	retlw	low _Sensor_DefaultCallback
  2813  131F  341F               	retlw	high _Sensor_DefaultCallback
  2814                           
  2815                           ;initializer for _mTouchScanReload
  2816  1320  34BF               	retlw	191
  2817  1321  3463               	retlw	99
  2818                           
  2819                           	psect	idataBANK2
  2820  15F8                     __pidataBANK2:
  2821                           
  2822                           ;initializer for _mtouch_slider
  2823  15F8  3400               	retlw	0
  2824  15F9  3400               	retlw	0
  2825  15FA  3400               	retlw	0
  2826  15FB  3405               	retlw	5
  2827  15FC  3472               	retlw	114
  2828  15FD  3405               	retlw	5
  2829  15FE  3464               	retlw	100
  2830  15FF  3400               	retlw	0
  2831  1600  3400               	retlw	0
  2832  1601  3400               	retlw	0
  2833  1602  3400               	retlw	0
  2834  1603  3400               	retlw	0
  2835  1604  3400               	retlw	0
  2836  1605  3400               	retlw	0
  2837  1606  3400               	retlw	0
  2838  1607  3400               	retlw	0
  2839  1608  3400               	retlw	0
  2840  1609  3401               	retlw	1
  2841  160A  3400               	retlw	0
  2842  160B  3405               	retlw	5
  2843  160C  3405               	retlw	5
  2844  160D  3472               	retlw	114
  2845  160E  3405               	retlw	5
  2846  160F  3464               	retlw	100
  2847  1610  3400               	retlw	0
  2848  1611  3400               	retlw	0
  2849  1612  3400               	retlw	0
  2850  1613  3400               	retlw	0
  2851  1614  3400               	retlw	0
  2852  1615  3400               	retlw	0
  2853  1616  3400               	retlw	0
  2854  1617  3400               	retlw	0
  2855  1618  3400               	retlw	0
  2856  1619  3400               	retlw	0
  2857                           
  2858                           	psect	stringtext1
  2859  0450                     __pstringtext1:
  2860  0450                     _mtouch_button_init:
  2861  0450  3400               	retlw	0
  2862  0451  3405               	retlw	5
  2863  0452  3400               	retlw	0
  2864  0453  3401               	retlw	1
  2865  0454  3400               	retlw	0
  2866  0455  3400               	retlw	0
  2867  0456  3400               	retlw	0
  2868  0457  3400               	retlw	0
  2869  0458  3400               	retlw	0
  2870  0459  3400               	retlw	0
  2871  045A  3400               	retlw	0
  2872  045B  3400               	retlw	0
  2873  045C  3400               	retlw	0
  2874  045D  3400               	retlw	0
  2875  045E  3400               	retlw	0
  2876  045F  3419               	retlw	25
  2877  0460  3401               	retlw	1
  2878  0461  3401               	retlw	1
  2879  0462  3401               	retlw	1
  2880  0463  3409               	retlw	9
  2881  0464  3400               	retlw	0
  2882  0465  3401               	retlw	1
  2883  0466  3400               	retlw	0
  2884  0467  3400               	retlw	0
  2885  0468  3400               	retlw	0
  2886  0469  3400               	retlw	0
  2887  046A  3400               	retlw	0
  2888  046B  3400               	retlw	0
  2889  046C  3400               	retlw	0
  2890  046D  3400               	retlw	0
  2891  046E  3400               	retlw	0
  2892  046F  3400               	retlw	0
  2893  0470  3400               	retlw	0
  2894  0471  3419               	retlw	25
  2895  0472  3401               	retlw	1
  2896  0473  3401               	retlw	1
  2897  0474  3402               	retlw	2
  2898  0475  3408               	retlw	8
  2899  0476  3400               	retlw	0
  2900  0477  3401               	retlw	1
  2901  0478  3400               	retlw	0
  2902  0479  3400               	retlw	0
  2903  047A  3400               	retlw	0
  2904  047B  3400               	retlw	0
  2905  047C  3400               	retlw	0
  2906  047D  3400               	retlw	0
  2907  047E  3400               	retlw	0
  2908  047F  3400               	retlw	0
  2909  0480  3400               	retlw	0
  2910  0481  3400               	retlw	0
  2911  0482  3400               	retlw	0
  2912  0483  3419               	retlw	25
  2913  0484  3401               	retlw	1
  2914  0485  3401               	retlw	1
  2915  0486  3403               	retlw	3
  2916  0487  3407               	retlw	7
  2917  0488  3400               	retlw	0
  2918  0489  3401               	retlw	1
  2919  048A  3400               	retlw	0
  2920  048B  3400               	retlw	0
  2921  048C  3400               	retlw	0
  2922  048D  3400               	retlw	0
  2923  048E  3400               	retlw	0
  2924  048F  3400               	retlw	0
  2925  0490  3400               	retlw	0
  2926  0491  3400               	retlw	0
  2927  0492  3400               	retlw	0
  2928  0493  3400               	retlw	0
  2929  0494  3400               	retlw	0
  2930  0495  3419               	retlw	25
  2931  0496  3401               	retlw	1
  2932  0497  3401               	retlw	1
  2933  0498  3404               	retlw	4
  2934  0499  3406               	retlw	6
  2935  049A  3400               	retlw	0
  2936  049B  3401               	retlw	1
  2937  049C  3400               	retlw	0
  2938  049D  3400               	retlw	0
  2939  049E  3400               	retlw	0
  2940  049F  3400               	retlw	0
  2941  04A0  3400               	retlw	0
  2942  04A1  3400               	retlw	0
  2943  04A2  3400               	retlw	0
  2944  04A3  3400               	retlw	0
  2945  04A4  3400               	retlw	0
  2946  04A5  3400               	retlw	0
  2947  04A6  3400               	retlw	0
  2948  04A7  3419               	retlw	25
  2949  04A8  3401               	retlw	1
  2950  04A9  3401               	retlw	1
  2951  04AA  3405               	retlw	5
  2952  04AB  3404               	retlw	4
  2953  04AC  3400               	retlw	0
  2954  04AD  3402               	retlw	2
  2955  04AE  3400               	retlw	0
  2956  04AF  3400               	retlw	0
  2957  04B0  3400               	retlw	0
  2958  04B1  3400               	retlw	0
  2959  04B2  3400               	retlw	0
  2960  04B3  3400               	retlw	0
  2961  04B4  3400               	retlw	0
  2962  04B5  3400               	retlw	0
  2963  04B6  3400               	retlw	0
  2964  04B7  3400               	retlw	0
  2965  04B8  3400               	retlw	0
  2966  04B9  3419               	retlw	25
  2967  04BA  3401               	retlw	1
  2968  04BB  3401               	retlw	1
  2969  04BC  3406               	retlw	6
  2970  04BD  3403               	retlw	3
  2971  04BE  3400               	retlw	0
  2972  04BF  3402               	retlw	2
  2973  04C0  3400               	retlw	0
  2974  04C1  3400               	retlw	0
  2975  04C2  3400               	retlw	0
  2976  04C3  3400               	retlw	0
  2977  04C4  3400               	retlw	0
  2978  04C5  3400               	retlw	0
  2979  04C6  3400               	retlw	0
  2980  04C7  3400               	retlw	0
  2981  04C8  3400               	retlw	0
  2982  04C9  3400               	retlw	0
  2983  04CA  3400               	retlw	0
  2984  04CB  3419               	retlw	25
  2985  04CC  3401               	retlw	1
  2986  04CD  3401               	retlw	1
  2987  04CE  3407               	retlw	7
  2988  04CF  3402               	retlw	2
  2989  04D0  3400               	retlw	0
  2990  04D1  3402               	retlw	2
  2991  04D2  3400               	retlw	0
  2992  04D3  3400               	retlw	0
  2993  04D4  3400               	retlw	0
  2994  04D5  3400               	retlw	0
  2995  04D6  3400               	retlw	0
  2996  04D7  3400               	retlw	0
  2997  04D8  3400               	retlw	0
  2998  04D9  3400               	retlw	0
  2999  04DA  3400               	retlw	0
  3000  04DB  3400               	retlw	0
  3001  04DC  3400               	retlw	0
  3002  04DD  3419               	retlw	25
  3003  04DE  3401               	retlw	1
  3004  04DF  3401               	retlw	1
  3005  04E0  3408               	retlw	8
  3006  04E1  3401               	retlw	1
  3007  04E2  3400               	retlw	0
  3008  04E3  3402               	retlw	2
  3009  04E4  3400               	retlw	0
  3010  04E5  3400               	retlw	0
  3011  04E6  3400               	retlw	0
  3012  04E7  3400               	retlw	0
  3013  04E8  3400               	retlw	0
  3014  04E9  3400               	retlw	0
  3015  04EA  3400               	retlw	0
  3016  04EB  3400               	retlw	0
  3017  04EC  3400               	retlw	0
  3018  04ED  3400               	retlw	0
  3019  04EE  3400               	retlw	0
  3020  04EF  3419               	retlw	25
  3021  04F0  3401               	retlw	1
  3022  04F1  3401               	retlw	1
  3023  04F2  3409               	retlw	9
  3024  04F3  3400               	retlw	0
  3025  04F4  3400               	retlw	0
  3026  04F5  3402               	retlw	2
  3027  04F6  3400               	retlw	0
  3028  04F7  3400               	retlw	0
  3029  04F8  3400               	retlw	0
  3030  04F9  3400               	retlw	0
  3031  04FA  3400               	retlw	0
  3032  04FB  3400               	retlw	0
  3033  04FC  3400               	retlw	0
  3034  04FD  3400               	retlw	0
  3035  04FE  3400               	retlw	0
  3036  04FF  3400               	retlw	0
  3037  0500  3400               	retlw	0
  3038  0501  3419               	retlw	25
  3039  0502  3401               	retlw	1
  3040  0503  3401               	retlw	1
  3041  0504                     __end_of_mtouch_button_init:
  3042                           
  3043                           	psect	nvBANK1
  3044  00DC                     __pnvBANK1:
  3045  00DC                     _TMR1_InterruptHandler:
  3046  00DC                     	ds	2
  3047  00DE                     _timer1ReloadVal:
  3048  00DE                     	ds	2
  3049  00E0                     _EUSART_ErrorHandler:
  3050  00E0                     	ds	2
  3051  00E2                     _EUSART_OverrunErrorHandler:
  3052  00E2                     	ds	2
  3053  00E4                     _EUSART_FramingErrorHandler:
  3054  00E4                     	ds	2
  3055  0018                     _T1CONbits	set	24
  3056  0018                     _T1CON	set	24
  3057  0016                     _TMR1L	set	22
  3058  0017                     _TMR1H	set	23
  3059  0019                     _T1GCON	set	25
  3060  0011                     _PIR1bits	set	17
  3061  000B                     _INTCONbits	set	11
  3062  005F                     _GIE	set	95
  3063  009B                     _ADRES	set	155
  3064  0091                     _PIE1bits	set	145
  3065  0095                     _OPTION_REGbits	set	149
  3066  008E                     _TRISC	set	142
  3067  008D                     _TRISB	set	141
  3068  008C                     _TRISA	set	140
  3069  0090                     _TRISE	set	144
  3070  0097                     _WDTCON	set	151
  3071  0098                     _OSCTUNE	set	152
  3072  0099                     _OSCCON	set	153
  3073  009D                     _ADCON0bits	set	157
  3074  009E                     _ADCON1	set	158
  3075  009D                     _ADCON0	set	157
  3076  010E                     _LATCbits	set	270
  3077  011D                     _APFCON	set	285
  3078  010E                     _LATC	set	270
  3079  010D                     _LATB	set	269
  3080  010C                     _LATA	set	268
  3081  0110                     _LATE	set	272
  3082  0116                     _BORCON	set	278
  3083  019A                     _TXREG	set	410
  3084  019C                     _SPBRGH	set	412
  3085  019B                     _SPBRGL	set	411
  3086  019E                     _TXSTA	set	414
  3087  019D                     _RCSTA	set	413
  3088  019F                     _BAUDCON	set	415
  3089  018C                     _ANSELA	set	396
  3090  018D                     _ANSELB	set	397
  3091  020D                     _WPUB	set	525
  3092  0210                     _WPUE	set	528
  3093                           
  3094                           	psect	cinit
  3095  0014                     start_initialization:	
  3096                           ; #config settings
  3097                           
  3098  0014                     __initialization:	;BIGRAM
  3099                           
  3100                           ; Initialize objects allocated to BIGRAM
  3101  0014  30FC               	movlw	low __pidataBIGRAM
  3102  0015  0084               	movwf	4
  3103  0016  308A               	movlw	(high __pidataBIGRAM)| (0+128)
  3104  0017  0085               	movwf	5
  3105  0018  30E2               	movlw	low (0+8930)
  3106  0019  0086               	movwf	6
  3107  001A  3022               	movlw	high (0+8930)
  3108  001B  0087               	movwf	7
  3109  001C  3000               	movlw	0
  3110  001D  00FF               	movwf	btemp+1
  3111  001E  305A               	movlw	90
  3112  001F  3190  2024  3180   	fcall	init_ram
  3113                           
  3114                           ; Initialize objects allocated to BANK1
  3115  0022  3002               	movlw	low __pidataBANK1
  3116  0023  0084               	movwf	4
  3117  0024  3093               	movlw	(high __pidataBANK1)| (0+128)
  3118  0025  0085               	movwf	5
  3119  0026  30A0               	movlw	low __pdataBANK1
  3120  0027  0086               	movwf	6
  3121  0028  3000               	movlw	high __pdataBANK1
  3122  0029  0087               	movwf	7
  3123  002A  3000               	movlw	0
  3124  002B  00FF               	movwf	btemp+1
  3125  002C  3020               	movlw	32
  3126  002D  3190  2024  3180   	fcall	init_ram
  3127                           
  3128                           ; Initialize objects allocated to BANK2
  3129  0030  30F8               	movlw	low __pidataBANK2
  3130  0031  0084               	movwf	4
  3131  0032  3095               	movlw	(high __pidataBANK2)| (0+128)
  3132  0033  0085               	movwf	5
  3133  0034  3020               	movlw	low __pdataBANK2
  3134  0035  0086               	movwf	6
  3135  0036  3001               	movlw	high __pdataBANK2
  3136  0037  0087               	movwf	7
  3137  0038  3000               	movlw	0
  3138  0039  00FF               	movwf	btemp+1
  3139  003A  3022               	movlw	34
  3140  003B  3190  2024  3180   	fcall	init_ram
  3141                           
  3142                           ; Clear objects allocated to BIGRAM
  3143  003E  303C               	movlw	low (0+9020)
  3144  003F  0084               	movwf	4
  3145  0040  3023               	movlw	high (0+9020)
  3146  0041  0085               	movwf	5
  3147  0042  30B4               	movlw	180
  3148  0043  00FE               	movwf	btemp
  3149  0044  3000               	movlw	0
  3150  0045  00FF               	movwf	btemp+1
  3151  0046  3190  2018  3180   	fcall	clear_ram0
  3152                           
  3153                           ; Clear objects allocated to COMMON
  3154  0049  01FA               	clrf	__pbssCOMMON& (0+127)
  3155  004A  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
  3156                           
  3157                           ; Clear objects allocated to BANK0
  3158  004B  01DC               	clrf	__pbssBANK0& (0+127)
  3159  004C  01DD               	clrf	(__pbssBANK0+1)& (0+127)
  3160  004D  01DE               	clrf	(__pbssBANK0+2)& (0+127)
  3161  004E  01DF               	clrf	(__pbssBANK0+3)& (0+127)
  3162  004F  01E0               	clrf	(__pbssBANK0+4)& (0+127)
  3163  0050  01E1               	clrf	(__pbssBANK0+5)& (0+127)
  3164  0051  01E2               	clrf	(__pbssBANK0+6)& (0+127)
  3165  0052  01E3               	clrf	(__pbssBANK0+7)& (0+127)
  3166                           
  3167                           ; Clear objects allocated to BANK1
  3168  0053  30C0               	movlw	low __pbssBANK1
  3169  0054  0084               	movwf	4
  3170  0055  3000               	movlw	high __pbssBANK1
  3171  0056  0085               	movwf	5
  3172  0057  300E               	movlw	14
  3173  0058  00FE               	movwf	btemp
  3174  0059  3000               	movlw	0
  3175  005A  00FF               	movwf	btemp+1
  3176  005B  3190  2018         	fcall	clear_ram0
  3177  005D                     end_of_initialization:	
  3178                           ;End of C runtime variable initialization code
  3179                           
  3180  005D                     __end_of__initialization:
  3181  005D  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  3182  005E  0020               	movlb	0
  3183  005F  3183  2B8A         	ljmp	_main	;jump to C main() function
  3184                           
  3185                           	psect	bssCOMMON
  3186  007A                     __pbssCOMMON:
  3187  007A                     MTOUCH_Random@seed:
  3188  007A                     	ds	1
  3189  007B                     _mtouch_time_toScan:
  3190  007B                     	ds	1
  3191                           
  3192                           	psect	bssBANK0
  3193  005C                     __pbssBANK0:
  3194  005C                     _right_signal:
  3195  005C                     	ds	2
  3196  005E                     _left_signal:
  3197  005E                     	ds	2
  3198  0060                     _middle_node:
  3199  0060                     	ds	1
  3200  0061                     _packet_counter:
  3201  0061                     	ds	1
  3202  0062                     _sensor_globalFlags:
  3203  0062                     	ds	1
  3204  0063                     _resol_bits:
  3205  0063                     	ds	1
  3206                           
  3207                           	psect	bssBANK1
  3208  00C0                     __pbssBANK1:
  3209  00C0                     _middle_signal:
  3210  00C0                     	ds	2
  3211  00C2                     _resol_value:
  3212  00C2                     	ds	2
  3213  00C4                     _packet_sample:
  3214  00C4                     	ds	2
  3215  00C6                     _eusartRxLastError:
  3216  00C6                     	ds	1
  3217  00C7                     _wheel_sensor_middle_channel_zero:
  3218  00C7                     	ds	1
  3219  00C8                     _sliderGroupStatus:
  3220  00C8                     	ds	1
  3221  00C9                     _button_reburst_request:
  3222  00C9                     	ds	1
  3223  00CA                     _lowpowerActivated:
  3224  00CA                     	ds	1
  3225  00CB                     _sample_delay:
  3226  00CB                     	ds	1
  3227  00CC                     _currentScannSensor:
  3228  00CC                     	ds	1
  3229  00CD                     _mtouch_request_init:
  3230  00CD                     	ds	1
  3231                           
  3232                           	psect	dataBANK1
  3233  00A0                     __pdataBANK1:
  3234  00A0                     _Button_StateMachine:
  3235  00A0                     	ds	14
  3236  00AE                     _callback_released:
  3237  00AE                     	ds	2
  3238  00B0                     _callback_pressed@mtouch_slider$F1195:
  3239  00B0                     	ds	2
  3240  00B2                     _callback_position_changed:
  3241  00B2                     	ds	2
  3242  00B4                     _callback_notPressed:
  3243  00B4                     	ds	2
  3244  00B6                     _callback_pressed:
  3245  00B6                     	ds	2
  3246  00B8                     _Sensor_scanB:
  3247  00B8                     	ds	2
  3248  00BA                     _Sensor_scanA:
  3249  00BA                     	ds	2
  3250  00BC                     _callback_sampled:
  3251  00BC                     	ds	2
  3252  00BE                     _mTouchScanReload:
  3253  00BE                     	ds	2
  3254                           
  3255                           	psect	dataBANK2
  3256  0120                     __pdataBANK2:
  3257  0120                     _mtouch_slider:
  3258  0120                     	ds	34
  3259                           
  3260                           	psect	inittext
  3261  1024                     init_ram:
  3262  1024  00FE               	movwf	126
  3263  1025                     initloop:
  3264  1025  0012               	moviw fsr0++
  3265  1026  001E               	movwi fsr1++
  3266  1027  3001               	movlw	1
  3267  1028  02FE               	subwf	126,f
  3268  1029  3000               	movlw	0
  3269  102A  3BFF               	subwfb	127,f
  3270  102B  087F               	movf	127,w
  3271  102C  047E               	iorwf	126,w
  3272  102D  1903               	btfsc	3,2
  3273  102E  3400               	retlw	0
  3274  102F  2825               	goto	initloop
  3275                           
  3276                           	psect	clrtext
  3277  1018                     clear_ram0:	
  3278                           ;	Called with FSR0 containing the base address, and
  3279                           ;	btemp/btemp+1 has the size to clear
  3280                           
  3281  1018  0064               	clrwdt	;clear the watchdog before getting into this loop
  3282  1019                     clrloop0:
  3283  1019  0180               	clrf	0	;clear RAM location pointed to by FSR
  3284  101A  3101               	addfsr 0,1
  3285  101B  3001               	movlw	1
  3286  101C  02FE               	subwf	126,f
  3287  101D  3000               	movlw	0
  3288  101E  3BFF               	subwfb	127,f
  3289  101F  087F               	movf	127,w
  3290  1020  047E               	iorwf	126,w
  3291  1021  1903               	btfsc	3,2
  3292  1022  3400               	retlw	0	;all done for this memory range, return
  3293  1023  2819               	goto	clrloop0	;have we reached the end yet?
  3294                           
  3295                           	psect	cstackBANK1
  3296  00CE                     __pcstackBANK1:
  3297  00CE                     main@sliderPostion:
  3298                           
  3299                           ; 4 bytes @ 0x0
  3300  00CE                     	ds	4
  3301  00D2                     main@f_slider:
  3302                           
  3303                           ; 8 bytes @ 0x4
  3304  00D2                     	ds	8
  3305  00DA                     main@i:
  3306                           
  3307                           ; 2 bytes @ 0xC
  3308  00DA                     	ds	2
  3309                           
  3310                           	psect	cstackCOMMON
  3311  0070                     __pcstackCOMMON:
  3312  0070                     ?_TMR1_WriteTimer:
  3313  0070                     ?_MTOUCH_Sensor_InitializeAll:	
  3314                           ; 1 bytes @ 0x0
  3315                           
  3316  0070                     ?_MTOUCH_Button_InitializeAll:	
  3317                           ; 1 bytes @ 0x0
  3318                           
  3319  0070                     ?_MTOUCH_Slider_InitializeAll:	
  3320                           ; 1 bytes @ 0x0
  3321                           
  3322  0070                     ?_MTOUCH_Sensor_Sampled_ResetAll:	
  3323                           ; 1 bytes @ 0x0
  3324                           
  3325  0070                     ?_MTOUCH_Sensor_Scan_Initialize:	
  3326                           ; 1 bytes @ 0x0
  3327                           
  3328  0070                     ?_MTOUCH_Sensor_SampleAll:	
  3329                           ; 1 bytes @ 0x0
  3330                           
  3331  0070                     ?_MTOUCH_Button_ServiceAll:	
  3332                           ; 1 bytes @ 0x0
  3333                           
  3334  0070                     ?_MTOUCH_Slider_ServiceAll:	
  3335                           ; 1 bytes @ 0x0
  3336                           
  3337  0070                     ?_MTOUCH_needReburst:	
  3338                           ; 1 bytes @ 0x0
  3339                           
  3340  0070                     ?_MTOUCH_Tick:	
  3341                           ; 1 bytes @ 0x0
  3342                           
  3343  0070                     ?_MTOUCH_Button_Tick:	
  3344                           ; 1 bytes @ 0x0
  3345                           
  3346  0070                     ?_MTOUCH_Slider_Reburst_Service:	
  3347                           ; 1 bytes @ 0x0
  3348                           
  3349  0070                     ?_MTOUCH_Button_Reburst_Service:	
  3350                           ; 1 bytes @ 0x0
  3351                           
  3352  0070                     ?_MTOUCH_Button_isPressed:	
  3353                           ; 1 bytes @ 0x0
  3354                           
  3355  0070                     ?_MTOUCH_Slider_isPositionChanged:	
  3356                           ; 1 bytes @ 0x0
  3357                           
  3358  0070                     ?_MTOUCH_Sensor_Enable:	
  3359                           ; 1 bytes @ 0x0
  3360                           
  3361  0070                     ?_Sensor_Service:	
  3362                           ; 1 bytes @ 0x0
  3363                           
  3364  0070                     ?_MTOUCH_Random:	
  3365                           ; 1 bytes @ 0x0
  3366                           
  3367  0070                     ?_Sensor_Acq_ExecuteScan:	
  3368                           ; 1 bytes @ 0x0
  3369                           
  3370  0070                     ?_MTOUCH_Delay:	
  3371                           ; 1 bytes @ 0x0
  3372                           
  3373  0070                     ?_Button_Reburst_Clear:	
  3374                           ; 1 bytes @ 0x0
  3375                           
  3376  0070                     ?_Button_Service:	
  3377                           ; 1 bytes @ 0x0
  3378                           
  3379  0070                     ?_PIN_MANAGER_Initialize:	
  3380                           ; 1 bytes @ 0x0
  3381                           
  3382  0070                     ?_OSCILLATOR_Initialize:	
  3383                           ; 1 bytes @ 0x0
  3384                           
  3385  0070                     ?_WDT_Initialize:	
  3386                           ; 1 bytes @ 0x0
  3387                           
  3388  0070                     ?_TMR1_Initialize:	
  3389                           ; 1 bytes @ 0x0
  3390                           
  3391  0070                     ?_EUSART_Initialize:	
  3392                           ; 1 bytes @ 0x0
  3393                           
  3394  0070                     ?_TMR1_DefaultInterruptHandler:	
  3395                           ; 1 bytes @ 0x0
  3396                           
  3397  0070                     ??_TMR1_DefaultInterruptHandler:	
  3398                           ; 1 bytes @ 0x0
  3399                           
  3400  0070                     ?_MTOUCH_ScanScheduler:	
  3401                           ; 1 bytes @ 0x0
  3402                           
  3403  0070                     ?_MTOUCH_Initialize:	
  3404                           ; 1 bytes @ 0x0
  3405                           
  3406  0070                     ?_MTOUCH_Service_Mainloop:	
  3407                           ; 1 bytes @ 0x0
  3408                           
  3409  0070                     ?_MTOUCH_CVD_ScanA_0:	
  3410                           ; 1 bytes @ 0x0
  3411                           
  3412  0070                     ?_MTOUCH_CVD_ScanB_0:	
  3413                           ; 1 bytes @ 0x0
  3414                           
  3415  0070                     ?_MTOUCH_CVD_ScanA_1:	
  3416                           ; 1 bytes @ 0x0
  3417                           
  3418  0070                     ?_MTOUCH_CVD_ScanB_1:	
  3419                           ; 1 bytes @ 0x0
  3420                           
  3421  0070                     ?_MTOUCH_CVD_ScanA_2:	
  3422                           ; 1 bytes @ 0x0
  3423                           
  3424  0070                     ?_MTOUCH_CVD_ScanB_2:	
  3425                           ; 1 bytes @ 0x0
  3426                           
  3427  0070                     ?_MTOUCH_CVD_ScanA_3:	
  3428                           ; 1 bytes @ 0x0
  3429                           
  3430  0070                     ?_MTOUCH_CVD_ScanB_3:	
  3431                           ; 1 bytes @ 0x0
  3432                           
  3433  0070                     ?_MTOUCH_CVD_ScanA_4:	
  3434                           ; 1 bytes @ 0x0
  3435                           
  3436  0070                     ?_MTOUCH_CVD_ScanB_4:	
  3437                           ; 1 bytes @ 0x0
  3438                           
  3439  0070                     ?_MTOUCH_CVD_ScanA_5:	
  3440                           ; 1 bytes @ 0x0
  3441                           
  3442  0070                     ?_MTOUCH_CVD_ScanB_5:	
  3443                           ; 1 bytes @ 0x0
  3444                           
  3445  0070                     ?_MTOUCH_CVD_ScanA_6:	
  3446                           ; 1 bytes @ 0x0
  3447                           
  3448  0070                     ?_MTOUCH_CVD_ScanB_6:	
  3449                           ; 1 bytes @ 0x0
  3450                           
  3451  0070                     ?_MTOUCH_CVD_ScanA_7:	
  3452                           ; 1 bytes @ 0x0
  3453                           
  3454  0070                     ?_MTOUCH_CVD_ScanB_7:	
  3455                           ; 1 bytes @ 0x0
  3456                           
  3457  0070                     ?_MTOUCH_CVD_ScanA_8:	
  3458                           ; 1 bytes @ 0x0
  3459                           
  3460  0070                     ?_MTOUCH_CVD_ScanB_8:	
  3461                           ; 1 bytes @ 0x0
  3462                           
  3463  0070                     ?_MTOUCH_CVD_ScanA_9:	
  3464                           ; 1 bytes @ 0x0
  3465                           
  3466  0070                     ?_MTOUCH_CVD_ScanB_9:	
  3467                           ; 1 bytes @ 0x0
  3468                           
  3469  0070                     ?_MTOUCH_Sensor_Initialize:	
  3470                           ; 1 bytes @ 0x0
  3471                           
  3472  0070                     ?_MTOUCH_Sensor_Disable:	
  3473                           ; 1 bytes @ 0x0
  3474                           
  3475  0070                     ?_MTOUCH_Sensor_isEnabled:	
  3476                           ; 1 bytes @ 0x0
  3477                           
  3478  0070                     ?_MTOUCH_Sensor_isCalibrated:	
  3479                           ; 1 bytes @ 0x0
  3480                           
  3481  0070                     ?_MTOUCH_Sensor_Calibrate:	
  3482                           ; 1 bytes @ 0x0
  3483                           
  3484  0070                     ?_MTOUCH_Sensor_wasSampled:	
  3485                           ; 1 bytes @ 0x0
  3486                           
  3487  0070                     ?_MTOUCH_Button_Initialize:	
  3488                           ; 1 bytes @ 0x0
  3489                           
  3490  0070                     ?_MTOUCH_Button_Deviation_Get:	
  3491                           ; 1 bytes @ 0x0
  3492                           
  3493  0070                     ?_MTOUCH_Button_Reburst_Request:	
  3494                           ; 1 bytes @ 0x0
  3495                           
  3496  0070                     ?_Slider_Service:	
  3497                           ; 1 bytes @ 0x0
  3498                           
  3499  0070                     ?_Slider_Initialize:	
  3500                           ; 1 bytes @ 0x0
  3501                           
  3502  0070                     ?_MTOUCH_Slider_isPressed:	
  3503                           ; 1 bytes @ 0x0
  3504                           
  3505  0070                     ?_MTOUCH_Slider_isReburstRequest:	
  3506                           ; 1 bytes @ 0x0
  3507                           
  3508  0070                     ?_SYSTEM_Initialize:	
  3509                           ; 1 bytes @ 0x0
  3510                           
  3511  0070                     ?_EUSART_Write:	
  3512                           ; 1 bytes @ 0x0
  3513                           
  3514  0070                     ?_TMR1_ISR:	
  3515                           ; 1 bytes @ 0x0
  3516                           
  3517  0070                     ?_INTERRUPT_InterruptManager:	
  3518                           ; 1 bytes @ 0x0
  3519                           
  3520  0070                     ?_main:	
  3521                           ; 1 bytes @ 0x0
  3522                           
  3523  0070                     MTOUCH_Sensor_isCalibrated@sensor:	
  3524                           ; 1 bytes @ 0x0
  3525                           
  3526  0070                     MTOUCH_Sensor_Calibrate@sensor:	
  3527                           ; 1 bytes @ 0x0
  3528                           
  3529  0070                     TMR1_WriteTimer@timerVal:	
  3530                           ; 1 bytes @ 0x0
  3531                           
  3532                           
  3533                           ; 2 bytes @ 0x0
  3534  0070                     	ds	2
  3535  0072                     ??_TMR1_WriteTimer:
  3536  0072                     ??_MTOUCH_Sensor_Scan_Initialize:	
  3537                           ; 1 bytes @ 0x2
  3538                           
  3539  0072                     ?_TMR1_SetInterruptHandler:	
  3540                           ; 1 bytes @ 0x2
  3541                           
  3542  0072                     ??_MTOUCH_Button_Reburst_Service:	
  3543                           ; 1 bytes @ 0x2
  3544                           
  3545  0072                     ??_MTOUCH_Slider_isPositionChanged:	
  3546                           ; 1 bytes @ 0x2
  3547                           
  3548  0072                     ?_Sensor_DefaultCallback:	
  3549                           ; 1 bytes @ 0x2
  3550                           
  3551  0072                     ?_Sensor_isEnabled:	
  3552                           ; 1 bytes @ 0x2
  3553                           
  3554  0072                     ?_Sensor_RawSample_Update:	
  3555                           ; 1 bytes @ 0x2
  3556                           
  3557  0072                     ?_Sensor_setSampled:	
  3558                           ; 1 bytes @ 0x2
  3559                           
  3560  0072                     ?_Sensor_setActive:	
  3561                           ; 1 bytes @ 0x2
  3562                           
  3563  0072                     ?_Sensor_setInactive:	
  3564                           ; 1 bytes @ 0x2
  3565                           
  3566  0072                     ?_Sensor_setScanFunction:	
  3567                           ; 1 bytes @ 0x2
  3568                           
  3569  0072                     ??_MTOUCH_Random:	
  3570                           ; 1 bytes @ 0x2
  3571                           
  3572  0072                     ??_MTOUCH_Delay:	
  3573                           ; 1 bytes @ 0x2
  3574                           
  3575  0072                     ?_Button_DefaultCallback:	
  3576                           ; 1 bytes @ 0x2
  3577                           
  3578  0072                     ??_Button_Reburst_Clear:	
  3579                           ; 1 bytes @ 0x2
  3580                           
  3581  0072                     ?_Button_Deviation_Update:	
  3582                           ; 1 bytes @ 0x2
  3583                           
  3584  0072                     ?_Button_Baseline_Update:	
  3585                           ; 1 bytes @ 0x2
  3586                           
  3587  0072                     ?_Slider_DefaultCallback:	
  3588                           ; 1 bytes @ 0x2
  3589                           
  3590  0072                     ??_PIN_MANAGER_Initialize:	
  3591                           ; 1 bytes @ 0x2
  3592                           
  3593  0072                     ??_OSCILLATOR_Initialize:	
  3594                           ; 1 bytes @ 0x2
  3595                           
  3596  0072                     ??_WDT_Initialize:	
  3597                           ; 1 bytes @ 0x2
  3598                           
  3599  0072                     ?_EUSART_SetFramingErrorHandler:	
  3600                           ; 1 bytes @ 0x2
  3601                           
  3602  0072                     ?_EUSART_SetOverrunErrorHandler:	
  3603                           ; 1 bytes @ 0x2
  3604                           
  3605  0072                     ?_EUSART_SetErrorHandler:	
  3606                           ; 1 bytes @ 0x2
  3607                           
  3608  0072                     ??_MTOUCH_ScanScheduler:	
  3609                           ; 1 bytes @ 0x2
  3610                           
  3611  0072                     ??_MTOUCH_CVD_ScanA_0:	
  3612                           ; 1 bytes @ 0x2
  3613                           
  3614  0072                     ??_MTOUCH_CVD_ScanB_0:	
  3615                           ; 1 bytes @ 0x2
  3616                           
  3617  0072                     ??_MTOUCH_CVD_ScanA_1:	
  3618                           ; 1 bytes @ 0x2
  3619                           
  3620  0072                     ??_MTOUCH_CVD_ScanB_1:	
  3621                           ; 1 bytes @ 0x2
  3622                           
  3623  0072                     ??_MTOUCH_CVD_ScanA_2:	
  3624                           ; 1 bytes @ 0x2
  3625                           
  3626  0072                     ??_MTOUCH_CVD_ScanB_2:	
  3627                           ; 1 bytes @ 0x2
  3628                           
  3629  0072                     ??_MTOUCH_CVD_ScanA_3:	
  3630                           ; 1 bytes @ 0x2
  3631                           
  3632  0072                     ??_MTOUCH_CVD_ScanB_3:	
  3633                           ; 1 bytes @ 0x2
  3634                           
  3635  0072                     ??_MTOUCH_CVD_ScanA_4:	
  3636                           ; 1 bytes @ 0x2
  3637                           
  3638  0072                     ??_MTOUCH_CVD_ScanB_4:	
  3639                           ; 1 bytes @ 0x2
  3640                           
  3641  0072                     ??_MTOUCH_CVD_ScanA_5:	
  3642                           ; 1 bytes @ 0x2
  3643                           
  3644  0072                     ??_MTOUCH_CVD_ScanB_5:	
  3645                           ; 1 bytes @ 0x2
  3646                           
  3647  0072                     ??_MTOUCH_CVD_ScanA_6:	
  3648                           ; 1 bytes @ 0x2
  3649                           
  3650  0072                     ??_MTOUCH_CVD_ScanB_6:	
  3651                           ; 1 bytes @ 0x2
  3652                           
  3653  0072                     ??_MTOUCH_CVD_ScanA_7:	
  3654                           ; 1 bytes @ 0x2
  3655                           
  3656  0072                     ??_MTOUCH_CVD_ScanB_7:	
  3657                           ; 1 bytes @ 0x2
  3658                           
  3659  0072                     ??_MTOUCH_CVD_ScanA_8:	
  3660                           ; 1 bytes @ 0x2
  3661                           
  3662  0072                     ??_MTOUCH_CVD_ScanB_8:	
  3663                           ; 1 bytes @ 0x2
  3664                           
  3665  0072                     ??_MTOUCH_CVD_ScanA_9:	
  3666                           ; 1 bytes @ 0x2
  3667                           
  3668  0072                     ??_MTOUCH_CVD_ScanB_9:	
  3669                           ; 1 bytes @ 0x2
  3670                           
  3671  0072                     ??_MTOUCH_Sensor_isCalibrated:	
  3672                           ; 1 bytes @ 0x2
  3673                           
  3674  0072                     ??_MTOUCH_Sensor_Calibrate:	
  3675                           ; 1 bytes @ 0x2
  3676                           
  3677  0072                     ??_Slider_Initialize:	
  3678                           ; 1 bytes @ 0x2
  3679                           
  3680  0072                     ??_MTOUCH_Slider_isPressed:	
  3681                           ; 1 bytes @ 0x2
  3682                           
  3683  0072                     ??_MTOUCH_Slider_isReburstRequest:	
  3684                           ; 1 bytes @ 0x2
  3685                           
  3686  0072                     ?_DELAY_milliseconds:	
  3687                           ; 1 bytes @ 0x2
  3688                           
  3689  0072                     ??_EUSART_Write:	
  3690                           ; 1 bytes @ 0x2
  3691                           
  3692  0072                     ??_TMR1_ISR:	
  3693                           ; 1 bytes @ 0x2
  3694                           
  3695  0072                     ??_INTERRUPT_InterruptManager:	
  3696                           ; 1 bytes @ 0x2
  3697                           
  3698  0072                     ?_MTOUCH_Slider_Position_Get:	
  3699                           ; 1 bytes @ 0x2
  3700                           
  3701  0072                     ?_abs:	
  3702                           ; 2 bytes @ 0x2
  3703                           
  3704  0072                     ?_memcpy:	
  3705                           ; 2 bytes @ 0x2
  3706                           
  3707  0072                     ?_Button_Unscaled_Deviation_Get:	
  3708                           ; 2 bytes @ 0x2
  3709                           
  3710  0072                     ?_divide:	
  3711                           ; 2 bytes @ 0x2
  3712                           
  3713  0072                     ?_get_difference:	
  3714                           ; 2 bytes @ 0x2
  3715                           
  3716  0072                     ?___wmul:	
  3717                           ; 2 bytes @ 0x2
  3718                           
  3719  0072                     ?___fltol:	
  3720                           ; 2 bytes @ 0x2
  3721                           
  3722  0072                     ?___xxtofl:	
  3723                           ; 4 bytes @ 0x2
  3724                           
  3725  0072                     Sensor_DefaultCallback@sensor:	
  3726                           ; 4 bytes @ 0x2
  3727                           
  3728  0072                     Button_DefaultCallback@button:	
  3729                           ; 1 bytes @ 0x2
  3730                           
  3731  0072                     MTOUCH_Slider_isReburstRequest@sliderName:	
  3732                           ; 1 bytes @ 0x2
  3733                           
  3734  0072                     MTOUCH_Slider_isPositionChanged@sliderName:	
  3735                           ; 1 bytes @ 0x2
  3736                           
  3737  0072                     Slider_DefaultCallback@slider:	
  3738                           ; 1 bytes @ 0x2
  3739                           
  3740  0072                     EUSART_Write@txData:	
  3741                           ; 1 bytes @ 0x2
  3742                           
  3743  0072                     Sensor_RawSample_Update@sensor:	
  3744                           ; 1 bytes @ 0x2
  3745                           
  3746  0072                     Sensor_setScanFunction@sensor:	
  3747                           ; 2 bytes @ 0x2
  3748                           
  3749  0072                     Sensor_isEnabled@sensor:	
  3750                           ; 2 bytes @ 0x2
  3751                           
  3752  0072                     Sensor_setActive@sensor:	
  3753                           ; 2 bytes @ 0x2
  3754                           
  3755  0072                     Sensor_setInactive@sensor:	
  3756                           ; 2 bytes @ 0x2
  3757                           
  3758  0072                     Sensor_setSampled@sensor:	
  3759                           ; 2 bytes @ 0x2
  3760                           
  3761  0072                     Button_Deviation_Update@button:	
  3762                           ; 2 bytes @ 0x2
  3763                           
  3764  0072                     Button_Unscaled_Deviation_Get@button:	
  3765                           ; 2 bytes @ 0x2
  3766                           
  3767  0072                     Button_Baseline_Update@button:	
  3768                           ; 2 bytes @ 0x2
  3769                           
  3770  0072                     divide@numerator:	
  3771                           ; 2 bytes @ 0x2
  3772                           
  3773  0072                     get_difference@previous_position:	
  3774                           ; 2 bytes @ 0x2
  3775                           
  3776  0072                     DELAY_milliseconds@milliseconds:	
  3777                           ; 2 bytes @ 0x2
  3778                           
  3779  0072                     EUSART_SetFramingErrorHandler@interruptHandler:	
  3780                           ; 2 bytes @ 0x2
  3781                           
  3782  0072                     EUSART_SetOverrunErrorHandler@interruptHandler:	
  3783                           ; 2 bytes @ 0x2
  3784                           
  3785  0072                     EUSART_SetErrorHandler@interruptHandler:	
  3786                           ; 2 bytes @ 0x2
  3787                           
  3788  0072                     TMR1_SetInterruptHandler@InterruptHandler:	
  3789                           ; 2 bytes @ 0x2
  3790                           
  3791  0072                     ___wmul@multiplier:	
  3792                           ; 2 bytes @ 0x2
  3793                           
  3794  0072                     abs@a:	
  3795                           ; 2 bytes @ 0x2
  3796                           
  3797  0072                     memcpy@d1:	
  3798                           ; 2 bytes @ 0x2
  3799                           
  3800  0072                     ___fltol@f1:	
  3801                           ; 2 bytes @ 0x2
  3802                           
  3803  0072                     ___xxtofl@val:	
  3804                           ; 4 bytes @ 0x2
  3805                           
  3806                           
  3807                           ; 4 bytes @ 0x2
  3808  0072                     	ds	1
  3809  0073                     ??_Sensor_DefaultCallback:
  3810  0073                     ??_Button_DefaultCallback:	
  3811                           ; 1 bytes @ 0x3
  3812                           
  3813  0073                     ??_Slider_DefaultCallback:	
  3814                           ; 1 bytes @ 0x3
  3815                           
  3816  0073                     MTOUCH_Delay@i:	
  3817                           ; 1 bytes @ 0x3
  3818                           
  3819  0073                     Slider_Initialize@sliderName:	
  3820                           ; 1 bytes @ 0x3
  3821                           
  3822  0073                     MTOUCH_Slider_isPressed@sliderName:	
  3823                           ; 1 bytes @ 0x3
  3824                           
  3825                           
  3826                           ; 1 bytes @ 0x3
  3827  0073                     	ds	1
  3828  0074                     ??_TMR1_SetInterruptHandler:
  3829  0074                     ??_MTOUCH_Slider_Position_Get:	
  3830                           ; 1 bytes @ 0x4
  3831                           
  3832  0074                     ??_Sensor_isEnabled:	
  3833                           ; 1 bytes @ 0x4
  3834                           
  3835  0074                     ??_Sensor_RawSample_Update:	
  3836                           ; 1 bytes @ 0x4
  3837                           
  3838  0074                     ??_Sensor_setSampled:	
  3839                           ; 1 bytes @ 0x4
  3840                           
  3841  0074                     ??_abs:	
  3842                           ; 1 bytes @ 0x4
  3843                           
  3844  0074                     ??_Sensor_setActive:	
  3845                           ; 1 bytes @ 0x4
  3846                           
  3847  0074                     ??_Sensor_setInactive:	
  3848                           ; 1 bytes @ 0x4
  3849                           
  3850  0074                     ??_Sensor_setScanFunction:	
  3851                           ; 1 bytes @ 0x4
  3852                           
  3853  0074                     ??_Button_Baseline_Update:	
  3854                           ; 1 bytes @ 0x4
  3855                           
  3856  0074                     ??_TMR1_Initialize:	
  3857                           ; 1 bytes @ 0x4
  3858                           
  3859  0074                     ??_EUSART_Initialize:	
  3860                           ; 1 bytes @ 0x4
  3861                           
  3862  0074                     ??_EUSART_SetFramingErrorHandler:	
  3863                           ; 1 bytes @ 0x4
  3864                           
  3865  0074                     ??_EUSART_SetOverrunErrorHandler:	
  3866                           ; 1 bytes @ 0x4
  3867                           
  3868  0074                     ??_EUSART_SetErrorHandler:	
  3869                           ; 1 bytes @ 0x4
  3870                           
  3871  0074                     ??_Button_Unscaled_Deviation_Get:	
  3872                           ; 1 bytes @ 0x4
  3873                           
  3874  0074                     ??_DELAY_milliseconds:	
  3875                           ; 1 bytes @ 0x4
  3876                           
  3877  0074                     Slider_Initialize@slider:	
  3878                           ; 1 bytes @ 0x4
  3879                           
  3880  0074                     MTOUCH_Slider_Position_Get@sliderName:	
  3881                           ; 1 bytes @ 0x4
  3882                           
  3883  0074                     divide@denominator:	
  3884                           ; 1 bytes @ 0x4
  3885                           
  3886  0074                     get_difference@current_position:	
  3887                           ; 2 bytes @ 0x4
  3888                           
  3889  0074                     ___wmul@multiplicand:	
  3890                           ; 2 bytes @ 0x4
  3891                           
  3892  0074                     memcpy@s1:	
  3893                           ; 2 bytes @ 0x4
  3894                           
  3895  0074                     Button_Deviation_Update@deviation:	
  3896                           ; 2 bytes @ 0x4
  3897                           
  3898                           
  3899                           ; 4 bytes @ 0x4
  3900  0074                     	ds	1
  3901  0075                     ??_MTOUCH_Slider_InitializeAll:
  3902                           
  3903                           ; 1 bytes @ 0x5
  3904  0075                     	ds	1
  3905  0076                     ??_positional_hysteresis:
  3906  0076                     ??_moving_average_filter:	
  3907                           ; 1 bytes @ 0x6
  3908                           
  3909  0076                     ??___wmul:	
  3910                           ; 1 bytes @ 0x6
  3911                           
  3912  0076                     ??___xxtofl:	
  3913                           ; 1 bytes @ 0x6
  3914                           
  3915  0076                     divide@exponent:	
  3916                           ; 1 bytes @ 0x6
  3917                           
  3918  0076                     MTOUCH_Slider_InitializeAll@slider:	
  3919                           ; 1 bytes @ 0x6
  3920                           
  3921  0076                     ___fltol@sign1:	
  3922                           ; 1 bytes @ 0x6
  3923                           
  3924  0076                     ___wmul@product:	
  3925                           ; 1 bytes @ 0x6
  3926                           
  3927  0076                     memcpy@n:	
  3928                           ; 2 bytes @ 0x6
  3929                           
  3930                           
  3931                           ; 2 bytes @ 0x6
  3932  0076                     	ds	1
  3933  0077                     ??_divide:
  3934  0077                     ___fltol@exp1:	
  3935                           ; 1 bytes @ 0x7
  3936                           
  3937                           
  3938                           ; 1 bytes @ 0x7
  3939  0077                     	ds	1
  3940  0078                     ?_Sensor_Sampled_Reset:
  3941  0078                     ??_memcpy:	
  3942                           ; 1 bytes @ 0x8
  3943                           
  3944  0078                     ?_Button_Reburst_Request:	
  3945                           ; 1 bytes @ 0x8
  3946                           
  3947  0078                     ?_MTOUCH_Sensor_RawSample_Get:	
  3948                           ; 1 bytes @ 0x8
  3949                           
  3950  0078                     MTOUCH_Sensor_Disable@sensor:	
  3951                           ; 2 bytes @ 0x8
  3952                           
  3953  0078                     MTOUCH_Sensor_Enable@sensor:	
  3954                           ; 1 bytes @ 0x8
  3955                           
  3956  0078                     MTOUCH_Sensor_isEnabled@sensor:	
  3957                           ; 1 bytes @ 0x8
  3958                           
  3959  0078                     MTOUCH_Sensor_wasSampled@sensor:	
  3960                           ; 1 bytes @ 0x8
  3961                           
  3962  0078                     _MTOUCH_Button_isPressed$955:	
  3963                           ; 1 bytes @ 0x8
  3964                           
  3965  0078                     MTOUCH_Button_Deviation_Get@name:	
  3966                           ; 1 bytes @ 0x8
  3967                           
  3968  0078                     Sensor_Acq_ExecuteScan@result:	
  3969                           ; 1 bytes @ 0x8
  3970                           
  3971  0078                     Sensor_Sampled_Reset@sensor:	
  3972                           ; 2 bytes @ 0x8
  3973                           
  3974  0078                     Button_Reburst_Request@button:	
  3975                           ; 2 bytes @ 0x8
  3976                           
  3977  0078                     divide@result:	
  3978                           ; 2 bytes @ 0x8
  3979                           
  3980                           
  3981                           ; 2 bytes @ 0x8
  3982  0078                     	ds	1
  3983  0079                     ??_MTOUCH_Button_InitializeAll:
  3984  0079                     ??_MTOUCH_Tick:	
  3985                           ; 1 bytes @ 0x9
  3986                           
  3987  0079                     ??_Slider_FindLeft:	
  3988                           ; 1 bytes @ 0x9
  3989                           
  3990  0079                     MTOUCH_Button_isPressed@name:	
  3991                           ; 1 bytes @ 0x9
  3992                           
  3993                           
  3994                           ; 1 bytes @ 0x9
  3995  0079                     	ds	1
  3996  007A                     ??_Sensor_Sampled_Reset:
  3997  007A                     ??_Button_State_Suspended:	
  3998                           ; 1 bytes @ 0xA
  3999                           
  4000  007A                     ??_Button_State_Disabled:	
  4001                           ; 1 bytes @ 0xA
  4002                           
  4003  007A                     ??_Button_Reading_Update:	
  4004                           ; 1 bytes @ 0xA
  4005                           
  4006  007A                     ??_Button_Reburst_Request:	
  4007                           ; 1 bytes @ 0xA
  4008                           
  4009  007A                     ??_MTOUCH_Initialize:	
  4010                           ; 1 bytes @ 0xA
  4011                           
  4012  007A                     ??_SYSTEM_Initialize:	
  4013                           ; 1 bytes @ 0xA
  4014                           
  4015                           
  4016                           	psect	cstackBANK0
  4017  0020                     __pcstackBANK0:	
  4018                           ; 1 bytes @ 0xA
  4019                           
  4020  0020                     ??_MTOUCH_Sensor_Sampled_ResetAll:
  4021  0020                     ??_MTOUCH_Button_isPressed:	
  4022                           ; 1 bytes @ 0x0
  4023                           
  4024  0020                     ??_MTOUCH_Sensor_Enable:	
  4025                           ; 1 bytes @ 0x0
  4026                           
  4027  0020                     ??_Sensor_Acq_ExecuteScan:	
  4028                           ; 1 bytes @ 0x0
  4029                           
  4030  0020                     ??_Button_Deviation_Update:	
  4031                           ; 1 bytes @ 0x0
  4032                           
  4033  0020                     ??_MTOUCH_Sensor_RawSample_Get:	
  4034                           ; 1 bytes @ 0x0
  4035                           
  4036  0020                     ??_MTOUCH_Sensor_Disable:	
  4037                           ; 1 bytes @ 0x0
  4038                           
  4039  0020                     ??_MTOUCH_Sensor_isEnabled:	
  4040                           ; 1 bytes @ 0x0
  4041                           
  4042  0020                     ??_MTOUCH_Sensor_wasSampled:	
  4043                           ; 1 bytes @ 0x0
  4044                           
  4045  0020                     ??_MTOUCH_Button_Initialize:	
  4046                           ; 1 bytes @ 0x0
  4047                           
  4048  0020                     ??_MTOUCH_Button_Deviation_Get:	
  4049                           ; 1 bytes @ 0x0
  4050                           
  4051  0020                     ??_MTOUCH_Button_Reburst_Request:	
  4052                           ; 1 bytes @ 0x0
  4053                           
  4054  0020                     ??_get_difference:	
  4055                           ; 1 bytes @ 0x0
  4056                           
  4057  0020                     ??___fltol:	
  4058                           ; 1 bytes @ 0x0
  4059                           
  4060  0020                     ?_interpolate:	
  4061                           ; 1 bytes @ 0x0
  4062                           
  4063  0020                     ___xxtofl@sign:	
  4064                           ; 2 bytes @ 0x0
  4065                           
  4066  0020                     memcpy@tmp:	
  4067                           ; 1 bytes @ 0x0
  4068                           
  4069  0020                     interpolate@delta1:	
  4070                           ; 1 bytes @ 0x0
  4071                           
  4072                           
  4073                           ; 2 bytes @ 0x0
  4074  0020                     	ds	1
  4075  0021                     ___xxtofl@exp:
  4076  0021                     memcpy@d:	
  4077                           ; 1 bytes @ 0x1
  4078                           
  4079                           
  4080                           ; 2 bytes @ 0x1
  4081  0021                     	ds	1
  4082  0022                     MTOUCH_Sensor_Sampled_ResetAll@sensor:
  4083  0022                     interpolate@delta2:	
  4084                           ; 2 bytes @ 0x2
  4085                           
  4086  0022                     ___xxtofl@arg:	
  4087                           ; 2 bytes @ 0x2
  4088                           
  4089                           
  4090                           ; 4 bytes @ 0x2
  4091  0022                     	ds	1
  4092  0023                     memcpy@s:
  4093                           
  4094                           ; 2 bytes @ 0x3
  4095  0023                     	ds	1
  4096  0024                     ?_Sensor_Acq_ExecutePacket:
  4097  0024                     ?_Button_Check_AKS_Block:	
  4098                           ; 1 bytes @ 0x4
  4099                           
  4100  0024                     ?_Button_Tick_helper:	
  4101                           ; 1 bytes @ 0x4
  4102                           
  4103  0024                     ??_MTOUCH_Sensor_Initialize:	
  4104                           ; 1 bytes @ 0x4
  4105                           
  4106  0024                     ?_Slider_FindMiddle:	
  4107                           ; 1 bytes @ 0x4
  4108                           
  4109  0024                     ?_Slider_FindLeft:	
  4110                           ; 2 bytes @ 0x4
  4111                           
  4112  0024                     ?_Slider_FindRight:	
  4113                           ; 2 bytes @ 0x4
  4114                           
  4115  0024                     MTOUCH_Sensor_RawSample_Get@name:	
  4116                           ; 2 bytes @ 0x4
  4117                           
  4118  0024                     MTOUCH_Button_Initialize@name:	
  4119                           ; 1 bytes @ 0x4
  4120                           
  4121  0024                     MTOUCH_Button_Reburst_Request@button:	
  4122                           ; 1 bytes @ 0x4
  4123                           
  4124  0024                     Sensor_Acq_ExecutePacket@sensor:	
  4125                           ; 1 bytes @ 0x4
  4126                           
  4127  0024                     Button_Tick_helper@button:	
  4128                           ; 2 bytes @ 0x4
  4129                           
  4130  0024                     Button_Check_AKS_Block@button:	
  4131                           ; 2 bytes @ 0x4
  4132                           
  4133  0024                     interpolate@delta3:	
  4134                           ; 2 bytes @ 0x4
  4135                           
  4136                           
  4137                           ; 2 bytes @ 0x4
  4138  0024                     	ds	1
  4139  0025                     ??_MTOUCH_Slider_Reburst_Service:
  4140  0025                     ?_Button_Baseline_Initialize:	
  4141                           ; 1 bytes @ 0x5
  4142                           
  4143  0025                     ?_Button_Reading_Update_Helper:	
  4144                           ; 1 bytes @ 0x5
  4145                           
  4146  0025                     get_difference@slider:	
  4147                           ; 1 bytes @ 0x5
  4148                           
  4149  0025                     MTOUCH_Button_Initialize@button:	
  4150                           ; 1 bytes @ 0x5
  4151                           
  4152  0025                     Button_Reading_Update_Helper@button:	
  4153                           ; 2 bytes @ 0x5
  4154                           
  4155  0025                     Button_Baseline_Initialize@button:	
  4156                           ; 2 bytes @ 0x5
  4157                           
  4158                           
  4159                           ; 2 bytes @ 0x5
  4160  0025                     	ds	1
  4161  0026                     ??_Sensor_Acq_ExecutePacket:
  4162  0026                     ??_Button_Check_AKS_Block:	
  4163                           ; 1 bytes @ 0x6
  4164                           
  4165  0026                     ??_Button_Tick_helper:	
  4166                           ; 1 bytes @ 0x6
  4167                           
  4168  0026                     ??_Slider_FindMiddle:	
  4169                           ; 1 bytes @ 0x6
  4170                           
  4171  0026                     ??_Slider_FindRight:	
  4172                           ; 1 bytes @ 0x6
  4173                           
  4174  0026                     interpolate@num_bits:	
  4175                           ; 1 bytes @ 0x6
  4176                           
  4177  0026                     Slider_FindLeft@slider:	
  4178                           ; 1 bytes @ 0x6
  4179                           
  4180  0026                     MTOUCH_Slider_Reburst_Service@sliderName:	
  4181                           ; 1 bytes @ 0x6
  4182                           
  4183  0026                     get_difference@rollover_threshold:	
  4184                           ; 1 bytes @ 0x6
  4185                           
  4186                           
  4187                           ; 2 bytes @ 0x6
  4188  0026                     	ds	1
  4189  0027                     ??_MTOUCH_needReburst:
  4190  0027                     ??_Button_Baseline_Initialize:	
  4191                           ; 1 bytes @ 0x7
  4192                           
  4193  0027                     ??_Button_Reading_Update_Helper:	
  4194                           ; 1 bytes @ 0x7
  4195                           
  4196  0027                     ??_interpolate:	
  4197                           ; 1 bytes @ 0x7
  4198                           
  4199  0027                     Sensor_Acq_ExecutePacket@ADCON0_temp:	
  4200                           ; 1 bytes @ 0x7
  4201                           
  4202  0027                     MTOUCH_Button_InitializeAll@button:	
  4203                           ; 1 bytes @ 0x7
  4204                           
  4205  0027                     Slider_FindLeft@ref_node:	
  4206                           ; 1 bytes @ 0x7
  4207                           
  4208                           
  4209                           ; 1 bytes @ 0x7
  4210  0027                     	ds	1
  4211  0028                     ??_MTOUCH_Button_Tick:
  4212  0028                     MTOUCH_needReburst@needReburst:	
  4213                           ; 1 bytes @ 0x8
  4214                           
  4215  0028                     MTOUCH_Sensor_Initialize@sensor:	
  4216                           ; 1 bytes @ 0x8
  4217                           
  4218  0028                     Sensor_Acq_ExecutePacket@ADCON1_temp:	
  4219                           ; 1 bytes @ 0x8
  4220                           
  4221  0028                     Button_Check_AKS_Block@surplus_deviation_this_button:	
  4222                           ; 1 bytes @ 0x8
  4223                           
  4224  0028                     get_difference@diff:	
  4225                           ; 2 bytes @ 0x8
  4226                           
  4227                           
  4228                           ; 2 bytes @ 0x8
  4229  0028                     	ds	1
  4230  0029                     ??_MTOUCH_Sensor_InitializeAll:
  4231  0029                     ?_Button_Reading_Update:	
  4232                           ; 1 bytes @ 0x9
  4233                           
  4234  0029                     Sensor_Acq_ExecutePacket@GIE_state:	
  4235                           ; 1 bytes @ 0x9
  4236                           
  4237  0029                     Button_Reading_Update@button:	
  4238                           ; 1 bytes @ 0x9
  4239                           
  4240                           
  4241                           ; 2 bytes @ 0x9
  4242  0029                     	ds	1
  4243  002A                     ?_positional_hysteresis:
  4244  002A                     ?_moving_average_filter:	
  4245                           ; 2 bytes @ 0xA
  4246                           
  4247  002A                     MTOUCH_Sensor_InitializeAll@sensor:	
  4248                           ; 2 bytes @ 0xA
  4249                           
  4250  002A                     Sensor_Acq_ExecutePacket@error:	
  4251                           ; 1 bytes @ 0xA
  4252                           
  4253  002A                     Button_Check_AKS_Block@currentAKSGroup:	
  4254                           ; 1 bytes @ 0xA
  4255                           
  4256  002A                     Slider_FindRight@ref_node:	
  4257                           ; 1 bytes @ 0xA
  4258                           
  4259  002A                     positional_hysteresis@current_position:	
  4260                           ; 1 bytes @ 0xA
  4261                           
  4262  002A                     moving_average_filter@current_position:	
  4263                           ; 2 bytes @ 0xA
  4264                           
  4265  002A                     Slider_FindMiddle@channelDelta:	
  4266                           ; 2 bytes @ 0xA
  4267                           
  4268                           
  4269                           ; 2 bytes @ 0xA
  4270  002A                     	ds	1
  4271  002B                     ?_Sensor_Acquisition:
  4272  002B                     Slider_FindRight@slider:	
  4273                           ; 1 bytes @ 0xB
  4274                           
  4275  002B                     Sensor_Acquisition@sensor:	
  4276                           ; 1 bytes @ 0xB
  4277                           
  4278  002B                     Button_Check_AKS_Block@surplus_deviation_check_button:	
  4279                           ; 2 bytes @ 0xB
  4280                           
  4281  002B                     interpolate@rtnval:	
  4282                           ; 2 bytes @ 0xB
  4283                           
  4284                           
  4285                           ; 2 bytes @ 0xB
  4286  002B                     	ds	1
  4287  002C                     positional_hysteresis@previous_position:
  4288  002C                     moving_average_filter@filtered_position:	
  4289                           ; 2 bytes @ 0xC
  4290                           
  4291  002C                     Slider_FindMiddle@maximumDelta:	
  4292                           ; 2 bytes @ 0xC
  4293                           
  4294  002C                     _MTOUCH_Button_Tick$2906:	
  4295                           ; 2 bytes @ 0xC
  4296                           
  4297                           
  4298                           ; 2 bytes @ 0xC
  4299  002C                     	ds	1
  4300  002D                     ??_Sensor_Acquisition:
  4301  002D                     ?_calculate_raw_position:	
  4302                           ; 1 bytes @ 0xD
  4303                           
  4304  002D                     Button_Check_AKS_Block@check_button:	
  4305                           ; 2 bytes @ 0xD
  4306                           
  4307                           
  4308                           ; 2 bytes @ 0xD
  4309  002D                     	ds	1
  4310  002E                     Sensor_Acquisition@retry:
  4311  002E                     MTOUCH_Button_Tick@i:	
  4312                           ; 1 bytes @ 0xE
  4313                           
  4314  002E                     moving_average_filter@slider:	
  4315                           ; 1 bytes @ 0xE
  4316                           
  4317  002E                     Slider_FindMiddle@i:	
  4318                           ; 1 bytes @ 0xE
  4319                           
  4320  002E                     positional_hysteresis@filtered_position:	
  4321                           ; 1 bytes @ 0xE
  4322                           
  4323                           
  4324                           ; 2 bytes @ 0xE
  4325  002E                     	ds	1
  4326  002F                     ??_Sensor_Service:
  4327  002F                     ?_Button_State_Initializing:	
  4328                           ; 1 bytes @ 0xF
  4329                           
  4330  002F                     ?_Button_State_NotPressed:	
  4331                           ; 1 bytes @ 0xF
  4332                           
  4333  002F                     ?_Button_State_PressDebounce:	
  4334                           ; 1 bytes @ 0xF
  4335                           
  4336  002F                     ?_Button_State_Pressed:	
  4337                           ; 1 bytes @ 0xF
  4338                           
  4339  002F                     ?_Button_State_ReleaseDebounce:	
  4340                           ; 1 bytes @ 0xF
  4341                           
  4342  002F                     ?_Button_State_Suspended:	
  4343                           ; 1 bytes @ 0xF
  4344                           
  4345  002F                     ?_Button_State_Disabled:	
  4346                           ; 1 bytes @ 0xF
  4347                           
  4348  002F                     ??_calculate_raw_position:	
  4349                           ; 1 bytes @ 0xF
  4350                           
  4351  002F                     Slider_FindMiddle@slider:	
  4352                           ; 1 bytes @ 0xF
  4353                           
  4354  002F                     Button_State_Initializing@button:	
  4355                           ; 1 bytes @ 0xF
  4356                           
  4357  002F                     Button_State_NotPressed@button:	
  4358                           ; 2 bytes @ 0xF
  4359                           
  4360  002F                     Button_State_Pressed@button:	
  4361                           ; 2 bytes @ 0xF
  4362                           
  4363  002F                     Button_State_PressDebounce@button:	
  4364                           ; 2 bytes @ 0xF
  4365                           
  4366  002F                     Button_State_ReleaseDebounce@button:	
  4367                           ; 2 bytes @ 0xF
  4368                           
  4369  002F                     Button_State_Suspended@button:	
  4370                           ; 2 bytes @ 0xF
  4371                           
  4372  002F                     Button_State_Disabled@button:	
  4373                           ; 2 bytes @ 0xF
  4374                           
  4375  002F                     moving_average_filter@previous_position:	
  4376                           ; 2 bytes @ 0xF
  4377                           
  4378                           
  4379                           ; 2 bytes @ 0xF
  4380  002F                     	ds	1
  4381  0030                     ?_calculate_contact_size:
  4382  0030                     positional_hysteresis@hyst_width:	
  4383                           ; 2 bytes @ 0x10
  4384                           
  4385                           
  4386                           ; 1 bytes @ 0x10
  4387  0030                     	ds	1
  4388  0031                     ??_Button_State_Initializing:
  4389  0031                     ??_Button_State_NotPressed:	
  4390                           ; 1 bytes @ 0x11
  4391                           
  4392  0031                     ??_Button_State_PressDebounce:	
  4393                           ; 1 bytes @ 0x11
  4394                           
  4395  0031                     ??_Button_State_Pressed:	
  4396                           ; 1 bytes @ 0x11
  4397                           
  4398  0031                     ??_Button_State_ReleaseDebounce:	
  4399                           ; 1 bytes @ 0x11
  4400                           
  4401  0031                     positional_hysteresis@polarity:	
  4402                           ; 1 bytes @ 0x11
  4403                           
  4404  0031                     moving_average_filter@dist_temp:	
  4405                           ; 1 bytes @ 0x11
  4406                           
  4407                           
  4408                           ; 2 bytes @ 0x11
  4409  0031                     	ds	1
  4410  0032                     ??_calculate_contact_size:
  4411  0032                     positional_hysteresis@distance:	
  4412                           ; 1 bytes @ 0x12
  4413                           
  4414                           
  4415                           ; 2 bytes @ 0x12
  4416  0032                     	ds	1
  4417  0033                     Sensor_Service@name:
  4418  0033                     moving_average_filter@distance:	
  4419                           ; 1 bytes @ 0x13
  4420                           
  4421                           
  4422                           ; 2 bytes @ 0x13
  4423  0033                     	ds	1
  4424  0034                     Sensor_Service@error:
  4425  0034                     positional_hysteresis@slider:	
  4426                           ; 1 bytes @ 0x14
  4427                           
  4428  0034                     calculate_raw_position@ref_node:	
  4429                           ; 1 bytes @ 0x14
  4430                           
  4431  0034                     calculate_contact_size@contact_size:	
  4432                           ; 1 bytes @ 0x14
  4433                           
  4434                           
  4435                           ; 2 bytes @ 0x14
  4436  0034                     	ds	1
  4437  0035                     ??_Button_Service:
  4438  0035                     Sensor_Service@sensor:	
  4439                           ; 1 bytes @ 0x15
  4440                           
  4441  0035                     calculate_raw_position@deadband_set:	
  4442                           ; 2 bytes @ 0x15
  4443                           
  4444                           
  4445                           ; 2 bytes @ 0x15
  4446  0035                     	ds	1
  4447  0036                     calculate_contact_size@slider:
  4448                           
  4449                           ; 1 bytes @ 0x16
  4450  0036                     	ds	1
  4451  0037                     ??_MTOUCH_Sensor_SampleAll:
  4452  0037                     calculate_raw_position@interpolation_scale:	
  4453                           ; 1 bytes @ 0x17
  4454                           
  4455                           
  4456                           ; 1 bytes @ 0x17
  4457  0037                     	ds	1
  4458  0038                     MTOUCH_Sensor_SampleAll@sensor:
  4459  0038                     calculate_raw_position@deadband:	
  4460                           ; 1 bytes @ 0x18
  4461                           
  4462                           
  4463                           ; 2 bytes @ 0x18
  4464  0038                     	ds	1
  4465  0039                     Button_Service@name:
  4466                           
  4467                           ; 1 bytes @ 0x19
  4468  0039                     	ds	1
  4469  003A                     calculate_raw_position@interpolation_bits:
  4470  003A                     Button_Service@button:	
  4471                           ; 1 bytes @ 0x1A
  4472                           
  4473                           
  4474                           ; 2 bytes @ 0x1A
  4475  003A                     	ds	1
  4476  003B                     calculate_raw_position@size:
  4477                           
  4478                           ; 1 bytes @ 0x1B
  4479  003B                     	ds	1
  4480  003C                     ??_MTOUCH_Button_ServiceAll:
  4481  003C                     calculate_raw_position@slider:	
  4482                           ; 1 bytes @ 0x1C
  4483                           
  4484                           
  4485                           ; 1 bytes @ 0x1C
  4486  003C                     	ds	1
  4487  003D                     MTOUCH_Button_ServiceAll@button:
  4488  003D                     calculate_raw_position@position:	
  4489                           ; 1 bytes @ 0x1D
  4490                           
  4491                           
  4492                           ; 2 bytes @ 0x1D
  4493  003D                     	ds	2
  4494  003F                     ?_calculate_position:
  4495                           
  4496                           ; 2 bytes @ 0x1F
  4497  003F                     	ds	2
  4498  0041                     ??_calculate_position:
  4499                           
  4500                           ; 1 bytes @ 0x21
  4501  0041                     	ds	1
  4502  0042                     calculate_position@position:
  4503                           
  4504                           ; 2 bytes @ 0x22
  4505  0042                     	ds	2
  4506  0044                     calculate_position@filtered_position:
  4507                           
  4508                           ; 2 bytes @ 0x24
  4509  0044                     	ds	2
  4510  0046                     calculate_position@raw_position:
  4511                           
  4512                           ; 2 bytes @ 0x26
  4513  0046                     	ds	2
  4514  0048                     calculate_position@slider:
  4515                           
  4516                           ; 1 bytes @ 0x28
  4517  0048                     	ds	1
  4518  0049                     ??_Slider_Service:
  4519                           
  4520                           ; 1 bytes @ 0x29
  4521  0049                     	ds	4
  4522  004D                     Slider_Service@group_status:
  4523                           
  4524                           ; 1 bytes @ 0x2D
  4525  004D                     	ds	1
  4526  004E                     Slider_Service@valid_contact_found:
  4527                           
  4528                           ; 1 bytes @ 0x2E
  4529  004E                     	ds	1
  4530  004F                     Slider_Service@position:
  4531                           
  4532                           ; 2 bytes @ 0x2F
  4533  004F                     	ds	2
  4534  0051                     Slider_Service@status:
  4535                           
  4536                           ; 1 bytes @ 0x31
  4537  0051                     	ds	1
  4538  0052                     Slider_Service@segment:
  4539                           
  4540                           ; 2 bytes @ 0x32
  4541  0052                     	ds	2
  4542  0054                     Slider_Service@sliderName:
  4543                           
  4544                           ; 1 bytes @ 0x34
  4545  0054                     	ds	1
  4546  0055                     Slider_Service@slider:
  4547                           
  4548                           ; 1 bytes @ 0x35
  4549  0055                     	ds	1
  4550  0056                     ??_MTOUCH_Slider_ServiceAll:
  4551                           
  4552                           ; 1 bytes @ 0x36
  4553  0056                     	ds	1
  4554  0057                     MTOUCH_Slider_ServiceAll@slider:
  4555                           
  4556                           ; 1 bytes @ 0x37
  4557  0057                     	ds	1
  4558  0058                     ??_MTOUCH_Service_Mainloop:
  4559                           
  4560                           ; 1 bytes @ 0x38
  4561  0058                     	ds	1
  4562  0059                     ??_main:
  4563                           
  4564                           ; 1 bytes @ 0x39
  4565  0059                     	ds	3
  4566                           
  4567                           	psect	maintext
  4568  038A                     __pmaintext:	
  4569 ;;
  4570 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  4571 ;;
  4572 ;; *************** function _main *****************
  4573 ;; Defined at:
  4574 ;;		line 54 in file "main.c"
  4575 ;; Parameters:    Size  Location     Type
  4576 ;;		None
  4577 ;; Auto vars:     Size  Location     Type
  4578 ;;  f_slider        8    4[BANK1 ] float [2]
  4579 ;;  map_slider      8    0        float [2]
  4580 ;;  ave_slider      8    0        float [2]
  4581 ;;  sliderPostio    4    0[BANK1 ] unsigned short [2]
  4582 ;;  i               2   12[BANK1 ] int 
  4583 ;; Return value:  Size  Location     Type
  4584 ;;                  1    wreg      void 
  4585 ;; Registers used:
  4586 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4587 ;; Tracked objects:
  4588 ;;		On entry : B1F/0
  4589 ;;		On exit  : 1F/3
  4590 ;;		Unchanged: 0/0
  4591 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4592 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4593 ;;      Locals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0
  4594 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4595 ;;      Totals:         0       3      14       0       0       0       0       0       0       0       0       0       
      +0       0
  4596 ;;Total ram usage:       17 bytes
  4597 ;; Hardware stack levels required when called: 11
  4598 ;; This function calls:
  4599 ;;		_DELAY_milliseconds
  4600 ;;		_EUSART_Write
  4601 ;;		_MTOUCH_Service_Mainloop
  4602 ;;		_MTOUCH_Slider_Position_Get
  4603 ;;		_MTOUCH_Slider_isPositionChanged
  4604 ;;		_MTOUCH_Slider_isPressed
  4605 ;;		_SYSTEM_Initialize
  4606 ;;		___fltol
  4607 ;;		___xxtofl
  4608 ;; This function is called by:
  4609 ;;		Startup code after reset
  4610 ;; This function uses a non-reentrant model
  4611 ;;
  4612                           
  4613                           
  4614                           ;psect for function _main
  4615  038A                     _main:
  4616                           
  4617                           ;main.c: 55:     int i;;main.c: 56:     uint16_t sliderPostion[2];;main.c: 57:     float
      +                           f_slider[2];;main.c: 58:     float ave_slider[2];;main.c: 59:     float map_slider[2];;
      +                          main.c: 61:     SYSTEM_Initialize();
  4618                           
  4619                           ;incstack = 0
  4620                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4621  038A  3190  20C0  3183   	fcall	_SYSTEM_Initialize
  4622                           
  4623                           ;main.c: 67:     (INTCONbits.GIE = 1);
  4624  038D  178B               	bsf	11,7	;volatile
  4625                           
  4626                           ;main.c: 70:     (INTCONbits.PEIE = 1);
  4627  038E  170B               	bsf	11,6	;volatile
  4628                           
  4629                           ;main.c: 78:     for (i = 0; i < 10; i++) {
  4630  038F  01DA               	clrf	main@i^(0+128)
  4631  0390  01DB               	clrf	(main@i+1)^(0+128)
  4632  0391                     l1211:	
  4633                           ;main.c: 79:         do { LATCbits.LATC0 = 1; } while(0);
  4634                           
  4635  0391  0022               	movlb	2	; select bank2
  4636  0392  140E               	bsf	14,0	;volatile
  4637                           
  4638                           ;main.c: 80:         DELAY_milliseconds(50);
  4639  0393  3032               	movlw	50
  4640  0394  00F2               	movwf	DELAY_milliseconds@milliseconds
  4641  0395  3000               	movlw	0
  4642  0396  00F3               	movwf	DELAY_milliseconds@milliseconds+1
  4643  0397  3190  208A  3183   	fcall	_DELAY_milliseconds
  4644  039A  0022               	movlb	2	; select bank2
  4645  039B  100E               	bcf	14,0	;volatile
  4646                           
  4647                           ;main.c: 82:         DELAY_milliseconds(50);
  4648  039C  3032               	movlw	50
  4649  039D  00F2               	movwf	DELAY_milliseconds@milliseconds
  4650  039E  3000               	movlw	0
  4651  039F  00F3               	movwf	DELAY_milliseconds@milliseconds+1
  4652  03A0  3190  208A  3183   	fcall	_DELAY_milliseconds
  4653                           
  4654                           ;main.c: 83:     }
  4655  03A3  3001               	movlw	1
  4656  03A4  0021               	movlb	1	; select bank1
  4657  03A5  07DA               	addwf	main@i^(0+128),f
  4658  03A6  3000               	movlw	0
  4659  03A7  3DDB               	addwfc	(main@i+1)^(0+128),f
  4660  03A8  085B               	movf	(main@i+1)^(0+128),w
  4661  03A9  3A80               	xorlw	128
  4662  03AA  0020               	movlb	0	; select bank0
  4663  03AB  00D9               	movwf	??_main
  4664  03AC  3080               	movlw	128
  4665  03AD  0259               	subwf	??_main,w
  4666  03AE  1D03               	skipz
  4667  03AF  2BB3               	goto	u6135
  4668  03B0  300A               	movlw	10
  4669  03B1  0021               	movlb	1	; select bank1
  4670  03B2  025A               	subwf	main@i^(0+128),w
  4671  03B3                     u6135:
  4672  03B3  1C03               	skipc
  4673  03B4  2B91               	goto	l1211
  4674  03B5                     l6632:
  4675                           
  4676                           ;main.c: 89:         if (MTOUCH_Service_Mainloop()) {
  4677  03B5  3196  2662  3183   	fcall	_MTOUCH_Service_Mainloop
  4678  03B8  3A00               	xorlw	0
  4679  03B9  1903               	skipnz
  4680  03BA  2BB5               	goto	l6632
  4681                           
  4682                           ;main.c: 92:             for (i = 0; i < 2; i++) {
  4683  03BB  0021               	movlb	1	; select bank1
  4684  03BC  01DA               	clrf	main@i^(0+128)
  4685  03BD  01DB               	clrf	(main@i+1)^(0+128)
  4686  03BE                     l6640:
  4687                           
  4688                           ;main.c: 93:                 if (MTOUCH_Slider_isPositionChanged(i)) {
  4689  03BE  0021               	movlb	1	; select bank1
  4690  03BF  085A               	movf	main@i^(0+128),w
  4691  03C0  3191  2135  3183   	fcall	_MTOUCH_Slider_isPositionChanged
  4692  03C3  3A00               	xorlw	0
  4693  03C4  1903               	skipnz
  4694  03C5  2BFA               	goto	l1219
  4695                           
  4696                           ;main.c: 94:                     sliderPostion[i] = MTOUCH_Slider_Position_Get(i);
  4697  03C6  085A               	movf	main@i^(0+128),w
  4698  03C7  3191  2121  3183   	fcall	_MTOUCH_Slider_Position_Get
  4699  03CA  355A               	lslf	main@i^(0+128),w
  4700  03CB  3ECE               	addlw	(low (main@sliderPostion| 0))& (0+255)
  4701  03CC  0086               	movwf	6
  4702  03CD  0187               	clrf	7
  4703  03CE  0872               	movf	?_MTOUCH_Slider_Position_Get,w
  4704  03CF  3FC0               	movwi [0]fsr1
  4705  03D0  0873               	movf	?_MTOUCH_Slider_Position_Get+1,w
  4706  03D1  3FC1               	movwi [1]fsr1
  4707                           
  4708                           ;main.c: 95:                     f_slider[i] = sliderPostion[i];
  4709  03D2  355A               	lslf	main@i^(0+128),w
  4710  03D3  3ECE               	addlw	(low (main@sliderPostion| 0))& (0+255)
  4711  03D4  0086               	movwf	6
  4712  03D5  0187               	clrf	7
  4713  03D6  3F40               	moviw [0]fsr1
  4714  03D7  0020               	movlb	0	; select bank0
  4715  03D8  00D9               	movwf	??_main
  4716  03D9  3F41               	moviw [1]fsr1
  4717  03DA  00DA               	movwf	??_main+1
  4718  03DB  0859               	movf	??_main,w
  4719  03DC  00F2               	movwf	___xxtofl@val
  4720  03DD  085A               	movf	??_main+1,w
  4721  03DE  00F3               	movwf	___xxtofl@val+1
  4722  03DF  01F4               	clrf	___xxtofl@val+2
  4723  03E0  01F5               	clrf	___xxtofl@val+3
  4724  03E1  3000               	movlw	0
  4725  03E2  3186  263B  3183   	fcall	___xxtofl
  4726  03E5  0021               	movlb	1	; select bank1
  4727  03E6  085A               	movf	main@i^(0+128),w
  4728  03E7  0020               	movlb	0	; select bank0
  4729  03E8  00DB               	movwf	??_main+2
  4730  03E9  3001               	movlw	1
  4731  03EA                     u6165:
  4732  03EA  35DB               	lslf	??_main+2,f
  4733  03EB  3EFF               	addlw	-1
  4734  03EC  1D03               	skipz
  4735  03ED  2BEA               	goto	u6165
  4736  03EE  355B               	lslf	??_main+2,w
  4737  03EF  3ED2               	addlw	(low (main@f_slider| 0))& (0+255)
  4738  03F0  0086               	movwf	6
  4739  03F1  0187               	clrf	7
  4740  03F2  0872               	movf	?___xxtofl,w
  4741  03F3  3FC0               	movwi [0]fsr1
  4742  03F4  0873               	movf	?___xxtofl+1,w
  4743  03F5  3FC1               	movwi [1]fsr1
  4744  03F6  0874               	movf	?___xxtofl+2,w
  4745  03F7  3FC2               	movwi [2]fsr1
  4746  03F8  0875               	movf	?___xxtofl+3,w
  4747  03F9  3FC3               	movwi [3]fsr1
  4748  03FA                     l1219:	
  4749                           ;main.c: 96:                 }
  4750                           
  4751                           
  4752                           ;main.c: 97:                 if (!MTOUCH_Slider_isPressed(i)) {
  4753  03FA  0021               	movlb	1	; select bank1
  4754  03FB  085A               	movf	main@i^(0+128),w
  4755  03FC  3191  21A3  3183   	fcall	_MTOUCH_Slider_isPressed
  4756  03FF  3A00               	xorlw	0
  4757  0400  1D03               	skipz
  4758  0401  2C16               	goto	l6646
  4759                           
  4760                           ;main.c: 98:                     f_slider[i] = 0;
  4761  0402  085A               	movf	main@i^(0+128),w
  4762  0403  0020               	movlb	0	; select bank0
  4763  0404  00D9               	movwf	??_main
  4764  0405  3001               	movlw	1
  4765  0406                     u6185:
  4766  0406  35D9               	lslf	??_main,f
  4767  0407  3EFF               	addlw	-1
  4768  0408  1D03               	skipz
  4769  0409  2C06               	goto	u6185
  4770  040A  3559               	lslf	??_main,w
  4771  040B  3ED2               	addlw	(low (main@f_slider| 0))& (0+255)
  4772  040C  0086               	movwf	6
  4773  040D  0187               	clrf	7
  4774  040E  3000               	movlw	0
  4775  040F  3FC0               	movwi [0]fsr1
  4776  0410  3000               	movlw	0
  4777  0411  3FC1               	movwi [1]fsr1
  4778  0412  3000               	movlw	0
  4779  0413  3FC2               	movwi [2]fsr1
  4780  0414  3000               	movlw	0
  4781  0415  3FC3               	movwi [3]fsr1
  4782  0416                     l6646:
  4783                           
  4784                           ;main.c: 102:             }
  4785  0416  3001               	movlw	1
  4786  0417  0021               	movlb	1	; select bank1
  4787  0418  07DA               	addwf	main@i^(0+128),f
  4788  0419  3000               	movlw	0
  4789  041A  3DDB               	addwfc	(main@i+1)^(0+128),f
  4790  041B  085B               	movf	(main@i+1)^(0+128),w
  4791  041C  3A80               	xorlw	128
  4792  041D  0020               	movlb	0	; select bank0
  4793  041E  00D9               	movwf	??_main
  4794  041F  3080               	movlw	128
  4795  0420  0259               	subwf	??_main,w
  4796  0421  1D03               	skipz
  4797  0422  2C26               	goto	u6195
  4798  0423  3002               	movlw	2
  4799  0424  0021               	movlb	1	; select bank1
  4800  0425  025A               	subwf	main@i^(0+128),w
  4801  0426                     u6195:
  4802  0426  1C03               	skipc
  4803  0427  2BBE               	goto	l6640
  4804                           
  4805                           ;main.c: 103:             EUSART_Write(f_slider[0]);
  4806  0428  0021               	movlb	1	; select bank1
  4807  0429  0855               	movf	(main@f_slider+3)^(0+128),w
  4808  042A  00F5               	movwf	___fltol@f1+3
  4809  042B  0854               	movf	(main@f_slider+2)^(0+128),w
  4810  042C  00F4               	movwf	___fltol@f1+2
  4811  042D  0853               	movf	(main@f_slider+1)^(0+128),w
  4812  042E  00F3               	movwf	___fltol@f1+1
  4813  042F  0852               	movf	main@f_slider^(0+128),w
  4814  0430  00F2               	movwf	___fltol@f1
  4815  0431  318D  2547  3183   	fcall	___fltol
  4816  0434  0872               	movf	?___fltol,w
  4817  0435  319F  27F8  3183   	fcall	_EUSART_Write
  4818                           
  4819                           ;main.c: 104:             EUSART_Write(f_slider[1]);
  4820  0438  3004               	movlw	4
  4821  0439  3ED2               	addlw	(low (main@f_slider| 0))& (0+255)
  4822  043A  0086               	movwf	6
  4823  043B  0187               	clrf	7
  4824  043C  3F40               	moviw [0]fsr1
  4825  043D  00F2               	movwf	___fltol@f1
  4826  043E  3F41               	moviw [1]fsr1
  4827  043F  00F3               	movwf	___fltol@f1+1
  4828  0440  3F42               	moviw [2]fsr1
  4829  0441  00F4               	movwf	___fltol@f1+2
  4830  0442  3F43               	moviw [3]fsr1
  4831  0443  00F5               	movwf	___fltol@f1+3
  4832  0444  318D  2547  3183   	fcall	___fltol
  4833  0447  0872               	movf	?___fltol,w
  4834  0448  319F  27F8  3183   	fcall	_EUSART_Write
  4835                           
  4836                           ;main.c: 105:             EUSART_Write(0xFF);
  4837  044B  30FF               	movlw	255
  4838  044C  319F  27F8  3183   	fcall	_EUSART_Write
  4839  044F  2BB5               	goto	l6632
  4840  0450                     __end_of_main:
  4841                           
  4842                           	psect	text1
  4843  063B                     __ptext1:	
  4844 ;; *************** function ___xxtofl *****************
  4845 ;; Defined at:
  4846 ;;		line 10 in file "/Applications/microchip/xc8/v2.32/pic/sources/c99/common/xxtofl.c"
  4847 ;; Parameters:    Size  Location     Type
  4848 ;;  sign            1    wreg     unsigned char 
  4849 ;;  val             4    2[COMMON] long 
  4850 ;; Auto vars:     Size  Location     Type
  4851 ;;  sign            1    0[BANK0 ] unsigned char 
  4852 ;;  arg             4    2[BANK0 ] unsigned long 
  4853 ;;  exp             1    1[BANK0 ] unsigned char 
  4854 ;; Return value:  Size  Location     Type
  4855 ;;                  4    2[COMMON] unsigned char 
  4856 ;; Registers used:
  4857 ;;		wreg, status,2, status,0
  4858 ;; Tracked objects:
  4859 ;;		On entry : 1F/0
  4860 ;;		On exit  : 1F/0
  4861 ;;		Unchanged: 0/0
  4862 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4863 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4864 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4865 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4866 ;;      Totals:         8       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4867 ;;Total ram usage:       14 bytes
  4868 ;; Hardware stack levels used: 1
  4869 ;; Hardware stack levels required when called: 4
  4870 ;; This function calls:
  4871 ;;		Nothing
  4872 ;; This function is called by:
  4873 ;;		_main
  4874 ;; This function uses a non-reentrant model
  4875 ;;
  4876                           
  4877                           
  4878                           ;psect for function ___xxtofl
  4879  063B                     ___xxtofl:
  4880                           
  4881                           ;incstack = 0
  4882                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  4883                           ;___xxtofl@sign stored from wreg
  4884  063B  00A0               	movwf	___xxtofl@sign
  4885  063C  0820               	movf	___xxtofl@sign,w
  4886  063D  1D03               	btfss	3,2
  4887  063E  1FF5               	btfss	___xxtofl@val+3,7
  4888  063F  2E50               	goto	l6574
  4889  0640  0972               	comf	___xxtofl@val,w
  4890  0641  00A2               	movwf	___xxtofl@arg
  4891  0642  0973               	comf	___xxtofl@val+1,w
  4892  0643  00A3               	movwf	___xxtofl@arg+1
  4893  0644  0974               	comf	___xxtofl@val+2,w
  4894  0645  00A4               	movwf	___xxtofl@arg+2
  4895  0646  0975               	comf	___xxtofl@val+3,w
  4896  0647  00A5               	movwf	___xxtofl@arg+3
  4897  0648  0AA2               	incf	___xxtofl@arg,f
  4898  0649  1903               	skipnz
  4899  064A  0AA3               	incf	___xxtofl@arg+1,f
  4900  064B  1903               	skipnz
  4901  064C  0AA4               	incf	___xxtofl@arg+2,f
  4902  064D  1903               	skipnz
  4903  064E  0AA5               	incf	___xxtofl@arg+3,f
  4904  064F  2E58               	goto	l1814
  4905  0650                     l6574:
  4906  0650  0875               	movf	___xxtofl@val+3,w
  4907  0651  00A5               	movwf	___xxtofl@arg+3
  4908  0652  0874               	movf	___xxtofl@val+2,w
  4909  0653  00A4               	movwf	___xxtofl@arg+2
  4910  0654  0873               	movf	___xxtofl@val+1,w
  4911  0655  00A3               	movwf	___xxtofl@arg+1
  4912  0656  0872               	movf	___xxtofl@val,w
  4913  0657  00A2               	movwf	___xxtofl@arg
  4914  0658                     l1814:
  4915  0658  0875               	movf	___xxtofl@val+3,w
  4916  0659  0474               	iorwf	___xxtofl@val+2,w
  4917  065A  0473               	iorwf	___xxtofl@val+1,w
  4918  065B  0472               	iorwf	___xxtofl@val,w
  4919  065C  1D03               	skipz
  4920  065D  2E67               	goto	l6580
  4921  065E  3000               	movlw	0
  4922  065F  00F5               	movwf	?___xxtofl+3
  4923  0660  3000               	movlw	0
  4924  0661  00F4               	movwf	?___xxtofl+2
  4925  0662  3000               	movlw	0
  4926  0663  00F3               	movwf	?___xxtofl+1
  4927  0664  3000               	movlw	0
  4928  0665  00F2               	movwf	?___xxtofl
  4929  0666  0008               	return
  4930  0667                     l6580:
  4931  0667  3096               	movlw	150
  4932  0668  00F6               	movwf	??___xxtofl
  4933  0669  0876               	movf	??___xxtofl,w
  4934  066A  00A1               	movwf	___xxtofl@exp
  4935  066B                     l6584:
  4936  066B  30FE               	movlw	254
  4937  066C  0525               	andwf	___xxtofl@arg+3,w
  4938  066D  1903               	btfsc	3,2
  4939  066E  2E8E               	goto	l1820
  4940  066F  3001               	movlw	1
  4941  0670  00F6               	movwf	??___xxtofl
  4942  0671  0876               	movf	??___xxtofl,w
  4943  0672  07A1               	addwf	___xxtofl@exp,f
  4944  0673  3001               	movlw	1
  4945  0674                     u6025:
  4946  0674  36A5               	lsrf	___xxtofl@arg+3,f
  4947  0675  0CA4               	rrf	___xxtofl@arg+2,f
  4948  0676  0CA3               	rrf	___xxtofl@arg+1,f
  4949  0677  0CA2               	rrf	___xxtofl@arg,f
  4950  0678  0B89               	decfsz	9,f
  4951  0679  2E74               	goto	u6025
  4952  067A  2E6B               	goto	l6584
  4953  067B                     l6586:
  4954  067B  3001               	movlw	1
  4955  067C  00F6               	movwf	??___xxtofl
  4956  067D  0876               	movf	??___xxtofl,w
  4957  067E  07A1               	addwf	___xxtofl@exp,f
  4958  067F  3001               	movlw	1
  4959  0680  07A2               	addwf	___xxtofl@arg,f
  4960  0681  3000               	movlw	0
  4961  0682  3DA3               	addwfc	___xxtofl@arg+1,f
  4962  0683  3000               	movlw	0
  4963  0684  3DA4               	addwfc	___xxtofl@arg+2,f
  4964  0685  3000               	movlw	0
  4965  0686  3DA5               	addwfc	___xxtofl@arg+3,f
  4966  0687  3001               	movlw	1
  4967  0688                     u6045:
  4968  0688  36A5               	lsrf	___xxtofl@arg+3,f
  4969  0689  0CA4               	rrf	___xxtofl@arg+2,f
  4970  068A  0CA3               	rrf	___xxtofl@arg+1,f
  4971  068B  0CA2               	rrf	___xxtofl@arg,f
  4972  068C  0B89               	decfsz	9,f
  4973  068D  2E88               	goto	u6045
  4974  068E                     l1820:
  4975  068E  30FF               	movlw	255
  4976  068F  0525               	andwf	___xxtofl@arg+3,w
  4977  0690  1903               	btfsc	3,2
  4978  0691  2EA0               	goto	l6594
  4979  0692  2E7B               	goto	l6586
  4980  0693                     l6596:
  4981  0693  3002               	movlw	2
  4982  0694  0221               	subwf	___xxtofl@exp,w
  4983  0695  1C03               	btfss	3,0
  4984  0696  2EA2               	goto	l1827
  4985  0697  3001               	movlw	1
  4986  0698  02A1               	subwf	___xxtofl@exp,f
  4987  0699  3001               	movlw	1
  4988  069A                     u6065:
  4989  069A  35A2               	lslf	___xxtofl@arg,f
  4990  069B  0DA3               	rlf	___xxtofl@arg+1,f
  4991  069C  0DA4               	rlf	___xxtofl@arg+2,f
  4992  069D  0DA5               	rlf	___xxtofl@arg+3,f
  4993  069E  0B89               	decfsz	9,f
  4994  069F  2E9A               	goto	u6065
  4995  06A0                     l6594:
  4996  06A0  1FA4               	btfss	___xxtofl@arg+2,7
  4997  06A1  2E93               	goto	l6596
  4998  06A2                     l1827:
  4999  06A2  1821               	btfsc	___xxtofl@exp,0
  5000  06A3  2EAC               	goto	l1828
  5001  06A4  30FF               	movlw	255
  5002  06A5  05A2               	andwf	___xxtofl@arg,f
  5003  06A6  30FF               	movlw	255
  5004  06A7  05A3               	andwf	___xxtofl@arg+1,f
  5005  06A8  307F               	movlw	127
  5006  06A9  05A4               	andwf	___xxtofl@arg+2,f
  5007  06AA  30FF               	movlw	255
  5008  06AB  05A5               	andwf	___xxtofl@arg+3,f
  5009  06AC                     l1828:
  5010  06AC  1003               	clrc
  5011  06AD  0CA1               	rrf	___xxtofl@exp,f
  5012  06AE  0821               	movf	___xxtofl@exp,w
  5013  06AF  00F6               	movwf	??___xxtofl
  5014  06B0  01F7               	clrf	??___xxtofl+1
  5015  06B1  01F8               	clrf	??___xxtofl+2
  5016  06B2  01F9               	clrf	??___xxtofl+3
  5017  06B3  3018               	movlw	24
  5018  06B4                     u6105:
  5019  06B4  35F6               	lslf	??___xxtofl,f
  5020  06B5  0DF7               	rlf	??___xxtofl+1,f
  5021  06B6  0DF8               	rlf	??___xxtofl+2,f
  5022  06B7  0DF9               	rlf	??___xxtofl+3,f
  5023  06B8  0B89               	decfsz	9,f
  5024  06B9  2EB4               	goto	u6105
  5025  06BA  0876               	movf	??___xxtofl,w
  5026  06BB  04A2               	iorwf	___xxtofl@arg,f
  5027  06BC  0877               	movf	??___xxtofl+1,w
  5028  06BD  04A3               	iorwf	___xxtofl@arg+1,f
  5029  06BE  0878               	movf	??___xxtofl+2,w
  5030  06BF  04A4               	iorwf	___xxtofl@arg+2,f
  5031  06C0  0879               	movf	??___xxtofl+3,w
  5032  06C1  04A5               	iorwf	___xxtofl@arg+3,f
  5033  06C2  0820               	movf	___xxtofl@sign,w
  5034  06C3  1D03               	btfss	3,2
  5035  06C4  1FF5               	btfss	___xxtofl@val+3,7
  5036  06C5  2EC7               	goto	l6608
  5037  06C6  17A5               	bsf	___xxtofl@arg+3,7
  5038  06C7                     l6608:
  5039  06C7  0825               	movf	___xxtofl@arg+3,w
  5040  06C8  00F5               	movwf	?___xxtofl+3
  5041  06C9  0824               	movf	___xxtofl@arg+2,w
  5042  06CA  00F4               	movwf	?___xxtofl+2
  5043  06CB  0823               	movf	___xxtofl@arg+1,w
  5044  06CC  00F3               	movwf	?___xxtofl+1
  5045  06CD  0822               	movf	___xxtofl@arg,w
  5046  06CE  00F2               	movwf	?___xxtofl
  5047  06CF  0008               	return
  5048  06D0                     __end_of___xxtofl:
  5049                           
  5050                           	psect	text2
  5051  0D47                     __ptext2:	
  5052 ;; *************** function ___fltol *****************
  5053 ;; Defined at:
  5054 ;;		line 43 in file "/Applications/microchip/xc8/v2.32/pic/sources/c99/common/fltol.c"
  5055 ;; Parameters:    Size  Location     Type
  5056 ;;  f1              4    2[COMMON] unsigned char 
  5057 ;; Auto vars:     Size  Location     Type
  5058 ;;  exp1            1    7[COMMON] unsigned char 
  5059 ;;  sign1           1    6[COMMON] unsigned char 
  5060 ;; Return value:  Size  Location     Type
  5061 ;;                  4    2[COMMON] long 
  5062 ;; Registers used:
  5063 ;;		wreg, status,2, status,0
  5064 ;; Tracked objects:
  5065 ;;		On entry : 1D/1
  5066 ;;		On exit  : 1C/0
  5067 ;;		Unchanged: 0/0
  5068 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5069 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5070 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5071 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5072 ;;      Totals:         6       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5073 ;;Total ram usage:       11 bytes
  5074 ;; Hardware stack levels used: 1
  5075 ;; Hardware stack levels required when called: 4
  5076 ;; This function calls:
  5077 ;;		Nothing
  5078 ;; This function is called by:
  5079 ;;		_main
  5080 ;; This function uses a non-reentrant model
  5081 ;;
  5082                           
  5083                           
  5084                           ;psect for function ___fltol
  5085  0D47                     ___fltol:
  5086                           
  5087                           ;incstack = 0
  5088                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  5089  0D47  1003               	clrc
  5090  0D48  0D74               	rlf	___fltol@f1+2,w
  5091  0D49  0D75               	rlf	___fltol@f1+3,w
  5092  0D4A  0020               	movlb	0	; select bank0
  5093  0D4B  00A0               	movwf	??___fltol
  5094  0D4C  0820               	movf	??___fltol,w
  5095  0D4D  00F7               	movwf	___fltol@exp1
  5096  0D4E  0877               	movf	___fltol@exp1,w
  5097  0D4F  1D03               	btfss	3,2
  5098  0D50  2D5A               	goto	l6538
  5099  0D51                     l6534:
  5100  0D51  3000               	movlw	0
  5101  0D52  00F5               	movwf	?___fltol+3
  5102  0D53  3000               	movlw	0
  5103  0D54  00F4               	movwf	?___fltol+2
  5104  0D55  3000               	movlw	0
  5105  0D56  00F3               	movwf	?___fltol+1
  5106  0D57  3000               	movlw	0
  5107  0D58  00F2               	movwf	?___fltol
  5108  0D59  0008               	return
  5109  0D5A                     l6538:
  5110  0D5A  0872               	movf	___fltol@f1,w
  5111  0D5B  00A0               	movwf	??___fltol
  5112  0D5C  0873               	movf	___fltol@f1+1,w
  5113  0D5D  00A1               	movwf	??___fltol+1
  5114  0D5E  0874               	movf	___fltol@f1+2,w
  5115  0D5F  00A2               	movwf	??___fltol+2
  5116  0D60  0875               	movf	___fltol@f1+3,w
  5117  0D61  00A3               	movwf	??___fltol+3
  5118  0D62  301F               	movlw	31
  5119  0D63                     u5905:
  5120  0D63  36A3               	lsrf	??___fltol+3,f
  5121  0D64  0CA2               	rrf	??___fltol+2,f
  5122  0D65  0CA1               	rrf	??___fltol+1,f
  5123  0D66  0CA0               	rrf	??___fltol,f
  5124  0D67  0B89               	decfsz	9,f
  5125  0D68  2D63               	goto	u5905
  5126  0D69  0820               	movf	??___fltol,w
  5127  0D6A  00A4               	movwf	??___fltol+4
  5128  0D6B  0824               	movf	??___fltol+4,w
  5129  0D6C  00F6               	movwf	___fltol@sign1
  5130  0D6D  17F4               	bsf	___fltol@f1+2,7
  5131  0D6E  30FF               	movlw	255
  5132  0D6F  05F2               	andwf	___fltol@f1,f
  5133  0D70  30FF               	movlw	255
  5134  0D71  05F3               	andwf	___fltol@f1+1,f
  5135  0D72  30FF               	movlw	255
  5136  0D73  05F4               	andwf	___fltol@f1+2,f
  5137  0D74  3000               	movlw	0
  5138  0D75  05F5               	andwf	___fltol@f1+3,f
  5139  0D76  3096               	movlw	150
  5140  0D77  02F7               	subwf	___fltol@exp1,f
  5141  0D78  1FF7               	btfss	___fltol@exp1,7
  5142  0D79  2D8D               	goto	l6556
  5143  0D7A  0877               	movf	___fltol@exp1,w
  5144  0D7B  3A80               	xorlw	128
  5145  0D7C  3E97               	addlw	151
  5146  0D7D  1C03               	btfss	3,0
  5147  0D7E  2D51               	goto	l6534
  5148  0D7F                     l6554:
  5149  0D7F  3001               	movlw	1
  5150  0D80                     u5935:
  5151  0D80  36F5               	lsrf	___fltol@f1+3,f
  5152  0D81  0CF4               	rrf	___fltol@f1+2,f
  5153  0D82  0CF3               	rrf	___fltol@f1+1,f
  5154  0D83  0CF2               	rrf	___fltol@f1,f
  5155  0D84  0B89               	decfsz	9,f
  5156  0D85  2D80               	goto	u5935
  5157  0D86  3001               	movlw	1
  5158  0D87  00A0               	movwf	??___fltol
  5159  0D88  0820               	movf	??___fltol,w
  5160  0D89  07F7               	addwf	___fltol@exp1,f
  5161  0D8A  1903               	btfsc	3,2
  5162  0D8B  2D9E               	goto	l6564
  5163  0D8C  2D7F               	goto	l6554
  5164  0D8D                     l6556:
  5165  0D8D  3020               	movlw	32
  5166  0D8E  0277               	subwf	___fltol@exp1,w
  5167  0D8F  1803               	btfsc	3,0
  5168  0D90  2D51               	goto	l6534
  5169  0D91                     l1574:
  5170  0D91  0877               	movf	___fltol@exp1,w
  5171  0D92  1903               	btfsc	3,2
  5172  0D93  2D9E               	goto	l6564
  5173  0D94  3001               	movlw	1
  5174  0D95                     u5965:
  5175  0D95  35F2               	lslf	___fltol@f1,f
  5176  0D96  0DF3               	rlf	___fltol@f1+1,f
  5177  0D97  0DF4               	rlf	___fltol@f1+2,f
  5178  0D98  0DF5               	rlf	___fltol@f1+3,f
  5179  0D99  0B89               	decfsz	9,f
  5180  0D9A  2D95               	goto	u5965
  5181  0D9B  3001               	movlw	1
  5182  0D9C  02F7               	subwf	___fltol@exp1,f
  5183  0D9D  2D91               	goto	l1574
  5184  0D9E                     l6564:
  5185  0D9E  0876               	movf	___fltol@sign1,w
  5186  0D9F  1903               	btfsc	3,2
  5187  0DA0  0008               	return
  5188  0DA1  09F2               	comf	___fltol@f1,f
  5189  0DA2  09F3               	comf	___fltol@f1+1,f
  5190  0DA3  09F4               	comf	___fltol@f1+2,f
  5191  0DA4  09F5               	comf	___fltol@f1+3,f
  5192  0DA5  0AF2               	incf	___fltol@f1,f
  5193  0DA6  1903               	skipnz
  5194  0DA7  0AF3               	incf	___fltol@f1+1,f
  5195  0DA8  1903               	skipnz
  5196  0DA9  0AF4               	incf	___fltol@f1+2,f
  5197  0DAA  1903               	skipnz
  5198  0DAB  0AF5               	incf	___fltol@f1+3,f
  5199  0DAC  0008               	return
  5200  0DAD                     __end_of___fltol:
  5201                           
  5202                           	psect	text3
  5203  10C0                     __ptext3:	
  5204 ;; *************** function _SYSTEM_Initialize *****************
  5205 ;; Defined at:
  5206 ;;		line 50 in file "mcc_generated_files/mcc.c"
  5207 ;; Parameters:    Size  Location     Type
  5208 ;;		None
  5209 ;; Auto vars:     Size  Location     Type
  5210 ;;		None
  5211 ;; Return value:  Size  Location     Type
  5212 ;;                  1    wreg      void 
  5213 ;; Registers used:
  5214 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5215 ;; Tracked objects:
  5216 ;;		On entry : B1F/0
  5217 ;;		On exit  : 1F/1
  5218 ;;		Unchanged: 0/0
  5219 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5220 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5221 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5222 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5223 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5224 ;;Total ram usage:        0 bytes
  5225 ;; Hardware stack levels used: 1
  5226 ;; Hardware stack levels required when called: 9
  5227 ;; This function calls:
  5228 ;;		_EUSART_Initialize
  5229 ;;		_MTOUCH_Initialize
  5230 ;;		_OSCILLATOR_Initialize
  5231 ;;		_PIN_MANAGER_Initialize
  5232 ;;		_TMR1_Initialize
  5233 ;;		_WDT_Initialize
  5234 ;; This function is called by:
  5235 ;;		_main
  5236 ;; This function uses a non-reentrant model
  5237 ;;
  5238                           
  5239                           
  5240                           ;psect for function _SYSTEM_Initialize
  5241  10C0                     _SYSTEM_Initialize:
  5242                           
  5243                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
  5244                           
  5245                           ;incstack = 0
  5246                           ; Regs used in _SYSTEM_Initialize: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5247  10C0  3191  21D6  3190   	fcall	_PIN_MANAGER_Initialize
  5248                           
  5249                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
  5250  10C3  319F  27F1  3190   	fcall	_OSCILLATOR_Initialize
  5251                           
  5252                           ;mcc_generated_files/mcc.c: 55:     WDT_Initialize();
  5253  10C6  3190  2000  3190   	fcall	_WDT_Initialize
  5254                           
  5255                           ;mcc_generated_files/mcc.c: 56:     TMR1_Initialize();
  5256  10C9  3187  27E7  3190   	fcall	_TMR1_Initialize
  5257                           
  5258                           ;mcc_generated_files/mcc.c: 57:     EUSART_Initialize();
  5259  10CC  3192  22E2  3190   	fcall	_EUSART_Initialize
  5260                           
  5261                           ;mcc_generated_files/mcc.c: 58:     MTOUCH_Initialize();
  5262  10CF  3191  215E         	fcall	_MTOUCH_Initialize
  5263  10D1  0008               	return
  5264  10D2                     __end_of_SYSTEM_Initialize:
  5265                           
  5266                           	psect	text4
  5267  1000                     __ptext4:	
  5268 ;; *************** function _WDT_Initialize *****************
  5269 ;; Defined at:
  5270 ;;		line 71 in file "mcc_generated_files/mcc.c"
  5271 ;; Parameters:    Size  Location     Type
  5272 ;;		None
  5273 ;; Auto vars:     Size  Location     Type
  5274 ;;		None
  5275 ;; Return value:  Size  Location     Type
  5276 ;;                  1    wreg      void 
  5277 ;; Registers used:
  5278 ;;		wreg
  5279 ;; Tracked objects:
  5280 ;;		On entry : B1F/2
  5281 ;;		On exit  : B1F/1
  5282 ;;		Unchanged: B00/0
  5283 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5284 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5285 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5286 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5287 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5288 ;;Total ram usage:        0 bytes
  5289 ;; Hardware stack levels used: 1
  5290 ;; Hardware stack levels required when called: 4
  5291 ;; This function calls:
  5292 ;;		Nothing
  5293 ;; This function is called by:
  5294 ;;		_SYSTEM_Initialize
  5295 ;; This function uses a non-reentrant model
  5296 ;;
  5297                           
  5298                           
  5299                           ;psect for function _WDT_Initialize
  5300  1000                     _WDT_Initialize:
  5301                           
  5302                           ;mcc_generated_files/mcc.c: 74:     WDTCON = 0x16;
  5303                           
  5304                           ;incstack = 0
  5305                           ; Regs used in _WDT_Initialize: [wreg]
  5306  1000  3016               	movlw	22
  5307  1001  0021               	movlb	1	; select bank1
  5308  1002  0097               	movwf	23	;volatile
  5309  1003  0008               	return
  5310  1004                     __end_of_WDT_Initialize:
  5311                           
  5312                           	psect	text5
  5313  07E7                     __ptext5:	
  5314 ;; *************** function _TMR1_Initialize *****************
  5315 ;; Defined at:
  5316 ;;		line 64 in file "mcc_generated_files/tmr1.c"
  5317 ;; Parameters:    Size  Location     Type
  5318 ;;		None
  5319 ;; Auto vars:     Size  Location     Type
  5320 ;;		None
  5321 ;; Return value:  Size  Location     Type
  5322 ;;                  1    wreg      void 
  5323 ;; Registers used:
  5324 ;;		wreg, status,2, status,0, pclath, cstack
  5325 ;; Tracked objects:
  5326 ;;		On entry : B1F/1
  5327 ;;		On exit  : 1F/0
  5328 ;;		Unchanged: 0/0
  5329 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5330 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5331 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5332 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5333 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5334 ;;Total ram usage:        0 bytes
  5335 ;; Hardware stack levels used: 1
  5336 ;; Hardware stack levels required when called: 5
  5337 ;; This function calls:
  5338 ;;		_TMR1_SetInterruptHandler
  5339 ;; This function is called by:
  5340 ;;		_SYSTEM_Initialize
  5341 ;; This function uses a non-reentrant model
  5342 ;;
  5343                           
  5344                           
  5345                           ;psect for function _TMR1_Initialize
  5346  07E7                     _TMR1_Initialize:
  5347                           
  5348                           ;mcc_generated_files/tmr1.c: 69:     T1GCON = 0x00;
  5349                           
  5350                           ;incstack = 0
  5351                           ; Regs used in _TMR1_Initialize: [wreg+status,2+status,0+pclath+cstack]
  5352  07E7  0020               	movlb	0	; select bank0
  5353  07E8  0199               	clrf	25	;volatile
  5354                           
  5355                           ;mcc_generated_files/tmr1.c: 72:     TMR1H = 0x63;
  5356  07E9  3063               	movlw	99
  5357  07EA  0097               	movwf	23	;volatile
  5358                           
  5359                           ;mcc_generated_files/tmr1.c: 75:     TMR1L = 0xC0;
  5360  07EB  30C0               	movlw	192
  5361  07EC  0096               	movwf	22	;volatile
  5362                           
  5363                           ;mcc_generated_files/tmr1.c: 78:     PIR1bits.TMR1IF = 0;
  5364  07ED  1011               	bcf	17,0	;volatile
  5365                           
  5366                           ;mcc_generated_files/tmr1.c: 81:     timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
  5367  07EE  0817               	movf	23,w	;volatile
  5368  07EF  0021               	movlb	1	; select bank1
  5369  07F0  00DF               	movwf	(_timer1ReloadVal+1)^(0+128)	;volatile
  5370  07F1  0020               	movlb	0	; select bank0
  5371  07F2  0816               	movf	22,w	;volatile
  5372  07F3  0021               	movlb	1	; select bank1
  5373  07F4  00DE               	movwf	_timer1ReloadVal^(0+128)	;volatile
  5374                           
  5375                           ;mcc_generated_files/tmr1.c: 84:     PIE1bits.TMR1IE = 1;
  5376  07F5  1411               	bsf	17,0	;volatile
  5377                           
  5378                           ;mcc_generated_files/tmr1.c: 87:     TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandl
      +                          er);
  5379  07F6  30A8               	movlw	low _TMR1_DefaultInterruptHandler
  5380  07F7  00F2               	movwf	TMR1_SetInterruptHandler@InterruptHandler
  5381  07F8  301F               	movlw	high _TMR1_DefaultInterruptHandler
  5382  07F9  00F3               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1
  5383  07FA  319F  27C0         	fcall	_TMR1_SetInterruptHandler
  5384                           
  5385                           ;mcc_generated_files/tmr1.c: 90:     T1CON = 0x05;
  5386  07FC  3005               	movlw	5
  5387  07FD  0020               	movlb	0	; select bank0
  5388  07FE  0098               	movwf	24	;volatile
  5389  07FF  0008               	return
  5390  0800                     __end_of_TMR1_Initialize:
  5391                           
  5392                           	psect	text6
  5393  11D6                     __ptext6:	
  5394 ;; *************** function _PIN_MANAGER_Initialize *****************
  5395 ;; Defined at:
  5396 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  5397 ;; Parameters:    Size  Location     Type
  5398 ;;		None
  5399 ;; Auto vars:     Size  Location     Type
  5400 ;;		None
  5401 ;; Return value:  Size  Location     Type
  5402 ;;                  1    wreg      void 
  5403 ;; Registers used:
  5404 ;;		wreg, status,2
  5405 ;; Tracked objects:
  5406 ;;		On entry : B1F/0
  5407 ;;		On exit  : B1F/2
  5408 ;;		Unchanged: B00/0
  5409 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5410 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5411 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5412 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5413 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5414 ;;Total ram usage:        0 bytes
  5415 ;; Hardware stack levels used: 1
  5416 ;; Hardware stack levels required when called: 4
  5417 ;; This function calls:
  5418 ;;		Nothing
  5419 ;; This function is called by:
  5420 ;;		_SYSTEM_Initialize
  5421 ;; This function uses a non-reentrant model
  5422 ;;
  5423                           
  5424                           
  5425                           ;psect for function _PIN_MANAGER_Initialize
  5426  11D6                     _PIN_MANAGER_Initialize:
  5427                           
  5428                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
  5429                           
  5430                           ;incstack = 0
  5431                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  5432  11D6  0022               	movlb	2	; select bank2
  5433  11D7  0190               	clrf	16	;volatile
  5434                           
  5435                           ;mcc_generated_files/pin_manager.c: 61:     LATA = 0x00;
  5436  11D8  018C               	clrf	12	;volatile
  5437                           
  5438                           ;mcc_generated_files/pin_manager.c: 62:     LATB = 0x00;
  5439  11D9  018D               	clrf	13	;volatile
  5440                           
  5441                           ;mcc_generated_files/pin_manager.c: 63:     LATC = 0x00;
  5442  11DA  018E               	clrf	14	;volatile
  5443                           
  5444                           ;mcc_generated_files/pin_manager.c: 68:     TRISE = 0x08;
  5445  11DB  3008               	movlw	8
  5446  11DC  0021               	movlb	1	; select bank1
  5447  11DD  0090               	movwf	16	;volatile
  5448                           
  5449                           ;mcc_generated_files/pin_manager.c: 69:     TRISA = 0xD0;
  5450  11DE  30D0               	movlw	208
  5451  11DF  008C               	movwf	12	;volatile
  5452                           
  5453                           ;mcc_generated_files/pin_manager.c: 70:     TRISB = 0xC0;
  5454  11E0  30C0               	movlw	192
  5455  11E1  008D               	movwf	13	;volatile
  5456                           
  5457                           ;mcc_generated_files/pin_manager.c: 71:     TRISC = 0xBE;
  5458  11E2  30BE               	movlw	190
  5459  11E3  008E               	movwf	14	;volatile
  5460                           
  5461                           ;mcc_generated_files/pin_manager.c: 76:     ANSELB = 0x00;
  5462  11E4  0023               	movlb	3	; select bank3
  5463  11E5  018D               	clrf	13	;volatile
  5464                           
  5465                           ;mcc_generated_files/pin_manager.c: 77:     ANSELA = 0x10;
  5466  11E6  3010               	movlw	16
  5467  11E7  008C               	movwf	12	;volatile
  5468                           
  5469                           ;mcc_generated_files/pin_manager.c: 82:     WPUE = 0x00;
  5470  11E8  0024               	movlb	4	; select bank4
  5471  11E9  0190               	clrf	16	;volatile
  5472                           
  5473                           ;mcc_generated_files/pin_manager.c: 83:     WPUB = 0x00;
  5474  11EA  018D               	clrf	13	;volatile
  5475                           
  5476                           ;mcc_generated_files/pin_manager.c: 84:     OPTION_REGbits.nWPUEN = 1;
  5477  11EB  0021               	movlb	1	; select bank1
  5478  11EC  1795               	bsf	21,7	;volatile
  5479                           
  5480                           ;mcc_generated_files/pin_manager.c: 90:     APFCON = 0x00;
  5481  11ED  0022               	movlb	2	; select bank2
  5482  11EE  019D               	clrf	29	;volatile
  5483  11EF  0008               	return
  5484  11F0                     __end_of_PIN_MANAGER_Initialize:
  5485                           
  5486                           	psect	text7
  5487  1FF1                     __ptext7:	
  5488 ;; *************** function _OSCILLATOR_Initialize *****************
  5489 ;; Defined at:
  5490 ;;		line 61 in file "mcc_generated_files/mcc.c"
  5491 ;; Parameters:    Size  Location     Type
  5492 ;;		None
  5493 ;; Auto vars:     Size  Location     Type
  5494 ;;		None
  5495 ;; Return value:  Size  Location     Type
  5496 ;;                  1    wreg      void 
  5497 ;; Registers used:
  5498 ;;		wreg, status,2
  5499 ;; Tracked objects:
  5500 ;;		On entry : B1F/2
  5501 ;;		On exit  : B1F/2
  5502 ;;		Unchanged: B00/0
  5503 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5504 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5505 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5506 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5507 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5508 ;;Total ram usage:        0 bytes
  5509 ;; Hardware stack levels used: 1
  5510 ;; Hardware stack levels required when called: 4
  5511 ;; This function calls:
  5512 ;;		Nothing
  5513 ;; This function is called by:
  5514 ;;		_SYSTEM_Initialize
  5515 ;; This function uses a non-reentrant model
  5516 ;;
  5517                           
  5518                           
  5519                           ;psect for function _OSCILLATOR_Initialize
  5520  1FF1                     _OSCILLATOR_Initialize:
  5521                           
  5522                           ;mcc_generated_files/mcc.c: 64:     OSCCON = 0x70;
  5523                           
  5524                           ;incstack = 0
  5525                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  5526  1FF1  3070               	movlw	112
  5527  1FF2  0021               	movlb	1	; select bank1
  5528  1FF3  0099               	movwf	25	;volatile
  5529                           
  5530                           ;mcc_generated_files/mcc.c: 66:     OSCTUNE = 0x00;
  5531  1FF4  0198               	clrf	24	;volatile
  5532                           
  5533                           ;mcc_generated_files/mcc.c: 68:     BORCON = 0x00;
  5534  1FF5  0022               	movlb	2	; select bank2
  5535  1FF6  0196               	clrf	22	;volatile
  5536  1FF7  0008               	return
  5537  1FF8                     __end_of_OSCILLATOR_Initialize:
  5538                           
  5539                           	psect	text8
  5540  12E2                     __ptext8:	
  5541 ;; *************** function _EUSART_Initialize *****************
  5542 ;; Defined at:
  5543 ;;		line 66 in file "mcc_generated_files/eusart.c"
  5544 ;; Parameters:    Size  Location     Type
  5545 ;;		None
  5546 ;; Auto vars:     Size  Location     Type
  5547 ;;		None
  5548 ;; Return value:  Size  Location     Type
  5549 ;;                  1    wreg      void 
  5550 ;; Registers used:
  5551 ;;		wreg, status,2, status,0, pclath, cstack
  5552 ;; Tracked objects:
  5553 ;;		On entry : 1F/0
  5554 ;;		On exit  : 1F/1
  5555 ;;		Unchanged: 0/0
  5556 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5557 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5558 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5559 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5560 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5561 ;;Total ram usage:        0 bytes
  5562 ;; Hardware stack levels used: 1
  5563 ;; Hardware stack levels required when called: 5
  5564 ;; This function calls:
  5565 ;;		_EUSART_SetErrorHandler
  5566 ;;		_EUSART_SetFramingErrorHandler
  5567 ;;		_EUSART_SetOverrunErrorHandler
  5568 ;; This function is called by:
  5569 ;;		_SYSTEM_Initialize
  5570 ;; This function uses a non-reentrant model
  5571 ;;
  5572                           
  5573                           
  5574                           ;psect for function _EUSART_Initialize
  5575  12E2                     _EUSART_Initialize:
  5576                           
  5577                           ;mcc_generated_files/eusart.c: 71:     BAUDCON = 0x08;
  5578                           
  5579                           ;incstack = 0
  5580                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
  5581  12E2  3008               	movlw	8
  5582  12E3  0023               	movlb	3	; select bank3
  5583  12E4  009F               	movwf	31	;volatile
  5584                           
  5585                           ;mcc_generated_files/eusart.c: 74:     RCSTA = 0x80;
  5586  12E5  3080               	movlw	128
  5587  12E6  009D               	movwf	29	;volatile
  5588                           
  5589                           ;mcc_generated_files/eusart.c: 77:     TXSTA = 0x24;
  5590  12E7  3024               	movlw	36
  5591  12E8  009E               	movwf	30	;volatile
  5592                           
  5593                           ;mcc_generated_files/eusart.c: 80:     SPBRGL = 0x44;
  5594  12E9  3044               	movlw	68
  5595  12EA  009B               	movwf	27	;volatile
  5596                           
  5597                           ;mcc_generated_files/eusart.c: 83:     SPBRGH = 0x00;
  5598  12EB  019C               	clrf	28	;volatile
  5599                           
  5600                           ;mcc_generated_files/eusart.c: 86:     EUSART_SetFramingErrorHandler(EUSART_DefaultFrami
      +                          ngErrorHandler);
  5601  12EC  3000               	movlw	0
  5602  12ED  00F2               	movwf	EUSART_SetFramingErrorHandler@interruptHandler
  5603  12EE  3000               	movlw	0
  5604  12EF  00F3               	movwf	EUSART_SetFramingErrorHandler@interruptHandler+1
  5605  12F0  319F  27CF  3192   	fcall	_EUSART_SetFramingErrorHandler
  5606                           
  5607                           ;mcc_generated_files/eusart.c: 87:     EUSART_SetOverrunErrorHandler(EUSART_DefaultOverr
      +                          unErrorHandler);
  5608  12F3  3000               	movlw	0
  5609  12F4  00F2               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler
  5610  12F5  3000               	movlw	0
  5611  12F6  00F3               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler+1
  5612  12F7  319F  27CA  3192   	fcall	_EUSART_SetOverrunErrorHandler
  5613                           
  5614                           ;mcc_generated_files/eusart.c: 88:     EUSART_SetErrorHandler(EUSART_DefaultErrorHandler
      +                          );
  5615  12FA  3000               	movlw	0
  5616  12FB  00F2               	movwf	EUSART_SetErrorHandler@interruptHandler
  5617  12FC  3000               	movlw	0
  5618  12FD  00F3               	movwf	EUSART_SetErrorHandler@interruptHandler+1
  5619  12FE  319F  27C5         	fcall	_EUSART_SetErrorHandler
  5620                           
  5621                           ;mcc_generated_files/eusart.c: 90:     eusartRxLastError.status = 0;
  5622  1300  01C6               	clrf	_eusartRxLastError^(0+128)	;volatile
  5623  1301  0008               	return
  5624  1302                     __end_of_EUSART_Initialize:
  5625                           
  5626                           	psect	text9
  5627  1FCA                     __ptext9:	
  5628 ;; *************** function _EUSART_SetOverrunErrorHandler *****************
  5629 ;; Defined at:
  5630 ;;		line 161 in file "mcc_generated_files/eusart.c"
  5631 ;; Parameters:    Size  Location     Type
  5632 ;;  interruptHan    2    2[COMMON] PTR FTN()void 
  5633 ;;		 -> EUSART_DefaultOverrunErrorHandler(1), 
  5634 ;; Auto vars:     Size  Location     Type
  5635 ;;		None
  5636 ;; Return value:  Size  Location     Type
  5637 ;;                  1    wreg      void 
  5638 ;; Registers used:
  5639 ;;		wreg
  5640 ;; Tracked objects:
  5641 ;;		On entry : 1F/1
  5642 ;;		On exit  : 1F/1
  5643 ;;		Unchanged: 0/0
  5644 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5645 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5646 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5647 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5648 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5649 ;;Total ram usage:        2 bytes
  5650 ;; Hardware stack levels used: 1
  5651 ;; Hardware stack levels required when called: 4
  5652 ;; This function calls:
  5653 ;;		Nothing
  5654 ;; This function is called by:
  5655 ;;		_EUSART_Initialize
  5656 ;; This function uses a non-reentrant model
  5657 ;;
  5658                           
  5659                           
  5660                           ;psect for function _EUSART_SetOverrunErrorHandler
  5661  1FCA                     _EUSART_SetOverrunErrorHandler:
  5662                           
  5663                           ;mcc_generated_files/eusart.c: 162:     EUSART_OverrunErrorHandler = interruptHandler;
  5664                           
  5665                           ;incstack = 0
  5666                           ; Regs used in _EUSART_SetOverrunErrorHandler: [wreg]
  5667  1FCA  0873               	movf	EUSART_SetOverrunErrorHandler@interruptHandler+1,w
  5668  1FCB  00E3               	movwf	(_EUSART_OverrunErrorHandler+1)^(0+128)
  5669  1FCC  0872               	movf	EUSART_SetOverrunErrorHandler@interruptHandler,w
  5670  1FCD  00E2               	movwf	_EUSART_OverrunErrorHandler^(0+128)
  5671  1FCE  0008               	return
  5672  1FCF                     __end_of_EUSART_SetOverrunErrorHandler:
  5673                           
  5674                           	psect	text10
  5675  1FCF                     __ptext10:	
  5676 ;; *************** function _EUSART_SetFramingErrorHandler *****************
  5677 ;; Defined at:
  5678 ;;		line 157 in file "mcc_generated_files/eusart.c"
  5679 ;; Parameters:    Size  Location     Type
  5680 ;;  interruptHan    2    2[COMMON] PTR FTN()void 
  5681 ;;		 -> EUSART_DefaultFramingErrorHandler(1), 
  5682 ;; Auto vars:     Size  Location     Type
  5683 ;;		None
  5684 ;; Return value:  Size  Location     Type
  5685 ;;                  1    wreg      void 
  5686 ;; Registers used:
  5687 ;;		wreg
  5688 ;; Tracked objects:
  5689 ;;		On entry : 1F/3
  5690 ;;		On exit  : 1F/1
  5691 ;;		Unchanged: 0/0
  5692 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5693 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5694 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5695 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5696 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5697 ;;Total ram usage:        2 bytes
  5698 ;; Hardware stack levels used: 1
  5699 ;; Hardware stack levels required when called: 4
  5700 ;; This function calls:
  5701 ;;		Nothing
  5702 ;; This function is called by:
  5703 ;;		_EUSART_Initialize
  5704 ;; This function uses a non-reentrant model
  5705 ;;
  5706                           
  5707                           
  5708                           ;psect for function _EUSART_SetFramingErrorHandler
  5709  1FCF                     _EUSART_SetFramingErrorHandler:
  5710                           
  5711                           ;mcc_generated_files/eusart.c: 158:     EUSART_FramingErrorHandler = interruptHandler;
  5712                           
  5713                           ;incstack = 0
  5714                           ; Regs used in _EUSART_SetFramingErrorHandler: [wreg]
  5715  1FCF  0873               	movf	EUSART_SetFramingErrorHandler@interruptHandler+1,w
  5716  1FD0  0021               	movlb	1	; select bank1
  5717  1FD1  00E5               	movwf	(_EUSART_FramingErrorHandler+1)^(0+128)
  5718  1FD2  0872               	movf	EUSART_SetFramingErrorHandler@interruptHandler,w
  5719  1FD3  00E4               	movwf	_EUSART_FramingErrorHandler^(0+128)
  5720  1FD4  0008               	return
  5721  1FD5                     __end_of_EUSART_SetFramingErrorHandler:
  5722                           
  5723                           	psect	text11
  5724  1FC5                     __ptext11:	
  5725 ;; *************** function _EUSART_SetErrorHandler *****************
  5726 ;; Defined at:
  5727 ;;		line 165 in file "mcc_generated_files/eusart.c"
  5728 ;; Parameters:    Size  Location     Type
  5729 ;;  interruptHan    2    2[COMMON] PTR FTN()void 
  5730 ;;		 -> EUSART_DefaultErrorHandler(1), 
  5731 ;; Auto vars:     Size  Location     Type
  5732 ;;		None
  5733 ;; Return value:  Size  Location     Type
  5734 ;;                  1    wreg      void 
  5735 ;; Registers used:
  5736 ;;		wreg
  5737 ;; Tracked objects:
  5738 ;;		On entry : 1F/1
  5739 ;;		On exit  : 1F/1
  5740 ;;		Unchanged: 0/0
  5741 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5742 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5743 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5744 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5745 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5746 ;;Total ram usage:        2 bytes
  5747 ;; Hardware stack levels used: 1
  5748 ;; Hardware stack levels required when called: 4
  5749 ;; This function calls:
  5750 ;;		Nothing
  5751 ;; This function is called by:
  5752 ;;		_EUSART_Initialize
  5753 ;; This function uses a non-reentrant model
  5754 ;;
  5755                           
  5756                           
  5757                           ;psect for function _EUSART_SetErrorHandler
  5758  1FC5                     _EUSART_SetErrorHandler:
  5759                           
  5760                           ;mcc_generated_files/eusart.c: 166:     EUSART_ErrorHandler = interruptHandler;
  5761                           
  5762                           ;incstack = 0
  5763                           ; Regs used in _EUSART_SetErrorHandler: [wreg]
  5764  1FC5  0873               	movf	EUSART_SetErrorHandler@interruptHandler+1,w
  5765  1FC6  00E1               	movwf	(_EUSART_ErrorHandler+1)^(0+128)
  5766  1FC7  0872               	movf	EUSART_SetErrorHandler@interruptHandler,w
  5767  1FC8  00E0               	movwf	_EUSART_ErrorHandler^(0+128)
  5768  1FC9  0008               	return
  5769  1FCA                     __end_of_EUSART_SetErrorHandler:
  5770                           
  5771                           	psect	text12
  5772  11A3                     __ptext12:	
  5773 ;; *************** function _MTOUCH_Slider_isPressed *****************
  5774 ;; Defined at:
  5775 ;;		line 854 in file "mcc_generated_files/mtouch/mtouch_slider.c"
  5776 ;; Parameters:    Size  Location     Type
  5777 ;;  sliderName      1    wreg     enum E2918
  5778 ;; Auto vars:     Size  Location     Type
  5779 ;;  sliderName      1    3[COMMON] enum E2918
  5780 ;; Return value:  Size  Location     Type
  5781 ;;                  1    wreg      _Bool 
  5782 ;; Registers used:
  5783 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5784 ;; Tracked objects:
  5785 ;;		On entry : 1F/1
  5786 ;;		On exit  : 1F/1
  5787 ;;		Unchanged: 1F/0
  5788 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5789 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5790 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5791 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5792 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5793 ;;Total ram usage:        2 bytes
  5794 ;; Hardware stack levels used: 1
  5795 ;; Hardware stack levels required when called: 4
  5796 ;; This function calls:
  5797 ;;		Nothing
  5798 ;; This function is called by:
  5799 ;;		_main
  5800 ;; This function uses a non-reentrant model
  5801 ;;
  5802                           
  5803                           
  5804                           ;psect for function _MTOUCH_Slider_isPressed
  5805  11A3                     _MTOUCH_Slider_isPressed:
  5806                           
  5807                           ;incstack = 0
  5808                           ; Regs used in _MTOUCH_Slider_isPressed: [wreg+fsr1l+fsr1h+status,2+status,0]
  5809                           ;MTOUCH_Slider_isPressed@sliderName stored from wreg
  5810  11A3  00F3               	movwf	MTOUCH_Slider_isPressed@sliderName
  5811                           
  5812                           ;mcc_generated_files/mtouch/mtouch_slider.c: 854: _Bool MTOUCH_Slider_isPressed(enum mto
      +                          uch_slider_names sliderName);mcc_generated_files/mtouch/mtouch_slider.c: 855: {;mcc_gene
      +                          rated_files/mtouch/mtouch_slider.c: 856:     if (sliderName < 2u)
  5813  11A4  3002               	movlw	2
  5814  11A5  0273               	subwf	MTOUCH_Slider_isPressed@sliderName,w
  5815  11A6  1803               	skipnc
  5816  11A7  29BA               	goto	l6514
  5817                           
  5818                           ;mcc_generated_files/mtouch/mtouch_slider.c: 857:     {;mcc_generated_files/mtouch/mtouc
      +                          h_slider.c: 858:         return ((mtouch_slider[sliderName].sliderStatus & (uint8_t)((ui
      +                          nt8_t)3u<<0u)) == MTOUCH_SLIDER_STATE_pressed) ? 1 : 0;
  5819  11A8  0E73               	swapf	MTOUCH_Slider_isPressed@sliderName,w
  5820  11A9  39F0               	andlw	240
  5821  11AA  0773               	addwf	MTOUCH_Slider_isPressed@sliderName,w
  5822  11AB  3E30               	addlw	(low ((_mtouch_slider| (0+256)+16)))& (0+255)
  5823  11AC  0086               	movwf	6
  5824  11AD  3001               	movlw	1	; select bank2/3
  5825  11AE  0087               	movwf	7
  5826  11AF  3003               	movlw	3
  5827  11B0  0501               	andwf	1,w
  5828  11B1  00F2               	movwf	??_MTOUCH_Slider_isPressed
  5829  11B2  3002               	movlw	2
  5830  11B3  0672               	xorwf	??_MTOUCH_Slider_isPressed,w
  5831  11B4  1D03               	btfss	3,2
  5832  11B5  29B8               	goto	u5850
  5833  11B6  3001               	movlw	1
  5834  11B7  0008               	return
  5835  11B8                     u5850:
  5836  11B8  3000               	movlw	0
  5837  11B9  0008               	return
  5838  11BA                     l6514:
  5839                           
  5840                           ;mcc_generated_files/mtouch/mtouch_slider.c: 861:         return 0;
  5841  11BA  3000               	movlw	0
  5842  11BB  0008               	return
  5843  11BC                     __end_of_MTOUCH_Slider_isPressed:
  5844                           
  5845                           	psect	text13
  5846  1135                     __ptext13:	
  5847 ;; *************** function _MTOUCH_Slider_isPositionChanged *****************
  5848 ;; Defined at:
  5849 ;;		line 884 in file "mcc_generated_files/mtouch/mtouch_slider.c"
  5850 ;; Parameters:    Size  Location     Type
  5851 ;;  sliderName      1    wreg     enum E2918
  5852 ;; Auto vars:     Size  Location     Type
  5853 ;;  sliderName      1    2[COMMON] enum E2918
  5854 ;; Return value:  Size  Location     Type
  5855 ;;                  1    wreg      _Bool 
  5856 ;; Registers used:
  5857 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5858 ;; Tracked objects:
  5859 ;;		On entry : 1F/1
  5860 ;;		On exit  : 1F/1
  5861 ;;		Unchanged: 1F/0
  5862 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5863 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5864 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5865 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5866 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5867 ;;Total ram usage:        1 bytes
  5868 ;; Hardware stack levels used: 1
  5869 ;; Hardware stack levels required when called: 4
  5870 ;; This function calls:
  5871 ;;		Nothing
  5872 ;; This function is called by:
  5873 ;;		_main
  5874 ;; This function uses a non-reentrant model
  5875 ;;
  5876                           
  5877                           
  5878                           ;psect for function _MTOUCH_Slider_isPositionChanged
  5879  1135                     _MTOUCH_Slider_isPositionChanged:
  5880                           
  5881                           ;incstack = 0
  5882                           ; Regs used in _MTOUCH_Slider_isPositionChanged: [wreg+fsr1l+fsr1h+status,2+status,0]
  5883                           ;MTOUCH_Slider_isPositionChanged@sliderName stored from wreg
  5884  1135  00F2               	movwf	MTOUCH_Slider_isPositionChanged@sliderName
  5885                           
  5886                           ;mcc_generated_files/mtouch/mtouch_slider.c: 884: _Bool MTOUCH_Slider_isPositionChanged(
      +                          enum mtouch_slider_names sliderName);mcc_generated_files/mtouch/mtouch_slider.c: 885: {;
      +                          mcc_generated_files/mtouch/mtouch_slider.c: 886:     if (sliderName < 2u)
  5887  1136  3002               	movlw	2
  5888  1137  0272               	subwf	MTOUCH_Slider_isPositionChanged@sliderName,w
  5889  1138  1803               	skipnc
  5890  1139  2947               	goto	l6490
  5891                           
  5892                           ;mcc_generated_files/mtouch/mtouch_slider.c: 887:     {;mcc_generated_files/mtouch/mtouc
      +                          h_slider.c: 888:         return (mtouch_slider[sliderName].sliderStatus & (uint8_t)((uin
      +                          t8_t)1u<<2u)) ? 1 : 0;
  5893  113A  0E72               	swapf	MTOUCH_Slider_isPositionChanged@sliderName,w
  5894  113B  39F0               	andlw	240
  5895  113C  0772               	addwf	MTOUCH_Slider_isPositionChanged@sliderName,w
  5896  113D  3E30               	addlw	(low ((_mtouch_slider| (0+256)+16)))& (0+255)
  5897  113E  0086               	movwf	6
  5898  113F  3001               	movlw	1	; select bank2/3
  5899  1140  0087               	movwf	7
  5900  1141  1D01               	btfss	1,2
  5901  1142  2945               	goto	u5810
  5902  1143  3001               	movlw	1
  5903  1144  0008               	return
  5904  1145                     u5810:
  5905  1145  3000               	movlw	0
  5906  1146  0008               	return
  5907  1147                     l6490:
  5908                           
  5909                           ;mcc_generated_files/mtouch/mtouch_slider.c: 891:         return 0;
  5910  1147  3000               	movlw	0
  5911  1148  0008               	return
  5912  1149                     __end_of_MTOUCH_Slider_isPositionChanged:
  5913                           
  5914                           	psect	text14
  5915  1121                     __ptext14:	
  5916 ;; *************** function _MTOUCH_Slider_Position_Get *****************
  5917 ;; Defined at:
  5918 ;;		line 915 in file "mcc_generated_files/mtouch/mtouch_slider.c"
  5919 ;; Parameters:    Size  Location     Type
  5920 ;;  sliderName      1    wreg     enum E2918
  5921 ;; Auto vars:     Size  Location     Type
  5922 ;;  sliderName      1    4[COMMON] enum E2918
  5923 ;; Return value:  Size  Location     Type
  5924 ;;                  2    2[COMMON] unsigned short 
  5925 ;; Registers used:
  5926 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5927 ;; Tracked objects:
  5928 ;;		On entry : 1F/1
  5929 ;;		On exit  : 1F/1
  5930 ;;		Unchanged: 1F/0
  5931 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5932 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5933 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5934 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5935 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5936 ;;Total ram usage:        3 bytes
  5937 ;; Hardware stack levels used: 1
  5938 ;; Hardware stack levels required when called: 4
  5939 ;; This function calls:
  5940 ;;		Nothing
  5941 ;; This function is called by:
  5942 ;;		_main
  5943 ;; This function uses a non-reentrant model
  5944 ;;
  5945                           
  5946                           
  5947                           ;psect for function _MTOUCH_Slider_Position_Get
  5948  1121                     _MTOUCH_Slider_Position_Get:
  5949                           
  5950                           ;incstack = 0
  5951                           ; Regs used in _MTOUCH_Slider_Position_Get: [wreg+fsr1l+fsr1h+status,2+status,0]
  5952                           ;MTOUCH_Slider_Position_Get@sliderName stored from wreg
  5953  1121  00F4               	movwf	MTOUCH_Slider_Position_Get@sliderName
  5954                           
  5955                           ;mcc_generated_files/mtouch/mtouch_slider.c: 915: uint16_t MTOUCH_Slider_Position_Get(en
      +                          um mtouch_slider_names sliderName);mcc_generated_files/mtouch/mtouch_slider.c: 916: {;mc
      +                          c_generated_files/mtouch/mtouch_slider.c: 917:     if (sliderName < 2u)
  5956  1122  3002               	movlw	2
  5957  1123  0274               	subwf	MTOUCH_Slider_Position_Get@sliderName,w
  5958  1124  1803               	skipnc
  5959  1125  2932               	goto	l6502
  5960                           
  5961                           ;mcc_generated_files/mtouch/mtouch_slider.c: 918:     {;mcc_generated_files/mtouch/mtouc
      +                          h_slider.c: 919:         return (mtouch_slider[sliderName].sliderPosition);
  5962  1126  0E74               	swapf	MTOUCH_Slider_Position_Get@sliderName,w
  5963  1127  39F0               	andlw	240
  5964  1128  0774               	addwf	MTOUCH_Slider_Position_Get@sliderName,w
  5965  1129  3E2C               	addlw	(low ((_mtouch_slider| (0+256)+12)))& (0+255)
  5966  112A  0086               	movwf	6
  5967  112B  3001               	movlw	1	; select bank2/3
  5968  112C  0087               	movwf	7
  5969  112D  3F40               	moviw [0]fsr1
  5970  112E  00F2               	movwf	?_MTOUCH_Slider_Position_Get
  5971  112F  3F41               	moviw [1]fsr1
  5972  1130  00F3               	movwf	?_MTOUCH_Slider_Position_Get+1
  5973  1131  0008               	return
  5974  1132                     l6502:
  5975                           
  5976                           ;mcc_generated_files/mtouch/mtouch_slider.c: 922:         return 0u;
  5977  1132  01F2               	clrf	?_MTOUCH_Slider_Position_Get
  5978  1133  01F3               	clrf	?_MTOUCH_Slider_Position_Get+1
  5979  1134  0008               	return
  5980  1135                     __end_of_MTOUCH_Slider_Position_Get:
  5981                           
  5982                           	psect	text15
  5983  1662                     __ptext15:	
  5984 ;; *************** function _MTOUCH_Service_Mainloop *****************
  5985 ;; Defined at:
  5986 ;;		line 118 in file "mcc_generated_files/mtouch/mtouch.c"
  5987 ;; Parameters:    Size  Location     Type
  5988 ;;		None
  5989 ;; Auto vars:     Size  Location     Type
  5990 ;;		None
  5991 ;; Return value:  Size  Location     Type
  5992 ;;                  1    wreg      _Bool 
  5993 ;; Registers used:
  5994 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5995 ;; Tracked objects:
  5996 ;;		On entry : 0/1
  5997 ;;		On exit  : 1E/0
  5998 ;;		Unchanged: 0/0
  5999 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6000 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6001 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6002 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6003 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6004 ;;Total ram usage:        1 bytes
  6005 ;; Hardware stack levels used: 1
  6006 ;; Hardware stack levels required when called: 10
  6007 ;; This function calls:
  6008 ;;		_MTOUCH_Button_ServiceAll
  6009 ;;		_MTOUCH_Initialize
  6010 ;;		_MTOUCH_Sensor_SampleAll
  6011 ;;		_MTOUCH_Sensor_Sampled_ResetAll
  6012 ;;		_MTOUCH_Slider_ServiceAll
  6013 ;;		_MTOUCH_Tick
  6014 ;;		_MTOUCH_needReburst
  6015 ;; This function is called by:
  6016 ;;		_main
  6017 ;; This function uses a non-reentrant model
  6018 ;;
  6019                           
  6020                           
  6021                           ;psect for function _MTOUCH_Service_Mainloop
  6022  1662                     _MTOUCH_Service_Mainloop:
  6023                           
  6024                           ;mcc_generated_files/mtouch/mtouch.c: 121:     if(mtouch_request_init)
  6025                           
  6026                           ;incstack = 0
  6027                           ; Regs used in _MTOUCH_Service_Mainloop: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6028  1662  0021               	movlb	1	; select bank1
  6029  1663  084D               	movf	_mtouch_request_init^(0+128),w
  6030  1664  1903               	btfsc	3,2
  6031  1665  2E6A               	goto	l6456
  6032                           
  6033                           ;mcc_generated_files/mtouch/mtouch.c: 122:     {;mcc_generated_files/mtouch/mtouch.c: 12
      +                          3:         MTOUCH_Initialize();
  6034  1666  3191  215E  3196   	fcall	_MTOUCH_Initialize
  6035                           
  6036                           ;mcc_generated_files/mtouch/mtouch.c: 124:         mtouch_request_init = 0;
  6037  1669  01CD               	clrf	_mtouch_request_init^(0+128)
  6038  166A                     l6456:
  6039                           
  6040                           ;mcc_generated_files/mtouch/mtouch.c: 128:     if(mtouch_time_toScan)
  6041  166A  087B               	movf	_mtouch_time_toScan,w
  6042  166B  1903               	btfsc	3,2
  6043  166C  2E73               	goto	l6460
  6044                           
  6045                           ;mcc_generated_files/mtouch/mtouch.c: 129:     {;mcc_generated_files/mtouch/mtouch.c: 13
      +                          0:         if(MTOUCH_Sensor_SampleAll() == 0)
  6046  166D  3191  2149  3196   	fcall	_MTOUCH_Sensor_SampleAll
  6047  1670  3A00               	xorlw	0
  6048  1671  1D03               	skipz
  6049  1672  2E75               	goto	l6464
  6050  1673                     l6460:
  6051                           
  6052                           ;mcc_generated_files/mtouch/mtouch.c: 131:             return 0;
  6053  1673  3000               	movlw	0
  6054  1674  0008               	return
  6055  1675                     l6464:
  6056                           
  6057                           ;mcc_generated_files/mtouch/mtouch.c: 133:             MTOUCH_Button_ServiceAll();
  6058  1675  3190  20D2  3196   	fcall	_MTOUCH_Button_ServiceAll
  6059                           
  6060                           ;mcc_generated_files/mtouch/mtouch.c: 134:             MTOUCH_Slider_ServiceAll();
  6061  1678  3190  20AE  3196   	fcall	_MTOUCH_Slider_ServiceAll
  6062                           
  6063                           ;mcc_generated_files/mtouch/mtouch.c: 135:             mtouch_time_toScan = MTOUCH_needR
      +                          eburst();
  6064  167B  3190  207A  3196   	fcall	_MTOUCH_needReburst
  6065  167E  00D8               	movwf	??_MTOUCH_Service_Mainloop
  6066  167F  0858               	movf	??_MTOUCH_Service_Mainloop,w
  6067  1680  00FB               	movwf	_mtouch_time_toScan
  6068                           
  6069                           ;mcc_generated_files/mtouch/mtouch.c: 136:             MTOUCH_Sensor_Sampled_ResetAll();
  6070  1681  3192  2229  3196   	fcall	_MTOUCH_Sensor_Sampled_ResetAll
  6071                           
  6072                           ;mcc_generated_files/mtouch/mtouch.c: 137:             MTOUCH_Tick();
  6073  1684  319F  27B1         	fcall	_MTOUCH_Tick
  6074                           
  6075                           ;mcc_generated_files/mtouch/mtouch.c: 138:             return 1;
  6076  1686  3001               	movlw	1
  6077  1687  0008               	return
  6078  1688                     __end_of_MTOUCH_Service_Mainloop:
  6079                           
  6080                           	psect	text16
  6081  107A                     __ptext16:	
  6082 ;; *************** function _MTOUCH_needReburst *****************
  6083 ;; Defined at:
  6084 ;;		line 161 in file "mcc_generated_files/mtouch/mtouch.c"
  6085 ;; Parameters:    Size  Location     Type
  6086 ;;		None
  6087 ;; Auto vars:     Size  Location     Type
  6088 ;;  needReburst     1    8[BANK0 ] _Bool 
  6089 ;; Return value:  Size  Location     Type
  6090 ;;                  1    wreg      _Bool 
  6091 ;; Registers used:
  6092 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6093 ;; Tracked objects:
  6094 ;;		On entry : 1F/0
  6095 ;;		On exit  : 1F/0
  6096 ;;		Unchanged: 0/0
  6097 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6098 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6099 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6100 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6101 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6102 ;;Total ram usage:        2 bytes
  6103 ;; Hardware stack levels used: 1
  6104 ;; Hardware stack levels required when called: 7
  6105 ;; This function calls:
  6106 ;;		_MTOUCH_Button_Reburst_Service
  6107 ;;		_MTOUCH_Slider_Reburst_Service
  6108 ;; This function is called by:
  6109 ;;		_MTOUCH_Service_Mainloop
  6110 ;; This function uses a non-reentrant model
  6111 ;;
  6112                           
  6113                           
  6114                           ;psect for function _MTOUCH_needReburst
  6115  107A                     _MTOUCH_needReburst:
  6116                           
  6117                           ;mcc_generated_files/mtouch/mtouch.c: 163:     _Bool needReburst = 0;
  6118                           
  6119                           ;incstack = 0
  6120                           ; Regs used in _MTOUCH_needReburst: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6121  107A  01A8               	clrf	MTOUCH_needReburst@needReburst
  6122                           
  6123                           ;mcc_generated_files/mtouch/mtouch.c: 164:     needReburst |= MTOUCH_Slider_Reburst_Serv
      +                          ice();
  6124  107B  3192  22C2  3190   	fcall	_MTOUCH_Slider_Reburst_Service
  6125  107E  0020               	movlb	0	; select bank0
  6126  107F  00A7               	movwf	??_MTOUCH_needReburst
  6127  1080  0827               	movf	??_MTOUCH_needReburst,w
  6128  1081  04A8               	iorwf	MTOUCH_needReburst@needReburst,f
  6129                           
  6130                           ;mcc_generated_files/mtouch/mtouch.c: 165:     needReburst |= MTOUCH_Button_Reburst_Serv
      +                          ice();
  6131  1082  319F  27B4         	fcall	_MTOUCH_Button_Reburst_Service
  6132  1084  0020               	movlb	0	; select bank0
  6133  1085  00A7               	movwf	??_MTOUCH_needReburst
  6134  1086  0827               	movf	??_MTOUCH_needReburst,w
  6135  1087  04A8               	iorwf	MTOUCH_needReburst@needReburst,f
  6136                           
  6137                           ;mcc_generated_files/mtouch/mtouch.c: 167:     return needReburst;
  6138  1088  0828               	movf	MTOUCH_needReburst@needReburst,w
  6139  1089  0008               	return
  6140  108A                     __end_of_MTOUCH_needReburst:
  6141                           
  6142                           	psect	text17
  6143  12C2                     __ptext17:	
  6144 ;; *************** function _MTOUCH_Slider_Reburst_Service *****************
  6145 ;; Defined at:
  6146 ;;		line 1009 in file "mcc_generated_files/mtouch/mtouch_slider.c"
  6147 ;; Parameters:    Size  Location     Type
  6148 ;;		None
  6149 ;; Auto vars:     Size  Location     Type
  6150 ;;  sliderName      1    6[BANK0 ] enum E2918
  6151 ;; Return value:  Size  Location     Type
  6152 ;;                  1    wreg      _Bool 
  6153 ;; Registers used:
  6154 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6155 ;; Tracked objects:
  6156 ;;		On entry : 1F/0
  6157 ;;		On exit  : 1F/1
  6158 ;;		Unchanged: 0/0
  6159 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6160 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6161 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6162 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6163 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6164 ;;Total ram usage:        2 bytes
  6165 ;; Hardware stack levels used: 1
  6166 ;; Hardware stack levels required when called: 6
  6167 ;; This function calls:
  6168 ;;		_MTOUCH_Button_Reburst_Request
  6169 ;;		_MTOUCH_Slider_isReburstRequest
  6170 ;; This function is called by:
  6171 ;;		_MTOUCH_needReburst
  6172 ;; This function uses a non-reentrant model
  6173 ;;
  6174                           
  6175                           
  6176                           ;psect for function _MTOUCH_Slider_Reburst_Service
  6177  12C2                     _MTOUCH_Slider_Reburst_Service:
  6178                           
  6179                           ;mcc_generated_files/mtouch/mtouch_slider.c: 1011:     enum mtouch_slider_names sliderNa
      +                          me;;mcc_generated_files/mtouch/mtouch_slider.c: 1012:     for(sliderName = 0;sliderName 
      +                          < 2u;sliderName++)
  6180                           
  6181                           ;incstack = 0
  6182                           ; Regs used in _MTOUCH_Slider_Reburst_Service: [wreg+fsr1l+fsr1h+status,2+status,0+pclat
      +                          h+cstack]
  6183  12C2  01A6               	clrf	MTOUCH_Slider_Reburst_Service@sliderName
  6184  12C3                     l6196:
  6185                           
  6186                           ;mcc_generated_files/mtouch/mtouch_slider.c: 1013:     {;mcc_generated_files/mtouch/mtou
      +                          ch_slider.c: 1014:         if(MTOUCH_Slider_isReburstRequest(sliderName))
  6187  12C3  0826               	movf	MTOUCH_Slider_Reburst_Service@sliderName,w
  6188  12C4  3191  210D  3192   	fcall	_MTOUCH_Slider_isReburstRequest
  6189  12C7  3A00               	xorlw	0
  6190  12C8  1903               	skipnz
  6191  12C9  2AD5               	goto	l6200
  6192                           
  6193                           ;mcc_generated_files/mtouch/mtouch_slider.c: 1015:         {;mcc_generated_files/mtouch/
      +                          mtouch_slider.c: 1016:             MTOUCH_Button_Reburst_Request(mtouch_slider[sliderNam
      +                          e].startSegment);
  6194  12CA  0E26               	swapf	MTOUCH_Slider_Reburst_Service@sliderName,w
  6195  12CB  39F0               	andlw	240
  6196  12CC  0726               	addwf	MTOUCH_Slider_Reburst_Service@sliderName,w
  6197  12CD  3E22               	addlw	(low ((_mtouch_slider| (0+256)+2)))& (0+255)
  6198  12CE  0086               	movwf	6
  6199  12CF  3001               	movlw	1	; select bank2/3
  6200  12D0  0087               	movwf	7
  6201  12D1  0801               	movf	1,w
  6202  12D2  3191  21F0  3192   	fcall	_MTOUCH_Button_Reburst_Request
  6203  12D5                     l6200:
  6204                           
  6205                           ;mcc_generated_files/mtouch/mtouch_slider.c: 1018:     }
  6206  12D5  3001               	movlw	1
  6207  12D6  0020               	movlb	0	; select bank0
  6208  12D7  00A5               	movwf	??_MTOUCH_Slider_Reburst_Service
  6209  12D8  0825               	movf	??_MTOUCH_Slider_Reburst_Service,w
  6210  12D9  07A6               	addwf	MTOUCH_Slider_Reburst_Service@sliderName,f
  6211  12DA  3002               	movlw	2
  6212  12DB  0226               	subwf	MTOUCH_Slider_Reburst_Service@sliderName,w
  6213  12DC  1C03               	skipc
  6214  12DD  2AC3               	goto	l6196
  6215                           
  6216                           ;mcc_generated_files/mtouch/mtouch_slider.c: 1019:     return sliderGroupStatus & (uint8
      +                          _t)((uint8_t)1u<<7u);
  6217  12DE  0021               	movlb	1	; select bank1
  6218  12DF  0848               	movf	_sliderGroupStatus^(0+128),w
  6219  12E0  3980               	andlw	128
  6220  12E1  0008               	return
  6221  12E2                     __end_of_MTOUCH_Slider_Reburst_Service:
  6222                           
  6223                           	psect	text18
  6224  110D                     __ptext18:	
  6225 ;; *************** function _MTOUCH_Slider_isReburstRequest *****************
  6226 ;; Defined at:
  6227 ;;		line 869 in file "mcc_generated_files/mtouch/mtouch_slider.c"
  6228 ;; Parameters:    Size  Location     Type
  6229 ;;  sliderName      1    wreg     enum E2918
  6230 ;; Auto vars:     Size  Location     Type
  6231 ;;  sliderName      1    2[COMMON] enum E2918
  6232 ;; Return value:  Size  Location     Type
  6233 ;;                  1    wreg      _Bool 
  6234 ;; Registers used:
  6235 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6236 ;; Tracked objects:
  6237 ;;		On entry : 1F/0
  6238 ;;		On exit  : 1F/0
  6239 ;;		Unchanged: 1F/0
  6240 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6241 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6242 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6243 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6244 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6245 ;;Total ram usage:        1 bytes
  6246 ;; Hardware stack levels used: 1
  6247 ;; Hardware stack levels required when called: 4
  6248 ;; This function calls:
  6249 ;;		Nothing
  6250 ;; This function is called by:
  6251 ;;		_MTOUCH_Slider_Reburst_Service
  6252 ;; This function uses a non-reentrant model
  6253 ;;
  6254                           
  6255                           
  6256                           ;psect for function _MTOUCH_Slider_isReburstRequest
  6257  110D                     _MTOUCH_Slider_isReburstRequest:
  6258                           
  6259                           ;incstack = 0
  6260                           ; Regs used in _MTOUCH_Slider_isReburstRequest: [wreg+fsr1l+fsr1h+status,2+status,0]
  6261                           ;MTOUCH_Slider_isReburstRequest@sliderName stored from wreg
  6262  110D  00F2               	movwf	MTOUCH_Slider_isReburstRequest@sliderName
  6263                           
  6264                           ;mcc_generated_files/mtouch/mtouch_slider.c: 869: _Bool MTOUCH_Slider_isReburstRequest(e
      +                          num mtouch_slider_names sliderName);mcc_generated_files/mtouch/mtouch_slider.c: 870: {;m
      +                          cc_generated_files/mtouch/mtouch_slider.c: 871:     if (sliderName < 2u)
  6265  110E  3002               	movlw	2
  6266  110F  0272               	subwf	MTOUCH_Slider_isReburstRequest@sliderName,w
  6267  1110  1803               	skipnc
  6268  1111  291F               	goto	l6122
  6269                           
  6270                           ;mcc_generated_files/mtouch/mtouch_slider.c: 872:     {;mcc_generated_files/mtouch/mtouc
      +                          h_slider.c: 873:         return (mtouch_slider[sliderName].sliderStatus & (uint8_t)((uin
      +                          t8_t)1u<<7u)) ? 1 : 0;
  6271  1112  0E72               	swapf	MTOUCH_Slider_isReburstRequest@sliderName,w
  6272  1113  39F0               	andlw	240
  6273  1114  0772               	addwf	MTOUCH_Slider_isReburstRequest@sliderName,w
  6274  1115  3E30               	addlw	(low ((_mtouch_slider| (0+256)+16)))& (0+255)
  6275  1116  0086               	movwf	6
  6276  1117  3001               	movlw	1	; select bank2/3
  6277  1118  0087               	movwf	7
  6278  1119  1F81               	btfss	1,7
  6279  111A  291D               	goto	u5470
  6280  111B  3001               	movlw	1
  6281  111C  0008               	return
  6282  111D                     u5470:
  6283  111D  3000               	movlw	0
  6284  111E  0008               	return
  6285  111F                     l6122:
  6286                           
  6287                           ;mcc_generated_files/mtouch/mtouch_slider.c: 876:         return 0;
  6288  111F  3000               	movlw	0
  6289  1120  0008               	return
  6290  1121                     __end_of_MTOUCH_Slider_isReburstRequest:
  6291                           
  6292                           	psect	text19
  6293  11F0                     __ptext19:	
  6294 ;; *************** function _MTOUCH_Button_Reburst_Request *****************
  6295 ;; Defined at:
  6296 ;;		line 835 in file "mcc_generated_files/mtouch/mtouch_button.c"
  6297 ;; Parameters:    Size  Location     Type
  6298 ;;  button          1    wreg     enum E2935
  6299 ;; Auto vars:     Size  Location     Type
  6300 ;;  button          1    4[BANK0 ] enum E2935
  6301 ;; Return value:  Size  Location     Type
  6302 ;;                  1    wreg      void 
  6303 ;; Registers used:
  6304 ;;		wreg, status,2, status,0, pclath, cstack
  6305 ;; Tracked objects:
  6306 ;;		On entry : 1F/0
  6307 ;;		On exit  : 1F/1
  6308 ;;		Unchanged: 0/0
  6309 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6310 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6311 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6312 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6313 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6314 ;;Total ram usage:        5 bytes
  6315 ;; Hardware stack levels used: 1
  6316 ;; Hardware stack levels required when called: 5
  6317 ;; This function calls:
  6318 ;;		_Button_Reburst_Request
  6319 ;;		___wmul
  6320 ;; This function is called by:
  6321 ;;		_MTOUCH_Slider_Reburst_Service
  6322 ;; This function uses a non-reentrant model
  6323 ;;
  6324                           
  6325                           
  6326                           ;psect for function _MTOUCH_Button_Reburst_Request
  6327  11F0                     _MTOUCH_Button_Reburst_Request:
  6328                           
  6329                           ;incstack = 0
  6330                           ; Regs used in _MTOUCH_Button_Reburst_Request: [wreg+status,2+status,0+pclath+cstack]
  6331                           ;MTOUCH_Button_Reburst_Request@button stored from wreg
  6332  11F0  00A4               	movwf	MTOUCH_Button_Reburst_Request@button
  6333                           
  6334                           ;mcc_generated_files/mtouch/mtouch_button.c: 835: void MTOUCH_Button_Reburst_Request(enu
      +                          m mtouch_button_names button);mcc_generated_files/mtouch/mtouch_button.c: 836: {;mcc_gen
      +                          erated_files/mtouch/mtouch_button.c: 837:     Button_Reburst_Request(&mtouch_button[butt
      +                          on]);
  6335  11F1  0824               	movf	MTOUCH_Button_Reburst_Request@button,w
  6336  11F2  00A0               	movwf	??_MTOUCH_Button_Reburst_Request
  6337  11F3  01A1               	clrf	??_MTOUCH_Button_Reburst_Request+1
  6338  11F4  0820               	movf	??_MTOUCH_Button_Reburst_Request,w
  6339  11F5  00F2               	movwf	___wmul@multiplier
  6340  11F6  0821               	movf	??_MTOUCH_Button_Reburst_Request+1,w
  6341  11F7  00F3               	movwf	___wmul@multiplier+1
  6342  11F8  3012               	movlw	18
  6343  11F9  00F4               	movwf	___wmul@multiplicand
  6344  11FA  3000               	movlw	0
  6345  11FB  00F5               	movwf	___wmul@multiplicand+1
  6346  11FC  3188  2000  3191   	fcall	___wmul
  6347  11FF  303C               	movlw	60
  6348  1200  00A2               	movwf	??_MTOUCH_Button_Reburst_Request+2
  6349  1201  3023               	movlw	35
  6350  1202  00A3               	movwf	??_MTOUCH_Button_Reburst_Request+3
  6351  1203  0872               	movf	?___wmul,w
  6352  1204  0722               	addwf	??_MTOUCH_Button_Reburst_Request+2,w
  6353  1205  00F8               	movwf	Button_Reburst_Request@button
  6354  1206  0873               	movf	?___wmul+1,w
  6355  1207  3D23               	addwfc	??_MTOUCH_Button_Reburst_Request+3,w
  6356  1208  00F9               	movwf	Button_Reburst_Request@button+1
  6357  1209  319F  27B7         	fcall	_Button_Reburst_Request
  6358  120B  0008               	return
  6359  120C                     __end_of_MTOUCH_Button_Reburst_Request:
  6360                           
  6361                           	psect	text20
  6362  1FB4                     __ptext20:	
  6363 ;; *************** function _MTOUCH_Button_Reburst_Service *****************
  6364 ;; Defined at:
  6365 ;;		line 840 in file "mcc_generated_files/mtouch/mtouch_button.c"
  6366 ;; Parameters:    Size  Location     Type
  6367 ;;		None
  6368 ;; Auto vars:     Size  Location     Type
  6369 ;;		None
  6370 ;; Return value:  Size  Location     Type
  6371 ;;                  1    wreg      _Bool 
  6372 ;; Registers used:
  6373 ;;		wreg
  6374 ;; Tracked objects:
  6375 ;;		On entry : 1F/0
  6376 ;;		On exit  : 1F/1
  6377 ;;		Unchanged: 0/0
  6378 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6379 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6380 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6381 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6382 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6383 ;;Total ram usage:        0 bytes
  6384 ;; Hardware stack levels used: 1
  6385 ;; Hardware stack levels required when called: 4
  6386 ;; This function calls:
  6387 ;;		Nothing
  6388 ;; This function is called by:
  6389 ;;		_MTOUCH_needReburst
  6390 ;; This function uses a non-reentrant model
  6391 ;;
  6392                           
  6393                           
  6394                           ;psect for function _MTOUCH_Button_Reburst_Service
  6395  1FB4                     _MTOUCH_Button_Reburst_Service:
  6396                           
  6397                           ;mcc_generated_files/mtouch/mtouch_button.c: 842:     return button_reburst_request;
  6398                           
  6399                           ;incstack = 0
  6400                           ; Regs used in _MTOUCH_Button_Reburst_Service: [wreg]
  6401  1FB4  0021               	movlb	1	; select bank1
  6402  1FB5  0849               	movf	_button_reburst_request^(0+128),w
  6403  1FB6  0008               	return
  6404  1FB7                     __end_of_MTOUCH_Button_Reburst_Service:
  6405                           
  6406                           	psect	text21
  6407  1FB1                     __ptext21:	
  6408 ;; *************** function _MTOUCH_Tick *****************
  6409 ;; Defined at:
  6410 ;;		line 151 in file "mcc_generated_files/mtouch/mtouch.c"
  6411 ;; Parameters:    Size  Location     Type
  6412 ;;		None
  6413 ;; Auto vars:     Size  Location     Type
  6414 ;;		None
  6415 ;; Return value:  Size  Location     Type
  6416 ;;                  1    wreg      void 
  6417 ;; Registers used:
  6418 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6419 ;; Tracked objects:
  6420 ;;		On entry : 1F/0
  6421 ;;		On exit  : 1F/0
  6422 ;;		Unchanged: 0/0
  6423 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6424 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6425 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6426 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6427 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6428 ;;Total ram usage:        0 bytes
  6429 ;; Hardware stack levels used: 1
  6430 ;; Hardware stack levels required when called: 8
  6431 ;; This function calls:
  6432 ;;		_MTOUCH_Button_Tick
  6433 ;; This function is called by:
  6434 ;;		_MTOUCH_Service_Mainloop
  6435 ;; This function uses a non-reentrant model
  6436 ;;
  6437                           
  6438                           
  6439                           ;psect for function _MTOUCH_Tick
  6440  1FB1                     _MTOUCH_Tick:
  6441                           
  6442                           ;mcc_generated_files/mtouch/mtouch.c: 153:     MTOUCH_Button_Tick();
  6443                           
  6444                           ;incstack = 0
  6445                           ; Regs used in _MTOUCH_Tick: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6446  1FB1  3196  26B0         	fcall	_MTOUCH_Button_Tick
  6447  1FB3  0008               	return
  6448  1FB4                     __end_of_MTOUCH_Tick:
  6449                           
  6450                           	psect	text22
  6451  16B0                     __ptext22:	
  6452 ;; *************** function _MTOUCH_Button_Tick *****************
  6453 ;; Defined at:
  6454 ;;		line 494 in file "mcc_generated_files/mtouch/mtouch_button.c"
  6455 ;; Parameters:    Size  Location     Type
  6456 ;;		None
  6457 ;; Auto vars:     Size  Location     Type
  6458 ;;  i               1   14[BANK0 ] unsigned char 
  6459 ;; Return value:  Size  Location     Type
  6460 ;;                  1    wreg      void 
  6461 ;; Registers used:
  6462 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6463 ;; Tracked objects:
  6464 ;;		On entry : 1F/0
  6465 ;;		On exit  : 1F/0
  6466 ;;		Unchanged: 0/0
  6467 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6468 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6469 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6470 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6471 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6472 ;;Total ram usage:        7 bytes
  6473 ;; Hardware stack levels used: 1
  6474 ;; Hardware stack levels required when called: 7
  6475 ;; This function calls:
  6476 ;;		_Button_Tick_helper
  6477 ;;		___wmul
  6478 ;; This function is called by:
  6479 ;;		_MTOUCH_Tick
  6480 ;; This function uses a non-reentrant model
  6481 ;;
  6482                           
  6483                           
  6484                           ;psect for function _MTOUCH_Button_Tick
  6485  16B0                     _MTOUCH_Button_Tick:
  6486                           
  6487                           ;mcc_generated_files/mtouch/mtouch_button.c: 496:     uint8_t i;;mcc_generated_files/mto
      +                          uch/mtouch_button.c: 497:     for (i = 0; i < 10u; i++)
  6488                           
  6489                           ;incstack = 0
  6490                           ; Regs used in _MTOUCH_Button_Tick: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6491  16B0  01AE               	clrf	MTOUCH_Button_Tick@i
  6492  16B1                     l6182:
  6493                           
  6494                           ;mcc_generated_files/mtouch/mtouch_button.c: 498:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 499:         Button_Tick_helper(&mtouch_button[i]);
  6495  16B1  082E               	movf	MTOUCH_Button_Tick@i,w
  6496  16B2  00A8               	movwf	??_MTOUCH_Button_Tick
  6497  16B3  01A9               	clrf	??_MTOUCH_Button_Tick+1
  6498  16B4  0828               	movf	??_MTOUCH_Button_Tick,w
  6499  16B5  00F2               	movwf	___wmul@multiplier
  6500  16B6  0829               	movf	??_MTOUCH_Button_Tick+1,w
  6501  16B7  00F3               	movwf	___wmul@multiplier+1
  6502  16B8  3012               	movlw	18
  6503  16B9  00F4               	movwf	___wmul@multiplicand
  6504  16BA  3000               	movlw	0
  6505  16BB  00F5               	movwf	___wmul@multiplicand+1
  6506  16BC  3188  2000  3196   	fcall	___wmul
  6507  16BF  303C               	movlw	60
  6508  16C0  00AA               	movwf	??_MTOUCH_Button_Tick+2
  6509  16C1  3023               	movlw	35
  6510  16C2  00AB               	movwf	??_MTOUCH_Button_Tick+3
  6511  16C3  0872               	movf	?___wmul,w
  6512  16C4  072A               	addwf	??_MTOUCH_Button_Tick+2,w
  6513  16C5  00AC               	movwf	_MTOUCH_Button_Tick$2906
  6514  16C6  0873               	movf	?___wmul+1,w
  6515  16C7  3D2B               	addwfc	??_MTOUCH_Button_Tick+3,w
  6516  16C8  00AD               	movwf	_MTOUCH_Button_Tick$2906+1
  6517                           
  6518                           ;mcc_generated_files/mtouch/mtouch_button.c: 498:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 499:         Button_Tick_helper(&mtouch_button[i]);
  6519  16C9  082D               	movf	_MTOUCH_Button_Tick$2906+1,w
  6520  16CA  00A5               	movwf	Button_Tick_helper@button+1
  6521  16CB  082C               	movf	_MTOUCH_Button_Tick$2906,w
  6522  16CC  00A4               	movwf	Button_Tick_helper@button
  6523  16CD  318A  22A2  3196   	fcall	_Button_Tick_helper
  6524                           
  6525                           ;mcc_generated_files/mtouch/mtouch_button.c: 500:     }
  6526  16D0  3001               	movlw	1
  6527  16D1  00A8               	movwf	??_MTOUCH_Button_Tick
  6528  16D2  0828               	movf	??_MTOUCH_Button_Tick,w
  6529  16D3  07AE               	addwf	MTOUCH_Button_Tick@i,f
  6530  16D4  300A               	movlw	10
  6531  16D5  022E               	subwf	MTOUCH_Button_Tick@i,w
  6532  16D6  1803               	btfsc	3,0
  6533  16D7  0008               	return
  6534  16D8  2EB1               	goto	l6182
  6535  16D9                     __end_of_MTOUCH_Button_Tick:
  6536                           
  6537                           	psect	text23
  6538  0AA2                     __ptext23:	
  6539 ;; *************** function _Button_Tick_helper *****************
  6540 ;; Defined at:
  6541 ;;		line 502 in file "mcc_generated_files/mtouch/mtouch_button.c"
  6542 ;; Parameters:    Size  Location     Type
  6543 ;;  button          2    4[BANK0 ] PTR struct .
  6544 ;;		 -> mtouch_button(180), 
  6545 ;; Auto vars:     Size  Location     Type
  6546 ;;		None
  6547 ;; Return value:  Size  Location     Type
  6548 ;;                  1    wreg      void 
  6549 ;; Registers used:
  6550 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6551 ;; Tracked objects:
  6552 ;;		On entry : 1F/0
  6553 ;;		On exit  : 1F/0
  6554 ;;		Unchanged: 0/0
  6555 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6556 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6557 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6558 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6559 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6560 ;;Total ram usage:        4 bytes
  6561 ;; Hardware stack levels used: 1
  6562 ;; Hardware stack levels required when called: 6
  6563 ;; This function calls:
  6564 ;;		_MTOUCH_Sensor_Enable
  6565 ;; This function is called by:
  6566 ;;		_MTOUCH_Button_Tick
  6567 ;; This function uses a non-reentrant model
  6568 ;;
  6569                           
  6570                           
  6571                           ;psect for function _Button_Tick_helper
  6572  0AA2                     _Button_Tick_helper:
  6573                           
  6574                           ;mcc_generated_files/mtouch/mtouch_button.c: 502: static void Button_Tick_helper(mtouch_
      +                          button_t* button);mcc_generated_files/mtouch/mtouch_button.c: 503: {;mcc_generated_files
      +                          /mtouch/mtouch_button.c: 505:     if ((button->state) == MTOUCH_BUTTON_STATE_pressed)
  6575                           
  6576                           ;incstack = 0
  6577                           ; Regs used in _Button_Tick_helper: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6578  0AA2  0824               	movf	Button_Tick_helper@button,w
  6579  0AA3  0086               	movwf	6
  6580  0AA4  0825               	movf	Button_Tick_helper@button+1,w
  6581  0AA5  0087               	movwf	7
  6582  0AA6  3142               	addfsr 1,2
  6583  0AA7  3003               	movlw	3
  6584  0AA8  0601               	xorwf	1,w
  6585  0AA9  1D03               	btfss	3,2
  6586  0AAA  2AC8               	goto	l6050
  6587                           
  6588                           ;mcc_generated_files/mtouch/mtouch_button.c: 506:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 507:         (button->counter)++;
  6589  0AAB  0824               	movf	Button_Tick_helper@button,w
  6590  0AAC  0086               	movwf	6
  6591  0AAD  0825               	movf	Button_Tick_helper@button+1,w
  6592  0AAE  0087               	movwf	7
  6593  0AAF  314B               	addfsr 1,11
  6594  0AB0  3001               	movlw	1
  6595  0AB1  0781               	addwf	1,f
  6596  0AB2  3141               	addfsr 1,1
  6597  0AB3  1803               	skipnc
  6598  0AB4  0A81               	incf	1,f
  6599                           
  6600                           ;mcc_generated_files/mtouch/mtouch_button.c: 508:         if (button->counter == (mtouch
      +                          _button_statecounter_t)0)
  6601  0AB5  0824               	movf	Button_Tick_helper@button,w
  6602  0AB6  0086               	movwf	6
  6603  0AB7  0825               	movf	Button_Tick_helper@button+1,w
  6604  0AB8  0087               	movwf	7
  6605  0AB9  314B               	addfsr 1,11
  6606  0ABA  0016               	moviw fsr1++
  6607  0ABB  0401               	iorwf	1,w
  6608  0ABC  1D03               	btfss	3,2
  6609  0ABD  0008               	return
  6610                           
  6611                           ;mcc_generated_files/mtouch/mtouch_button.c: 509:         {;mcc_generated_files/mtouch/m
      +                          touch_button.c: 510:             button->counter = (mtouch_button_statecounter_t)0xFFFF;
  6612  0ABE  0824               	movf	Button_Tick_helper@button,w
  6613  0ABF  0086               	movwf	6
  6614  0AC0  0825               	movf	Button_Tick_helper@button+1,w
  6615  0AC1  0087               	movwf	7
  6616  0AC2  314B               	addfsr 1,11
  6617  0AC3  30FF               	movlw	255
  6618  0AC4  3FC0               	movwi [0]fsr1
  6619  0AC5  30FF               	movlw	255
  6620  0AC6  3FC1               	movwi [1]fsr1
  6621  0AC7  0008               	return
  6622  0AC8                     l6050:
  6623  0AC8  0824               	movf	Button_Tick_helper@button,w
  6624  0AC9  0086               	movwf	6
  6625  0ACA  0825               	movf	Button_Tick_helper@button+1,w
  6626  0ACB  0087               	movwf	7
  6627  0ACC  3142               	addfsr 1,2
  6628  0ACD  3005               	movlw	5
  6629  0ACE  0601               	xorwf	1,w
  6630  0ACF  1D03               	btfss	3,2
  6631  0AD0  0008               	return
  6632                           
  6633                           ;mcc_generated_files/mtouch/mtouch_button.c: 515:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 516:         (button->counter)++;
  6634  0AD1  0824               	movf	Button_Tick_helper@button,w
  6635  0AD2  0086               	movwf	6
  6636  0AD3  0825               	movf	Button_Tick_helper@button+1,w
  6637  0AD4  0087               	movwf	7
  6638  0AD5  314B               	addfsr 1,11
  6639  0AD6  3001               	movlw	1
  6640  0AD7  0781               	addwf	1,f
  6641  0AD8  3141               	addfsr 1,1
  6642  0AD9  1803               	skipnc
  6643  0ADA  0A81               	incf	1,f
  6644                           
  6645                           ;mcc_generated_files/mtouch/mtouch_button.c: 517:         if(button->counter >= ((mtouch
      +                          _button_baselinecounter_t)64u))
  6646  0ADB  0824               	movf	Button_Tick_helper@button,w
  6647  0ADC  0086               	movwf	6
  6648  0ADD  0825               	movf	Button_Tick_helper@button+1,w
  6649  0ADE  0087               	movwf	7
  6650  0ADF  314B               	addfsr 1,11
  6651  0AE0  3F40               	moviw [0]fsr1
  6652  0AE1  00A6               	movwf	??_Button_Tick_helper
  6653  0AE2  3F41               	moviw [1]fsr1
  6654  0AE3  00A7               	movwf	??_Button_Tick_helper+1
  6655  0AE4  3000               	movlw	0
  6656  0AE5  0227               	subwf	??_Button_Tick_helper+1,w
  6657  0AE6  3040               	movlw	64
  6658  0AE7  1903               	skipnz
  6659  0AE8  0226               	subwf	??_Button_Tick_helper,w
  6660  0AE9  1C03               	skipc
  6661  0AEA  0008               	return
  6662                           
  6663                           ;mcc_generated_files/mtouch/mtouch_button.c: 518:         {;mcc_generated_files/mtouch/m
      +                          touch_button.c: 519:             button->counter = (mtouch_button_statecounter_t)0;
  6664  0AEB  0824               	movf	Button_Tick_helper@button,w
  6665  0AEC  0086               	movwf	6
  6666  0AED  0825               	movf	Button_Tick_helper@button+1,w
  6667  0AEE  0087               	movwf	7
  6668  0AEF  314B               	addfsr 1,11
  6669  0AF0  3000               	movlw	0
  6670  0AF1  3FC0               	movwi [0]fsr1
  6671  0AF2  3FC1               	movwi [1]fsr1
  6672                           
  6673                           ;mcc_generated_files/mtouch/mtouch_button.c: 520:             MTOUCH_Sensor_Enable(butto
      +                          n->sensor);
  6674  0AF3  0824               	movf	Button_Tick_helper@button,w
  6675  0AF4  0086               	movwf	6
  6676  0AF5  0825               	movf	Button_Tick_helper@button+1,w
  6677  0AF6  0087               	movwf	7
  6678  0AF7  3141               	addfsr 1,1
  6679  0AF8  0801               	movf	1,w
  6680  0AF9  3192  2264         	fcall	_MTOUCH_Sensor_Enable
  6681  0AFB  0008               	return
  6682  0AFC                     __end_of_Button_Tick_helper:
  6683                           
  6684                           	psect	text24
  6685  10AE                     __ptext24:	
  6686 ;; *************** function _MTOUCH_Slider_ServiceAll *****************
  6687 ;; Defined at:
  6688 ;;		line 991 in file "mcc_generated_files/mtouch/mtouch_slider.c"
  6689 ;; Parameters:    Size  Location     Type
  6690 ;;		None
  6691 ;; Auto vars:     Size  Location     Type
  6692 ;;  slider          1   55[BANK0 ] enum E2918
  6693 ;; Return value:  Size  Location     Type
  6694 ;;                  1    wreg      void 
  6695 ;; Registers used:
  6696 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6697 ;; Tracked objects:
  6698 ;;		On entry : 1F/0
  6699 ;;		On exit  : 1F/0
  6700 ;;		Unchanged: 0/0
  6701 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6702 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6703 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6704 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6705 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6706 ;;Total ram usage:        2 bytes
  6707 ;; Hardware stack levels used: 1
  6708 ;; Hardware stack levels required when called: 9
  6709 ;; This function calls:
  6710 ;;		_Slider_Service
  6711 ;; This function is called by:
  6712 ;;		_MTOUCH_Service_Mainloop
  6713 ;; This function uses a non-reentrant model
  6714 ;;
  6715                           
  6716                           
  6717                           ;psect for function _MTOUCH_Slider_ServiceAll
  6718  10AE                     _MTOUCH_Slider_ServiceAll:
  6719                           
  6720                           ;mcc_generated_files/mtouch/mtouch_slider.c: 993:     enum mtouch_slider_names slider;;m
      +                          cc_generated_files/mtouch/mtouch_slider.c: 996:     sliderGroupStatus = 0u;
  6721                           
  6722                           ;incstack = 0
  6723                           ; Regs used in _MTOUCH_Slider_ServiceAll: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6724  10AE  0021               	movlb	1	; select bank1
  6725  10AF  01C8               	clrf	_sliderGroupStatus^(0+128)
  6726                           
  6727                           ;mcc_generated_files/mtouch/mtouch_slider.c: 998:     for (slider = 0u; slider < 2u; sli
      +                          der++)
  6728  10B0  0020               	movlb	0	; select bank0
  6729  10B1  01D7               	clrf	MTOUCH_Slider_ServiceAll@slider
  6730  10B2                     l6376:
  6731                           
  6732                           ;mcc_generated_files/mtouch/mtouch_slider.c: 999:     {;mcc_generated_files/mtouch/mtouc
      +                          h_slider.c: 1000:         Slider_Service(slider);
  6733  10B2  0857               	movf	MTOUCH_Slider_ServiceAll@slider,w
  6734  10B3  3181  2198  3190   	fcall	_Slider_Service
  6735                           
  6736                           ;mcc_generated_files/mtouch/mtouch_slider.c: 1001:     }
  6737  10B6  3001               	movlw	1
  6738  10B7  0020               	movlb	0	; select bank0
  6739  10B8  00D6               	movwf	??_MTOUCH_Slider_ServiceAll
  6740  10B9  0856               	movf	??_MTOUCH_Slider_ServiceAll,w
  6741  10BA  07D7               	addwf	MTOUCH_Slider_ServiceAll@slider,f
  6742  10BB  3002               	movlw	2
  6743  10BC  0257               	subwf	MTOUCH_Slider_ServiceAll@slider,w
  6744  10BD  1803               	btfsc	3,0
  6745  10BE  0008               	return
  6746  10BF  28B2               	goto	l6376
  6747  10C0                     __end_of_MTOUCH_Slider_ServiceAll:
  6748                           
  6749                           	psect	text25
  6750  0198                     __ptext25:	
  6751 ;; *************** function _Slider_Service *****************
  6752 ;; Defined at:
  6753 ;;		line 701 in file "mcc_generated_files/mtouch/mtouch_slider.c"
  6754 ;; Parameters:    Size  Location     Type
  6755 ;;  sliderName      1    wreg     enum E2918
  6756 ;; Auto vars:     Size  Location     Type
  6757 ;;  sliderName      1   52[BANK0 ] enum E2918
  6758 ;;  slider          1   53[BANK0 ] PTR struct .
  6759 ;;		 -> mtouch_slider(34), 
  6760 ;;  segment         2   50[BANK0 ] unsigned short 
  6761 ;;  position        2   47[BANK0 ] unsigned short 
  6762 ;;  status          1   49[BANK0 ] unsigned char 
  6763 ;;  valid_contac    1   46[BANK0 ] unsigned char 
  6764 ;;  group_status    1   45[BANK0 ] unsigned char 
  6765 ;; Return value:  Size  Location     Type
  6766 ;;                  1    wreg      void 
  6767 ;; Registers used:
  6768 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6769 ;; Tracked objects:
  6770 ;;		On entry : 1F/0
  6771 ;;		On exit  : 1E/0
  6772 ;;		Unchanged: 0/0
  6773 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6774 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6775 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6776 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6777 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6778 ;;Total ram usage:       13 bytes
  6779 ;; Hardware stack levels used: 1
  6780 ;; Hardware stack levels required when called: 8
  6781 ;; This function calls:
  6782 ;;		_MTOUCH_Button_isPressed
  6783 ;;		_Slider_DefaultCallback
  6784 ;;		_calculate_contact_size
  6785 ;;		_calculate_position
  6786 ;; This function is called by:
  6787 ;;		_MTOUCH_Slider_ServiceAll
  6788 ;; This function uses a non-reentrant model
  6789 ;;
  6790                           
  6791                           
  6792                           ;psect for function _Slider_Service
  6793  0198                     _Slider_Service:
  6794                           
  6795                           ;incstack = 0
  6796                           ; Regs used in _Slider_Service: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6797                           ;Slider_Service@sliderName stored from wreg
  6798  0198  00D4               	movwf	Slider_Service@sliderName
  6799                           
  6800                           ;mcc_generated_files/mtouch/mtouch_slider.c: 701: static void Slider_Service(enum mtouch
      +                          _slider_names sliderName);mcc_generated_files/mtouch/mtouch_slider.c: 702: {;mcc_generat
      +                          ed_files/mtouch/mtouch_slider.c: 704:     uint16_t segment, position;;mcc_generated_file
      +                          s/mtouch/mtouch_slider.c: 705:     uint8_t status = 0u, group_status = 0u;
  6801  0199  01D1               	clrf	Slider_Service@status
  6802  019A  01CD               	clrf	Slider_Service@group_status
  6803                           
  6804                           ;mcc_generated_files/mtouch/mtouch_slider.c: 706:     uint8_t valid_contact_found = 0u;
  6805  019B  01CE               	clrf	Slider_Service@valid_contact_found
  6806                           
  6807                           ;mcc_generated_files/mtouch/mtouch_slider.c: 708:     if (sliderName < 2u)
  6808  019C  3002               	movlw	2
  6809  019D  0254               	subwf	Slider_Service@sliderName,w
  6810  019E  1803               	skipnc
  6811  019F  0008               	return
  6812                           
  6813                           ;mcc_generated_files/mtouch/mtouch_slider.c: 709:     {;mcc_generated_files/mtouch/mtouc
      +                          h_slider.c: 711:         mtouch_slider_t* slider = &mtouch_slider[sliderName];
  6814  01A0  0E54               	swapf	Slider_Service@sliderName,w
  6815  01A1  39F0               	andlw	240
  6816  01A2  0754               	addwf	Slider_Service@sliderName,w
  6817  01A3  3E20               	addlw	(low (_mtouch_slider| (0+256)))& (0+255)
  6818  01A4  00C9               	movwf	??_Slider_Service
  6819  01A5  0849               	movf	??_Slider_Service,w
  6820  01A6  00D5               	movwf	Slider_Service@slider
  6821                           
  6822                           ;mcc_generated_files/mtouch/mtouch_slider.c: 713:         if ((slider->type <= MTOUCH_TY
      +                          PE_WHEEL) || (slider->resolDeadband <= 0xCFu))
  6823  01A7  0A55               	incf	Slider_Service@slider,w
  6824  01A8  0086               	movwf	6
  6825  01A9  3001               	movlw	1	; select bank2/3
  6826  01AA  0087               	movwf	7
  6827  01AB  3002               	movlw	2
  6828  01AC  0201               	subwf	1,w
  6829  01AD  1C03               	skipc
  6830  01AE  29B8               	goto	l6264
  6831  01AF  0855               	movf	Slider_Service@slider,w
  6832  01B0  3E04               	addlw	4
  6833  01B1  0086               	movwf	6
  6834  01B2  3001               	movlw	1	; select bank2/3
  6835  01B3  0087               	movwf	7
  6836  01B4  30D0               	movlw	208
  6837  01B5  0201               	subwf	1,w
  6838  01B6  1803               	skipnc
  6839  01B7  0008               	return
  6840  01B8                     l6264:
  6841                           
  6842                           ;mcc_generated_files/mtouch/mtouch_slider.c: 714:         {;mcc_generated_files/mtouch/m
      +                          touch_slider.c: 716:             resol_bits = (slider->resolDeadband & 0xF0u) >> 4u;
  6843  01B8  0855               	movf	Slider_Service@slider,w
  6844  01B9  3E04               	addlw	4
  6845  01BA  0086               	movwf	6
  6846  01BB  3001               	movlw	1	; select bank2/3
  6847  01BC  0087               	movwf	7
  6848  01BD  0801               	movf	1,w
  6849  01BE  00C9               	movwf	??_Slider_Service
  6850  01BF  3004               	movlw	4
  6851  01C0                     u5645:
  6852  01C0  36C9               	lsrf	??_Slider_Service,f
  6853  01C1  0B89               	decfsz	9,f
  6854  01C2  29C0               	goto	u5645
  6855  01C3  0849               	movf	??_Slider_Service,w
  6856  01C4  390F               	andlw	15
  6857  01C5  00CA               	movwf	??_Slider_Service+1
  6858  01C6  084A               	movf	??_Slider_Service+1,w
  6859  01C7  00E3               	movwf	_resol_bits
  6860                           
  6861                           ;mcc_generated_files/mtouch/mtouch_slider.c: 717:             resol_value = (uint16_t) (
      +                          (uint16_t) 1u << resol_bits);
  6862  01C8  3001               	movlw	1
  6863  01C9  00C9               	movwf	??_Slider_Service
  6864  01CA  3000               	movlw	0
  6865  01CB  00CA               	movwf	??_Slider_Service+1
  6866  01CC  0A63               	incf	_resol_bits,w
  6867  01CD  29D0               	goto	u5654
  6868  01CE                     u5655:
  6869  01CE  35C9               	lslf	??_Slider_Service,f
  6870  01CF  0DCA               	rlf	??_Slider_Service+1,f
  6871  01D0                     u5654:
  6872  01D0  0B89               	decfsz	9,f
  6873  01D1  29CE               	goto	u5655
  6874  01D2  0849               	movf	??_Slider_Service,w
  6875  01D3  0021               	movlb	1	; select bank1
  6876  01D4  00C2               	movwf	_resol_value^(0+128)
  6877  01D5  0020               	movlb	0	; select bank0
  6878  01D6  084A               	movf	??_Slider_Service+1,w
  6879  01D7  0021               	movlb	1	; select bank1
  6880  01D8  00C3               	movwf	(_resol_value+1)^(0+128)
  6881                           
  6882                           ;mcc_generated_files/mtouch/mtouch_slider.c: 720:             slider->contactSize = calc
      +                          ulate_contact_size(slider);
  6883  01D9  0020               	movlb	0	; select bank0
  6884  01DA  0855               	movf	Slider_Service@slider,w
  6885  01DB  3189  21F5  3181   	fcall	_calculate_contact_size
  6886  01DE  0855               	movf	Slider_Service@slider,w
  6887  01DF  3E0E               	addlw	14
  6888  01E0  0086               	movwf	6
  6889  01E1  3001               	movlw	1	; select bank2/3
  6890  01E2  0087               	movwf	7
  6891  01E3  0830               	movf	?_calculate_contact_size,w
  6892  01E4  3FC0               	movwi [0]fsr1
  6893  01E5  0831               	movf	?_calculate_contact_size+1,w
  6894  01E6  3FC1               	movwi [1]fsr1
  6895                           
  6896                           ;mcc_generated_files/mtouch/mtouch_slider.c: 722:             if (slider->contactSize >=
      +                           slider->contactThreshold)
  6897  01E7  0855               	movf	Slider_Service@slider,w
  6898  01E8  3E06               	addlw	6
  6899  01E9  0086               	movwf	6
  6900  01EA  3001               	movlw	1	; select bank2/3
  6901  01EB  0087               	movwf	7
  6902  01EC  3F40               	moviw [0]fsr1
  6903  01ED  00C9               	movwf	??_Slider_Service
  6904  01EE  3F41               	moviw [1]fsr1
  6905  01EF  00CA               	movwf	??_Slider_Service+1
  6906  01F0  0855               	movf	Slider_Service@slider,w
  6907  01F1  3E0E               	addlw	14
  6908  01F2  0086               	movwf	6
  6909  01F3  3001               	movlw	1	; select bank2/3
  6910  01F4  0087               	movwf	7
  6911  01F5  3F40               	moviw [0]fsr1
  6912  01F6  00CB               	movwf	??_Slider_Service+2
  6913  01F7  3F41               	moviw [1]fsr1
  6914  01F8  00CC               	movwf	??_Slider_Service+3
  6915  01F9  084A               	movf	??_Slider_Service+1,w
  6916  01FA  024C               	subwf	??_Slider_Service+3,w
  6917  01FB  1D03               	skipz
  6918  01FC  29FF               	goto	u5665
  6919  01FD  0849               	movf	??_Slider_Service,w
  6920  01FE  024B               	subwf	??_Slider_Service+2,w
  6921  01FF                     u5665:
  6922  01FF  1C03               	skipc
  6923  0200  2A4A               	goto	l6288
  6924                           
  6925                           ;mcc_generated_files/mtouch/mtouch_slider.c: 723:             {;mcc_generated_files/mtou
      +                          ch/mtouch_slider.c: 725:                 if ((slider->sliderStatus & (uint8_t)((uint8_t)
      +                          3u<<0u)) == MTOUCH_SLIDER_STATE_pressed)
  6926  0201  0855               	movf	Slider_Service@slider,w
  6927  0202  3E10               	addlw	16
  6928  0203  0086               	movwf	6
  6929  0204  3001               	movlw	1	; select bank2/3
  6930  0205  0087               	movwf	7
  6931  0206  3003               	movlw	3
  6932  0207  0501               	andwf	1,w
  6933  0208  00C9               	movwf	??_Slider_Service
  6934  0209  3002               	movlw	2
  6935  020A  0649               	xorwf	??_Slider_Service,w
  6936  020B  1D03               	btfss	3,2
  6937  020C  2A10               	goto	l6276
  6938                           
  6939                           ;mcc_generated_files/mtouch/mtouch_slider.c: 726:                 {;mcc_generated_files/
      +                          mtouch/mtouch_slider.c: 727:                     valid_contact_found = 1u;
  6940  020D  01CE               	clrf	Slider_Service@valid_contact_found
  6941  020E  0ACE               	incf	Slider_Service@valid_contact_found,f
  6942                           
  6943                           ;mcc_generated_files/mtouch/mtouch_slider.c: 728:                 }
  6944  020F  2A4A               	goto	l6288
  6945  0210                     l6276:
  6946                           
  6947                           ;mcc_generated_files/mtouch/mtouch_slider.c: 730:                 {;mcc_generated_files/
      +                          mtouch/mtouch_slider.c: 732:                     segment = slider->startSegment;
  6948  0210  0855               	movf	Slider_Service@slider,w
  6949  0211  3E02               	addlw	2
  6950  0212  0086               	movwf	6
  6951  0213  3001               	movlw	1	; select bank2/3
  6952  0214  0087               	movwf	7
  6953  0215  0801               	movf	1,w
  6954  0216  00C9               	movwf	??_Slider_Service
  6955  0217  01CA               	clrf	??_Slider_Service+1
  6956  0218  0849               	movf	??_Slider_Service,w
  6957  0219  00D2               	movwf	Slider_Service@segment
  6958  021A  084A               	movf	??_Slider_Service+1,w
  6959  021B  00D3               	movwf	Slider_Service@segment+1
  6960  021C                     l6278:
  6961                           
  6962                           ;mcc_generated_files/mtouch/mtouch_slider.c: 734:                     {;mcc_generated_fi
      +                          les/mtouch/mtouch_slider.c: 735:                         if (MTOUCH_Button_isPressed(seg
      +                          ment))
  6963  021C  0852               	movf	Slider_Service@segment,w
  6964  021D  3197  27BE  3181   	fcall	_MTOUCH_Button_isPressed
  6965  0220  3A00               	xorlw	0
  6966  0221  1903               	skipnz
  6967  0222  2A2D               	goto	l6284
  6968                           
  6969                           ;mcc_generated_files/mtouch/mtouch_slider.c: 736:                         {;mcc_generate
      +                          d_files/mtouch/mtouch_slider.c: 738:                             valid_contact_found = 1
      +                          u;
  6970  0223  01CE               	clrf	Slider_Service@valid_contact_found
  6971  0224  0ACE               	incf	Slider_Service@valid_contact_found,f
  6972                           
  6973                           ;mcc_generated_files/mtouch/mtouch_slider.c: 739:                             callback_p
      +                          ressed(sliderName);
  6974  0225  0854               	movf	Slider_Service@sliderName,w
  6975  0226  00C9               	movwf	??_Slider_Service
  6976  0227  0849               	movf	??_Slider_Service,w
  6977  0228  00F2               	movwf	Slider_DefaultCallback@slider
  6978  0229  319F  27AD  3181   	fcall	_Slider_DefaultCallback
  6979                           
  6980                           ;mcc_generated_files/mtouch/mtouch_slider.c: 740:                             break;
  6981  022C  2A4A               	goto	l6288
  6982  022D                     l6284:
  6983                           
  6984                           ;mcc_generated_files/mtouch/mtouch_slider.c: 744:                         segment = segm
      +                          ent + 1u;
  6985  022D  0852               	movf	Slider_Service@segment,w
  6986  022E  3E01               	addlw	1
  6987  022F  00D2               	movwf	Slider_Service@segment
  6988  0230  3000               	movlw	0
  6989  0231  3D53               	addwfc	Slider_Service@segment+1,w
  6990  0232  00D3               	movwf	Slider_Service@segment+1
  6991                           
  6992                           ;mcc_generated_files/mtouch/mtouch_slider.c: 746:                     }
  6993  0233  0855               	movf	Slider_Service@slider,w
  6994  0234  3E03               	addlw	3
  6995  0235  0086               	movwf	6
  6996  0236  3001               	movlw	1	; select bank2/3
  6997  0237  0087               	movwf	7
  6998  0238  0855               	movf	Slider_Service@slider,w
  6999  0239  3E02               	addlw	2
  7000  023A  0084               	movwf	4
  7001  023B  3001               	movlw	1	; select bank2/3
  7002  023C  0085               	movwf	5
  7003  023D  0800               	movf	0,w
  7004  023E  0701               	addwf	1,w
  7005  023F  00C9               	movwf	??_Slider_Service
  7006  0240  01CA               	clrf	??_Slider_Service+1
  7007  0241  0DCA               	rlf	??_Slider_Service+1,f
  7008  0242  084A               	movf	??_Slider_Service+1,w
  7009  0243  0253               	subwf	Slider_Service@segment+1,w
  7010  0244  1D03               	skipz
  7011  0245  2A48               	goto	u5695
  7012  0246  0849               	movf	??_Slider_Service,w
  7013  0247  0252               	subwf	Slider_Service@segment,w
  7014  0248                     u5695:
  7015  0248  1C03               	skipc
  7016  0249  2A1C               	goto	l6278
  7017  024A                     l6288:
  7018                           
  7019                           ;mcc_generated_files/mtouch/mtouch_slider.c: 755:             if (0u == valid_contact_fo
      +                          und)
  7020  024A  084E               	movf	Slider_Service@valid_contact_found,w
  7021  024B  1D03               	btfss	3,2
  7022  024C  2A78               	goto	l6298
  7023                           
  7024                           ;mcc_generated_files/mtouch/mtouch_slider.c: 756:             {;mcc_generated_files/mtou
      +                          ch/mtouch_slider.c: 758:                 slider->contactSize = 0u;
  7025  024D  0855               	movf	Slider_Service@slider,w
  7026  024E  3E0E               	addlw	14
  7027  024F  0086               	movwf	6
  7028  0250  3001               	movlw	1	; select bank2/3
  7029  0251  0087               	movwf	7
  7030  0252  3000               	movlw	0
  7031  0253  3FC0               	movwi [0]fsr1
  7032  0254  3FC1               	movwi [1]fsr1
  7033                           
  7034                           ;mcc_generated_files/mtouch/mtouch_slider.c: 760:                 if ((slider->sliderSta
      +                          tus & (uint8_t)((uint8_t)3u<<0u)) == MTOUCH_SLIDER_STATE_pressed)
  7035  0255  0855               	movf	Slider_Service@slider,w
  7036  0256  3E10               	addlw	16
  7037  0257  0086               	movwf	6
  7038  0258  3001               	movlw	1	; select bank2/3
  7039  0259  0087               	movwf	7
  7040  025A  3003               	movlw	3
  7041  025B  0501               	andwf	1,w
  7042  025C  00C9               	movwf	??_Slider_Service
  7043  025D  3002               	movlw	2
  7044  025E  0649               	xorwf	??_Slider_Service,w
  7045  025F  1D03               	btfss	3,2
  7046  0260  2A70               	goto	l6296
  7047                           
  7048                           ;mcc_generated_files/mtouch/mtouch_slider.c: 761:                 {;mcc_generated_files/
      +                          mtouch/mtouch_slider.c: 762:                     slider->sliderStatus = MTOUCH_SLIDER_ST
      +                          ATE_notPressed;
  7049  0261  0855               	movf	Slider_Service@slider,w
  7050  0262  3E10               	addlw	16
  7051  0263  0086               	movwf	6
  7052  0264  3001               	movlw	1	; select bank2/3
  7053  0265  0087               	movwf	7
  7054  0266  0181               	clrf	1
  7055  0267  0A81               	incf	1,f
  7056                           
  7057                           ;mcc_generated_files/mtouch/mtouch_slider.c: 763:                     callback_released(
      +                          sliderName);
  7058  0268  0854               	movf	Slider_Service@sliderName,w
  7059  0269  00C9               	movwf	??_Slider_Service
  7060  026A  0849               	movf	??_Slider_Service,w
  7061  026B  00F2               	movwf	Slider_DefaultCallback@slider
  7062  026C  319F  27AD  3181   	fcall	_Slider_DefaultCallback
  7063                           
  7064                           ;mcc_generated_files/mtouch/mtouch_slider.c: 764:                 }
  7065  026F  2AA3               	goto	l6312
  7066  0270                     l6296:
  7067                           
  7068                           ;mcc_generated_files/mtouch/mtouch_slider.c: 766:                 {;mcc_generated_files/
      +                          mtouch/mtouch_slider.c: 767:                     slider->sliderStatus = MTOUCH_SLIDER_ST
      +                          ATE_notPressed;
  7069  0270  0855               	movf	Slider_Service@slider,w
  7070  0271  3E10               	addlw	16
  7071  0272  0086               	movwf	6
  7072  0273  3001               	movlw	1	; select bank2/3
  7073  0274  0087               	movwf	7
  7074  0275  0181               	clrf	1
  7075  0276  0A81               	incf	1,f
  7076  0277  2AA3               	goto	l6312
  7077  0278                     l6298:
  7078                           
  7079                           ;mcc_generated_files/mtouch/mtouch_slider.c: 771:             {;mcc_generated_files/mtou
      +                          ch/mtouch_slider.c: 773:                 position = calculate_position(slider);
  7080  0278  0855               	movf	Slider_Service@slider,w
  7081  0279  3197  2741  3181   	fcall	_calculate_position
  7082  027C  0840               	movf	?_calculate_position+1,w
  7083  027D  00D0               	movwf	Slider_Service@position+1
  7084  027E  083F               	movf	?_calculate_position,w
  7085  027F  00CF               	movwf	Slider_Service@position
  7086                           
  7087                           ;mcc_generated_files/mtouch/mtouch_slider.c: 776:                 if (slider->sliderPosi
      +                          tion != position)
  7088  0280  0855               	movf	Slider_Service@slider,w
  7089  0281  3E0C               	addlw	12
  7090  0282  0086               	movwf	6
  7091  0283  3001               	movlw	1	; select bank2/3
  7092  0284  0087               	movwf	7
  7093  0285  3F40               	moviw [0]fsr1
  7094  0286  00C9               	movwf	??_Slider_Service
  7095  0287  3F41               	moviw [1]fsr1
  7096  0288  00CA               	movwf	??_Slider_Service+1
  7097  0289  0850               	movf	Slider_Service@position+1,w
  7098  028A  064A               	xorwf	??_Slider_Service+1,w
  7099  028B  1D03               	skipz
  7100  028C  2A8F               	goto	u5725
  7101  028D  084F               	movf	Slider_Service@position,w
  7102  028E  0649               	xorwf	??_Slider_Service,w
  7103  028F                     u5725:
  7104  028F  1903               	skipnz
  7105  0290  2AA1               	goto	l6308
  7106                           
  7107                           ;mcc_generated_files/mtouch/mtouch_slider.c: 777:                 {;mcc_generated_files/
      +                          mtouch/mtouch_slider.c: 778:                     status |= (uint8_t)((uint8_t)1u<<2u);
  7108  0291  1551               	bsf	Slider_Service@status,2
  7109                           
  7110                           ;mcc_generated_files/mtouch/mtouch_slider.c: 779:                     slider->sliderPosi
      +                          tion = position;
  7111  0292  0855               	movf	Slider_Service@slider,w
  7112  0293  3E0C               	addlw	12
  7113  0294  0086               	movwf	6
  7114  0295  3001               	movlw	1	; select bank2/3
  7115  0296  0087               	movwf	7
  7116  0297  084F               	movf	Slider_Service@position,w
  7117  0298  3FC0               	movwi [0]fsr1
  7118  0299  0850               	movf	Slider_Service@position+1,w
  7119  029A  3FC1               	movwi [1]fsr1
  7120                           
  7121                           ;mcc_generated_files/mtouch/mtouch_slider.c: 780:                     callback_position_
      +                          changed(sliderName);
  7122  029B  0854               	movf	Slider_Service@sliderName,w
  7123  029C  00C9               	movwf	??_Slider_Service
  7124  029D  0849               	movf	??_Slider_Service,w
  7125  029E  00F2               	movwf	Slider_DefaultCallback@slider
  7126  029F  319F  27AD         	fcall	_Slider_DefaultCallback
  7127  02A1                     l6308:
  7128                           
  7129                           ;mcc_generated_files/mtouch/mtouch_slider.c: 784:                 status |= MTOUCH_SLIDE
      +                          R_STATE_pressed;
  7130  02A1  14D1               	bsf	Slider_Service@status,1
  7131                           
  7132                           ;mcc_generated_files/mtouch/mtouch_slider.c: 786:                 status |= (uint8_t)((u
      +                          int8_t)1u<<7u);
  7133  02A2  17D1               	bsf	Slider_Service@status,7
  7134  02A3                     l6312:
  7135                           
  7136                           ;mcc_generated_files/mtouch/mtouch_slider.c: 790:             slider->sliderStatus = sta
      +                          tus;
  7137  02A3  0851               	movf	Slider_Service@status,w
  7138  02A4  00C9               	movwf	??_Slider_Service
  7139  02A5  0855               	movf	Slider_Service@slider,w
  7140  02A6  3E10               	addlw	16
  7141  02A7  0086               	movwf	6
  7142  02A8  3001               	movlw	1	; select bank2/3
  7143  02A9  0087               	movwf	7
  7144  02AA  0849               	movf	??_Slider_Service,w
  7145  02AB  0081               	movwf	1
  7146                           
  7147                           ;mcc_generated_files/mtouch/mtouch_slider.c: 792:             group_status |= (uint8_t) 
      +                          (status & ((uint8_t)((uint8_t)1u<<7u) | MTOUCH_SLIDER_STATE_pressed));
  7148  02AC  0851               	movf	Slider_Service@status,w
  7149  02AD  3982               	andlw	130
  7150  02AE  00C9               	movwf	??_Slider_Service
  7151  02AF  0849               	movf	??_Slider_Service,w
  7152  02B0  04CD               	iorwf	Slider_Service@group_status,f
  7153                           
  7154                           ;mcc_generated_files/mtouch/mtouch_slider.c: 794:             sliderGroupStatus |= group
      +                          _status;
  7155  02B1  084D               	movf	Slider_Service@group_status,w
  7156  02B2  00C9               	movwf	??_Slider_Service
  7157  02B3  0849               	movf	??_Slider_Service,w
  7158  02B4  0021               	movlb	1	; select bank1
  7159  02B5  04C8               	iorwf	_sliderGroupStatus^(0+128),f
  7160  02B6  0008               	return
  7161  02B7                     __end_of_Slider_Service:
  7162                           
  7163                           	psect	text26
  7164  1741                     __ptext26:	
  7165 ;; *************** function _calculate_position *****************
  7166 ;; Defined at:
  7167 ;;		line 669 in file "mcc_generated_files/mtouch/mtouch_slider.c"
  7168 ;; Parameters:    Size  Location     Type
  7169 ;;  slider          1    wreg     PTR struct .
  7170 ;;		 -> mtouch_slider(34), 
  7171 ;; Auto vars:     Size  Location     Type
  7172 ;;  slider          1   40[BANK0 ] PTR struct .
  7173 ;;		 -> mtouch_slider(34), 
  7174 ;;  raw_position    2   38[BANK0 ] unsigned short 
  7175 ;;  filtered_pos    2   36[BANK0 ] unsigned short 
  7176 ;;  position        2   34[BANK0 ] unsigned short 
  7177 ;; Return value:  Size  Location     Type
  7178 ;;                  2   31[BANK0 ] unsigned short 
  7179 ;; Registers used:
  7180 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7181 ;; Tracked objects:
  7182 ;;		On entry : 1F/0
  7183 ;;		On exit  : 1F/0
  7184 ;;		Unchanged: 0/0
  7185 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7186 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7187 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7188 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7189 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7190 ;;Total ram usage:       10 bytes
  7191 ;; Hardware stack levels used: 1
  7192 ;; Hardware stack levels required when called: 7
  7193 ;; This function calls:
  7194 ;;		_calculate_raw_position
  7195 ;;		_moving_average_filter
  7196 ;;		_positional_hysteresis
  7197 ;; This function is called by:
  7198 ;;		_Slider_Service
  7199 ;; This function uses a non-reentrant model
  7200 ;;
  7201                           
  7202                           
  7203                           ;psect for function _calculate_position
  7204  1741                     _calculate_position:
  7205                           
  7206                           ;incstack = 0
  7207                           ; Regs used in _calculate_position: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7208                           ;calculate_position@slider stored from wreg
  7209  1741  00C8               	movwf	calculate_position@slider
  7210                           
  7211                           ;mcc_generated_files/mtouch/mtouch_slider.c: 669: static uint16_t calculate_position(mto
      +                          uch_slider_t* slider);mcc_generated_files/mtouch/mtouch_slider.c: 670: {;mcc_generated_f
      +                          iles/mtouch/mtouch_slider.c: 671:     uint16_t raw_position, filtered_position, position
      +                          ;;mcc_generated_files/mtouch/mtouch_slider.c: 674:     raw_position = calculate_raw_posi
      +                          tion(slider);
  7212  1742  0848               	movf	calculate_position@slider,w
  7213  1743  3180  2061  3197   	fcall	_calculate_raw_position
  7214  1746  082E               	movf	?_calculate_raw_position+1,w
  7215  1747  00C7               	movwf	calculate_position@raw_position+1
  7216  1748  082D               	movf	?_calculate_raw_position,w
  7217  1749  00C6               	movwf	calculate_position@raw_position
  7218                           
  7219                           ;mcc_generated_files/mtouch/mtouch_slider.c: 677:     if ((slider->sliderStatus & (uint8
      +                          _t)((uint8_t)3u<<0u)) != MTOUCH_SLIDER_STATE_pressed)
  7220  174A  0848               	movf	calculate_position@slider,w
  7221  174B  3E10               	addlw	16
  7222  174C  0086               	movwf	6
  7223  174D  3001               	movlw	1	; select bank2/3
  7224  174E  0087               	movwf	7
  7225  174F  3003               	movlw	3
  7226  1750  0501               	andwf	1,w
  7227  1751  00C1               	movwf	??_calculate_position
  7228  1752  3002               	movlw	2
  7229  1753  0641               	xorwf	??_calculate_position,w
  7230  1754  1903               	btfsc	3,2
  7231  1755  2F5A               	goto	l6088
  7232                           
  7233                           ;mcc_generated_files/mtouch/mtouch_slider.c: 678:     {;mcc_generated_files/mtouch/mtouc
      +                          h_slider.c: 680:         filtered_position = raw_position;
  7234  1756  0847               	movf	calculate_position@raw_position+1,w
  7235  1757  00C5               	movwf	calculate_position@filtered_position+1
  7236  1758  0846               	movf	calculate_position@raw_position,w
  7237  1759  2F65               	goto	L1
  7238  175A                     l6088:	
  7239                           ;mcc_generated_files/mtouch/mtouch_slider.c: 681:     }
  7240                           
  7241                           
  7242                           ;mcc_generated_files/mtouch/mtouch_slider.c: 683:     {;mcc_generated_files/mtouch/mtouc
      +                          h_slider.c: 684:         filtered_position = moving_average_filter(slider, raw_position)
      +                          ;
  7243  175A  0847               	movf	calculate_position@raw_position+1,w
  7244  175B  00AB               	movwf	moving_average_filter@current_position+1
  7245  175C  0846               	movf	calculate_position@raw_position,w
  7246  175D  00AA               	movwf	moving_average_filter@current_position
  7247  175E  0848               	movf	calculate_position@slider,w
  7248  175F  318E  2685  3197   	fcall	_moving_average_filter
  7249  1762  082B               	movf	?_moving_average_filter+1,w
  7250  1763  00C5               	movwf	calculate_position@filtered_position+1
  7251  1764  082A               	movf	?_moving_average_filter,w
  7252  1765                     L1:
  7253  1765  00C4               	movwf	calculate_position@filtered_position
  7254                           
  7255                           ;mcc_generated_files/mtouch/mtouch_slider.c: 687:     slider->rawPosition = raw_position
      +                          ;
  7256  1766  0848               	movf	calculate_position@slider,w
  7257  1767  3E0A               	addlw	10
  7258  1768  0086               	movwf	6
  7259  1769  3001               	movlw	1	; select bank2/3
  7260  176A  0087               	movwf	7
  7261  176B  0846               	movf	calculate_position@raw_position,w
  7262  176C  3FC0               	movwi [0]fsr1
  7263  176D  0847               	movf	calculate_position@raw_position+1,w
  7264  176E  3FC1               	movwi [1]fsr1
  7265                           
  7266                           ;mcc_generated_files/mtouch/mtouch_slider.c: 690:     position = positional_hysteresis(s
      +                          lider, filtered_position);
  7267  176F  0845               	movf	calculate_position@filtered_position+1,w
  7268  1770  00AB               	movwf	positional_hysteresis@current_position+1
  7269  1771  0844               	movf	calculate_position@filtered_position,w
  7270  1772  00AA               	movwf	positional_hysteresis@current_position
  7271  1773  0848               	movf	calculate_position@slider,w
  7272  1774  318F  277A         	fcall	_positional_hysteresis
  7273  1776  082B               	movf	?_positional_hysteresis+1,w
  7274  1777  00C3               	movwf	calculate_position@position+1
  7275  1778  082A               	movf	?_positional_hysteresis,w
  7276  1779  00C2               	movwf	calculate_position@position
  7277                           
  7278                           ;mcc_generated_files/mtouch/mtouch_slider.c: 692:     return position;
  7279  177A  0843               	movf	calculate_position@position+1,w
  7280  177B  00C0               	movwf	?_calculate_position+1
  7281  177C  0842               	movf	calculate_position@position,w
  7282  177D  00BF               	movwf	?_calculate_position
  7283  177E  0008               	return
  7284  177F                     __end_of_calculate_position:
  7285                           
  7286                           	psect	text27
  7287  0F7A                     __ptext27:	
  7288 ;; *************** function _positional_hysteresis *****************
  7289 ;; Defined at:
  7290 ;;		line 300 in file "mcc_generated_files/mtouch/mtouch_slider.c"
  7291 ;; Parameters:    Size  Location     Type
  7292 ;;  slider          1    wreg     PTR struct .
  7293 ;;		 -> mtouch_slider(34), 
  7294 ;;  current_posi    2   10[BANK0 ] unsigned short 
  7295 ;; Auto vars:     Size  Location     Type
  7296 ;;  slider          1   20[BANK0 ] PTR struct .
  7297 ;;		 -> mtouch_slider(34), 
  7298 ;;  distance        2   18[BANK0 ] short 
  7299 ;;  filtered_pos    2   14[BANK0 ] unsigned short 
  7300 ;;  previous_pos    2   12[BANK0 ] unsigned short 
  7301 ;;  polarity        1   17[BANK0 ] unsigned char 
  7302 ;;  hyst_width      1   16[BANK0 ] unsigned char 
  7303 ;; Return value:  Size  Location     Type
  7304 ;;                  2   10[BANK0 ] unsigned short 
  7305 ;; Registers used:
  7306 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7307 ;; Tracked objects:
  7308 ;;		On entry : 1F/0
  7309 ;;		On exit  : 1F/0
  7310 ;;		Unchanged: 0/0
  7311 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7312 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7313 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7314 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7315 ;;      Totals:         2      11       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7316 ;;Total ram usage:       13 bytes
  7317 ;; Hardware stack levels used: 1
  7318 ;; Hardware stack levels required when called: 5
  7319 ;; This function calls:
  7320 ;;		_get_difference
  7321 ;; This function is called by:
  7322 ;;		_calculate_position
  7323 ;; This function uses a non-reentrant model
  7324 ;;
  7325                           
  7326                           
  7327                           ;psect for function _positional_hysteresis
  7328  0F7A                     _positional_hysteresis:
  7329                           
  7330                           ;incstack = 0
  7331                           ; Regs used in _positional_hysteresis: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
  7332                           ;positional_hysteresis@slider stored from wreg
  7333  0F7A  00B4               	movwf	positional_hysteresis@slider
  7334                           
  7335                           ;mcc_generated_files/mtouch/mtouch_slider.c: 300: static uint16_t positional_hysteresis(
      +                          mtouch_slider_t* slider, uint16_t current_position);mcc_generated_files/mtouch/mtouch_sl
      +                          ider.c: 301: {;mcc_generated_files/mtouch/mtouch_slider.c: 302:     uint16_t filtered_po
      +                          sition, previous_position;;mcc_generated_files/mtouch/mtouch_slider.c: 303:     uint8_t 
      +                          hyst_width;;mcc_generated_files/mtouch/mtouch_slider.c: 304:     int16_t distance;;mcc_g
      +                          enerated_files/mtouch/mtouch_slider.c: 305:     uint8_t polarity = 0u;
  7336  0F7B  01B1               	clrf	positional_hysteresis@polarity
  7337                           
  7338                           ;mcc_generated_files/mtouch/mtouch_slider.c: 308:     hyst_width = slider->positionHyste
      +                          resis;
  7339  0F7C  0834               	movf	positional_hysteresis@slider,w
  7340  0F7D  0086               	movwf	6
  7341  0F7E  3001               	movlw	1	; select bank2/3
  7342  0F7F  0087               	movwf	7
  7343  0F80  3001               	movlw	1	; select bank2/3
  7344  0F81  3F45               	moviw [5]fsr1
  7345  0F82  00B0               	movwf	positional_hysteresis@hyst_width
  7346                           
  7347                           ;mcc_generated_files/mtouch/mtouch_slider.c: 309:     previous_position = slider->slider
      +                          Position;
  7348  0F83  0834               	movf	positional_hysteresis@slider,w
  7349  0F84  3E0C               	addlw	12
  7350  0F85  0086               	movwf	6
  7351  0F86  3001               	movlw	1	; select bank2/3
  7352  0F87  0087               	movwf	7
  7353  0F88  3F40               	moviw [0]fsr1
  7354  0F89  00AC               	movwf	positional_hysteresis@previous_position
  7355  0F8A  3F41               	moviw [1]fsr1
  7356  0F8B  00AD               	movwf	positional_hysteresis@previous_position+1
  7357                           
  7358                           ;mcc_generated_files/mtouch/mtouch_slider.c: 312:     distance = get_difference(slider, 
      +                          previous_position, current_position);
  7359  0F8C  082D               	movf	positional_hysteresis@previous_position+1,w
  7360  0F8D  00F3               	movwf	get_difference@previous_position+1
  7361  0F8E  082C               	movf	positional_hysteresis@previous_position,w
  7362  0F8F  00F2               	movwf	get_difference@previous_position
  7363  0F90  082B               	movf	positional_hysteresis@current_position+1,w
  7364  0F91  00F5               	movwf	get_difference@current_position+1
  7365  0F92  082A               	movf	positional_hysteresis@current_position,w
  7366  0F93  00F4               	movwf	get_difference@current_position
  7367  0F94  0834               	movf	positional_hysteresis@slider,w
  7368  0F95  318A  2249  318F   	fcall	_get_difference
  7369  0F98  0873               	movf	?_get_difference+1,w
  7370  0F99  00B3               	movwf	positional_hysteresis@distance+1
  7371  0F9A  0872               	movf	?_get_difference,w
  7372  0F9B  00B2               	movwf	positional_hysteresis@distance
  7373                           
  7374                           ;mcc_generated_files/mtouch/mtouch_slider.c: 314:     if (distance < 0)
  7375  0F9C  1FB3               	btfss	positional_hysteresis@distance+1,7
  7376  0F9D  2FA8               	goto	l770
  7377                           
  7378                           ;mcc_generated_files/mtouch/mtouch_slider.c: 315:     {;mcc_generated_files/mtouch/mtouc
      +                          h_slider.c: 316:         distance = (0 - distance);
  7379  0F9E  01F6               	clrf	??_positional_hysteresis
  7380  0F9F  01F7               	clrf	??_positional_hysteresis+1
  7381  0FA0  0832               	movf	positional_hysteresis@distance,w
  7382  0FA1  0276               	subwf	??_positional_hysteresis,w
  7383  0FA2  00B2               	movwf	positional_hysteresis@distance
  7384  0FA3  0833               	movf	positional_hysteresis@distance+1,w
  7385  0FA4  3B77               	subwfb	??_positional_hysteresis+1,w
  7386  0FA5  00B3               	movwf	positional_hysteresis@distance+1
  7387                           
  7388                           ;mcc_generated_files/mtouch/mtouch_slider.c: 317:         polarity = 1u;
  7389  0FA6  01B1               	clrf	positional_hysteresis@polarity
  7390  0FA7  0AB1               	incf	positional_hysteresis@polarity,f
  7391  0FA8                     l770:	
  7392                           ;mcc_generated_files/mtouch/mtouch_slider.c: 318:     }
  7393                           
  7394                           
  7395                           ;mcc_generated_files/mtouch/mtouch_slider.c: 322:     if ((polarity == 1u) && (distance 
      +                          > (int16_t) slider->leftHysteresis))
  7396  0FA8  0331               	decf	positional_hysteresis@polarity,w
  7397  0FA9  1D03               	btfss	3,2
  7398  0FAA  2FCE               	goto	l5640
  7399  0FAB  0834               	movf	positional_hysteresis@slider,w
  7400  0FAC  3E09               	addlw	9
  7401  0FAD  0086               	movwf	6
  7402  0FAE  3001               	movlw	1	; select bank2/3
  7403  0FAF  0087               	movwf	7
  7404  0FB0  0833               	movf	positional_hysteresis@distance+1,w
  7405  0FB1  3A80               	xorlw	128
  7406  0FB2  3C80               	sublw	128
  7407  0FB3  1D03               	skipz
  7408  0FB4  2FB7               	goto	u4725
  7409  0FB5  0832               	movf	positional_hysteresis@distance,w
  7410  0FB6  0201               	subwf	1,w
  7411  0FB7                     u4725:
  7412  0FB7  1803               	skipnc
  7413  0FB8  2FCE               	goto	l5640
  7414                           
  7415                           ;mcc_generated_files/mtouch/mtouch_slider.c: 323:     {;mcc_generated_files/mtouch/mtouc
      +                          h_slider.c: 325:         slider->rightHysteresis = hyst_width;
  7416  0FB9  0020               	movlb	0	; select bank0
  7417  0FBA  0830               	movf	positional_hysteresis@hyst_width,w
  7418  0FBB  00F6               	movwf	??_positional_hysteresis
  7419  0FBC  0834               	movf	positional_hysteresis@slider,w
  7420  0FBD  3E08               	addlw	8
  7421  0FBE  0086               	movwf	6
  7422  0FBF  3001               	movlw	1	; select bank2/3
  7423  0FC0  0087               	movwf	7
  7424  0FC1  0876               	movf	??_positional_hysteresis,w
  7425  0FC2  0081               	movwf	1
  7426                           
  7427                           ;mcc_generated_files/mtouch/mtouch_slider.c: 326:         slider->leftHysteresis = 0u;
  7428  0FC3  0834               	movf	positional_hysteresis@slider,w
  7429  0FC4  3E09               	addlw	9
  7430  0FC5  0086               	movwf	6
  7431  0FC6  3001               	movlw	1	; select bank2/3
  7432  0FC7  0087               	movwf	7
  7433  0FC8  0181               	clrf	1
  7434  0FC9                     l5638:
  7435                           
  7436                           ;mcc_generated_files/mtouch/mtouch_slider.c: 327:         filtered_position = current_po
      +                          sition;
  7437  0FC9  082B               	movf	positional_hysteresis@current_position+1,w
  7438  0FCA  00AF               	movwf	positional_hysteresis@filtered_position+1
  7439  0FCB  082A               	movf	positional_hysteresis@current_position,w
  7440  0FCC  00AE               	movwf	positional_hysteresis@filtered_position
  7441                           
  7442                           ;mcc_generated_files/mtouch/mtouch_slider.c: 328:     }
  7443  0FCD  2FFB               	goto	l5650
  7444  0FCE                     l5640:
  7445  0FCE  0020               	movlb	0	; select bank0
  7446  0FCF  0831               	movf	positional_hysteresis@polarity,w
  7447  0FD0  1D03               	btfss	3,2
  7448  0FD1  2FF1               	goto	l5648
  7449  0FD2  0834               	movf	positional_hysteresis@slider,w
  7450  0FD3  3E08               	addlw	8
  7451  0FD4  0086               	movwf	6
  7452  0FD5  3001               	movlw	1	; select bank2/3
  7453  0FD6  0087               	movwf	7
  7454  0FD7  0833               	movf	positional_hysteresis@distance+1,w
  7455  0FD8  3A80               	xorlw	128
  7456  0FD9  3C80               	sublw	128
  7457  0FDA  1D03               	skipz
  7458  0FDB  2FDE               	goto	u4745
  7459  0FDC  0832               	movf	positional_hysteresis@distance,w
  7460  0FDD  0201               	subwf	1,w
  7461  0FDE                     u4745:
  7462  0FDE  1803               	skipnc
  7463  0FDF  2FF1               	goto	l5648
  7464                           
  7465                           ;mcc_generated_files/mtouch/mtouch_slider.c: 330:     {;mcc_generated_files/mtouch/mtouc
      +                          h_slider.c: 332:         slider->rightHysteresis = 0u;
  7466  0FE0  0020               	movlb	0	; select bank0
  7467  0FE1  0834               	movf	positional_hysteresis@slider,w
  7468  0FE2  3E08               	addlw	8
  7469  0FE3  0086               	movwf	6
  7470  0FE4  3001               	movlw	1	; select bank2/3
  7471  0FE5  0087               	movwf	7
  7472  0FE6  0181               	clrf	1
  7473                           
  7474                           ;mcc_generated_files/mtouch/mtouch_slider.c: 333:         slider->leftHysteresis = hyst_
      +                          width;
  7475  0FE7  0830               	movf	positional_hysteresis@hyst_width,w
  7476  0FE8  00F6               	movwf	??_positional_hysteresis
  7477  0FE9  0834               	movf	positional_hysteresis@slider,w
  7478  0FEA  3E09               	addlw	9
  7479  0FEB  0086               	movwf	6
  7480  0FEC  3001               	movlw	1	; select bank2/3
  7481  0FED  0087               	movwf	7
  7482  0FEE  0876               	movf	??_positional_hysteresis,w
  7483  0FEF  0081               	movwf	1
  7484  0FF0  2FC9               	goto	l5638
  7485  0FF1                     l5648:
  7486                           
  7487                           ;mcc_generated_files/mtouch/mtouch_slider.c: 337:     {;mcc_generated_files/mtouch/mtouc
      +                          h_slider.c: 339:         filtered_position = slider->sliderPosition;
  7488  0FF1  0020               	movlb	0	; select bank0
  7489  0FF2  0834               	movf	positional_hysteresis@slider,w
  7490  0FF3  3E0C               	addlw	12
  7491  0FF4  0086               	movwf	6
  7492  0FF5  3001               	movlw	1	; select bank2/3
  7493  0FF6  0087               	movwf	7
  7494  0FF7  3F40               	moviw [0]fsr1
  7495  0FF8  00AE               	movwf	positional_hysteresis@filtered_position
  7496  0FF9  3F41               	moviw [1]fsr1
  7497  0FFA  00AF               	movwf	positional_hysteresis@filtered_position+1
  7498  0FFB                     l5650:
  7499                           
  7500                           ;mcc_generated_files/mtouch/mtouch_slider.c: 342:     return filtered_position;
  7501  0FFB  082F               	movf	positional_hysteresis@filtered_position+1,w
  7502  0FFC  00AB               	movwf	?_positional_hysteresis+1
  7503  0FFD  082E               	movf	positional_hysteresis@filtered_position,w
  7504  0FFE  00AA               	movwf	?_positional_hysteresis
  7505  0FFF  0008               	return
  7506  1000                     __end_of_positional_hysteresis:
  7507                           
  7508                           	psect	text28
  7509  0E85                     __ptext28:	
  7510 ;; *************** function _moving_average_filter *****************
  7511 ;; Defined at:
  7512 ;;		line 352 in file "mcc_generated_files/mtouch/mtouch_slider.c"
  7513 ;; Parameters:    Size  Location     Type
  7514 ;;  slider          1    wreg     PTR struct .
  7515 ;;		 -> mtouch_slider(34), 
  7516 ;;  current_posi    2   10[BANK0 ] unsigned short 
  7517 ;; Auto vars:     Size  Location     Type
  7518 ;;  slider          1   14[BANK0 ] PTR struct .
  7519 ;;		 -> mtouch_slider(34), 
  7520 ;;  distance        2   19[BANK0 ] short 
  7521 ;;  dist_temp       2   17[BANK0 ] unsigned short 
  7522 ;;  previous_pos    2   15[BANK0 ] unsigned short 
  7523 ;;  filtered_pos    2   12[BANK0 ] unsigned short 
  7524 ;; Return value:  Size  Location     Type
  7525 ;;                  2   10[BANK0 ] unsigned short 
  7526 ;; Registers used:
  7527 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7528 ;; Tracked objects:
  7529 ;;		On entry : 1F/0
  7530 ;;		On exit  : 1F/0
  7531 ;;		Unchanged: 0/0
  7532 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7533 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7534 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7535 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7536 ;;      Totals:         2      11       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7537 ;;Total ram usage:       13 bytes
  7538 ;; Hardware stack levels used: 1
  7539 ;; Hardware stack levels required when called: 5
  7540 ;; This function calls:
  7541 ;;		_get_difference
  7542 ;; This function is called by:
  7543 ;;		_calculate_position
  7544 ;; This function uses a non-reentrant model
  7545 ;;
  7546                           
  7547                           
  7548                           ;psect for function _moving_average_filter
  7549  0E85                     _moving_average_filter:
  7550                           
  7551                           ;incstack = 0
  7552                           ; Regs used in _moving_average_filter: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
  7553                           ;moving_average_filter@slider stored from wreg
  7554  0E85  00AE               	movwf	moving_average_filter@slider
  7555                           
  7556                           ;mcc_generated_files/mtouch/mtouch_slider.c: 352: static uint16_t moving_average_filter(
      +                          mtouch_slider_t* slider, uint16_t current_position);mcc_generated_files/mtouch/mtouch_sl
      +                          ider.c: 353: {;mcc_generated_files/mtouch/mtouch_slider.c: 354:     uint16_t filtered_po
      +                          sition, dist_temp;;mcc_generated_files/mtouch/mtouch_slider.c: 355:     uint16_t previou
      +                          s_position;;mcc_generated_files/mtouch/mtouch_slider.c: 356:     int16_t distance;;mcc_g
      +                          enerated_files/mtouch/mtouch_slider.c: 358:     previous_position = slider->rawPosition;
  7557  0E86  082E               	movf	moving_average_filter@slider,w
  7558  0E87  3E0A               	addlw	10
  7559  0E88  0086               	movwf	6
  7560  0E89  3001               	movlw	1	; select bank2/3
  7561  0E8A  0087               	movwf	7
  7562  0E8B  3F40               	moviw [0]fsr1
  7563  0E8C  00AF               	movwf	moving_average_filter@previous_position
  7564  0E8D  3F41               	moviw [1]fsr1
  7565  0E8E  00B0               	movwf	moving_average_filter@previous_position+1
  7566                           
  7567                           ;mcc_generated_files/mtouch/mtouch_slider.c: 360:     distance = get_difference(slider, 
      +                          previous_position, current_position);
  7568  0E8F  0830               	movf	moving_average_filter@previous_position+1,w
  7569  0E90  00F3               	movwf	get_difference@previous_position+1
  7570  0E91  082F               	movf	moving_average_filter@previous_position,w
  7571  0E92  00F2               	movwf	get_difference@previous_position
  7572  0E93  082B               	movf	moving_average_filter@current_position+1,w
  7573  0E94  00F5               	movwf	get_difference@current_position+1
  7574  0E95  082A               	movf	moving_average_filter@current_position,w
  7575  0E96  00F4               	movwf	get_difference@current_position
  7576  0E97  082E               	movf	moving_average_filter@slider,w
  7577  0E98  318A  2249  318E   	fcall	_get_difference
  7578  0E9B  0873               	movf	?_get_difference+1,w
  7579  0E9C  00B4               	movwf	moving_average_filter@distance+1
  7580  0E9D  0872               	movf	?_get_difference,w
  7581  0E9E  00B3               	movwf	moving_average_filter@distance
  7582                           
  7583                           ;mcc_generated_files/mtouch/mtouch_slider.c: 363:     if ((distance == 1) || (distance =
      +                          = -1))
  7584  0E9F  0333               	decf	moving_average_filter@distance,w
  7585  0EA0  0434               	iorwf	moving_average_filter@distance+1,w
  7586  0EA1  1903               	btfsc	3,2
  7587  0EA2  2EA9               	goto	l5662
  7588  0EA3  0A33               	incf	moving_average_filter@distance,w
  7589  0EA4  1D03               	skipz
  7590  0EA5  2EAE               	goto	l778
  7591  0EA6  0A34               	incf	moving_average_filter@distance+1,w
  7592  0EA7  1D03               	btfss	3,2
  7593  0EA8  2EAE               	goto	l778
  7594  0EA9                     l5662:
  7595                           
  7596                           ;mcc_generated_files/mtouch/mtouch_slider.c: 364:     {;mcc_generated_files/mtouch/mtouc
      +                          h_slider.c: 365:         filtered_position = previous_position;
  7597  0EA9  0830               	movf	moving_average_filter@previous_position+1,w
  7598  0EAA  00AD               	movwf	moving_average_filter@filtered_position+1
  7599  0EAB  082F               	movf	moving_average_filter@previous_position,w
  7600  0EAC  00AC               	movwf	moving_average_filter@filtered_position
  7601                           
  7602                           ;mcc_generated_files/mtouch/mtouch_slider.c: 366:     }
  7603  0EAD  2EF3               	goto	l5678
  7604  0EAE                     l778:	
  7605                           ;mcc_generated_files/mtouch/mtouch_slider.c: 367:     else
  7606                           
  7607                           
  7608                           ;mcc_generated_files/mtouch/mtouch_slider.c: 368:     {;mcc_generated_files/mtouch/mtouc
      +                          h_slider.c: 370:         if (distance < 0)
  7609  0EAE  1FB4               	btfss	moving_average_filter@distance+1,7
  7610  0EAF  2ECF               	goto	l5672
  7611                           
  7612                           ;mcc_generated_files/mtouch/mtouch_slider.c: 371:         {;mcc_generated_files/mtouch/m
      +                          touch_slider.c: 372:             distance = (0 - distance);
  7613  0EB0  01F6               	clrf	??_moving_average_filter
  7614  0EB1  01F7               	clrf	??_moving_average_filter+1
  7615  0EB2  0833               	movf	moving_average_filter@distance,w
  7616  0EB3  0276               	subwf	??_moving_average_filter,w
  7617  0EB4  00B3               	movwf	moving_average_filter@distance
  7618  0EB5  0834               	movf	moving_average_filter@distance+1,w
  7619  0EB6  3B77               	subwfb	??_moving_average_filter+1,w
  7620  0EB7  00B4               	movwf	moving_average_filter@distance+1
  7621                           
  7622                           ;mcc_generated_files/mtouch/mtouch_slider.c: 373:             dist_temp = (uint16_t) dis
      +                          tance;
  7623  0EB8  0834               	movf	moving_average_filter@distance+1,w
  7624  0EB9  00B2               	movwf	moving_average_filter@dist_temp+1
  7625  0EBA  0833               	movf	moving_average_filter@distance,w
  7626  0EBB  00B1               	movwf	moving_average_filter@dist_temp
  7627                           
  7628                           ;mcc_generated_files/mtouch/mtouch_slider.c: 374:             dist_temp = dist_temp >> 1
      +                          u;
  7629  0EBC  0832               	movf	moving_average_filter@dist_temp+1,w
  7630  0EBD  00F7               	movwf	??_moving_average_filter+1
  7631  0EBE  0831               	movf	moving_average_filter@dist_temp,w
  7632  0EBF  00F6               	movwf	??_moving_average_filter
  7633  0EC0  36F7               	lsrf	??_moving_average_filter+1,f
  7634  0EC1  0CF6               	rrf	??_moving_average_filter,f
  7635  0EC2  0876               	movf	??_moving_average_filter,w
  7636  0EC3  00B1               	movwf	moving_average_filter@dist_temp
  7637  0EC4  0877               	movf	??_moving_average_filter+1,w
  7638  0EC5  00B2               	movwf	moving_average_filter@dist_temp+1
  7639                           
  7640                           ;mcc_generated_files/mtouch/mtouch_slider.c: 375:             distance = (int16_t) (0 - 
      +                          (int16_t) dist_temp);
  7641  0EC6  01F6               	clrf	??_moving_average_filter
  7642  0EC7  01F7               	clrf	??_moving_average_filter+1
  7643  0EC8  0831               	movf	moving_average_filter@dist_temp,w
  7644  0EC9  0276               	subwf	??_moving_average_filter,w
  7645  0ECA  00B3               	movwf	moving_average_filter@distance
  7646  0ECB  0832               	movf	moving_average_filter@dist_temp+1,w
  7647  0ECC  3B77               	subwfb	??_moving_average_filter+1,w
  7648  0ECD  00B4               	movwf	moving_average_filter@distance+1
  7649                           
  7650                           ;mcc_generated_files/mtouch/mtouch_slider.c: 377:         }
  7651  0ECE  2EE1               	goto	l783
  7652  0ECF                     l5672:
  7653                           
  7654                           ;mcc_generated_files/mtouch/mtouch_slider.c: 379:         {;mcc_generated_files/mtouch/m
      +                          touch_slider.c: 380:             dist_temp = (uint16_t) (distance);
  7655  0ECF  0834               	movf	moving_average_filter@distance+1,w
  7656  0ED0  00B2               	movwf	moving_average_filter@dist_temp+1
  7657  0ED1  0833               	movf	moving_average_filter@distance,w
  7658  0ED2  00B1               	movwf	moving_average_filter@dist_temp
  7659                           
  7660                           ;mcc_generated_files/mtouch/mtouch_slider.c: 381:             dist_temp = dist_temp >> 1
      +                          u;
  7661  0ED3  0832               	movf	moving_average_filter@dist_temp+1,w
  7662  0ED4  00F7               	movwf	??_moving_average_filter+1
  7663  0ED5  0831               	movf	moving_average_filter@dist_temp,w
  7664  0ED6  00F6               	movwf	??_moving_average_filter
  7665  0ED7  36F7               	lsrf	??_moving_average_filter+1,f
  7666  0ED8  0CF6               	rrf	??_moving_average_filter,f
  7667  0ED9  0876               	movf	??_moving_average_filter,w
  7668  0EDA  00B1               	movwf	moving_average_filter@dist_temp
  7669  0EDB  0877               	movf	??_moving_average_filter+1,w
  7670  0EDC  00B2               	movwf	moving_average_filter@dist_temp+1
  7671                           
  7672                           ;mcc_generated_files/mtouch/mtouch_slider.c: 382:             distance = (int16_t) (dist
      +                          _temp);
  7673  0EDD  0832               	movf	moving_average_filter@dist_temp+1,w
  7674  0EDE  00B4               	movwf	moving_average_filter@distance+1
  7675  0EDF  0831               	movf	moving_average_filter@dist_temp,w
  7676  0EE0  00B3               	movwf	moving_average_filter@distance
  7677  0EE1                     l783:	
  7678                           ;mcc_generated_files/mtouch/mtouch_slider.c: 383:         }
  7679                           
  7680                           
  7681                           ;mcc_generated_files/mtouch/mtouch_slider.c: 384:         filtered_position = (previous_
      +                          position) + (uint16_t) (distance);
  7682  0EE1  082F               	movf	moving_average_filter@previous_position,w
  7683  0EE2  0733               	addwf	moving_average_filter@distance,w
  7684  0EE3  00AC               	movwf	moving_average_filter@filtered_position
  7685  0EE4  0830               	movf	moving_average_filter@previous_position+1,w
  7686  0EE5  3D34               	addwfc	moving_average_filter@distance+1,w
  7687  0EE6  00AD               	movwf	moving_average_filter@filtered_position+1
  7688                           
  7689                           ;mcc_generated_files/mtouch/mtouch_slider.c: 385:         filtered_position &= (resol_va
      +                          lue - 1u);
  7690  0EE7  0021               	movlb	1	; select bank1
  7691  0EE8  0842               	movf	_resol_value^(0+128),w
  7692  0EE9  3EFF               	addlw	255
  7693  0EEA  00F6               	movwf	??_moving_average_filter
  7694  0EEB  30FF               	movlw	255
  7695  0EEC  3D43               	addwfc	(_resol_value+1)^(0+128),w
  7696  0EED  00F7               	movwf	??_moving_average_filter+1
  7697  0EEE  0876               	movf	??_moving_average_filter,w
  7698  0EEF  0020               	movlb	0	; select bank0
  7699  0EF0  05AC               	andwf	moving_average_filter@filtered_position,f
  7700  0EF1  0877               	movf	??_moving_average_filter+1,w
  7701  0EF2  05AD               	andwf	moving_average_filter@filtered_position+1,f
  7702  0EF3                     l5678:
  7703                           
  7704                           ;mcc_generated_files/mtouch/mtouch_slider.c: 388:     return filtered_position;
  7705  0EF3  082D               	movf	moving_average_filter@filtered_position+1,w
  7706  0EF4  00AB               	movwf	?_moving_average_filter+1
  7707  0EF5  082C               	movf	moving_average_filter@filtered_position,w
  7708  0EF6  00AA               	movwf	?_moving_average_filter
  7709  0EF7  0008               	return
  7710  0EF8                     __end_of_moving_average_filter:
  7711                           
  7712                           	psect	text29
  7713  0A49                     __ptext29:	
  7714 ;; *************** function _get_difference *****************
  7715 ;; Defined at:
  7716 ;;		line 262 in file "mcc_generated_files/mtouch/mtouch_slider.c"
  7717 ;; Parameters:    Size  Location     Type
  7718 ;;  slider          1    wreg     PTR struct .
  7719 ;;		 -> mtouch_slider(34), 
  7720 ;;  previous_pos    2    2[COMMON] unsigned short 
  7721 ;;  current_posi    2    4[COMMON] unsigned short 
  7722 ;; Auto vars:     Size  Location     Type
  7723 ;;  slider          1    5[BANK0 ] PTR struct .
  7724 ;;		 -> mtouch_slider(34), 
  7725 ;;  diff            2    8[BANK0 ] short 
  7726 ;;  rollover_thr    2    6[BANK0 ] unsigned short 
  7727 ;; Return value:  Size  Location     Type
  7728 ;;                  2    2[COMMON] short 
  7729 ;; Registers used:
  7730 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7731 ;; Tracked objects:
  7732 ;;		On entry : 1F/0
  7733 ;;		On exit  : 1F/0
  7734 ;;		Unchanged: 0/0
  7735 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7736 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7737 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7738 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7739 ;;      Totals:         4      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7740 ;;Total ram usage:       14 bytes
  7741 ;; Hardware stack levels used: 1
  7742 ;; Hardware stack levels required when called: 4
  7743 ;; This function calls:
  7744 ;;		Nothing
  7745 ;; This function is called by:
  7746 ;;		_positional_hysteresis
  7747 ;;		_moving_average_filter
  7748 ;; This function uses a non-reentrant model
  7749 ;;
  7750                           
  7751                           
  7752                           ;psect for function _get_difference
  7753  0A49                     _get_difference:
  7754                           
  7755                           ;incstack = 0
  7756                           ; Regs used in _get_difference: [wreg+fsr1l+fsr1h+status,2+status,0]
  7757                           ;get_difference@slider stored from wreg
  7758  0A49  00A5               	movwf	get_difference@slider
  7759                           
  7760                           ;mcc_generated_files/mtouch/mtouch_slider.c: 262: static int16_t get_difference(mtouch_s
      +                          lider_t* slider, uint16_t previous_position, uint16_t current_position);mcc_generated_fi
      +                          les/mtouch/mtouch_slider.c: 263: {;mcc_generated_files/mtouch/mtouch_slider.c: 264:     
      +                          int16_t diff;;mcc_generated_files/mtouch/mtouch_slider.c: 265:     uint16_t rollover_thr
      +                          eshold;;mcc_generated_files/mtouch/mtouch_slider.c: 268:     rollover_threshold = resol_
      +                          value >> 1u;
  7761  0A4A  0021               	movlb	1	; select bank1
  7762  0A4B  0843               	movf	(_resol_value+1)^(0+128),w
  7763  0A4C  0020               	movlb	0	; select bank0
  7764  0A4D  00A1               	movwf	??_get_difference+1
  7765  0A4E  0021               	movlb	1	; select bank1
  7766  0A4F  0842               	movf	_resol_value^(0+128),w
  7767  0A50  0020               	movlb	0	; select bank0
  7768  0A51  00A0               	movwf	??_get_difference
  7769  0A52  36A1               	lsrf	??_get_difference+1,f
  7770  0A53  0CA0               	rrf	??_get_difference,f
  7771  0A54  0820               	movf	??_get_difference,w
  7772  0A55  00A6               	movwf	get_difference@rollover_threshold
  7773  0A56  0821               	movf	??_get_difference+1,w
  7774  0A57  00A7               	movwf	get_difference@rollover_threshold+1
  7775                           
  7776                           ;mcc_generated_files/mtouch/mtouch_slider.c: 271:     diff = ((int16_t) current_position
      +                           - (int16_t) previous_position);
  7777  0A58  0872               	movf	get_difference@previous_position,w
  7778  0A59  0274               	subwf	get_difference@current_position,w
  7779  0A5A  00A8               	movwf	get_difference@diff
  7780  0A5B  0873               	movf	get_difference@previous_position+1,w
  7781  0A5C  3B75               	subwfb	get_difference@current_position+1,w
  7782  0A5D  00A9               	movwf	get_difference@diff+1
  7783                           
  7784                           ;mcc_generated_files/mtouch/mtouch_slider.c: 274:     if (slider->type == MTOUCH_TYPE_WH
      +                          EEL)
  7785  0A5E  0A25               	incf	get_difference@slider,w
  7786  0A5F  0086               	movwf	6
  7787  0A60  3001               	movlw	1	; select bank2/3
  7788  0A61  0087               	movwf	7
  7789  0A62  0301               	decf	1,w
  7790  0A63  1D03               	btfss	3,2
  7791  0A64  2A9C               	goto	l5450
  7792                           
  7793                           ;mcc_generated_files/mtouch/mtouch_slider.c: 275:     {;mcc_generated_files/mtouch/mtouc
      +                          h_slider.c: 276:         if (diff < (int16_t) 0u)
  7794  0A65  1FA9               	btfss	get_difference@diff+1,7
  7795  0A66  2A86               	goto	l5446
  7796                           
  7797                           ;mcc_generated_files/mtouch/mtouch_slider.c: 277:         {;mcc_generated_files/mtouch/m
      +                          touch_slider.c: 278:             if ((0 - (int16_t) rollover_threshold) > diff)
  7798  0A67  01A0               	clrf	??_get_difference
  7799  0A68  01A1               	clrf	??_get_difference+1
  7800  0A69  0826               	movf	get_difference@rollover_threshold,w
  7801  0A6A  0220               	subwf	??_get_difference,w
  7802  0A6B  00A2               	movwf	??_get_difference+2
  7803  0A6C  0827               	movf	get_difference@rollover_threshold+1,w
  7804  0A6D  3B21               	subwfb	??_get_difference+1,w
  7805  0A6E  00A3               	movwf	??_get_difference+3
  7806  0A6F  0829               	movf	get_difference@diff+1,w
  7807  0A70  3A80               	xorlw	128
  7808  0A71  00A4               	movwf	??_get_difference+4
  7809  0A72  0823               	movf	??_get_difference+3,w
  7810  0A73  3A80               	xorlw	128
  7811  0A74  0224               	subwf	??_get_difference+4,w
  7812  0A75  1D03               	skipz
  7813  0A76  2A79               	goto	u4435
  7814  0A77  0822               	movf	??_get_difference+2,w
  7815  0A78  0228               	subwf	get_difference@diff,w
  7816  0A79                     u4435:
  7817  0A79  1803               	skipnc
  7818  0A7A  2A9C               	goto	l5450
  7819                           
  7820                           ;mcc_generated_files/mtouch/mtouch_slider.c: 279:             {;mcc_generated_files/mtou
      +                          ch/mtouch_slider.c: 280:                 diff = (diff + (int16_t) resol_value);
  7821  0A7B  0020               	movlb	0	; select bank0
  7822  0A7C  0828               	movf	get_difference@diff,w
  7823  0A7D  0021               	movlb	1	; select bank1
  7824  0A7E  0742               	addwf	_resol_value^(0+128),w
  7825  0A7F  0020               	movlb	0	; select bank0
  7826  0A80  00A8               	movwf	get_difference@diff
  7827  0A81  0829               	movf	get_difference@diff+1,w
  7828  0A82  0021               	movlb	1	; select bank1
  7829  0A83  3D43               	addwfc	(_resol_value+1)^(0+128),w
  7830  0A84  0020               	movlb	0	; select bank0
  7831  0A85  2A9B               	goto	L2
  7832  0A86                     l5446:
  7833                           
  7834                           ;mcc_generated_files/mtouch/mtouch_slider.c: 284:         {;mcc_generated_files/mtouch/m
      +                          touch_slider.c: 285:             if (diff > ((int16_t) rollover_threshold))
  7835  0A86  0827               	movf	get_difference@rollover_threshold+1,w
  7836  0A87  3A80               	xorlw	128
  7837  0A88  00A0               	movwf	??_get_difference
  7838  0A89  0829               	movf	get_difference@diff+1,w
  7839  0A8A  3A80               	xorlw	128
  7840  0A8B  0220               	subwf	??_get_difference,w
  7841  0A8C  1D03               	skipz
  7842  0A8D  2A90               	goto	u4445
  7843  0A8E  0828               	movf	get_difference@diff,w
  7844  0A8F  0226               	subwf	get_difference@rollover_threshold,w
  7845  0A90                     u4445:
  7846  0A90  1803               	skipnc
  7847  0A91  2A9C               	goto	l5450
  7848                           
  7849                           ;mcc_generated_files/mtouch/mtouch_slider.c: 286:             {;mcc_generated_files/mtou
      +                          ch/mtouch_slider.c: 287:                 diff = (diff - (int16_t) resol_value);
  7850  0A92  0021               	movlb	1	; select bank1
  7851  0A93  0842               	movf	_resol_value^(0+128),w
  7852  0A94  0020               	movlb	0	; select bank0
  7853  0A95  0228               	subwf	get_difference@diff,w
  7854  0A96  00A8               	movwf	get_difference@diff
  7855  0A97  0021               	movlb	1	; select bank1
  7856  0A98  0843               	movf	(_resol_value+1)^(0+128),w
  7857  0A99  0020               	movlb	0	; select bank0
  7858  0A9A  3B29               	subwfb	get_difference@diff+1,w
  7859  0A9B                     L2:
  7860  0A9B  00A9               	movwf	get_difference@diff+1
  7861  0A9C                     l5450:
  7862                           
  7863                           ;mcc_generated_files/mtouch/mtouch_slider.c: 292:     return diff;
  7864  0A9C  0020               	movlb	0	; select bank0
  7865  0A9D  0829               	movf	get_difference@diff+1,w
  7866  0A9E  00F3               	movwf	?_get_difference+1
  7867  0A9F  0828               	movf	get_difference@diff,w
  7868  0AA0  00F2               	movwf	?_get_difference
  7869  0AA1  0008               	return
  7870  0AA2                     __end_of_get_difference:
  7871                           
  7872                           	psect	text30
  7873  0061                     __ptext30:	
  7874 ;; *************** function _calculate_raw_position *****************
  7875 ;; Defined at:
  7876 ;;		line 533 in file "mcc_generated_files/mtouch/mtouch_slider.c"
  7877 ;; Parameters:    Size  Location     Type
  7878 ;;  slider          1    wreg     PTR struct .
  7879 ;;		 -> mtouch_slider(34), 
  7880 ;; Auto vars:     Size  Location     Type
  7881 ;;  slider          1   28[BANK0 ] PTR struct .
  7882 ;;		 -> mtouch_slider(34), 
  7883 ;;  position        2   29[BANK0 ] unsigned short 
  7884 ;;  deadband        2   24[BANK0 ] unsigned short 
  7885 ;;  deadband_set    2   21[BANK0 ] unsigned short 
  7886 ;;  size            1   27[BANK0 ] unsigned char 
  7887 ;;  interpolatio    1   26[BANK0 ] unsigned char 
  7888 ;;  interpolatio    1   23[BANK0 ] unsigned char 
  7889 ;;  ref_node        1   20[BANK0 ] unsigned char 
  7890 ;; Return value:  Size  Location     Type
  7891 ;;                  2   13[BANK0 ] unsigned short 
  7892 ;; Registers used:
  7893 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7894 ;; Tracked objects:
  7895 ;;		On entry : 1F/0
  7896 ;;		On exit  : 1F/0
  7897 ;;		Unchanged: 0/0
  7898 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7899 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7900 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7901 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7902 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7903 ;;Total ram usage:       18 bytes
  7904 ;; Hardware stack levels used: 1
  7905 ;; Hardware stack levels required when called: 6
  7906 ;; This function calls:
  7907 ;;		_divide
  7908 ;;		_interpolate
  7909 ;; This function is called by:
  7910 ;;		_calculate_position
  7911 ;; This function uses a non-reentrant model
  7912 ;;
  7913                           
  7914                           
  7915                           ;psect for function _calculate_raw_position
  7916  0061                     _calculate_raw_position:
  7917                           
  7918                           ;incstack = 0
  7919                           ; Regs used in _calculate_raw_position: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstac
      +                          k]
  7920                           ;calculate_raw_position@slider stored from wreg
  7921  0061  00BC               	movwf	calculate_raw_position@slider
  7922                           
  7923                           ;mcc_generated_files/mtouch/mtouch_slider.c: 533: static uint16_t calculate_raw_position
      +                          (mtouch_slider_t* slider);mcc_generated_files/mtouch/mtouch_slider.c: 534: {;mcc_generat
      +                          ed_files/mtouch/mtouch_slider.c: 535:     uint8_t ref_node;;mcc_generated_files/mtouch/m
      +                          touch_slider.c: 536:     uint8_t interpolation_bits;;mcc_generated_files/mtouch/mtouch_s
      +                          lider.c: 537:     uint8_t interpolation_scale;;mcc_generated_files/mtouch/mtouch_slider.
      +                          c: 538:     uint8_t size;;mcc_generated_files/mtouch/mtouch_slider.c: 539:     uint16_t 
      +                          position, deadband, deadband_set;
  7924  0062  083C               	movf	calculate_raw_position@slider,w
  7925  0063  0086               	movwf	6
  7926  0064  3001               	movlw	1	; select bank2/3
  7927  0065  0087               	movwf	7
  7928  0066  3001               	movlw	1	; select bank2/3
  7929  0067  3F42               	moviw [2]fsr1
  7930  0068  00B4               	movwf	calculate_raw_position@ref_node
  7931                           
  7932                           ;mcc_generated_files/mtouch/mtouch_slider.c: 543:     size = slider->segmentCount;
  7933  0069  083C               	movf	calculate_raw_position@slider,w
  7934  006A  0086               	movwf	6
  7935  006B  3001               	movlw	1	; select bank2/3
  7936  006C  0087               	movwf	7
  7937  006D  3001               	movlw	1	; select bank2/3
  7938  006E  3F43               	moviw [3]fsr1
  7939  006F  00BB               	movwf	calculate_raw_position@size
  7940                           
  7941                           ;mcc_generated_files/mtouch/mtouch_slider.c: 552:     if (size < 16u)
  7942  0070  3010               	movlw	16
  7943  0071  023B               	subwf	calculate_raw_position@size,w
  7944  0072  1803               	skipnc
  7945  0073  287A               	goto	l5756
  7946                           
  7947                           ;mcc_generated_files/mtouch/mtouch_slider.c: 553:     {;mcc_generated_files/mtouch/mtouc
      +                          h_slider.c: 554:         interpolation_bits = 12u;
  7948  0074  300C               	movlw	12
  7949  0075  00AF               	movwf	??_calculate_raw_position
  7950  0076  082F               	movf	??_calculate_raw_position,w
  7951  0077  00BA               	movwf	calculate_raw_position@interpolation_bits
  7952                           
  7953                           ;mcc_generated_files/mtouch/mtouch_slider.c: 555:         interpolation_scale = 0u;
  7954  0078  01B7               	clrf	calculate_raw_position@interpolation_scale
  7955                           
  7956                           ;mcc_generated_files/mtouch/mtouch_slider.c: 556:     }
  7957  0079  2882               	goto	l5758
  7958  007A                     l5756:
  7959                           
  7960                           ;mcc_generated_files/mtouch/mtouch_slider.c: 558:     {;mcc_generated_files/mtouch/mtouc
      +                          h_slider.c: 559:         interpolation_bits = 8u;
  7961  007A  3008               	movlw	8
  7962  007B  00AF               	movwf	??_calculate_raw_position
  7963  007C  082F               	movf	??_calculate_raw_position,w
  7964  007D  00BA               	movwf	calculate_raw_position@interpolation_bits
  7965                           
  7966                           ;mcc_generated_files/mtouch/mtouch_slider.c: 560:         interpolation_scale = 4u;
  7967  007E  3004               	movlw	4
  7968  007F  00AF               	movwf	??_calculate_raw_position
  7969  0080  082F               	movf	??_calculate_raw_position,w
  7970  0081  00B7               	movwf	calculate_raw_position@interpolation_scale
  7971  0082                     l5758:
  7972                           
  7973                           ;mcc_generated_files/mtouch/mtouch_slider.c: 564:     if (wheel_sensor_middle_channel_ze
      +                          ro == 1u)
  7974  0082  0021               	movlb	1	; select bank1
  7975  0083  0347               	decf	_wheel_sensor_middle_channel_zero^(0+128),w
  7976  0084  1D03               	btfss	3,2
  7977  0085  2894               	goto	l5762
  7978                           
  7979                           ;mcc_generated_files/mtouch/mtouch_slider.c: 565:     {;mcc_generated_files/mtouch/mtouc
      +                          h_slider.c: 566:         position = (uint16_t) ((uint16_t) (size) << interpolation_bits)
      +                          ;
  7980  0086  0020               	movlb	0	; select bank0
  7981  0087  083B               	movf	calculate_raw_position@size,w
  7982  0088  00AF               	movwf	??_calculate_raw_position
  7983  0089  01B0               	clrf	??_calculate_raw_position+1
  7984  008A  0A3A               	incf	calculate_raw_position@interpolation_bits,w
  7985  008B  288E               	goto	u4894
  7986  008C                     u4895:
  7987  008C  35AF               	lslf	??_calculate_raw_position,f
  7988  008D  0DB0               	rlf	??_calculate_raw_position+1,f
  7989  008E                     u4894:
  7990  008E  0B89               	decfsz	9,f
  7991  008F  288C               	goto	u4895
  7992  0090  082F               	movf	??_calculate_raw_position,w
  7993  0091  00BD               	movwf	calculate_raw_position@position
  7994  0092  0830               	movf	??_calculate_raw_position+1,w
  7995  0093  28A8               	goto	L3
  7996  0094                     l5762:	
  7997                           ;mcc_generated_files/mtouch/mtouch_slider.c: 567:     }
  7998                           
  7999                           
  8000                           ;mcc_generated_files/mtouch/mtouch_slider.c: 569:     {;mcc_generated_files/mtouch/mtouc
      +                          h_slider.c: 570:         position = (uint16_t) ((middle_node - ref_node) << interpolatio
      +                          n_bits);
  8001  0094  0020               	movlb	0	; select bank0
  8002  0095  0860               	movf	_middle_node,w
  8003  0096  00AF               	movwf	??_calculate_raw_position
  8004  0097  01B0               	clrf	??_calculate_raw_position+1
  8005  0098  0830               	movf	??_calculate_raw_position+1,w
  8006  0099  00B2               	movwf	??_calculate_raw_position+3
  8007  009A  0834               	movf	calculate_raw_position@ref_node,w
  8008  009B  022F               	subwf	??_calculate_raw_position,w
  8009  009C  00B1               	movwf	??_calculate_raw_position+2
  8010  009D  1C03               	skipc
  8011  009E  03B2               	decf	??_calculate_raw_position+3,f
  8012  009F  0A3A               	incf	calculate_raw_position@interpolation_bits,w
  8013  00A0  28A3               	goto	u4904
  8014  00A1                     u4905:
  8015  00A1  35B1               	lslf	??_calculate_raw_position+2,f
  8016  00A2  0DB2               	rlf	??_calculate_raw_position+3,f
  8017  00A3                     u4904:
  8018  00A3  0B89               	decfsz	9,f
  8019  00A4  28A1               	goto	u4905
  8020  00A5  0831               	movf	??_calculate_raw_position+2,w
  8021  00A6  00BD               	movwf	calculate_raw_position@position
  8022  00A7  0832               	movf	??_calculate_raw_position+3,w
  8023  00A8                     L3:
  8024  00A8  00BE               	movwf	calculate_raw_position@position+1
  8025                           
  8026                           ;mcc_generated_files/mtouch/mtouch_slider.c: 574:     position += interpolate((uint16_t)
      +                           left_signal, (uint16_t) middle_signal, (uint16_t) right_signal, interpolation_bits);
  8027  00A9  085F               	movf	_left_signal+1,w
  8028  00AA  00A1               	movwf	interpolate@delta1+1
  8029  00AB  085E               	movf	_left_signal,w
  8030  00AC  00A0               	movwf	interpolate@delta1
  8031  00AD  0021               	movlb	1	; select bank1
  8032  00AE  0841               	movf	(_middle_signal+1)^(0+128),w
  8033  00AF  0020               	movlb	0	; select bank0
  8034  00B0  00A3               	movwf	interpolate@delta2+1
  8035  00B1  0021               	movlb	1	; select bank1
  8036  00B2  0840               	movf	_middle_signal^(0+128),w
  8037  00B3  0020               	movlb	0	; select bank0
  8038  00B4  00A2               	movwf	interpolate@delta2
  8039  00B5  085D               	movf	_right_signal+1,w
  8040  00B6  00A5               	movwf	interpolate@delta3+1
  8041  00B7  085C               	movf	_right_signal,w
  8042  00B8  00A4               	movwf	interpolate@delta3
  8043  00B9  083A               	movf	calculate_raw_position@interpolation_bits,w
  8044  00BA  00AF               	movwf	??_calculate_raw_position
  8045  00BB  082F               	movf	??_calculate_raw_position,w
  8046  00BC  00A6               	movwf	interpolate@num_bits
  8047  00BD  318D  25AD  3180   	fcall	_interpolate
  8048  00C0  0820               	movf	?_interpolate,w
  8049  00C1  07BD               	addwf	calculate_raw_position@position,f
  8050  00C2  0821               	movf	?_interpolate+1,w
  8051  00C3  3DBE               	addwfc	calculate_raw_position@position+1,f
  8052                           
  8053                           ;mcc_generated_files/mtouch/mtouch_slider.c: 577:     if (size > 2u)
  8054  00C4  3003               	movlw	3
  8055  00C5  023B               	subwf	calculate_raw_position@size,w
  8056  00C6  1C03               	skipc
  8057  00C7  28F4               	goto	l5774
  8058                           
  8059                           ;mcc_generated_files/mtouch/mtouch_slider.c: 578:     {;mcc_generated_files/mtouch/mtouc
      +                          h_slider.c: 579:         if (slider->type == MTOUCH_TYPE_WHEEL)
  8060  00C8  0A3C               	incf	calculate_raw_position@slider,w
  8061  00C9  0086               	movwf	6
  8062  00CA  3001               	movlw	1	; select bank2/3
  8063  00CB  0087               	movwf	7
  8064  00CC  0301               	decf	1,w
  8065  00CD  1D03               	btfss	3,2
  8066  00CE  28DE               	goto	l5772
  8067                           
  8068                           ;mcc_generated_files/mtouch/mtouch_slider.c: 580:         {;mcc_generated_files/mtouch/m
      +                          touch_slider.c: 581:             position = divide(position, (uint16_t) (size), interpol
      +                          ation_scale);
  8069  00CF  083E               	movf	calculate_raw_position@position+1,w
  8070  00D0  00F3               	movwf	divide@numerator+1
  8071  00D1  083D               	movf	calculate_raw_position@position,w
  8072  00D2  00F2               	movwf	divide@numerator
  8073  00D3  083B               	movf	calculate_raw_position@size,w
  8074  00D4  00AF               	movwf	??_calculate_raw_position
  8075  00D5  01B0               	clrf	??_calculate_raw_position+1
  8076  00D6  082F               	movf	??_calculate_raw_position,w
  8077  00D7  00F4               	movwf	divide@denominator
  8078  00D8  0830               	movf	??_calculate_raw_position+1,w
  8079  00D9  00F5               	movwf	divide@denominator+1
  8080  00DA  0837               	movf	calculate_raw_position@interpolation_scale,w
  8081  00DB  00B1               	movwf	??_calculate_raw_position+2
  8082  00DC  0831               	movf	??_calculate_raw_position+2,w
  8083  00DD  28EC               	goto	L4
  8084  00DE                     l5772:	
  8085                           ;mcc_generated_files/mtouch/mtouch_slider.c: 582:         }
  8086                           
  8087                           
  8088                           ;mcc_generated_files/mtouch/mtouch_slider.c: 584:         {;mcc_generated_files/mtouch/m
      +                          touch_slider.c: 585:             position = divide(position, (uint16_t) ((uint16_t) size
      +                           - 1u), interpolation_scale);
  8089  00DE  083E               	movf	calculate_raw_position@position+1,w
  8090  00DF  00F3               	movwf	divide@numerator+1
  8091  00E0  083D               	movf	calculate_raw_position@position,w
  8092  00E1  00F2               	movwf	divide@numerator
  8093  00E2  083B               	movf	calculate_raw_position@size,w
  8094  00E3  3EFF               	addlw	255
  8095  00E4  00F4               	movwf	divide@denominator
  8096  00E5  30FF               	movlw	255
  8097  00E6  1803               	skipnc
  8098  00E7  3000               	movlw	0
  8099  00E8  00F5               	movwf	divide@denominator+1
  8100  00E9  0837               	movf	calculate_raw_position@interpolation_scale,w
  8101  00EA  00AF               	movwf	??_calculate_raw_position
  8102  00EB  082F               	movf	??_calculate_raw_position,w
  8103  00EC                     L4:
  8104  00EC  00F6               	movwf	divide@exponent
  8105  00ED  3188  20FC  3180   	fcall	_divide
  8106  00F0  0873               	movf	?_divide+1,w
  8107  00F1  00BE               	movwf	calculate_raw_position@position+1
  8108  00F2  0872               	movf	?_divide,w
  8109  00F3  00BD               	movwf	calculate_raw_position@position
  8110  00F4                     l5774:
  8111                           
  8112                           ;mcc_generated_files/mtouch/mtouch_slider.c: 590:     if (position > (uint16_t)((uint16_
      +                          t)1u << 12u))
  8113  00F4  3010               	movlw	16
  8114  00F5  023E               	subwf	calculate_raw_position@position+1,w
  8115  00F6  3001               	movlw	1
  8116  00F7  1903               	skipnz
  8117  00F8  023D               	subwf	calculate_raw_position@position,w
  8118  00F9  1C03               	skipc
  8119  00FA  28FF               	goto	l5778
  8120                           
  8121                           ;mcc_generated_files/mtouch/mtouch_slider.c: 591:     {;mcc_generated_files/mtouch/mtouc
      +                          h_slider.c: 592:         position = (uint16_t)((uint16_t)1u << 12u);
  8122  00FB  3000               	movlw	0
  8123  00FC  00BD               	movwf	calculate_raw_position@position
  8124  00FD  3010               	movlw	16
  8125  00FE  00BE               	movwf	calculate_raw_position@position+1
  8126  00FF                     l5778:
  8127                           
  8128                           ;mcc_generated_files/mtouch/mtouch_slider.c: 596:     if ((slider->type == MTOUCH_TYPE_S
      +                          LIDER) && (0u != (slider->resolDeadband & (0x0Fu))))
  8129  00FF  0A3C               	incf	calculate_raw_position@slider,w
  8130  0100  0086               	movwf	6
  8131  0101  3001               	movlw	1	; select bank2/3
  8132  0102  0087               	movwf	7
  8133  0103  0801               	movf	1,w
  8134  0104  1D03               	btfss	3,2
  8135  0105  295B               	goto	l5798
  8136  0106  083C               	movf	calculate_raw_position@slider,w
  8137  0107  3E04               	addlw	4
  8138  0108  0086               	movwf	6
  8139  0109  3001               	movlw	1	; select bank2/3
  8140  010A  0087               	movwf	7
  8141  010B  0801               	movf	1,w
  8142  010C  390F               	andlw	15
  8143  010D  1903               	btfsc	3,2
  8144  010E  295B               	goto	l5798
  8145                           
  8146                           ;mcc_generated_files/mtouch/mtouch_slider.c: 597:     {;mcc_generated_files/mtouch/mtouc
      +                          h_slider.c: 599:         deadband = 0u;
  8147  010F  01B8               	clrf	calculate_raw_position@deadband
  8148  0110  01B9               	clrf	calculate_raw_position@deadband+1
  8149                           
  8150                           ;mcc_generated_files/mtouch/mtouch_slider.c: 600:         deadband_set = (uint8_t) (slid
      +                          er->resolDeadband & (0x0Fu));
  8151  0111  083C               	movf	calculate_raw_position@slider,w
  8152  0112  3E04               	addlw	4
  8153  0113  0086               	movwf	6
  8154  0114  3001               	movlw	1	; select bank2/3
  8155  0115  0087               	movwf	7
  8156  0116  0801               	movf	1,w
  8157  0117  390F               	andlw	15
  8158  0118  00AF               	movwf	??_calculate_raw_position
  8159  0119  01B0               	clrf	??_calculate_raw_position+1
  8160  011A  082F               	movf	??_calculate_raw_position,w
  8161  011B  00B5               	movwf	calculate_raw_position@deadband_set
  8162  011C  0830               	movf	??_calculate_raw_position+1,w
  8163  011D  00B6               	movwf	calculate_raw_position@deadband_set+1
  8164  011E                     l5788:	
  8165                           ;mcc_generated_files/mtouch/mtouch_slider.c: 601:         while (deadband_set > 0u)
  8166                           
  8167                           
  8168                           ;mcc_generated_files/mtouch/mtouch_slider.c: 601:         while (deadband_set > 0u)
  8169  011E  0835               	movf	calculate_raw_position@deadband_set,w
  8170  011F  0436               	iorwf	calculate_raw_position@deadband_set+1,w
  8171  0120  1903               	btfsc	3,2
  8172  0121  292B               	goto	l5790
  8173                           
  8174                           ;mcc_generated_files/mtouch/mtouch_slider.c: 602:         {;mcc_generated_files/mtouch/m
      +                          touch_slider.c: 603:             deadband_set--;
  8175  0122  3001               	movlw	1
  8176  0123  02B5               	subwf	calculate_raw_position@deadband_set,f
  8177  0124  3000               	movlw	0
  8178  0125  3BB6               	subwfb	calculate_raw_position@deadband_set+1,f
  8179                           
  8180                           ;mcc_generated_files/mtouch/mtouch_slider.c: 604:             deadband += ((uint16_t)((u
      +                          int16_t)1u << 12u)/100u);
  8181  0126  3028               	movlw	40
  8182  0127  07B8               	addwf	calculate_raw_position@deadband,f
  8183  0128  3000               	movlw	0
  8184  0129  3DB9               	addwfc	calculate_raw_position@deadband+1,f
  8185  012A  291E               	goto	l5788
  8186  012B                     l5790:
  8187                           
  8188                           ;mcc_generated_files/mtouch/mtouch_slider.c: 607:         if (position < deadband)
  8189  012B  0839               	movf	calculate_raw_position@deadband+1,w
  8190  012C  023E               	subwf	calculate_raw_position@position+1,w
  8191  012D  1D03               	skipz
  8192  012E  2931               	goto	u4975
  8193  012F  0838               	movf	calculate_raw_position@deadband,w
  8194  0130  023D               	subwf	calculate_raw_position@position,w
  8195  0131                     u4975:
  8196  0131  1803               	skipnc
  8197  0132  2936               	goto	l5794
  8198                           
  8199                           ;mcc_generated_files/mtouch/mtouch_slider.c: 608:         {;mcc_generated_files/mtouch/m
      +                          touch_slider.c: 609:             position = 0u;
  8200  0133  01BD               	clrf	calculate_raw_position@position
  8201  0134  01BE               	clrf	calculate_raw_position@position+1
  8202                           
  8203                           ;mcc_generated_files/mtouch/mtouch_slider.c: 610:         }
  8204  0135  293C               	goto	l5796
  8205  0136                     l5794:
  8206                           
  8207                           ;mcc_generated_files/mtouch/mtouch_slider.c: 612:         {;mcc_generated_files/mtouch/m
      +                          touch_slider.c: 613:             position = (uint16_t) (position - deadband);
  8208  0136  0838               	movf	calculate_raw_position@deadband,w
  8209  0137  023D               	subwf	calculate_raw_position@position,w
  8210  0138  00BD               	movwf	calculate_raw_position@position
  8211  0139  0839               	movf	calculate_raw_position@deadband+1,w
  8212  013A  3B3E               	subwfb	calculate_raw_position@position+1,w
  8213  013B  00BE               	movwf	calculate_raw_position@position+1
  8214  013C                     l5796:
  8215                           
  8216                           ;mcc_generated_files/mtouch/mtouch_slider.c: 619:         position = divide(position, (u
      +                          int16_t) ((uint16_t)((uint16_t)1u << 12u) - (uint16_t) (deadband << 1u)), 12u);
  8217  013C  083E               	movf	calculate_raw_position@position+1,w
  8218  013D  00F3               	movwf	divide@numerator+1
  8219  013E  083D               	movf	calculate_raw_position@position,w
  8220  013F  00F2               	movwf	divide@numerator
  8221  0140  0839               	movf	calculate_raw_position@deadband+1,w
  8222  0141  00B0               	movwf	??_calculate_raw_position+1
  8223  0142  0838               	movf	calculate_raw_position@deadband,w
  8224  0143  00AF               	movwf	??_calculate_raw_position
  8225  0144  35AF               	lslf	??_calculate_raw_position,f
  8226  0145  0DB0               	rlf	??_calculate_raw_position+1,f
  8227  0146  3000               	movlw	0
  8228  0147  00B1               	movwf	??_calculate_raw_position+2
  8229  0148  3010               	movlw	16
  8230  0149  00B2               	movwf	??_calculate_raw_position+3
  8231  014A  082F               	movf	??_calculate_raw_position,w
  8232  014B  0231               	subwf	??_calculate_raw_position+2,w
  8233  014C  00F4               	movwf	divide@denominator
  8234  014D  0830               	movf	??_calculate_raw_position+1,w
  8235  014E  3B32               	subwfb	??_calculate_raw_position+3,w
  8236  014F  00F5               	movwf	divide@denominator+1
  8237  0150  300C               	movlw	12
  8238  0151  00B3               	movwf	??_calculate_raw_position+4
  8239  0152  0833               	movf	??_calculate_raw_position+4,w
  8240  0153  00F6               	movwf	divide@exponent
  8241  0154  3188  20FC  3180   	fcall	_divide
  8242  0157  0873               	movf	?_divide+1,w
  8243  0158  00BE               	movwf	calculate_raw_position@position+1
  8244  0159  0872               	movf	?_divide,w
  8245  015A  00BD               	movwf	calculate_raw_position@position
  8246  015B                     l5798:
  8247                           
  8248                           ;mcc_generated_files/mtouch/mtouch_slider.c: 623:     position = position >> (12u - reso
      +                          l_bits);
  8249  015B  083E               	movf	calculate_raw_position@position+1,w
  8250  015C  00B0               	movwf	??_calculate_raw_position+1
  8251  015D  083D               	movf	calculate_raw_position@position,w
  8252  015E  00AF               	movwf	??_calculate_raw_position
  8253  015F  0863               	movf	_resol_bits,w
  8254  0160  3C0C               	sublw	12
  8255  0161  0A89               	incf	9,f
  8256  0162  2965               	goto	u4984
  8257  0163                     u4985:
  8258  0163  36B0               	lsrf	??_calculate_raw_position+1,f
  8259  0164  0CAF               	rrf	??_calculate_raw_position,f
  8260  0165                     u4984:
  8261  0165  0B89               	decfsz	9,f
  8262  0166  2963               	goto	u4985
  8263  0167  082F               	movf	??_calculate_raw_position,w
  8264  0168  00BD               	movwf	calculate_raw_position@position
  8265  0169  0830               	movf	??_calculate_raw_position+1,w
  8266  016A  00BE               	movwf	calculate_raw_position@position+1
  8267                           
  8268                           ;mcc_generated_files/mtouch/mtouch_slider.c: 626:     if (position > (uint16_t) (((uint1
      +                          6_t) 1 << resol_bits)) - 1u)
  8269  016B  3001               	movlw	1
  8270  016C  00AF               	movwf	??_calculate_raw_position
  8271  016D  3000               	movlw	0
  8272  016E  00B0               	movwf	??_calculate_raw_position+1
  8273  016F  0A63               	incf	_resol_bits,w
  8274  0170  2973               	goto	u4994
  8275  0171                     u4995:
  8276  0171  35AF               	lslf	??_calculate_raw_position,f
  8277  0172  0DB0               	rlf	??_calculate_raw_position+1,f
  8278  0173                     u4994:
  8279  0173  0B89               	decfsz	9,f
  8280  0174  2971               	goto	u4995
  8281  0175  082F               	movf	??_calculate_raw_position,w
  8282  0176  3EFF               	addlw	255
  8283  0177  00B1               	movwf	??_calculate_raw_position+2
  8284  0178  30FF               	movlw	255
  8285  0179  3D30               	addwfc	??_calculate_raw_position+1,w
  8286  017A  00B2               	movwf	??_calculate_raw_position+3
  8287  017B  083E               	movf	calculate_raw_position@position+1,w
  8288  017C  0232               	subwf	??_calculate_raw_position+3,w
  8289  017D  1D03               	skipz
  8290  017E  2981               	goto	u5005
  8291  017F  083D               	movf	calculate_raw_position@position,w
  8292  0180  0231               	subwf	??_calculate_raw_position+2,w
  8293  0181                     u5005:
  8294  0181  1803               	skipnc
  8295  0182  2993               	goto	l5804
  8296                           
  8297                           ;mcc_generated_files/mtouch/mtouch_slider.c: 627:     {;mcc_generated_files/mtouch/mtouc
      +                          h_slider.c: 628:         position = (uint16_t) ((uint16_t) 1 << resol_bits) - 1u;
  8298  0183  3001               	movlw	1
  8299  0184  00AF               	movwf	??_calculate_raw_position
  8300  0185  3000               	movlw	0
  8301  0186  00B0               	movwf	??_calculate_raw_position+1
  8302  0187  0A63               	incf	_resol_bits,w
  8303  0188  298B               	goto	u5014
  8304  0189                     u5015:
  8305  0189  35AF               	lslf	??_calculate_raw_position,f
  8306  018A  0DB0               	rlf	??_calculate_raw_position+1,f
  8307  018B                     u5014:
  8308  018B  0B89               	decfsz	9,f
  8309  018C  2989               	goto	u5015
  8310  018D  082F               	movf	??_calculate_raw_position,w
  8311  018E  3EFF               	addlw	255
  8312  018F  00BD               	movwf	calculate_raw_position@position
  8313  0190  30FF               	movlw	255
  8314  0191  3D30               	addwfc	??_calculate_raw_position+1,w
  8315  0192  00BE               	movwf	calculate_raw_position@position+1
  8316  0193                     l5804:
  8317                           
  8318                           ;mcc_generated_files/mtouch/mtouch_slider.c: 631:     return position;
  8319  0193  083E               	movf	calculate_raw_position@position+1,w
  8320  0194  00AE               	movwf	?_calculate_raw_position+1
  8321  0195  083D               	movf	calculate_raw_position@position,w
  8322  0196  00AD               	movwf	?_calculate_raw_position
  8323  0197  0008               	return
  8324  0198                     __end_of_calculate_raw_position:
  8325                           
  8326                           	psect	text31
  8327  0DAD                     __ptext31:	
  8328 ;; *************** function _interpolate *****************
  8329 ;; Defined at:
  8330 ;;		line 396 in file "mcc_generated_files/mtouch/mtouch_slider.c"
  8331 ;; Parameters:    Size  Location     Type
  8332 ;;  delta1          2    0[BANK0 ] unsigned short 
  8333 ;;  delta2          2    2[BANK0 ] unsigned short 
  8334 ;;  delta3          2    4[BANK0 ] unsigned short 
  8335 ;;  num_bits        1    6[BANK0 ] unsigned char 
  8336 ;; Auto vars:     Size  Location     Type
  8337 ;;  rtnval          2   11[BANK0 ] unsigned short 
  8338 ;; Return value:  Size  Location     Type
  8339 ;;                  2    0[BANK0 ] unsigned short 
  8340 ;; Registers used:
  8341 ;;		wreg, status,2, status,0, pclath, cstack
  8342 ;; Tracked objects:
  8343 ;;		On entry : 1F/0
  8344 ;;		On exit  : 1F/0
  8345 ;;		Unchanged: 0/0
  8346 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8347 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8348 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8349 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8350 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8351 ;;Total ram usage:       13 bytes
  8352 ;; Hardware stack levels used: 1
  8353 ;; Hardware stack levels required when called: 5
  8354 ;; This function calls:
  8355 ;;		_divide
  8356 ;; This function is called by:
  8357 ;;		_calculate_raw_position
  8358 ;; This function uses a non-reentrant model
  8359 ;;
  8360                           
  8361                           
  8362                           ;psect for function _interpolate
  8363  0DAD                     _interpolate:
  8364                           
  8365                           ;mcc_generated_files/mtouch/mtouch_slider.c: 396: static uint16_t interpolate(uint16_t d
      +                          elta1, uint16_t delta2, uint16_t delta3, uint8_t num_bits);mcc_generated_files/mtouch/mt
      +                          ouch_slider.c: 397: {;mcc_generated_files/mtouch/mtouch_slider.c: 398:     uint16_t rtnv
      +                          al;;mcc_generated_files/mtouch/mtouch_slider.c: 400:     if (delta1 >= delta3)
  8366                           
  8367                           ;incstack = 0
  8368                           ; Regs used in _interpolate: [wreg+status,2+status,0+pclath+cstack]
  8369  0DAD  0825               	movf	interpolate@delta3+1,w
  8370  0DAE  0221               	subwf	interpolate@delta1+1,w
  8371  0DAF  1D03               	skipz
  8372  0DB0  2DB3               	goto	u4455
  8373  0DB1  0824               	movf	interpolate@delta3,w
  8374  0DB2  0220               	subwf	interpolate@delta1,w
  8375  0DB3                     u4455:
  8376  0DB3  1C03               	skipc
  8377  0DB4  2DE9               	goto	l5460
  8378                           
  8379                           ;mcc_generated_files/mtouch/mtouch_slider.c: 401:     {;mcc_generated_files/mtouch/mtouc
      +                          h_slider.c: 402:         rtnval = (uint16_t) ((delta2 - delta3) + (delta1 - delta3));
  8380  0DB5  0825               	movf	interpolate@delta3+1,w
  8381  0DB6  00A8               	movwf	??_interpolate+1
  8382  0DB7  0824               	movf	interpolate@delta3,w
  8383  0DB8  00A7               	movwf	??_interpolate
  8384  0DB9  35A7               	lslf	??_interpolate,f
  8385  0DBA  0DA8               	rlf	??_interpolate+1,f
  8386  0DBB  0827               	movf	??_interpolate,w
  8387  0DBC  0222               	subwf	interpolate@delta2,w
  8388  0DBD  00A9               	movwf	??_interpolate+2
  8389  0DBE  0828               	movf	??_interpolate+1,w
  8390  0DBF  3B23               	subwfb	interpolate@delta2+1,w
  8391  0DC0  00AA               	movwf	??_interpolate+3
  8392  0DC1  0820               	movf	interpolate@delta1,w
  8393  0DC2  0729               	addwf	??_interpolate+2,w
  8394  0DC3  00AB               	movwf	interpolate@rtnval
  8395  0DC4  0821               	movf	interpolate@delta1+1,w
  8396  0DC5  3D2A               	addwfc	??_interpolate+3,w
  8397  0DC6  00AC               	movwf	interpolate@rtnval+1
  8398                           
  8399                           ;mcc_generated_files/mtouch/mtouch_slider.c: 403:         rtnval = (uint16_t) (divide((u
      +                          int16_t) (delta2 - delta3), rtnval, num_bits) - (uint16_t) ((uint16_t) 1u << (num_bits))
      +                          );
  8400  0DC7  3001               	movlw	1
  8401  0DC8  00A7               	movwf	??_interpolate
  8402  0DC9  3000               	movlw	0
  8403  0DCA  00A8               	movwf	??_interpolate+1
  8404  0DCB  0A26               	incf	interpolate@num_bits,w
  8405  0DCC  2DCF               	goto	u4464
  8406  0DCD                     u4465:
  8407  0DCD  35A7               	lslf	??_interpolate,f
  8408  0DCE  0DA8               	rlf	??_interpolate+1,f
  8409  0DCF                     u4464:
  8410  0DCF  0B89               	decfsz	9,f
  8411  0DD0  2DCD               	goto	u4465
  8412  0DD1  0824               	movf	interpolate@delta3,w
  8413  0DD2  0222               	subwf	interpolate@delta2,w
  8414  0DD3  00F2               	movwf	divide@numerator
  8415  0DD4  0825               	movf	interpolate@delta3+1,w
  8416  0DD5  3B23               	subwfb	interpolate@delta2+1,w
  8417  0DD6  00F3               	movwf	divide@numerator+1
  8418  0DD7  082C               	movf	interpolate@rtnval+1,w
  8419  0DD8  00F5               	movwf	divide@denominator+1
  8420  0DD9  082B               	movf	interpolate@rtnval,w
  8421  0DDA  00F4               	movwf	divide@denominator
  8422  0DDB  0826               	movf	interpolate@num_bits,w
  8423  0DDC  00A9               	movwf	??_interpolate+2
  8424  0DDD  0829               	movf	??_interpolate+2,w
  8425  0DDE  00F6               	movwf	divide@exponent
  8426  0DDF  3188  20FC  318D   	fcall	_divide
  8427  0DE2  0827               	movf	??_interpolate,w
  8428  0DE3  0272               	subwf	?_divide,w
  8429  0DE4  00AB               	movwf	interpolate@rtnval
  8430  0DE5  0828               	movf	??_interpolate+1,w
  8431  0DE6  3B73               	subwfb	?_divide+1,w
  8432  0DE7  00AC               	movwf	interpolate@rtnval+1
  8433                           
  8434                           ;mcc_generated_files/mtouch/mtouch_slider.c: 404:     }
  8435  0DE8  2E0F               	goto	l5464
  8436  0DE9                     l5460:
  8437                           
  8438                           ;mcc_generated_files/mtouch/mtouch_slider.c: 406:     {;mcc_generated_files/mtouch/mtouc
      +                          h_slider.c: 407:         rtnval = (uint16_t) ((delta2 - delta1) + (delta3 - delta1));
  8439  0DE9  0821               	movf	interpolate@delta1+1,w
  8440  0DEA  00A8               	movwf	??_interpolate+1
  8441  0DEB  0820               	movf	interpolate@delta1,w
  8442  0DEC  00A7               	movwf	??_interpolate
  8443  0DED  35A7               	lslf	??_interpolate,f
  8444  0DEE  0DA8               	rlf	??_interpolate+1,f
  8445  0DEF  0827               	movf	??_interpolate,w
  8446  0DF0  0222               	subwf	interpolate@delta2,w
  8447  0DF1  00A9               	movwf	??_interpolate+2
  8448  0DF2  0828               	movf	??_interpolate+1,w
  8449  0DF3  3B23               	subwfb	interpolate@delta2+1,w
  8450  0DF4  00AA               	movwf	??_interpolate+3
  8451  0DF5  0824               	movf	interpolate@delta3,w
  8452  0DF6  0729               	addwf	??_interpolate+2,w
  8453  0DF7  00AB               	movwf	interpolate@rtnval
  8454  0DF8  0825               	movf	interpolate@delta3+1,w
  8455  0DF9  3D2A               	addwfc	??_interpolate+3,w
  8456  0DFA  00AC               	movwf	interpolate@rtnval+1
  8457                           
  8458                           ;mcc_generated_files/mtouch/mtouch_slider.c: 408:         rtnval = divide((uint16_t) (de
      +                          lta3 - delta1), rtnval, num_bits);
  8459  0DFB  0820               	movf	interpolate@delta1,w
  8460  0DFC  0224               	subwf	interpolate@delta3,w
  8461  0DFD  00F2               	movwf	divide@numerator
  8462  0DFE  0821               	movf	interpolate@delta1+1,w
  8463  0DFF  3B25               	subwfb	interpolate@delta3+1,w
  8464  0E00  00F3               	movwf	divide@numerator+1
  8465  0E01  082C               	movf	interpolate@rtnval+1,w
  8466  0E02  00F5               	movwf	divide@denominator+1
  8467  0E03  082B               	movf	interpolate@rtnval,w
  8468  0E04  00F4               	movwf	divide@denominator
  8469  0E05  0826               	movf	interpolate@num_bits,w
  8470  0E06  00A7               	movwf	??_interpolate
  8471  0E07  0827               	movf	??_interpolate,w
  8472  0E08  00F6               	movwf	divide@exponent
  8473  0E09  3188  20FC         	fcall	_divide
  8474  0E0B  0873               	movf	?_divide+1,w
  8475  0E0C  00AC               	movwf	interpolate@rtnval+1
  8476  0E0D  0872               	movf	?_divide,w
  8477  0E0E  00AB               	movwf	interpolate@rtnval
  8478  0E0F                     l5464:
  8479                           
  8480                           ;mcc_generated_files/mtouch/mtouch_slider.c: 411:     return rtnval;
  8481  0E0F  082C               	movf	interpolate@rtnval+1,w
  8482  0E10  00A1               	movwf	?_interpolate+1
  8483  0E11  082B               	movf	interpolate@rtnval,w
  8484  0E12  00A0               	movwf	?_interpolate
  8485  0E13  0008               	return
  8486  0E14                     __end_of_interpolate:
  8487                           
  8488                           	psect	text32
  8489  08FC                     __ptext32:	
  8490 ;; *************** function _divide *****************
  8491 ;; Defined at:
  8492 ;;		line 202 in file "mcc_generated_files/mtouch/mtouch_slider.c"
  8493 ;; Parameters:    Size  Location     Type
  8494 ;;  numerator       2    2[COMMON] unsigned short 
  8495 ;;  denominator     2    4[COMMON] unsigned short 
  8496 ;;  exponent        1    6[COMMON] unsigned char 
  8497 ;; Auto vars:     Size  Location     Type
  8498 ;;  result          2    8[COMMON] unsigned short 
  8499 ;; Return value:  Size  Location     Type
  8500 ;;                  2    2[COMMON] unsigned short 
  8501 ;; Registers used:
  8502 ;;		wreg, status,2, status,0
  8503 ;; Tracked objects:
  8504 ;;		On entry : 1F/0
  8505 ;;		On exit  : 1F/0
  8506 ;;		Unchanged: 1F/0
  8507 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8508 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8509 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8510 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8511 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8512 ;;Total ram usage:        8 bytes
  8513 ;; Hardware stack levels used: 1
  8514 ;; Hardware stack levels required when called: 4
  8515 ;; This function calls:
  8516 ;;		Nothing
  8517 ;; This function is called by:
  8518 ;;		_interpolate
  8519 ;;		_calculate_raw_position
  8520 ;; This function uses a non-reentrant model
  8521 ;;
  8522                           
  8523                           
  8524                           ;psect for function _divide
  8525  08FC                     _divide:
  8526                           
  8527                           ;mcc_generated_files/mtouch/mtouch_slider.c: 202: static uint16_t divide(uint16_t numera
      +                          tor, uint16_t denominator, uint8_t exponent);mcc_generated_files/mtouch/mtouch_slider.c:
      +                           203: {;mcc_generated_files/mtouch/mtouch_slider.c: 204:     uint16_t result = 0u;
  8528                           
  8529                           ;incstack = 0
  8530                           ; Regs used in _divide: [wreg+status,2+status,0]
  8531  08FC  01F8               	clrf	divide@result
  8532  08FD  01F9               	clrf	divide@result+1
  8533                           
  8534                           ;mcc_generated_files/mtouch/mtouch_slider.c: 207:     exponent++;
  8535  08FE  3001               	movlw	1
  8536  08FF  00F7               	movwf	??_divide
  8537  0900  0877               	movf	??_divide,w
  8538  0901  07F6               	addwf	divide@exponent,f
  8539                           
  8540                           ;mcc_generated_files/mtouch/mtouch_slider.c: 209:     if (denominator != 0u)
  8541  0902  0874               	movf	divide@denominator,w
  8542  0903  0475               	iorwf	divide@denominator+1,w
  8543  0904  1D03               	btfss	3,2
  8544  0905  290D               	goto	l5288
  8545  0906  293E               	goto	l5312
  8546  0907                     l5284:
  8547                           
  8548                           ;mcc_generated_files/mtouch/mtouch_slider.c: 217:         {;mcc_generated_files/mtouch/m
      +                          touch_slider.c: 218:             exponent--;
  8549  0907  3001               	movlw	1
  8550  0908  02F6               	subwf	divide@exponent,f
  8551                           
  8552                           ;mcc_generated_files/mtouch/mtouch_slider.c: 219:             numerator = (uint16_t) (nu
      +                          merator << 1);
  8553  0909  3572               	lslf	divide@numerator,w
  8554  090A  00F2               	movwf	divide@numerator
  8555  090B  0D73               	rlf	divide@numerator+1,w
  8556  090C  00F3               	movwf	divide@numerator+1
  8557  090D                     l5288:
  8558                           
  8559                           ;mcc_generated_files/mtouch/mtouch_slider.c: 216:         while (((numerator & 0x8000u) 
      +                          == 0u) && (exponent != 0u))
  8560  090D  1BF3               	btfsc	divide@numerator+1,7
  8561  090E  291B               	goto	l5296
  8562  090F  0876               	movf	divide@exponent,w
  8563  0910  1903               	btfsc	3,2
  8564  0911  291B               	goto	l5296
  8565  0912  2907               	goto	l5284
  8566  0913                     l5292:
  8567                           
  8568                           ;mcc_generated_files/mtouch/mtouch_slider.c: 223:         {;mcc_generated_files/mtouch/m
      +                          touch_slider.c: 224:             exponent++;
  8569  0913  3001               	movlw	1
  8570  0914  00F7               	movwf	??_divide
  8571  0915  0877               	movf	??_divide,w
  8572  0916  07F6               	addwf	divide@exponent,f
  8573                           
  8574                           ;mcc_generated_files/mtouch/mtouch_slider.c: 225:             denominator = (uint16_t) (
      +                          denominator << 1);
  8575  0917  3574               	lslf	divide@denominator,w
  8576  0918  00F4               	movwf	divide@denominator
  8577  0919  0D75               	rlf	divide@denominator+1,w
  8578  091A  00F5               	movwf	divide@denominator+1
  8579  091B                     l5296:
  8580                           
  8581                           ;mcc_generated_files/mtouch/mtouch_slider.c: 222:         while ((denominator & 0x8000u)
      +                           == 0u)
  8582  091B  1BF5               	btfsc	divide@denominator+1,7
  8583  091C  2939               	goto	l5308
  8584  091D  2913               	goto	l5292
  8585  091E                     l5298:
  8586                           
  8587                           ;mcc_generated_files/mtouch/mtouch_slider.c: 230:         {;mcc_generated_files/mtouch/m
      +                          touch_slider.c: 231:             result = (uint16_t) (result << 1);
  8588  091E  3578               	lslf	divide@result,w
  8589  091F  00F8               	movwf	divide@result
  8590  0920  0D79               	rlf	divide@result+1,w
  8591  0921  00F9               	movwf	divide@result+1
  8592                           
  8593                           ;mcc_generated_files/mtouch/mtouch_slider.c: 232:             exponent--;
  8594  0922  3001               	movlw	1
  8595  0923  02F6               	subwf	divide@exponent,f
  8596                           
  8597                           ;mcc_generated_files/mtouch/mtouch_slider.c: 233:             if (numerator >= denominat
      +                          or)
  8598  0924  0875               	movf	divide@denominator+1,w
  8599  0925  0273               	subwf	divide@numerator+1,w
  8600  0926  1D03               	skipz
  8601  0927  292A               	goto	u4215
  8602  0928  0874               	movf	divide@denominator,w
  8603  0929  0272               	subwf	divide@numerator,w
  8604  092A                     u4215:
  8605  092A  1C03               	skipc
  8606  092B  2934               	goto	l5306
  8607                           
  8608                           ;mcc_generated_files/mtouch/mtouch_slider.c: 234:             {;mcc_generated_files/mtou
      +                          ch/mtouch_slider.c: 235:                 numerator -= denominator;
  8609  092C  0874               	movf	divide@denominator,w
  8610  092D  02F2               	subwf	divide@numerator,f
  8611  092E  0875               	movf	divide@denominator+1,w
  8612  092F  3BF3               	subwfb	divide@numerator+1,f
  8613                           
  8614                           ;mcc_generated_files/mtouch/mtouch_slider.c: 236:                 result++;
  8615  0930  3001               	movlw	1
  8616  0931  07F8               	addwf	divide@result,f
  8617  0932  3000               	movlw	0
  8618  0933  3DF9               	addwfc	divide@result+1,f
  8619  0934                     l5306:
  8620                           
  8621                           ;mcc_generated_files/mtouch/mtouch_slider.c: 238:             denominator >>= 1;
  8622  0934  3001               	movlw	1
  8623  0935                     u4225:
  8624  0935  36F5               	lsrf	divide@denominator+1,f
  8625  0936  0CF4               	rrf	divide@denominator,f
  8626  0937  0B89               	decfsz	9,f
  8627  0938  2935               	goto	u4225
  8628  0939                     l5308:
  8629                           
  8630                           ;mcc_generated_files/mtouch/mtouch_slider.c: 229:         while ((exponent != 0u) && ((r
      +                          esult & 0x8000u) == 0u))
  8631  0939  0876               	movf	divide@exponent,w
  8632  093A  1D03               	btfss	3,2
  8633  093B  1BF9               	btfsc	divide@result+1,7
  8634  093C  2942               	goto	l5314
  8635  093D  291E               	goto	l5298
  8636  093E                     l5312:
  8637                           
  8638                           ;mcc_generated_files/mtouch/mtouch_slider.c: 242:     {;mcc_generated_files/mtouch/mtouc
      +                          h_slider.c: 243:         result = 0xffffu;
  8639  093E  30FF               	movlw	255
  8640  093F  00F8               	movwf	divide@result
  8641  0940  30FF               	movlw	255
  8642  0941  00F9               	movwf	divide@result+1
  8643  0942                     l5314:
  8644                           
  8645                           ;mcc_generated_files/mtouch/mtouch_slider.c: 247:     if (exponent)
  8646  0942  0876               	movf	divide@exponent,w
  8647  0943  1903               	btfsc	3,2
  8648  0944  2949               	goto	l758
  8649                           
  8650                           ;mcc_generated_files/mtouch/mtouch_slider.c: 248:     {;mcc_generated_files/mtouch/mtouc
      +                          h_slider.c: 249:         result = 0xffffu;
  8651  0945  30FF               	movlw	255
  8652  0946  00F8               	movwf	divide@result
  8653  0947  30FF               	movlw	255
  8654  0948  00F9               	movwf	divide@result+1
  8655  0949                     l758:	
  8656                           ;mcc_generated_files/mtouch/mtouch_slider.c: 250:     }
  8657                           
  8658                           
  8659                           ;mcc_generated_files/mtouch/mtouch_slider.c: 252:     return result;
  8660  0949  0879               	movf	divide@result+1,w
  8661  094A  00F3               	movwf	?_divide+1
  8662  094B  0878               	movf	divide@result,w
  8663  094C  00F2               	movwf	?_divide
  8664  094D  0008               	return
  8665  094E                     __end_of_divide:
  8666                           
  8667                           	psect	text33
  8668  09F5                     __ptext33:	
  8669 ;; *************** function _calculate_contact_size *****************
  8670 ;; Defined at:
  8671 ;;		line 639 in file "mcc_generated_files/mtouch/mtouch_slider.c"
  8672 ;; Parameters:    Size  Location     Type
  8673 ;;  slider          1    wreg     PTR struct .
  8674 ;;		 -> mtouch_slider(34), 
  8675 ;; Auto vars:     Size  Location     Type
  8676 ;;  slider          1   22[BANK0 ] PTR struct .
  8677 ;;		 -> mtouch_slider(34), 
  8678 ;;  contact_size    2   20[BANK0 ] unsigned short 
  8679 ;; Return value:  Size  Location     Type
  8680 ;;                  2   16[BANK0 ] unsigned short 
  8681 ;; Registers used:
  8682 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8683 ;; Tracked objects:
  8684 ;;		On entry : 1F/0
  8685 ;;		On exit  : 1F/0
  8686 ;;		Unchanged: 0/0
  8687 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8688 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8689 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8690 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8691 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8692 ;;Total ram usage:        7 bytes
  8693 ;; Hardware stack levels used: 1
  8694 ;; Hardware stack levels required when called: 7
  8695 ;; This function calls:
  8696 ;;		_Slider_FindLeft
  8697 ;;		_Slider_FindMiddle
  8698 ;;		_Slider_FindRight
  8699 ;; This function is called by:
  8700 ;;		_Slider_Service
  8701 ;; This function uses a non-reentrant model
  8702 ;;
  8703                           
  8704                           
  8705                           ;psect for function _calculate_contact_size
  8706  09F5                     _calculate_contact_size:
  8707                           
  8708                           ;incstack = 0
  8709                           ; Regs used in _calculate_contact_size: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8710                           ;calculate_contact_size@slider stored from wreg
  8711  09F5  00B6               	movwf	calculate_contact_size@slider
  8712                           
  8713                           ;mcc_generated_files/mtouch/mtouch_slider.c: 639: static uint16_t calculate_contact_size
      +                          (mtouch_slider_t* slider);mcc_generated_files/mtouch/mtouch_slider.c: 640: {;mcc_generat
      +                          ed_files/mtouch/mtouch_slider.c: 641:     uint16_t contact_size;;mcc_generated_files/mto
      +                          uch/mtouch_slider.c: 643:     middle_signal = Slider_FindMiddle(slider);
  8714  09F6  0836               	movf	calculate_contact_size@slider,w
  8715  09F7  3189  214E  3189   	fcall	_Slider_FindMiddle
  8716  09FA  0825               	movf	?_Slider_FindMiddle+1,w
  8717  09FB  0021               	movlb	1	; select bank1
  8718  09FC  00C1               	movwf	(_middle_signal+1)^(0+128)
  8719  09FD  0020               	movlb	0	; select bank0
  8720  09FE  0824               	movf	?_Slider_FindMiddle,w
  8721  09FF  0021               	movlb	1	; select bank1
  8722  0A00  00C0               	movwf	_middle_signal^(0+128)
  8723                           
  8724                           ;mcc_generated_files/mtouch/mtouch_slider.c: 644:     right_signal = Slider_FindRight(sl
      +                          ider);
  8725  0A01  0020               	movlb	0	; select bank0
  8726  0A02  0836               	movf	calculate_contact_size@slider,w
  8727  0A03  3197  2706  3189   	fcall	_Slider_FindRight
  8728  0A06  0825               	movf	?_Slider_FindRight+1,w
  8729  0A07  00DD               	movwf	_right_signal+1
  8730  0A08  0824               	movf	?_Slider_FindRight,w
  8731  0A09  00DC               	movwf	_right_signal
  8732                           
  8733                           ;mcc_generated_files/mtouch/mtouch_slider.c: 645:     left_signal = Slider_FindLeft(slid
      +                          er);
  8734  0A0A  0836               	movf	calculate_contact_size@slider,w
  8735  0A0B  3189  21A1  3189   	fcall	_Slider_FindLeft
  8736  0A0E  0825               	movf	?_Slider_FindLeft+1,w
  8737  0A0F  00DF               	movwf	_left_signal+1
  8738  0A10  0824               	movf	?_Slider_FindLeft,w
  8739  0A11  00DE               	movwf	_left_signal
  8740                           
  8741                           ;mcc_generated_files/mtouch/mtouch_slider.c: 647:     if (right_signal > left_signal)
  8742  0A12  085F               	movf	_left_signal+1,w
  8743  0A13  3A80               	xorlw	128
  8744  0A14  00B2               	movwf	??_calculate_contact_size
  8745  0A15  085D               	movf	_right_signal+1,w
  8746  0A16  3A80               	xorlw	128
  8747  0A17  0232               	subwf	??_calculate_contact_size,w
  8748  0A18  1D03               	skipz
  8749  0A19  2A1C               	goto	u5425
  8750  0A1A  085C               	movf	_right_signal,w
  8751  0A1B  025E               	subwf	_left_signal,w
  8752  0A1C                     u5425:
  8753  0A1C  1803               	skipnc
  8754  0A1D  2A26               	goto	l6072
  8755                           
  8756                           ;mcc_generated_files/mtouch/mtouch_slider.c: 648:     {;mcc_generated_files/mtouch/mtouc
      +                          h_slider.c: 649:         contact_size = middle_signal + right_signal;
  8757  0A1E  0020               	movlb	0	; select bank0
  8758  0A1F  085C               	movf	_right_signal,w
  8759  0A20  0021               	movlb	1	; select bank1
  8760  0A21  0740               	addwf	_middle_signal^(0+128),w
  8761  0A22  0020               	movlb	0	; select bank0
  8762  0A23  00B4               	movwf	calculate_contact_size@contact_size
  8763  0A24  085D               	movf	_right_signal+1,w
  8764  0A25  2A2D               	goto	L5
  8765  0A26                     l6072:	
  8766                           ;mcc_generated_files/mtouch/mtouch_slider.c: 650:     }
  8767                           
  8768                           
  8769                           ;mcc_generated_files/mtouch/mtouch_slider.c: 652:     {;mcc_generated_files/mtouch/mtouc
      +                          h_slider.c: 653:         contact_size = middle_signal + left_signal;
  8770  0A26  0020               	movlb	0	; select bank0
  8771  0A27  085E               	movf	_left_signal,w
  8772  0A28  0021               	movlb	1	; select bank1
  8773  0A29  0740               	addwf	_middle_signal^(0+128),w
  8774  0A2A  0020               	movlb	0	; select bank0
  8775  0A2B  00B4               	movwf	calculate_contact_size@contact_size
  8776  0A2C  085F               	movf	_left_signal+1,w
  8777  0A2D                     L5:
  8778  0A2D  0021               	movlb	1	; select bank1
  8779  0A2E  3D41               	addwfc	(_middle_signal+1)^(0+128),w
  8780  0A2F  0020               	movlb	0	; select bank0
  8781  0A30  00B5               	movwf	calculate_contact_size@contact_size+1
  8782                           
  8783                           ;mcc_generated_files/mtouch/mtouch_slider.c: 656:     if (contact_size < slider->contact
      +                          Threshold)
  8784  0A31  0836               	movf	calculate_contact_size@slider,w
  8785  0A32  3E06               	addlw	6
  8786  0A33  0086               	movwf	6
  8787  0A34  3001               	movlw	1	; select bank2/3
  8788  0A35  0087               	movwf	7
  8789  0A36  3F40               	moviw [0]fsr1
  8790  0A37  00B2               	movwf	??_calculate_contact_size
  8791  0A38  3F41               	moviw [1]fsr1
  8792  0A39  00B3               	movwf	??_calculate_contact_size+1
  8793  0A3A  0833               	movf	??_calculate_contact_size+1,w
  8794  0A3B  0235               	subwf	calculate_contact_size@contact_size+1,w
  8795  0A3C  1D03               	skipz
  8796  0A3D  2A40               	goto	u5435
  8797  0A3E  0832               	movf	??_calculate_contact_size,w
  8798  0A3F  0234               	subwf	calculate_contact_size@contact_size,w
  8799  0A40                     u5435:
  8800  0A40  1803               	skipnc
  8801  0A41  2A44               	goto	l6078
  8802                           
  8803                           ;mcc_generated_files/mtouch/mtouch_slider.c: 657:     {;mcc_generated_files/mtouch/mtouc
      +                          h_slider.c: 658:         contact_size = 0u;
  8804  0A42  01B4               	clrf	calculate_contact_size@contact_size
  8805  0A43  01B5               	clrf	calculate_contact_size@contact_size+1
  8806  0A44                     l6078:
  8807                           
  8808                           ;mcc_generated_files/mtouch/mtouch_slider.c: 661:     return contact_size;
  8809  0A44  0835               	movf	calculate_contact_size@contact_size+1,w
  8810  0A45  00B1               	movwf	?_calculate_contact_size+1
  8811  0A46  0834               	movf	calculate_contact_size@contact_size,w
  8812  0A47  00B0               	movwf	?_calculate_contact_size
  8813  0A48  0008               	return
  8814  0A49                     __end_of_calculate_contact_size:
  8815                           
  8816                           	psect	text34
  8817  1706                     __ptext34:	
  8818 ;; *************** function _Slider_FindRight *****************
  8819 ;; Defined at:
  8820 ;;		line 495 in file "mcc_generated_files/mtouch/mtouch_slider.c"
  8821 ;; Parameters:    Size  Location     Type
  8822 ;;  slider          1    wreg     PTR struct .
  8823 ;;		 -> mtouch_slider(34), 
  8824 ;; Auto vars:     Size  Location     Type
  8825 ;;  slider          1   11[BANK0 ] PTR struct .
  8826 ;;		 -> mtouch_slider(34), 
  8827 ;;  ref_node        1   10[BANK0 ] unsigned char 
  8828 ;; Return value:  Size  Location     Type
  8829 ;;                  2    4[BANK0 ] short 
  8830 ;; Registers used:
  8831 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8832 ;; Tracked objects:
  8833 ;;		On entry : 1F/0
  8834 ;;		On exit  : 1F/0
  8835 ;;		Unchanged: 0/0
  8836 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8837 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8838 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8839 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8840 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8841 ;;Total ram usage:        8 bytes
  8842 ;; Hardware stack levels used: 1
  8843 ;; Hardware stack levels required when called: 6
  8844 ;; This function calls:
  8845 ;;		_MTOUCH_Button_Deviation_Get
  8846 ;; This function is called by:
  8847 ;;		_calculate_contact_size
  8848 ;; This function uses a non-reentrant model
  8849 ;;
  8850                           
  8851                           
  8852                           ;psect for function _Slider_FindRight
  8853  1706                     _Slider_FindRight:
  8854                           
  8855                           ;incstack = 0
  8856                           ; Regs used in _Slider_FindRight: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8857                           ;Slider_FindRight@slider stored from wreg
  8858  1706  00AB               	movwf	Slider_FindRight@slider
  8859                           
  8860                           ;mcc_generated_files/mtouch/mtouch_slider.c: 495: static int16_t Slider_FindRight(mtouch
      +                          _slider_t* slider);mcc_generated_files/mtouch/mtouch_slider.c: 496: {;mcc_generated_file
      +                          s/mtouch/mtouch_slider.c: 497:     uint8_t ref_node = slider->startSegment;
  8861  1707  082B               	movf	Slider_FindRight@slider,w
  8862  1708  0086               	movwf	6
  8863  1709  3001               	movlw	1	; select bank2/3
  8864  170A  0087               	movwf	7
  8865  170B  3001               	movlw	1	; select bank2/3
  8866  170C  3F42               	moviw [2]fsr1
  8867  170D  00AA               	movwf	Slider_FindRight@ref_node
  8868                           
  8869                           ;mcc_generated_files/mtouch/mtouch_slider.c: 500:     if (middle_node == (ref_node + sli
      +                          der->segmentCount - 1u))
  8870  170E  082B               	movf	Slider_FindRight@slider,w
  8871  170F  3E03               	addlw	3
  8872  1710  0086               	movwf	6
  8873  1711  3001               	movlw	1	; select bank2/3
  8874  1712  0087               	movwf	7
  8875  1713  082A               	movf	Slider_FindRight@ref_node,w
  8876  1714  0701               	addwf	1,w
  8877  1715  00A6               	movwf	??_Slider_FindRight
  8878  1716  01A7               	clrf	??_Slider_FindRight+1
  8879  1717  0DA7               	rlf	??_Slider_FindRight+1,f
  8880  1718  0826               	movf	??_Slider_FindRight,w
  8881  1719  3EFF               	addlw	255
  8882  171A  00A8               	movwf	??_Slider_FindRight+2
  8883  171B  30FF               	movlw	255
  8884  171C  3D27               	addwfc	??_Slider_FindRight+1,w
  8885  171D  00A9               	movwf	??_Slider_FindRight+3
  8886  171E  0860               	movf	_middle_node,w
  8887  171F  0628               	xorwf	??_Slider_FindRight+2,w
  8888  1720  0429               	iorwf	??_Slider_FindRight+3,w
  8889  1721  1D03               	skipz
  8890  1722  2F2F               	goto	l5738
  8891                           
  8892                           ;mcc_generated_files/mtouch/mtouch_slider.c: 501:     {;mcc_generated_files/mtouch/mtouc
      +                          h_slider.c: 502:         if (slider->type == MTOUCH_TYPE_WHEEL)
  8893  1723  0A2B               	incf	Slider_FindRight@slider,w
  8894  1724  0086               	movwf	6
  8895  1725  3001               	movlw	1	; select bank2/3
  8896  1726  0087               	movwf	7
  8897  1727  0301               	decf	1,w
  8898  1728  1D03               	btfss	3,2
  8899  1729  2F2C               	goto	l5736
  8900                           
  8901                           ;mcc_generated_files/mtouch/mtouch_slider.c: 503:         {;mcc_generated_files/mtouch/m
      +                          touch_slider.c: 506:             right_signal = (int16_t) MTOUCH_Button_Deviation_Get(re
      +                          f_node);
  8902  172A  082A               	movf	Slider_FindRight@ref_node,w
  8903  172B  2F31               	goto	L6
  8904  172C                     l5736:	
  8905                           ;mcc_generated_files/mtouch/mtouch_slider.c: 507:         }
  8906                           
  8907                           
  8908                           ;mcc_generated_files/mtouch/mtouch_slider.c: 509:         {;mcc_generated_files/mtouch/m
      +                          touch_slider.c: 511:             right_signal = 0;
  8909  172C  01DC               	clrf	_right_signal
  8910  172D  01DD               	clrf	_right_signal+1
  8911  172E  2F38               	goto	l5740
  8912  172F                     l5738:
  8913                           
  8914                           ;mcc_generated_files/mtouch/mtouch_slider.c: 515:     {;mcc_generated_files/mtouch/mtouc
      +                          h_slider.c: 516:         right_signal = (int16_t) MTOUCH_Button_Deviation_Get(middle_nod
      +                          e + 1u);
  8915  172F  0860               	movf	_middle_node,w
  8916  1730  3E01               	addlw	1
  8917  1731                     L6:
  8918  1731  3192  22A2  3197   	fcall	_MTOUCH_Button_Deviation_Get
  8919  1734  00DC               	movwf	_right_signal
  8920  1735  01DD               	clrf	_right_signal+1
  8921  1736  1BDC               	btfsc	_right_signal,7
  8922  1737  03DD               	decf	_right_signal+1,f
  8923  1738                     l5740:
  8924                           
  8925                           ;mcc_generated_files/mtouch/mtouch_slider.c: 519:     if (right_signal < 0)
  8926  1738  1FDD               	btfss	_right_signal+1,7
  8927  1739  2F3C               	goto	l5744
  8928                           
  8929                           ;mcc_generated_files/mtouch/mtouch_slider.c: 520:     {;mcc_generated_files/mtouch/mtouc
      +                          h_slider.c: 521:         right_signal = 0;
  8930  173A  01DC               	clrf	_right_signal
  8931  173B  01DD               	clrf	_right_signal+1
  8932  173C                     l5744:
  8933                           
  8934                           ;mcc_generated_files/mtouch/mtouch_slider.c: 524:     return right_signal;
  8935  173C  085D               	movf	_right_signal+1,w
  8936  173D  00A5               	movwf	?_Slider_FindRight+1
  8937  173E  085C               	movf	_right_signal,w
  8938  173F  00A4               	movwf	?_Slider_FindRight
  8939  1740  0008               	return
  8940  1741                     __end_of_Slider_FindRight:
  8941                           
  8942                           	psect	text35
  8943  094E                     __ptext35:	
  8944 ;; *************** function _Slider_FindMiddle *****************
  8945 ;; Defined at:
  8946 ;;		line 419 in file "mcc_generated_files/mtouch/mtouch_slider.c"
  8947 ;; Parameters:    Size  Location     Type
  8948 ;;  slider          1    wreg     PTR struct .
  8949 ;;		 -> mtouch_slider(34), 
  8950 ;; Auto vars:     Size  Location     Type
  8951 ;;  slider          1   15[BANK0 ] PTR struct .
  8952 ;;		 -> mtouch_slider(34), 
  8953 ;;  maximumDelta    2   12[BANK0 ] short 
  8954 ;;  channelDelta    2   10[BANK0 ] short 
  8955 ;;  i               1   14[BANK0 ] unsigned char 
  8956 ;; Return value:  Size  Location     Type
  8957 ;;                  2    4[BANK0 ] short 
  8958 ;; Registers used:
  8959 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8960 ;; Tracked objects:
  8961 ;;		On entry : 1F/0
  8962 ;;		On exit  : 1F/0
  8963 ;;		Unchanged: 0/0
  8964 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8965 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8966 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8967 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8968 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8969 ;;Total ram usage:       12 bytes
  8970 ;; Hardware stack levels used: 1
  8971 ;; Hardware stack levels required when called: 6
  8972 ;; This function calls:
  8973 ;;		_MTOUCH_Button_Deviation_Get
  8974 ;; This function is called by:
  8975 ;;		_calculate_contact_size
  8976 ;; This function uses a non-reentrant model
  8977 ;;
  8978                           
  8979                           
  8980                           ;psect for function _Slider_FindMiddle
  8981  094E                     _Slider_FindMiddle:
  8982                           
  8983                           ;incstack = 0
  8984                           ; Regs used in _Slider_FindMiddle: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8985                           ;Slider_FindMiddle@slider stored from wreg
  8986  094E  00AF               	movwf	Slider_FindMiddle@slider
  8987                           
  8988                           ;mcc_generated_files/mtouch/mtouch_slider.c: 419: static int16_t Slider_FindMiddle(mtouc
      +                          h_slider_t* slider);mcc_generated_files/mtouch/mtouch_slider.c: 420: {;mcc_generated_fil
      +                          es/mtouch/mtouch_slider.c: 421:     uint8_t i;;mcc_generated_files/mtouch/mtouch_slider.
      +                          c: 422:     int16_t channelDelta, maximumDelta;;mcc_generated_files/mtouch/mtouch_slider
      +                          .c: 424:     maximumDelta = 0;
  8989  094F  01AC               	clrf	Slider_FindMiddle@maximumDelta
  8990  0950  01AD               	clrf	Slider_FindMiddle@maximumDelta+1
  8991                           
  8992                           ;mcc_generated_files/mtouch/mtouch_slider.c: 425:     middle_node = slider->startSegment
      +                          ;
  8993  0951  082F               	movf	Slider_FindMiddle@slider,w
  8994  0952  0086               	movwf	6
  8995  0953  3001               	movlw	1	; select bank2/3
  8996  0954  0087               	movwf	7
  8997  0955  3001               	movlw	1	; select bank2/3
  8998  0956  3F42               	moviw [2]fsr1
  8999  0957  00E0               	movwf	_middle_node
  9000                           
  9001                           ;mcc_generated_files/mtouch/mtouch_slider.c: 428:     for (i = slider->startSegment; i <
      +                           (slider->startSegment + slider->segmentCount); i++)
  9002  0958  082F               	movf	Slider_FindMiddle@slider,w
  9003  0959  0086               	movwf	6
  9004  095A  3001               	movlw	1	; select bank2/3
  9005  095B  0087               	movwf	7
  9006  095C  3001               	movlw	1	; select bank2/3
  9007  095D  3F42               	moviw [2]fsr1
  9008  095E  00AE               	movwf	Slider_FindMiddle@i
  9009  095F                     l5696:
  9010  095F  082F               	movf	Slider_FindMiddle@slider,w
  9011  0960  3E03               	addlw	3
  9012  0961  0086               	movwf	6
  9013  0962  3001               	movlw	1	; select bank2/3
  9014  0963  0087               	movwf	7
  9015  0964  082F               	movf	Slider_FindMiddle@slider,w
  9016  0965  3E02               	addlw	2
  9017  0966  0084               	movwf	4
  9018  0967  3001               	movlw	1	; select bank2/3
  9019  0968  0085               	movwf	5
  9020  0969  0800               	movf	0,w
  9021  096A  0701               	addwf	1,w
  9022  096B  00A6               	movwf	??_Slider_FindMiddle
  9023  096C  01A7               	clrf	??_Slider_FindMiddle+1
  9024  096D  0DA7               	rlf	??_Slider_FindMiddle+1,f
  9025  096E  082E               	movf	Slider_FindMiddle@i,w
  9026  096F  00A8               	movwf	??_Slider_FindMiddle+2
  9027  0970  01A9               	clrf	??_Slider_FindMiddle+3
  9028  0971  0827               	movf	??_Slider_FindMiddle+1,w
  9029  0972  0229               	subwf	??_Slider_FindMiddle+3,w
  9030  0973  1D03               	skipz
  9031  0974  2977               	goto	u4795
  9032  0975  0826               	movf	??_Slider_FindMiddle,w
  9033  0976  0228               	subwf	??_Slider_FindMiddle+2,w
  9034  0977                     u4795:
  9035  0977  1803               	btfsc	3,0
  9036  0978  299C               	goto	l5698
  9037                           
  9038                           ;mcc_generated_files/mtouch/mtouch_slider.c: 429:     {;mcc_generated_files/mtouch/mtouc
      +                          h_slider.c: 431:         channelDelta = (int16_t) MTOUCH_Button_Deviation_Get(i);
  9039  0979  082E               	movf	Slider_FindMiddle@i,w
  9040  097A  3192  22A2  3189   	fcall	_MTOUCH_Button_Deviation_Get
  9041  097D  00AA               	movwf	Slider_FindMiddle@channelDelta
  9042  097E  01AB               	clrf	Slider_FindMiddle@channelDelta+1
  9043  097F  1BAA               	btfsc	Slider_FindMiddle@channelDelta,7
  9044  0980  03AB               	decf	Slider_FindMiddle@channelDelta+1,f
  9045                           
  9046                           ;mcc_generated_files/mtouch/mtouch_slider.c: 434:         if (channelDelta > maximumDelt
      +                          a)
  9047  0981  082D               	movf	Slider_FindMiddle@maximumDelta+1,w
  9048  0982  3A80               	xorlw	128
  9049  0983  00A6               	movwf	??_Slider_FindMiddle
  9050  0984  082B               	movf	Slider_FindMiddle@channelDelta+1,w
  9051  0985  3A80               	xorlw	128
  9052  0986  0226               	subwf	??_Slider_FindMiddle,w
  9053  0987  1D03               	skipz
  9054  0988  298B               	goto	u4785
  9055  0989  082A               	movf	Slider_FindMiddle@channelDelta,w
  9056  098A  022C               	subwf	Slider_FindMiddle@maximumDelta,w
  9057  098B                     u4785:
  9058  098B  1803               	skipnc
  9059  098C  2996               	goto	l5694
  9060                           
  9061                           ;mcc_generated_files/mtouch/mtouch_slider.c: 435:         {;mcc_generated_files/mtouch/m
      +                          touch_slider.c: 436:             middle_node = i;
  9062  098D  0020               	movlb	0	; select bank0
  9063  098E  082E               	movf	Slider_FindMiddle@i,w
  9064  098F  00A6               	movwf	??_Slider_FindMiddle
  9065  0990  0826               	movf	??_Slider_FindMiddle,w
  9066  0991  00E0               	movwf	_middle_node
  9067                           
  9068                           ;mcc_generated_files/mtouch/mtouch_slider.c: 437:             maximumDelta = channelDelt
      +                          a;
  9069  0992  082B               	movf	Slider_FindMiddle@channelDelta+1,w
  9070  0993  00AD               	movwf	Slider_FindMiddle@maximumDelta+1
  9071  0994  082A               	movf	Slider_FindMiddle@channelDelta,w
  9072  0995  00AC               	movwf	Slider_FindMiddle@maximumDelta
  9073  0996                     l5694:
  9074                           
  9075                           ;mcc_generated_files/mtouch/mtouch_slider.c: 439:     }
  9076  0996  3001               	movlw	1
  9077  0997  0020               	movlb	0	; select bank0
  9078  0998  00A6               	movwf	??_Slider_FindMiddle
  9079  0999  0826               	movf	??_Slider_FindMiddle,w
  9080  099A  07AE               	addwf	Slider_FindMiddle@i,f
  9081  099B  295F               	goto	l5696
  9082  099C                     l5698:
  9083                           
  9084                           ;mcc_generated_files/mtouch/mtouch_slider.c: 441:     return maximumDelta;
  9085  099C  082D               	movf	Slider_FindMiddle@maximumDelta+1,w
  9086  099D  00A5               	movwf	?_Slider_FindMiddle+1
  9087  099E  082C               	movf	Slider_FindMiddle@maximumDelta,w
  9088  099F  00A4               	movwf	?_Slider_FindMiddle
  9089  09A0  0008               	return
  9090  09A1                     __end_of_Slider_FindMiddle:
  9091                           
  9092                           	psect	text36
  9093  09A1                     __ptext36:	
  9094 ;; *************** function _Slider_FindLeft *****************
  9095 ;; Defined at:
  9096 ;;		line 449 in file "mcc_generated_files/mtouch/mtouch_slider.c"
  9097 ;; Parameters:    Size  Location     Type
  9098 ;;  slider          1    wreg     PTR struct .
  9099 ;;		 -> mtouch_slider(34), 
  9100 ;; Auto vars:     Size  Location     Type
  9101 ;;  slider          1    6[BANK0 ] PTR struct .
  9102 ;;		 -> mtouch_slider(34), 
  9103 ;;  ref_node        1    7[BANK0 ] unsigned char 
  9104 ;; Return value:  Size  Location     Type
  9105 ;;                  2    4[BANK0 ] short 
  9106 ;; Registers used:
  9107 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9108 ;; Tracked objects:
  9109 ;;		On entry : 1F/0
  9110 ;;		On exit  : 1F/0
  9111 ;;		Unchanged: 0/0
  9112 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9113 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9114 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9115 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9116 ;;      Totals:         1       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9117 ;;Total ram usage:        5 bytes
  9118 ;; Hardware stack levels used: 1
  9119 ;; Hardware stack levels required when called: 6
  9120 ;; This function calls:
  9121 ;;		_MTOUCH_Button_Deviation_Get
  9122 ;; This function is called by:
  9123 ;;		_calculate_contact_size
  9124 ;; This function uses a non-reentrant model
  9125 ;;
  9126                           
  9127                           
  9128                           ;psect for function _Slider_FindLeft
  9129  09A1                     _Slider_FindLeft:
  9130                           
  9131                           ;incstack = 0
  9132                           ; Regs used in _Slider_FindLeft: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9133                           ;Slider_FindLeft@slider stored from wreg
  9134  09A1  00A6               	movwf	Slider_FindLeft@slider
  9135                           
  9136                           ;mcc_generated_files/mtouch/mtouch_slider.c: 449: static int16_t Slider_FindLeft(mtouch_
      +                          slider_t* slider);mcc_generated_files/mtouch/mtouch_slider.c: 450: {;mcc_generated_files
      +                          /mtouch/mtouch_slider.c: 451:     uint8_t ref_node = slider->startSegment;
  9137  09A2  0826               	movf	Slider_FindLeft@slider,w
  9138  09A3  0086               	movwf	6
  9139  09A4  3001               	movlw	1	; select bank2/3
  9140  09A5  0087               	movwf	7
  9141  09A6  3001               	movlw	1	; select bank2/3
  9142  09A7  3F42               	moviw [2]fsr1
  9143  09A8  00A7               	movwf	Slider_FindLeft@ref_node
  9144                           
  9145                           ;mcc_generated_files/mtouch/mtouch_slider.c: 453:     wheel_sensor_middle_channel_zero =
      +                           0;
  9146  09A9  0021               	movlb	1	; select bank1
  9147  09AA  01C7               	clrf	_wheel_sensor_middle_channel_zero^(0+128)
  9148                           
  9149                           ;mcc_generated_files/mtouch/mtouch_slider.c: 456:     if (middle_node == ref_node)
  9150  09AB  0020               	movlb	0	; select bank0
  9151  09AC  0860               	movf	_middle_node,w
  9152  09AD  0627               	xorwf	Slider_FindLeft@ref_node,w
  9153  09AE  1D03               	skipz
  9154  09AF  29E2               	goto	l5718
  9155                           
  9156                           ;mcc_generated_files/mtouch/mtouch_slider.c: 457:     {;mcc_generated_files/mtouch/mtouc
      +                          h_slider.c: 458:         if (slider->type == MTOUCH_TYPE_WHEEL)
  9157  09B0  0A26               	incf	Slider_FindLeft@slider,w
  9158  09B1  0086               	movwf	6
  9159  09B2  3001               	movlw	1	; select bank2/3
  9160  09B3  0087               	movwf	7
  9161  09B4  0301               	decf	1,w
  9162  09B5  1D03               	btfss	3,2
  9163  09B6  29DF               	goto	l5716
  9164                           
  9165                           ;mcc_generated_files/mtouch/mtouch_slider.c: 459:         {;mcc_generated_files/mtouch/m
      +                          touch_slider.c: 462:             left_signal = (int16_t) MTOUCH_Button_Deviation_Get(ref
      +                          _node + slider->segmentCount - 1u);
  9166  09B7  0826               	movf	Slider_FindLeft@slider,w
  9167  09B8  3E03               	addlw	3
  9168  09B9  0086               	movwf	6
  9169  09BA  3001               	movlw	1	; select bank2/3
  9170  09BB  0087               	movwf	7
  9171  09BC  0801               	movf	1,w
  9172  09BD  0727               	addwf	Slider_FindLeft@ref_node,w
  9173  09BE  3EFF               	addlw	255
  9174  09BF  3192  22A2  3189   	fcall	_MTOUCH_Button_Deviation_Get
  9175  09C2  00DE               	movwf	_left_signal
  9176  09C3  01DF               	clrf	_left_signal+1
  9177  09C4  1BDE               	btfsc	_left_signal,7
  9178  09C5  03DF               	decf	_left_signal+1,f
  9179                           
  9180                           ;mcc_generated_files/mtouch/mtouch_slider.c: 465:             right_signal = (int16_t) M
      +                          TOUCH_Button_Deviation_Get(ref_node + 1u);
  9181  09C6  0827               	movf	Slider_FindLeft@ref_node,w
  9182  09C7  3E01               	addlw	1
  9183  09C8  3192  22A2  3189   	fcall	_MTOUCH_Button_Deviation_Get
  9184  09CB  00DC               	movwf	_right_signal
  9185  09CC  01DD               	clrf	_right_signal+1
  9186  09CD  1BDC               	btfsc	_right_signal,7
  9187  09CE  03DD               	decf	_right_signal+1,f
  9188                           
  9189                           ;mcc_generated_files/mtouch/mtouch_slider.c: 467:             if(left_signal > right_sig
      +                          nal)
  9190  09CF  085D               	movf	_right_signal+1,w
  9191  09D0  3A80               	xorlw	128
  9192  09D1  00F9               	movwf	??_Slider_FindLeft
  9193  09D2  085F               	movf	_left_signal+1,w
  9194  09D3  3A80               	xorlw	128
  9195  09D4  0279               	subwf	??_Slider_FindLeft,w
  9196  09D5  1D03               	skipz
  9197  09D6  29D9               	goto	u4825
  9198  09D7  085E               	movf	_left_signal,w
  9199  09D8  025C               	subwf	_right_signal,w
  9200  09D9                     u4825:
  9201  09D9  1803               	skipnc
  9202  09DA  29EB               	goto	l5720
  9203                           
  9204                           ;mcc_generated_files/mtouch/mtouch_slider.c: 468:             {;mcc_generated_files/mtou
      +                          ch/mtouch_slider.c: 469:                 wheel_sensor_middle_channel_zero = 1;
  9205  09DB  0021               	movlb	1	; select bank1
  9206  09DC  01C7               	clrf	_wheel_sensor_middle_channel_zero^(0+128)
  9207  09DD  0AC7               	incf	_wheel_sensor_middle_channel_zero^(0+128),f
  9208  09DE  29EB               	goto	l5720
  9209  09DF                     l5716:
  9210                           
  9211                           ;mcc_generated_files/mtouch/mtouch_slider.c: 473:         {;mcc_generated_files/mtouch/m
      +                          touch_slider.c: 475:             left_signal = 0;
  9212  09DF  01DE               	clrf	_left_signal
  9213  09E0  01DF               	clrf	_left_signal+1
  9214  09E1  29EB               	goto	l5720
  9215  09E2                     l5718:
  9216                           
  9217                           ;mcc_generated_files/mtouch/mtouch_slider.c: 479:     {;mcc_generated_files/mtouch/mtouc
      +                          h_slider.c: 480:         left_signal = (int16_t) MTOUCH_Button_Deviation_Get(middle_node
      +                           - 1u);
  9218  09E2  0860               	movf	_middle_node,w
  9219  09E3  3EFF               	addlw	255
  9220  09E4  3192  22A2  3189   	fcall	_MTOUCH_Button_Deviation_Get
  9221  09E7  00DE               	movwf	_left_signal
  9222  09E8  01DF               	clrf	_left_signal+1
  9223  09E9  1BDE               	btfsc	_left_signal,7
  9224  09EA  03DF               	decf	_left_signal+1,f
  9225  09EB                     l5720:
  9226                           
  9227                           ;mcc_generated_files/mtouch/mtouch_slider.c: 483:     if (left_signal < 0)
  9228  09EB  0020               	movlb	0	; select bank0
  9229  09EC  1FDF               	btfss	_left_signal+1,7
  9230  09ED  29F0               	goto	l5724
  9231                           
  9232                           ;mcc_generated_files/mtouch/mtouch_slider.c: 484:     {;mcc_generated_files/mtouch/mtouc
      +                          h_slider.c: 485:         left_signal = 0;
  9233  09EE  01DE               	clrf	_left_signal
  9234  09EF  01DF               	clrf	_left_signal+1
  9235  09F0                     l5724:
  9236                           
  9237                           ;mcc_generated_files/mtouch/mtouch_slider.c: 487:     return left_signal;
  9238  09F0  085F               	movf	_left_signal+1,w
  9239  09F1  00A5               	movwf	?_Slider_FindLeft+1
  9240  09F2  085E               	movf	_left_signal,w
  9241  09F3  00A4               	movwf	?_Slider_FindLeft
  9242  09F4  0008               	return
  9243  09F5                     __end_of_Slider_FindLeft:
  9244                           
  9245                           	psect	text37
  9246  12A2                     __ptext37:	
  9247 ;; *************** function _MTOUCH_Button_Deviation_Get *****************
  9248 ;; Defined at:
  9249 ;;		line 646 in file "mcc_generated_files/mtouch/mtouch_button.c"
  9250 ;; Parameters:    Size  Location     Type
  9251 ;;  name            1    wreg     enum E2935
  9252 ;; Auto vars:     Size  Location     Type
  9253 ;;  name            1    8[COMMON] enum E2935
  9254 ;; Return value:  Size  Location     Type
  9255 ;;                  1    wreg      char 
  9256 ;; Registers used:
  9257 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9258 ;; Tracked objects:
  9259 ;;		On entry : 1F/0
  9260 ;;		On exit  : 1F/0
  9261 ;;		Unchanged: 0/0
  9262 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9263 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9264 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9265 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9266 ;;      Totals:         1       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9267 ;;Total ram usage:        5 bytes
  9268 ;; Hardware stack levels used: 1
  9269 ;; Hardware stack levels required when called: 5
  9270 ;; This function calls:
  9271 ;;		___wmul
  9272 ;; This function is called by:
  9273 ;;		_Slider_FindMiddle
  9274 ;;		_Slider_FindLeft
  9275 ;;		_Slider_FindRight
  9276 ;; This function uses a non-reentrant model
  9277 ;;
  9278                           
  9279                           
  9280                           ;psect for function _MTOUCH_Button_Deviation_Get
  9281  12A2                     _MTOUCH_Button_Deviation_Get:
  9282                           
  9283                           ;incstack = 0
  9284                           ; Regs used in _MTOUCH_Button_Deviation_Get: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
  9285                           ;MTOUCH_Button_Deviation_Get@name stored from wreg
  9286  12A2  00F8               	movwf	MTOUCH_Button_Deviation_Get@name
  9287                           
  9288                           ;mcc_generated_files/mtouch/mtouch_button.c: 646: mtouch_button_deviation_t MTOUCH_Butto
      +                          n_Deviation_Get(enum mtouch_button_names name);mcc_generated_files/mtouch/mtouch_button.
      +                          c: 647: {;mcc_generated_files/mtouch/mtouch_button.c: 648:     if(name < 10u)
  9289  12A3  300A               	movlw	10
  9290  12A4  0278               	subwf	MTOUCH_Button_Deviation_Get@name,w
  9291  12A5  1803               	skipnc
  9292  12A6  2AC0               	goto	l5428
  9293                           
  9294                           ;mcc_generated_files/mtouch/mtouch_button.c: 649:         return mtouch_button[name].dev
      +                          iation;
  9295  12A7  0878               	movf	MTOUCH_Button_Deviation_Get@name,w
  9296  12A8  00A0               	movwf	??_MTOUCH_Button_Deviation_Get
  9297  12A9  01A1               	clrf	??_MTOUCH_Button_Deviation_Get+1
  9298  12AA  0820               	movf	??_MTOUCH_Button_Deviation_Get,w
  9299  12AB  00F2               	movwf	___wmul@multiplier
  9300  12AC  0821               	movf	??_MTOUCH_Button_Deviation_Get+1,w
  9301  12AD  00F3               	movwf	___wmul@multiplier+1
  9302  12AE  3012               	movlw	18
  9303  12AF  00F4               	movwf	___wmul@multiplicand
  9304  12B0  3000               	movlw	0
  9305  12B1  00F5               	movwf	___wmul@multiplicand+1
  9306  12B2  3188  2000         	fcall	___wmul
  9307  12B4  3046               	movlw	70
  9308  12B5  00A2               	movwf	??_MTOUCH_Button_Deviation_Get+2
  9309  12B6  3023               	movlw	35
  9310  12B7  00A3               	movwf	??_MTOUCH_Button_Deviation_Get+3
  9311  12B8  0872               	movf	?___wmul,w
  9312  12B9  0722               	addwf	??_MTOUCH_Button_Deviation_Get+2,w
  9313  12BA  0086               	movwf	6
  9314  12BB  0873               	movf	?___wmul+1,w
  9315  12BC  3D23               	addwfc	??_MTOUCH_Button_Deviation_Get+3,w
  9316  12BD  0087               	movwf	7
  9317  12BE  0801               	movf	1,w
  9318  12BF  0008               	return
  9319  12C0                     l5428:
  9320                           
  9321                           ;mcc_generated_files/mtouch/mtouch_button.c: 651:         return (mtouch_button_deviatio
      +                          n_t)0;
  9322  12C0  3000               	movlw	0
  9323  12C1  0008               	return
  9324  12C2                     __end_of_MTOUCH_Button_Deviation_Get:
  9325                           
  9326                           	psect	text38
  9327  1FAD                     __ptext38:	
  9328 ;; *************** function _Slider_DefaultCallback *****************
  9329 ;; Defined at:
  9330 ;;		line 1027 in file "mcc_generated_files/mtouch/mtouch_slider.c"
  9331 ;; Parameters:    Size  Location     Type
  9332 ;;  slider          1    2[COMMON] enum E2918
  9333 ;; Auto vars:     Size  Location     Type
  9334 ;;		None
  9335 ;; Return value:  Size  Location     Type
  9336 ;;                  1    wreg      void 
  9337 ;; Registers used:
  9338 ;;		None
  9339 ;; Tracked objects:
  9340 ;;		On entry : 1F/0
  9341 ;;		On exit  : 1F/0
  9342 ;;		Unchanged: 1F/0
  9343 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9344 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9345 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9346 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9347 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9348 ;;Total ram usage:        1 bytes
  9349 ;; Hardware stack levels used: 1
  9350 ;; Hardware stack levels required when called: 4
  9351 ;; This function calls:
  9352 ;;		Nothing
  9353 ;; This function is called by:
  9354 ;;		_Slider_Service
  9355 ;; This function uses a non-reentrant model
  9356 ;;
  9357                           
  9358                           
  9359                           ;psect for function _Slider_DefaultCallback
  9360  1FAD                     _Slider_DefaultCallback:
  9361                           
  9362                           ;incstack = 0
  9363                           ; Regs used in _Slider_DefaultCallback: []
  9364  1FAD  0008               	return
  9365  1FAE                     __end_of_Slider_DefaultCallback:
  9366                           
  9367                           	psect	text39
  9368  17BE                     __ptext39:	
  9369 ;; *************** function _MTOUCH_Button_isPressed *****************
  9370 ;; Defined at:
  9371 ;;		line 581 in file "mcc_generated_files/mtouch/mtouch_button.c"
  9372 ;; Parameters:    Size  Location     Type
  9373 ;;  name            1    wreg     enum E2935
  9374 ;; Auto vars:     Size  Location     Type
  9375 ;;  name            1    9[COMMON] enum E2935
  9376 ;; Return value:  Size  Location     Type
  9377 ;;                  1    wreg      _Bool 
  9378 ;; Registers used:
  9379 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9380 ;; Tracked objects:
  9381 ;;		On entry : 1F/0
  9382 ;;		On exit  : 1F/0
  9383 ;;		Unchanged: 0/0
  9384 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9385 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9386 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9387 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9388 ;;      Totals:         2       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9389 ;;Total ram usage:        6 bytes
  9390 ;; Hardware stack levels used: 1
  9391 ;; Hardware stack levels required when called: 5
  9392 ;; This function calls:
  9393 ;;		___wmul
  9394 ;; This function is called by:
  9395 ;;		_Slider_Service
  9396 ;; This function uses a non-reentrant model
  9397 ;;
  9398                           
  9399                           
  9400                           ;psect for function _MTOUCH_Button_isPressed
  9401  17BE                     _MTOUCH_Button_isPressed:
  9402                           
  9403                           ;incstack = 0
  9404                           ; Regs used in _MTOUCH_Button_isPressed: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+csta
      +                          ck]
  9405                           ;MTOUCH_Button_isPressed@name stored from wreg
  9406  17BE  00F9               	movwf	MTOUCH_Button_isPressed@name
  9407                           
  9408                           ;mcc_generated_files/mtouch/mtouch_button.c: 581: _Bool MTOUCH_Button_isPressed(enum mto
      +                          uch_button_names name);mcc_generated_files/mtouch/mtouch_button.c: 582: {;mcc_generated_
      +                          files/mtouch/mtouch_button.c: 583:     if(name < 10u)
  9409  17BF  300A               	movlw	10
  9410  17C0  0279               	subwf	MTOUCH_Button_isPressed@name,w
  9411  17C1  1803               	skipnc
  9412  17C2  2FFE               	goto	l5824
  9413                           
  9414                           ;mcc_generated_files/mtouch/mtouch_button.c: 584:         return (_Bool)((mtouch_button[
      +                          name].state == MTOUCH_BUTTON_STATE_pressed || mtouch_button[name].state == MTOUCH_BUTTON
      +                          _STATE_releaseDebounce) ? 1 : 0);
  9415  17C3  01F8               	clrf	_MTOUCH_Button_isPressed$955
  9416  17C4  0AF8               	incf	_MTOUCH_Button_isPressed$955,f
  9417  17C5  0879               	movf	MTOUCH_Button_isPressed@name,w
  9418  17C6  00A0               	movwf	??_MTOUCH_Button_isPressed
  9419  17C7  01A1               	clrf	??_MTOUCH_Button_isPressed+1
  9420  17C8  0820               	movf	??_MTOUCH_Button_isPressed,w
  9421  17C9  00F2               	movwf	___wmul@multiplier
  9422  17CA  0821               	movf	??_MTOUCH_Button_isPressed+1,w
  9423  17CB  00F3               	movwf	___wmul@multiplier+1
  9424  17CC  3012               	movlw	18
  9425  17CD  00F4               	movwf	___wmul@multiplicand
  9426  17CE  3000               	movlw	0
  9427  17CF  00F5               	movwf	___wmul@multiplicand+1
  9428  17D0  3188  2000  3197   	fcall	___wmul
  9429  17D3  303E               	movlw	62
  9430  17D4  00A2               	movwf	??_MTOUCH_Button_isPressed+2
  9431  17D5  3023               	movlw	35
  9432  17D6  00A3               	movwf	??_MTOUCH_Button_isPressed+3
  9433  17D7  0872               	movf	?___wmul,w
  9434  17D8  0722               	addwf	??_MTOUCH_Button_isPressed+2,w
  9435  17D9  0086               	movwf	6
  9436  17DA  0873               	movf	?___wmul+1,w
  9437  17DB  3D23               	addwfc	??_MTOUCH_Button_isPressed+3,w
  9438  17DC  0087               	movwf	7
  9439  17DD  3003               	movlw	3
  9440  17DE  0601               	xorwf	1,w
  9441  17DF  1903               	btfsc	3,2
  9442  17E0  2FFC               	goto	l5818
  9443  17E1  0879               	movf	MTOUCH_Button_isPressed@name,w
  9444  17E2  00A0               	movwf	??_MTOUCH_Button_isPressed
  9445  17E3  01A1               	clrf	??_MTOUCH_Button_isPressed+1
  9446  17E4  0820               	movf	??_MTOUCH_Button_isPressed,w
  9447  17E5  00F2               	movwf	___wmul@multiplier
  9448  17E6  0821               	movf	??_MTOUCH_Button_isPressed+1,w
  9449  17E7  00F3               	movwf	___wmul@multiplier+1
  9450  17E8  3012               	movlw	18
  9451  17E9  00F4               	movwf	___wmul@multiplicand
  9452  17EA  3000               	movlw	0
  9453  17EB  00F5               	movwf	___wmul@multiplicand+1
  9454  17EC  3188  2000         	fcall	___wmul
  9455  17EE  303E               	movlw	62
  9456  17EF  00A2               	movwf	??_MTOUCH_Button_isPressed+2
  9457  17F0  3023               	movlw	35
  9458  17F1  00A3               	movwf	??_MTOUCH_Button_isPressed+3
  9459  17F2  0872               	movf	?___wmul,w
  9460  17F3  0722               	addwf	??_MTOUCH_Button_isPressed+2,w
  9461  17F4  0086               	movwf	6
  9462  17F5  0873               	movf	?___wmul+1,w
  9463  17F6  3D23               	addwfc	??_MTOUCH_Button_isPressed+3,w
  9464  17F7  0087               	movwf	7
  9465  17F8  3004               	movlw	4
  9466  17F9  0601               	xorwf	1,w
  9467  17FA  1D03               	btfss	3,2
  9468  17FB  01F8               	clrf	_MTOUCH_Button_isPressed$955
  9469  17FC                     l5818:
  9470  17FC  0878               	movf	_MTOUCH_Button_isPressed$955,w
  9471  17FD  0008               	return
  9472  17FE                     l5824:
  9473                           
  9474                           ;mcc_generated_files/mtouch/mtouch_button.c: 586:         return 0;
  9475  17FE  3000               	movlw	0
  9476  17FF  0008               	return
  9477  1800                     __end_of_MTOUCH_Button_isPressed:
  9478                           
  9479                           	psect	text40
  9480  1149                     __ptext40:	
  9481 ;; *************** function _MTOUCH_Sensor_SampleAll *****************
  9482 ;; Defined at:
  9483 ;;		line 195 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  9484 ;; Parameters:    Size  Location     Type
  9485 ;;		None
  9486 ;; Auto vars:     Size  Location     Type
  9487 ;;  sensor          1   24[BANK0 ] enum E2707
  9488 ;; Return value:  Size  Location     Type
  9489 ;;                  1    wreg      _Bool 
  9490 ;; Registers used:
  9491 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9492 ;; Tracked objects:
  9493 ;;		On entry : 1F/1
  9494 ;;		On exit  : 1F/0
  9495 ;;		Unchanged: 0/0
  9496 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9497 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9498 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9499 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9500 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9501 ;;Total ram usage:        2 bytes
  9502 ;; Hardware stack levels used: 1
  9503 ;; Hardware stack levels required when called: 9
  9504 ;; This function calls:
  9505 ;;		_Sensor_Service
  9506 ;; This function is called by:
  9507 ;;		_MTOUCH_Service_Mainloop
  9508 ;; This function uses a non-reentrant model
  9509 ;;
  9510                           
  9511                           
  9512                           ;psect for function _MTOUCH_Sensor_SampleAll
  9513  1149                     _MTOUCH_Sensor_SampleAll:
  9514                           
  9515                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 197:     enum mtouch_sensor_names sensor;;m
      +                          cc_generated_files/mtouch/mtouch_sensor.c: 198:     for (sensor = 0; sensor < 10u; senso
      +                          r++)
  9516                           
  9517                           ;incstack = 0
  9518                           ; Regs used in _MTOUCH_Sensor_SampleAll: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9519  1149  0020               	movlb	0	; select bank0
  9520  114A  01B8               	clrf	MTOUCH_Sensor_SampleAll@sensor
  9521  114B                     l6342:
  9522                           
  9523                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 199:     {;mcc_generated_files/mtouch/mtouc
      +                          h_sensor.c: 200:         if(Sensor_Service(sensor)!= MTOUCH_SENSOR_ERROR_none)
  9524  114B  0838               	movf	MTOUCH_Sensor_SampleAll@sensor,w
  9525  114C  318C  247D  3191   	fcall	_Sensor_Service
  9526  114F  3A00               	xorlw	0
  9527  1150  1903               	skipnz
  9528  1151  2954               	goto	l6348
  9529                           
  9530                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 201:             return 0;
  9531  1152  3000               	movlw	0
  9532  1153  0008               	return
  9533  1154                     l6348:
  9534                           
  9535                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 202:     }
  9536  1154  3001               	movlw	1
  9537  1155  00B7               	movwf	??_MTOUCH_Sensor_SampleAll
  9538  1156  0837               	movf	??_MTOUCH_Sensor_SampleAll,w
  9539  1157  07B8               	addwf	MTOUCH_Sensor_SampleAll@sensor,f
  9540  1158  300A               	movlw	10
  9541  1159  0238               	subwf	MTOUCH_Sensor_SampleAll@sensor,w
  9542  115A  1C03               	skipc
  9543  115B  294B               	goto	l6342
  9544                           
  9545                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 203:     return 1;
  9546  115C  3001               	movlw	1
  9547  115D  0008               	return
  9548  115E                     __end_of_MTOUCH_Sensor_SampleAll:
  9549                           
  9550                           	psect	text41
  9551  0C7D                     __ptext41:	
  9552 ;; *************** function _Sensor_Service *****************
  9553 ;; Defined at:
  9554 ;;		line 241 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  9555 ;; Parameters:    Size  Location     Type
  9556 ;;  name            1    wreg     enum E2707
  9557 ;; Auto vars:     Size  Location     Type
  9558 ;;  name            1   19[BANK0 ] enum E2707
  9559 ;;  sensor          2   21[BANK0 ] PTR struct .
  9560 ;;		 -> mtouch_sensor(90), 
  9561 ;;  error           1   20[BANK0 ] enum E2718
  9562 ;; Return value:  Size  Location     Type
  9563 ;;                  1    wreg      enum E2718
  9564 ;; Registers used:
  9565 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9566 ;; Tracked objects:
  9567 ;;		On entry : 1F/0
  9568 ;;		On exit  : 1F/0
  9569 ;;		Unchanged: 0/0
  9570 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9571 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9572 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9573 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9574 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9575 ;;Total ram usage:        8 bytes
  9576 ;; Hardware stack levels used: 1
  9577 ;; Hardware stack levels required when called: 8
  9578 ;; This function calls:
  9579 ;;		_Sensor_Acquisition
  9580 ;;		_Sensor_DefaultCallback
  9581 ;;		_Sensor_RawSample_Update
  9582 ;;		_Sensor_isEnabled
  9583 ;;		_Sensor_setSampled
  9584 ;;		___wmul
  9585 ;; This function is called by:
  9586 ;;		_MTOUCH_Sensor_SampleAll
  9587 ;; This function uses a non-reentrant model
  9588 ;;
  9589                           
  9590                           
  9591                           ;psect for function _Sensor_Service
  9592  0C7D                     _Sensor_Service:
  9593                           
  9594                           ;incstack = 0
  9595                           ; Regs used in _Sensor_Service: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9596                           ;Sensor_Service@name stored from wreg
  9597  0C7D  00B3               	movwf	Sensor_Service@name
  9598                           
  9599                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 241: static enum mtouch_sensor_error Sensor
      +                          _Service(enum mtouch_sensor_names name);mcc_generated_files/mtouch/mtouch_sensor.c: 242:
      +                           {;mcc_generated_files/mtouch/mtouch_sensor.c: 243:     mtouch_sensor_t* sensor = &mtouc
      +                          h_sensor[name];
  9600  0C7E  0833               	movf	Sensor_Service@name,w
  9601  0C7F  00AF               	movwf	??_Sensor_Service
  9602  0C80  01B0               	clrf	??_Sensor_Service+1
  9603  0C81  082F               	movf	??_Sensor_Service,w
  9604  0C82  00F2               	movwf	___wmul@multiplier
  9605  0C83  0830               	movf	??_Sensor_Service+1,w
  9606  0C84  00F3               	movwf	___wmul@multiplier+1
  9607  0C85  3009               	movlw	9
  9608  0C86  00F4               	movwf	___wmul@multiplicand
  9609  0C87  3000               	movlw	0
  9610  0C88  00F5               	movwf	___wmul@multiplicand+1
  9611  0C89  3188  2000  318C   	fcall	___wmul
  9612  0C8C  30E2               	movlw	226
  9613  0C8D  00B1               	movwf	??_Sensor_Service+2
  9614  0C8E  3022               	movlw	34
  9615  0C8F  00B2               	movwf	??_Sensor_Service+3
  9616  0C90  0872               	movf	?___wmul,w
  9617  0C91  0731               	addwf	??_Sensor_Service+2,w
  9618  0C92  00B5               	movwf	Sensor_Service@sensor
  9619  0C93  0873               	movf	?___wmul+1,w
  9620  0C94  3D32               	addwfc	??_Sensor_Service+3,w
  9621  0C95  00B6               	movwf	Sensor_Service@sensor+1
  9622                           
  9623                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 244:     enum mtouch_sensor_error error = S
      +                          ensor_Acquisition(sensor);
  9624  0C96  0836               	movf	Sensor_Service@sensor+1,w
  9625  0C97  00AC               	movwf	Sensor_Acquisition@sensor+1
  9626  0C98  0835               	movf	Sensor_Service@sensor,w
  9627  0C99  00AB               	movwf	Sensor_Acquisition@sensor
  9628  0C9A  3188  2062  318C   	fcall	_Sensor_Acquisition
  9629  0C9D  00AF               	movwf	??_Sensor_Service
  9630  0C9E  082F               	movf	??_Sensor_Service,w
  9631  0C9F  00B4               	movwf	Sensor_Service@error
  9632                           
  9633                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 247:     switch(error)
  9634  0CA0  2CC2               	goto	l6224
  9635  0CA1                     l6216:
  9636                           
  9637                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 252:             {;mcc_generated_files/mtou
      +                          ch/mtouch_sensor.c: 257:                 if(!lowpowerActivated)
  9638  0CA1  0836               	movf	Sensor_Service@sensor+1,w
  9639  0CA2  00F3               	movwf	Sensor_isEnabled@sensor+1
  9640  0CA3  0835               	movf	Sensor_Service@sensor,w
  9641  0CA4  00F2               	movwf	Sensor_isEnabled@sensor
  9642  0CA5  3190  203E  318C   	fcall	_Sensor_isEnabled
  9643  0CA8  3A00               	xorlw	0
  9644  0CA9  1903               	skipnz
  9645  0CAA  2CDF               	goto	l6226
  9646                           
  9647                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 258:                 {;mcc_generated_files/
      +                          mtouch/mtouch_sensor.c: 259:                     Sensor_RawSample_Update(sensor);
  9648  0CAB  0836               	movf	Sensor_Service@sensor+1,w
  9649  0CAC  00F3               	movwf	Sensor_RawSample_Update@sensor+1
  9650  0CAD  0835               	movf	Sensor_Service@sensor,w
  9651  0CAE  00F2               	movwf	Sensor_RawSample_Update@sensor
  9652  0CAF  3191  21BC  318C   	fcall	_Sensor_RawSample_Update
  9653                           
  9654                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 261:                 Sensor_setSampled(sens
      +                          or);
  9655                           
  9656                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 260:                 }
  9657  0CB2  0020               	movlb	0	; select bank0
  9658  0CB3  0836               	movf	Sensor_Service@sensor+1,w
  9659  0CB4  00F3               	movwf	Sensor_setSampled@sensor+1
  9660  0CB5  0835               	movf	Sensor_Service@sensor,w
  9661  0CB6  00F2               	movwf	Sensor_setSampled@sensor
  9662  0CB7  319F  27EA  318C   	fcall	_Sensor_setSampled
  9663                           
  9664                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 262:                 callback_sampled(name)
      +                          ;
  9665  0CBA  0833               	movf	Sensor_Service@name,w
  9666  0CBB  00AF               	movwf	??_Sensor_Service
  9667  0CBC  082F               	movf	??_Sensor_Service,w
  9668  0CBD  00F2               	movwf	Sensor_DefaultCallback@sensor
  9669  0CBE  319F  27AC  318C   	fcall	_Sensor_DefaultCallback
  9670  0CC1  2CDF               	goto	l6226
  9671  0CC2                     l6224:
  9672  0CC2  0834               	movf	Sensor_Service@error,w
  9673  0CC3  00AF               	movwf	??_Sensor_Service
  9674  0CC4  01B0               	clrf	??_Sensor_Service+1
  9675  0CC5  1BAF               	btfsc	??_Sensor_Service,7
  9676  0CC6  03B0               	decf	??_Sensor_Service+1,f
  9677                           
  9678                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
  9679                           ; Switch size 1, requested type "simple"
  9680                           ; Number of cases is 2, Range of values is 0 to 255
  9681                           ; switch strategies available:
  9682                           ; Name         Instructions Cycles
  9683                           ; simple_byte            7     4 (average)
  9684                           ; jumptable            260     6 (fixed)
  9685                           ;	Chosen strategy is simple_byte
  9686  0CC7  0830               	movf	??_Sensor_Service+1,w
  9687  0CC8  3A00               	xorlw	0	; case 0
  9688  0CC9  1903               	skipnz
  9689  0CCA  2CCF               	goto	l6716
  9690  0CCB  3AFF               	xorlw	255	; case 255
  9691  0CCC  1903               	skipnz
  9692  0CCD  2CD4               	goto	l6718
  9693  0CCE  2CDF               	goto	l6226
  9694  0CCF                     l6716:
  9695                           
  9696                           ; Switch size 1, requested type "simple"
  9697                           ; Number of cases is 1, Range of values is 0 to 0
  9698                           ; switch strategies available:
  9699                           ; Name         Instructions Cycles
  9700                           ; simple_byte            4     3 (average)
  9701                           ; direct_byte            8     6 (fixed)
  9702                           ; jumptable            260     6 (fixed)
  9703                           ;	Chosen strategy is simple_byte
  9704  0CCF  082F               	movf	??_Sensor_Service,w
  9705  0CD0  3A00               	xorlw	0	; case 0
  9706  0CD1  1903               	skipnz
  9707  0CD2  2CA1               	goto	l6216
  9708  0CD3  2CDF               	goto	l6226
  9709  0CD4                     l6718:
  9710                           
  9711                           ; Switch size 1, requested type "simple"
  9712                           ; Number of cases is 3, Range of values is 253 to 255
  9713                           ; switch strategies available:
  9714                           ; Name         Instructions Cycles
  9715                           ; simple_byte           10     6 (average)
  9716                           ; direct_byte           11     5 (fixed)
  9717                           ; jumptable            263     9 (fixed)
  9718                           ;	Chosen strategy is simple_byte
  9719  0CD4  082F               	movf	??_Sensor_Service,w
  9720  0CD5  3AFD               	xorlw	253	; case 253
  9721  0CD6  1903               	skipnz
  9722  0CD7  2CDF               	goto	l6226
  9723  0CD8  3A03               	xorlw	3	; case 254
  9724  0CD9  1903               	skipnz
  9725  0CDA  2CDF               	goto	l6226
  9726  0CDB  3A01               	xorlw	1	; case 255
  9727  0CDC  1903               	skipnz
  9728  0CDD  2CDF               	goto	l6226
  9729  0CDE  2CDF               	goto	l6226
  9730  0CDF                     l6226:
  9731                           
  9732                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 274:     return error;
  9733  0CDF  0834               	movf	Sensor_Service@error,w
  9734  0CE0  0008               	return
  9735  0CE1                     __end_of_Sensor_Service:
  9736                           
  9737                           	psect	text42
  9738  1FEA                     __ptext42:	
  9739 ;; *************** function _Sensor_setSampled *****************
  9740 ;; Defined at:
  9741 ;;		line 577 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  9742 ;; Parameters:    Size  Location     Type
  9743 ;;  sensor          2    2[COMMON] PTR struct .
  9744 ;;		 -> mtouch_sensor(90), 
  9745 ;; Auto vars:     Size  Location     Type
  9746 ;;		None
  9747 ;; Return value:  Size  Location     Type
  9748 ;;                  1    wreg      void 
  9749 ;; Registers used:
  9750 ;;		wreg, fsr1l, fsr1h
  9751 ;; Tracked objects:
  9752 ;;		On entry : 1F/0
  9753 ;;		On exit  : 1F/0
  9754 ;;		Unchanged: 1F/0
  9755 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9756 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9757 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9758 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9759 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9760 ;;Total ram usage:        2 bytes
  9761 ;; Hardware stack levels used: 1
  9762 ;; Hardware stack levels required when called: 4
  9763 ;; This function calls:
  9764 ;;		Nothing
  9765 ;; This function is called by:
  9766 ;;		_Sensor_Service
  9767 ;; This function uses a non-reentrant model
  9768 ;;
  9769                           
  9770                           
  9771                           ;psect for function _Sensor_setSampled
  9772  1FEA                     _Sensor_setSampled:
  9773                           
  9774                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 577: static __attribute__((inline)) void Se
      +                          nsor_setSampled(mtouch_sensor_t* sensor);mcc_generated_files/mtouch/mtouch_sensor.c: 578
      +                          : {;mcc_generated_files/mtouch/mtouch_sensor.c: 579:     sensor->sampled = 1;
  9775                           
  9776                           ;incstack = 0
  9777                           ; Regs used in _Sensor_setSampled: [wregfsr1]
  9778  1FEA  0872               	movf	Sensor_setSampled@sensor,w
  9779  1FEB  0086               	movwf	6
  9780  1FEC  0873               	movf	Sensor_setSampled@sensor+1,w
  9781  1FED  0087               	movwf	7
  9782  1FEE  3148               	addfsr 1,8
  9783  1FEF  1481               	bsf	1,1
  9784  1FF0  0008               	return
  9785  1FF1                     __end_of_Sensor_setSampled:
  9786                           
  9787                           	psect	text43
  9788  11BC                     __ptext43:	
  9789 ;; *************** function _Sensor_RawSample_Update *****************
  9790 ;; Defined at:
  9791 ;;		line 438 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  9792 ;; Parameters:    Size  Location     Type
  9793 ;;  sensor          2    2[COMMON] PTR struct .
  9794 ;;		 -> mtouch_sensor(90), 
  9795 ;; Auto vars:     Size  Location     Type
  9796 ;;		None
  9797 ;; Return value:  Size  Location     Type
  9798 ;;                  1    wreg      void 
  9799 ;; Registers used:
  9800 ;;		wreg, fsr1l, fsr1h
  9801 ;; Tracked objects:
  9802 ;;		On entry : 1F/0
  9803 ;;		On exit  : 1F/1
  9804 ;;		Unchanged: 0/0
  9805 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9806 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9807 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9808 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9809 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9810 ;;Total ram usage:        2 bytes
  9811 ;; Hardware stack levels used: 1
  9812 ;; Hardware stack levels required when called: 4
  9813 ;; This function calls:
  9814 ;;		Nothing
  9815 ;; This function is called by:
  9816 ;;		_Sensor_Service
  9817 ;; This function uses a non-reentrant model
  9818 ;;
  9819                           
  9820                           
  9821                           ;psect for function _Sensor_RawSample_Update
  9822  11BC                     _Sensor_RawSample_Update:
  9823                           
  9824                           ;incstack = 0
  9825                           ; Regs used in _Sensor_RawSample_Update: [wregfsr1]
  9826  11BC  1F8B               	btfss	11,7	;volatile
  9827  11BD  29CB               	goto	l5866
  9828  11BE  138B               	bcf	11,7	;volatile
  9829  11BF  0872               	movf	Sensor_RawSample_Update@sensor,w
  9830  11C0  0086               	movwf	6
  9831  11C1  0873               	movf	Sensor_RawSample_Update@sensor+1,w
  9832  11C2  0087               	movwf	7
  9833  11C3  3146               	addfsr 1,6
  9834  11C4  0021               	movlb	1	; select bank1
  9835  11C5  0844               	movf	_packet_sample^(0+128),w
  9836  11C6  3FC0               	movwi [0]fsr1
  9837  11C7  0845               	movf	(_packet_sample+1)^(0+128),w
  9838  11C8  3FC1               	movwi [1]fsr1
  9839  11C9  178B               	bsf	11,7	;volatile
  9840  11CA  0008               	return
  9841  11CB                     l5866:
  9842  11CB  0872               	movf	Sensor_RawSample_Update@sensor,w
  9843  11CC  0086               	movwf	6
  9844  11CD  0873               	movf	Sensor_RawSample_Update@sensor+1,w
  9845  11CE  0087               	movwf	7
  9846  11CF  3146               	addfsr 1,6
  9847  11D0  0021               	movlb	1	; select bank1
  9848  11D1  0844               	movf	_packet_sample^(0+128),w
  9849  11D2  3FC0               	movwi [0]fsr1
  9850  11D3  0845               	movf	(_packet_sample+1)^(0+128),w
  9851  11D4  3FC1               	movwi [1]fsr1
  9852  11D5  0008               	return
  9853  11D6                     __end_of_Sensor_RawSample_Update:
  9854                           
  9855                           	psect	text44
  9856  1FAC                     __ptext44:	
  9857 ;; *************** function _Sensor_DefaultCallback *****************
  9858 ;; Defined at:
  9859 ;;		line 458 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  9860 ;; Parameters:    Size  Location     Type
  9861 ;;  sensor          1    2[COMMON] enum E2707
  9862 ;; Auto vars:     Size  Location     Type
  9863 ;;		None
  9864 ;; Return value:  Size  Location     Type
  9865 ;;                  1    wreg      void 
  9866 ;; Registers used:
  9867 ;;		None
  9868 ;; Tracked objects:
  9869 ;;		On entry : 1F/0
  9870 ;;		On exit  : 1F/0
  9871 ;;		Unchanged: 1F/0
  9872 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9873 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9874 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9875 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9876 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9877 ;;Total ram usage:        1 bytes
  9878 ;; Hardware stack levels used: 1
  9879 ;; Hardware stack levels required when called: 4
  9880 ;; This function calls:
  9881 ;;		Nothing
  9882 ;; This function is called by:
  9883 ;;		_Sensor_Service
  9884 ;; This function uses a non-reentrant model
  9885 ;;
  9886                           
  9887                           
  9888                           ;psect for function _Sensor_DefaultCallback
  9889  1FAC                     _Sensor_DefaultCallback:
  9890                           
  9891                           ;incstack = 0
  9892                           ; Regs used in _Sensor_DefaultCallback: []
  9893  1FAC  0008               	return
  9894  1FAD                     __end_of_Sensor_DefaultCallback:
  9895                           
  9896                           	psect	text45
  9897  0862                     __ptext45:	
  9898 ;; *************** function _Sensor_Acquisition *****************
  9899 ;; Defined at:
  9900 ;;		line 288 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  9901 ;; Parameters:    Size  Location     Type
  9902 ;;  sensor          2   11[BANK0 ] PTR struct .
  9903 ;;		 -> mtouch_sensor(90), 
  9904 ;; Auto vars:     Size  Location     Type
  9905 ;;  retry           1   14[BANK0 ] unsigned char 
  9906 ;; Return value:  Size  Location     Type
  9907 ;;                  1    wreg      enum E2718
  9908 ;; Registers used:
  9909 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9910 ;; Tracked objects:
  9911 ;;		On entry : 1F/0
  9912 ;;		On exit  : 1F/0
  9913 ;;		Unchanged: 0/0
  9914 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9915 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9916 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9917 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9918 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9919 ;;Total ram usage:        4 bytes
  9920 ;; Hardware stack levels used: 1
  9921 ;; Hardware stack levels required when called: 7
  9922 ;; This function calls:
  9923 ;;		_Sensor_Acq_ExecutePacket
  9924 ;;		_Sensor_isEnabled
  9925 ;;		_Sensor_setActive
  9926 ;;		_Sensor_setInactive
  9927 ;;		_abs
  9928 ;; This function is called by:
  9929 ;;		_Sensor_Service
  9930 ;; This function uses a non-reentrant model
  9931 ;;
  9932                           
  9933                           
  9934                           ;psect for function _Sensor_Acquisition
  9935  0862                     _Sensor_Acquisition:
  9936                           
  9937                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 288: static enum mtouch_sensor_error Sensor
      +                          _Acquisition(mtouch_sensor_t* sensor);mcc_generated_files/mtouch/mtouch_sensor.c: 289: {
      +                          ;mcc_generated_files/mtouch/mtouch_sensor.c: 291:     uint8_t retry = (uint8_t)5u;
  9938                           
  9939                           ;incstack = 0
  9940                           ; Regs used in _Sensor_Acquisition: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9941  0862  3005               	movlw	5
  9942  0863  00AD               	movwf	??_Sensor_Acquisition
  9943  0864  082D               	movf	??_Sensor_Acquisition,w
  9944  0865  00AE               	movwf	Sensor_Acquisition@retry
  9945                           
  9946                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 293:     if(!Sensor_isEnabled(sensor))
  9947  0866  082C               	movf	Sensor_Acquisition@sensor+1,w
  9948  0867  00F3               	movwf	Sensor_isEnabled@sensor+1
  9949  0868  082B               	movf	Sensor_Acquisition@sensor,w
  9950  0869  00F2               	movwf	Sensor_isEnabled@sensor
  9951  086A  3190  203E  3188   	fcall	_Sensor_isEnabled
  9952  086D  3A00               	xorlw	0
  9953  086E  1D03               	skipz
  9954  086F  2879               	goto	l5846
  9955  0870                     l5836:
  9956                           
  9957                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 294:         return MTOUCH_SENSOR_ERROR_non
      +                          e;
  9958  0870  3000               	movlw	0
  9959  0871  0008               	return
  9960  0872                     l5840:
  9961                           
  9962                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 297:     {;mcc_generated_files/mtouch/mtouc
      +                          h_sensor.c: 298:         retry--;
  9963  0872  3001               	movlw	1
  9964  0873  02AE               	subwf	Sensor_Acquisition@retry,f
  9965                           
  9966                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 299:         if(retry == 0)
  9967  0874  082E               	movf	Sensor_Acquisition@retry,w
  9968  0875  1D03               	btfss	3,2
  9969  0876  2879               	goto	l5846
  9970                           
  9971                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 300:         {;mcc_generated_files/mtouch/m
      +                          touch_sensor.c: 301:             return MTOUCH_SENSOR_ERROR_tooManyRetries;
  9972  0877  30FC               	movlw	252
  9973  0878  0008               	return
  9974  0879                     l5846:
  9975                           
  9976                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 296:     while(Sensor_Acq_ExecutePacket(sen
      +                          sor))
  9977  0879  082C               	movf	Sensor_Acquisition@sensor+1,w
  9978  087A  00A5               	movwf	Sensor_Acq_ExecutePacket@sensor+1
  9979  087B  082B               	movf	Sensor_Acquisition@sensor,w
  9980  087C  00A4               	movwf	Sensor_Acq_ExecutePacket@sensor
  9981  087D  318B  23B8  3188   	fcall	_Sensor_Acq_ExecutePacket
  9982  0880  3A00               	xorlw	0
  9983  0881  1D03               	skipz
  9984  0882  2872               	goto	l5840
  9985                           
  9986                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 305:     if((mtouch_sensor_packetsample_t)a
      +                          bs(packet_sample - sensor->rawSample) > 100u)
  9987  0883  082B               	movf	Sensor_Acquisition@sensor,w
  9988  0884  0086               	movwf	6
  9989  0885  082C               	movf	Sensor_Acquisition@sensor+1,w
  9990  0886  0087               	movwf	7
  9991  0887  3146               	addfsr 1,6
  9992  0888  3F40               	moviw [0]fsr1
  9993  0889  0021               	movlb	1	; select bank1
  9994  088A  0244               	subwf	_packet_sample^(0+128),w
  9995  088B  00F2               	movwf	abs@a
  9996  088C  3F41               	moviw [1]fsr1
  9997  088D  3B45               	subwfb	(_packet_sample+1)^(0+128),w
  9998  088E  00F3               	movwf	abs@a+1
  9999  088F  3191  2174  3188   	fcall	_abs
 10000  0892  3000               	movlw	0
 10001  0893  0273               	subwf	?_abs+1,w
 10002  0894  3065               	movlw	101
 10003  0895  1903               	skipnz
 10004  0896  0272               	subwf	?_abs,w
 10005  0897  1C03               	skipc
 10006  0898  28A2               	goto	l5852
 10007                           
 10008                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 306:     {;mcc_generated_files/mtouch/mtouc
      +                          h_sensor.c: 307:         Sensor_setActive(sensor);
 10009  0899  0020               	movlb	0	; select bank0
 10010  089A  082C               	movf	Sensor_Acquisition@sensor+1,w
 10011  089B  00F3               	movwf	Sensor_setActive@sensor+1
 10012  089C  082B               	movf	Sensor_Acquisition@sensor,w
 10013  089D  00F2               	movwf	Sensor_setActive@sensor
 10014  089E  319F  27DC  3188   	fcall	_Sensor_setActive
 10015                           
 10016                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 308:     }
 10017  08A1  2870               	goto	l5836
 10018  08A2                     l5852:
 10019                           
 10020                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 310:     {;mcc_generated_files/mtouch/mtouc
      +                          h_sensor.c: 311:         Sensor_setInactive(sensor);
 10021  08A2  0020               	movlb	0	; select bank0
 10022  08A3  082C               	movf	Sensor_Acquisition@sensor+1,w
 10023  08A4  00F3               	movwf	Sensor_setInactive@sensor+1
 10024  08A5  082B               	movf	Sensor_Acquisition@sensor,w
 10025  08A6  00F2               	movwf	Sensor_setInactive@sensor
 10026  08A7  319F  27E3  3188   	fcall	_Sensor_setInactive
 10027  08AA  2870               	goto	l5836
 10028  08AB                     __end_of_Sensor_Acquisition:
 10029                           
 10030                           	psect	text46
 10031  1174                     __ptext46:	
 10032 ;; *************** function _abs *****************
 10033 ;; Defined at:
 10034 ;;		line 1 in file "/Applications/microchip/xc8/v2.32/pic/sources/c99/common/abs.c"
 10035 ;; Parameters:    Size  Location     Type
 10036 ;;  a               2    2[COMMON] int 
 10037 ;; Auto vars:     Size  Location     Type
 10038 ;;		None
 10039 ;; Return value:  Size  Location     Type
 10040 ;;                  2    2[COMMON] int 
 10041 ;; Registers used:
 10042 ;;		wreg, status,2, status,0
 10043 ;; Tracked objects:
 10044 ;;		On entry : 1F/1
 10045 ;;		On exit  : 0/0
 10046 ;;		Unchanged: 0/0
 10047 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10048 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10049 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10050 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10051 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10052 ;;Total ram usage:        4 bytes
 10053 ;; Hardware stack levels used: 1
 10054 ;; Hardware stack levels required when called: 4
 10055 ;; This function calls:
 10056 ;;		Nothing
 10057 ;; This function is called by:
 10058 ;;		_Sensor_Acquisition
 10059 ;; This function uses a non-reentrant model
 10060 ;;
 10061                           
 10062                           
 10063                           ;psect for function _abs
 10064  1174                     _abs:
 10065                           
 10066                           ;incstack = 0
 10067                           ; Regs used in _abs: [wreg+status,2+status,0]
 10068  1174  0873               	movf	abs@a+1,w
 10069  1175  3A80               	xorlw	128
 10070  1176  00F4               	movwf	??_abs
 10071  1177  3080               	movlw	128
 10072  1178  0274               	subwf	??_abs,w
 10073  1179  1D03               	skipz
 10074  117A  297D               	goto	u4525
 10075  117B  3001               	movlw	1
 10076  117C  0272               	subwf	abs@a,w
 10077  117D                     u4525:
 10078  117D  1803               	skipnc
 10079  117E  0008               	return
 10080  117F  0972               	comf	abs@a,w
 10081  1180  00F4               	movwf	??_abs
 10082  1181  0973               	comf	abs@a+1,w
 10083  1182  00F5               	movwf	??_abs+1
 10084  1183  0AF4               	incf	??_abs,f
 10085  1184  1903               	skipnz
 10086  1185  0AF5               	incf	??_abs+1,f
 10087  1186  0874               	movf	??_abs,w
 10088  1187  00F2               	movwf	?_abs
 10089  1188  0875               	movf	??_abs+1,w
 10090  1189  00F3               	movwf	?_abs+1
 10091  118A  0008               	return
 10092  118B                     __end_of_abs:
 10093                           
 10094                           	psect	text47
 10095  1FE3                     __ptext47:	
 10096 ;; *************** function _Sensor_setInactive *****************
 10097 ;; Defined at:
 10098 ;;		line 523 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
 10099 ;; Parameters:    Size  Location     Type
 10100 ;;  sensor          2    2[COMMON] PTR struct .
 10101 ;;		 -> mtouch_sensor(90), 
 10102 ;; Auto vars:     Size  Location     Type
 10103 ;;		None
 10104 ;; Return value:  Size  Location     Type
 10105 ;;                  1    wreg      void 
 10106 ;; Registers used:
 10107 ;;		wreg, fsr1l, fsr1h
 10108 ;; Tracked objects:
 10109 ;;		On entry : 1F/0
 10110 ;;		On exit  : 1F/0
 10111 ;;		Unchanged: 1F/0
 10112 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10113 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10114 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10115 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10116 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10117 ;;Total ram usage:        2 bytes
 10118 ;; Hardware stack levels used: 1
 10119 ;; Hardware stack levels required when called: 4
 10120 ;; This function calls:
 10121 ;;		Nothing
 10122 ;; This function is called by:
 10123 ;;		_Sensor_Acquisition
 10124 ;; This function uses a non-reentrant model
 10125 ;;
 10126                           
 10127                           
 10128                           ;psect for function _Sensor_setInactive
 10129  1FE3                     _Sensor_setInactive:
 10130                           
 10131                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 523: static __attribute__((inline)) void Se
      +                          nsor_setInactive(mtouch_sensor_t* sensor);mcc_generated_files/mtouch/mtouch_sensor.c: 52
      +                          4: {;mcc_generated_files/mtouch/mtouch_sensor.c: 525:     sensor->active = 0;
 10132                           
 10133                           ;incstack = 0
 10134                           ; Regs used in _Sensor_setInactive: [wregfsr1]
 10135  1FE3  0872               	movf	Sensor_setInactive@sensor,w
 10136  1FE4  0086               	movwf	6
 10137  1FE5  0873               	movf	Sensor_setInactive@sensor+1,w
 10138  1FE6  0087               	movwf	7
 10139  1FE7  3148               	addfsr 1,8
 10140  1FE8  1101               	bcf	1,2
 10141  1FE9  0008               	return
 10142  1FEA                     __end_of_Sensor_setInactive:
 10143                           
 10144                           	psect	text48
 10145  1FDC                     __ptext48:	
 10146 ;; *************** function _Sensor_setActive *****************
 10147 ;; Defined at:
 10148 ;;		line 518 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
 10149 ;; Parameters:    Size  Location     Type
 10150 ;;  sensor          2    2[COMMON] PTR struct .
 10151 ;;		 -> mtouch_sensor(90), 
 10152 ;; Auto vars:     Size  Location     Type
 10153 ;;		None
 10154 ;; Return value:  Size  Location     Type
 10155 ;;                  1    wreg      void 
 10156 ;; Registers used:
 10157 ;;		wreg, fsr1l, fsr1h
 10158 ;; Tracked objects:
 10159 ;;		On entry : 1F/0
 10160 ;;		On exit  : 1F/0
 10161 ;;		Unchanged: 1F/0
 10162 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10163 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10164 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10165 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10166 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10167 ;;Total ram usage:        2 bytes
 10168 ;; Hardware stack levels used: 1
 10169 ;; Hardware stack levels required when called: 4
 10170 ;; This function calls:
 10171 ;;		Nothing
 10172 ;; This function is called by:
 10173 ;;		_Sensor_Acquisition
 10174 ;; This function uses a non-reentrant model
 10175 ;;
 10176                           
 10177                           
 10178                           ;psect for function _Sensor_setActive
 10179  1FDC                     _Sensor_setActive:
 10180                           
 10181                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 518: static __attribute__((inline)) void Se
      +                          nsor_setActive(mtouch_sensor_t* sensor);mcc_generated_files/mtouch/mtouch_sensor.c: 519:
      +                           {;mcc_generated_files/mtouch/mtouch_sensor.c: 520:     sensor->active = 1;
 10182                           
 10183                           ;incstack = 0
 10184                           ; Regs used in _Sensor_setActive: [wregfsr1]
 10185  1FDC  0872               	movf	Sensor_setActive@sensor,w
 10186  1FDD  0086               	movwf	6
 10187  1FDE  0873               	movf	Sensor_setActive@sensor+1,w
 10188  1FDF  0087               	movwf	7
 10189  1FE0  3148               	addfsr 1,8
 10190  1FE1  1501               	bsf	1,2
 10191  1FE2  0008               	return
 10192  1FE3                     __end_of_Sensor_setActive:
 10193                           
 10194                           	psect	text49
 10195  103E                     __ptext49:	
 10196 ;; *************** function _Sensor_isEnabled *****************
 10197 ;; Defined at:
 10198 ;;		line 503 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
 10199 ;; Parameters:    Size  Location     Type
 10200 ;;  sensor          2    2[COMMON] PTR struct .
 10201 ;;		 -> mtouch_sensor(90), 
 10202 ;; Auto vars:     Size  Location     Type
 10203 ;;		None
 10204 ;; Return value:  Size  Location     Type
 10205 ;;                  1    wreg      _Bool 
 10206 ;; Registers used:
 10207 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 10208 ;; Tracked objects:
 10209 ;;		On entry : 1F/0
 10210 ;;		On exit  : 1F/0
 10211 ;;		Unchanged: 1F/0
 10212 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10213 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10214 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10215 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10216 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10217 ;;Total ram usage:        2 bytes
 10218 ;; Hardware stack levels used: 1
 10219 ;; Hardware stack levels required when called: 4
 10220 ;; This function calls:
 10221 ;;		Nothing
 10222 ;; This function is called by:
 10223 ;;		_Sensor_Service
 10224 ;;		_Sensor_Acquisition
 10225 ;; This function uses a non-reentrant model
 10226 ;;
 10227                           
 10228                           
 10229                           ;psect for function _Sensor_isEnabled
 10230  103E                     _Sensor_isEnabled:
 10231                           
 10232                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 503: static _Bool Sensor_isEnabled(mtouch_s
      +                          ensor_t* sensor);mcc_generated_files/mtouch/mtouch_sensor.c: 504: {;mcc_generated_files/
      +                          mtouch/mtouch_sensor.c: 505:     if(sensor!=((void*)0))
 10233                           
 10234                           ;incstack = 0
 10235                           ; Regs used in _Sensor_isEnabled: [wreg+fsr1l+fsr1h+status,2+status,0]
 10236  103E  0872               	movf	Sensor_isEnabled@sensor,w
 10237  103F  0473               	iorwf	Sensor_isEnabled@sensor+1,w
 10238  1040  1903               	btfsc	3,2
 10239  1041  284A               	goto	l5482
 10240                           
 10241                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 506:         return (_Bool)sensor->enabled;
 10242  1042  0872               	movf	Sensor_isEnabled@sensor,w
 10243  1043  0086               	movwf	6
 10244  1044  0873               	movf	Sensor_isEnabled@sensor+1,w
 10245  1045  0087               	movwf	7
 10246  1046  3148               	addfsr 1,8
 10247  1047  0801               	movf	1,w
 10248  1048  3901               	andlw	1
 10249  1049  0008               	return
 10250  104A                     l5482:
 10251                           
 10252                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 508:         return 0;
 10253  104A  3000               	movlw	0
 10254  104B  0008               	return
 10255  104C                     __end_of_Sensor_isEnabled:
 10256                           
 10257                           	psect	text50
 10258  0BB8                     __ptext50:	
 10259 ;; *************** function _Sensor_Acq_ExecutePacket *****************
 10260 ;; Defined at:
 10261 ;;		line 323 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
 10262 ;; Parameters:    Size  Location     Type
 10263 ;;  sensor          2    4[BANK0 ] PTR struct .
 10264 ;;		 -> mtouch_sensor(90), 
 10265 ;; Auto vars:     Size  Location     Type
 10266 ;;  error           1   10[BANK0 ] enum E2718
 10267 ;;  GIE_state       1    9[BANK0 ] unsigned char 
 10268 ;;  ADCON1_temp     1    8[BANK0 ] unsigned char 
 10269 ;;  ADCON0_temp     1    7[BANK0 ] unsigned char 
 10270 ;; Return value:  Size  Location     Type
 10271 ;;                  1    wreg      enum E2718
 10272 ;; Registers used:
 10273 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10274 ;; Tracked objects:
 10275 ;;		On entry : 1F/0
 10276 ;;		On exit  : 1F/0
 10277 ;;		Unchanged: 0/0
 10278 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10279 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10280 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10281 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10282 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10283 ;;Total ram usage:        7 bytes
 10284 ;; Hardware stack levels used: 1
 10285 ;; Hardware stack levels required when called: 6
 10286 ;; This function calls:
 10287 ;;		_MTOUCH_Delay
 10288 ;;		_MTOUCH_Random
 10289 ;;		_MTOUCH_Sensor_Scan_Initialize
 10290 ;;		_Sensor_Acq_ExecuteScan
 10291 ;;		_Sensor_setScanFunction
 10292 ;; This function is called by:
 10293 ;;		_Sensor_Acquisition
 10294 ;; This function uses a non-reentrant model
 10295 ;;
 10296                           
 10297                           
 10298                           ;psect for function _Sensor_Acq_ExecutePacket
 10299  0BB8                     _Sensor_Acq_ExecutePacket:
 10300                           
 10301                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 323: static enum mtouch_sensor_error Sensor
      +                          _Acq_ExecutePacket(mtouch_sensor_t* sensor);mcc_generated_files/mtouch/mtouch_sensor.c: 
      +                          324: {;mcc_generated_files/mtouch/mtouch_sensor.c: 326:     enum mtouch_sensor_error err
      +                          or = MTOUCH_SENSOR_ERROR_none;
 10302                           
 10303                           ;incstack = 0
 10304                           ; Regs used in _Sensor_Acq_ExecutePacket: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10305  0BB8  01AA               	clrf	Sensor_Acq_ExecutePacket@error
 10306                           
 10307                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 327:     uint8_t ADCON0_temp;;mcc_generated
      +                          _files/mtouch/mtouch_sensor.c: 328:     uint8_t ADCON1_temp;;mcc_generated_files/mtouch/
      +                          mtouch_sensor.c: 330:     uint8_t GIE_state;;mcc_generated_files/mtouch/mtouch_sensor.c:
      +                           332:     ADCON0_temp = ADCON0;
 10308  0BB9  0021               	movlb	1	; select bank1
 10309  0BBA  081D               	movf	29,w	;volatile
 10310  0BBB  0020               	movlb	0	; select bank0
 10311  0BBC  00A6               	movwf	??_Sensor_Acq_ExecutePacket
 10312  0BBD  0826               	movf	??_Sensor_Acq_ExecutePacket,w
 10313  0BBE  00A7               	movwf	Sensor_Acq_ExecutePacket@ADCON0_temp
 10314                           
 10315                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 333:     ADCON1_temp = ADCON1;
 10316  0BBF  0021               	movlb	1	; select bank1
 10317  0BC0  081E               	movf	30,w	;volatile
 10318  0BC1  0020               	movlb	0	; select bank0
 10319  0BC2  00A6               	movwf	??_Sensor_Acq_ExecutePacket
 10320  0BC3  0826               	movf	??_Sensor_Acq_ExecutePacket,w
 10321  0BC4  00A8               	movwf	Sensor_Acq_ExecutePacket@ADCON1_temp
 10322                           
 10323                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 334:     MTOUCH_Sensor_Scan_Initialize();
 10324  0BC5  319F  27BB  318B   	fcall	_MTOUCH_Sensor_Scan_Initialize
 10325                           
 10326                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 336:     GIE_state = INTCONbits.GIE;
 10327  0BC8  3000               	movlw	0
 10328  0BC9  1B8B               	btfsc	11,7	;volatile
 10329  0BCA  3001               	movlw	1
 10330  0BCB  0020               	movlb	0	; select bank0
 10331  0BCC  00A9               	movwf	Sensor_Acq_ExecutePacket@GIE_state
 10332                           
 10333                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 338:     Sensor_setScanFunction(sensor);
 10334  0BCD  0825               	movf	Sensor_Acq_ExecutePacket@sensor+1,w
 10335  0BCE  00F3               	movwf	Sensor_setScanFunction@sensor+1
 10336  0BCF  0824               	movf	Sensor_Acq_ExecutePacket@sensor,w
 10337  0BD0  00F2               	movwf	Sensor_setScanFunction@sensor
 10338  0BD1  3190  20F9  318B   	fcall	_Sensor_setScanFunction
 10339                           
 10340                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 340:     currentScannSensor = sensor->senso
      +                          r_name;
 10341  0BD4  0020               	movlb	0	; select bank0
 10342  0BD5  0824               	movf	Sensor_Acq_ExecutePacket@sensor,w
 10343  0BD6  0086               	movwf	6
 10344  0BD7  0825               	movf	Sensor_Acq_ExecutePacket@sensor+1,w
 10345  0BD8  0087               	movwf	7
 10346  0BD9  0801               	movf	1,w
 10347  0BDA  00A6               	movwf	??_Sensor_Acq_ExecutePacket
 10348  0BDB  0826               	movf	??_Sensor_Acq_ExecutePacket,w
 10349  0BDC  0021               	movlb	1	; select bank1
 10350  0BDD  00CC               	movwf	_currentScannSensor^(0+128)
 10351                           
 10352                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 341:     packet_counter = sensor->oversampl
      +                          ing;
 10353  0BDE  0020               	movlb	0	; select bank0
 10354  0BDF  0824               	movf	Sensor_Acq_ExecutePacket@sensor,w
 10355  0BE0  0086               	movwf	6
 10356  0BE1  0825               	movf	Sensor_Acq_ExecutePacket@sensor+1,w
 10357  0BE2  0087               	movwf	7
 10358  0BE3  3145               	addfsr 1,5
 10359  0BE4  0801               	movf	1,w
 10360  0BE5  00A6               	movwf	??_Sensor_Acq_ExecutePacket
 10361  0BE6  0826               	movf	??_Sensor_Acq_ExecutePacket,w
 10362  0BE7  00E1               	movwf	_packet_counter
 10363                           
 10364                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 342:     packet_sample = 0;
 10365  0BE8  0021               	movlb	1	; select bank1
 10366  0BE9  01C4               	clrf	_packet_sample^(0+128)
 10367  0BEA  01C5               	clrf	(_packet_sample+1)^(0+128)
 10368                           
 10369                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 343:     sensor_globalFlags.packet_done = 0
      +                          ;
 10370  0BEB  0020               	movlb	0	; select bank0
 10371  0BEC  1062               	bcf	_sensor_globalFlags,0	;volatile
 10372                           
 10373                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 344:     sample_delay = MTOUCH_Random();
 10374  0BED  3190  206A  318B   	fcall	_MTOUCH_Random
 10375  0BF0  00A6               	movwf	??_Sensor_Acq_ExecutePacket
 10376  0BF1  0826               	movf	??_Sensor_Acq_ExecutePacket,w
 10377  0BF2  0021               	movlb	1	; select bank1
 10378  0BF3  00CB               	movwf	_sample_delay^(0+128)
 10379                           
 10380                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 345:     packet_sample = 0;
 10381  0BF4  01C4               	clrf	_packet_sample^(0+128)
 10382  0BF5  01C5               	clrf	(_packet_sample+1)^(0+128)
 10383                           
 10384                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 347:     sensor_globalFlags.interrupted = 0
      +                          ;
 10385  0BF6  0020               	movlb	0	; select bank0
 10386  0BF7  10E2               	bcf	_sensor_globalFlags,1	;volatile
 10387  0BF8                     l5508:
 10388                           
 10389                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 351:     {;mcc_generated_files/mtouch/mtouc
      +                          h_sensor.c: 352:         INTCONbits.GIE = (uint8_t)0;
 10390  0BF8  138B               	bcf	11,7	;volatile
 10391                           
 10392                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 353:         Sensor_Acq_ExecuteScan();
 10393  0BF9  318C  24E1  318B   	fcall	_Sensor_Acq_ExecuteScan
 10394                           
 10395                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 354:         INTCONbits.GIE = GIE_state;
 10396  0BFC  0C29               	rrf	Sensor_Acq_ExecutePacket@GIE_state,w
 10397  0BFD  1C03               	skipc
 10398  0BFE  138B               	bcf	11,7	;volatile
 10399  0BFF  1803               	skipnc
 10400  0C00  178B               	bsf	11,7	;volatile
 10401                           
 10402                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 355:         MTOUCH_Delay();
 10403  0C01  3190  200D  318B   	fcall	_MTOUCH_Delay
 10404  0C04                     l302:	
 10405                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 356:         while(ADCON0bits.GO_nDONE == 1
      +                          );
 10406                           
 10407  0C04  0021               	movlb	1	; select bank1
 10408  0C05  189D               	btfsc	29,1	;volatile
 10409  0C06  2C04               	goto	l302
 10410                           
 10411                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 357:     } while(sensor_globalFlags.packet_
      +                          done == 0);
 10412  0C07  0020               	movlb	0	; select bank0
 10413  0C08  1C62               	btfss	_sensor_globalFlags,0	;volatile
 10414  0C09  2BF8               	goto	l5508
 10415                           
 10416                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 360:     ADCON0 = ADCON0_temp;
 10417  0C0A  0827               	movf	Sensor_Acq_ExecutePacket@ADCON0_temp,w
 10418  0C0B  0021               	movlb	1	; select bank1
 10419  0C0C  009D               	movwf	29	;volatile
 10420                           
 10421                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 361:     ADCON1 = ADCON1_temp;
 10422  0C0D  0020               	movlb	0	; select bank0
 10423  0C0E  0828               	movf	Sensor_Acq_ExecutePacket@ADCON1_temp,w
 10424  0C0F  0021               	movlb	1	; select bank1
 10425  0C10  009E               	movwf	30	;volatile
 10426                           
 10427                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 363:     if(sensor_globalFlags.interrupted)
 10428  0C11  0020               	movlb	0	; select bank0
 10429  0C12  1CE2               	btfss	_sensor_globalFlags,1	;volatile
 10430  0C13  2C18               	goto	l306
 10431                           
 10432                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 364:     {;mcc_generated_files/mtouch/mtouc
      +                          h_sensor.c: 365:         error = MTOUCH_SENSOR_ERROR_interruptedScan;
 10433  0C14  30FA               	movlw	250
 10434  0C15  00A6               	movwf	??_Sensor_Acq_ExecutePacket
 10435  0C16  0826               	movf	??_Sensor_Acq_ExecutePacket,w
 10436  0C17  00AA               	movwf	Sensor_Acq_ExecutePacket@error
 10437  0C18                     l306:	
 10438                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 366:     }
 10439                           
 10440                           
 10441                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 368:     return error;
 10442  0C18  082A               	movf	Sensor_Acq_ExecutePacket@error,w
 10443  0C19  0008               	return
 10444  0C1A                     __end_of_Sensor_Acq_ExecutePacket:
 10445                           
 10446                           	psect	text51
 10447  10F9                     __ptext51:	
 10448 ;; *************** function _Sensor_setScanFunction *****************
 10449 ;; Defined at:
 10450 ;;		line 470 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
 10451 ;; Parameters:    Size  Location     Type
 10452 ;;  sensor          2    2[COMMON] PTR struct .
 10453 ;;		 -> mtouch_sensor(90), 
 10454 ;; Auto vars:     Size  Location     Type
 10455 ;;		None
 10456 ;; Return value:  Size  Location     Type
 10457 ;;                  1    wreg      void 
 10458 ;; Registers used:
 10459 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 10460 ;; Tracked objects:
 10461 ;;		On entry : 1F/0
 10462 ;;		On exit  : 1F/1
 10463 ;;		Unchanged: 0/0
 10464 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10465 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10466 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10467 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10468 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10469 ;;Total ram usage:        2 bytes
 10470 ;; Hardware stack levels used: 1
 10471 ;; Hardware stack levels required when called: 4
 10472 ;; This function calls:
 10473 ;;		Nothing
 10474 ;; This function is called by:
 10475 ;;		_Sensor_Acq_ExecutePacket
 10476 ;; This function uses a non-reentrant model
 10477 ;;
 10478                           
 10479                           
 10480                           ;psect for function _Sensor_setScanFunction
 10481  10F9                     _Sensor_setScanFunction:
 10482                           
 10483                           ;incstack = 0
 10484                           ; Regs used in _Sensor_setScanFunction: [wreg+fsr1l+fsr1h+status,2+status,0]
 10485  10F9  0872               	movf	Sensor_setScanFunction@sensor,w
 10486  10FA  0086               	movwf	6
 10487  10FB  0873               	movf	Sensor_setScanFunction@sensor+1,w
 10488  10FC  0087               	movwf	7
 10489  10FD  3141               	addfsr 1,1
 10490  10FE  3F40               	moviw [0]fsr1
 10491  10FF  0021               	movlb	1	; select bank1
 10492  1100  00BA               	movwf	_Sensor_scanA^(0+128)
 10493  1101  3F41               	moviw [1]fsr1
 10494  1102  00BB               	movwf	(_Sensor_scanA+1)^(0+128)
 10495  1103  0872               	movf	Sensor_setScanFunction@sensor,w
 10496  1104  0086               	movwf	6
 10497  1105  0873               	movf	Sensor_setScanFunction@sensor+1,w
 10498  1106  0087               	movwf	7
 10499  1107  3143               	addfsr 1,3
 10500  1108  3F40               	moviw [0]fsr1
 10501  1109  00B8               	movwf	_Sensor_scanB^(0+128)
 10502  110A  3F41               	moviw [1]fsr1
 10503  110B  00B9               	movwf	(_Sensor_scanB+1)^(0+128)
 10504  110C  0008               	return
 10505  110D                     __end_of_Sensor_setScanFunction:
 10506                           
 10507                           	psect	text52
 10508  0CE1                     __ptext52:	
 10509 ;; *************** function _Sensor_Acq_ExecuteScan *****************
 10510 ;; Defined at:
 10511 ;;		line 387 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
 10512 ;; Parameters:    Size  Location     Type
 10513 ;;		None
 10514 ;; Auto vars:     Size  Location     Type
 10515 ;;  result          2    8[COMMON] unsigned short 
 10516 ;; Return value:  Size  Location     Type
 10517 ;;                  1    wreg      void 
 10518 ;; Registers used:
 10519 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10520 ;; Tracked objects:
 10521 ;;		On entry : 1F/0
 10522 ;;		On exit  : 1F/0
 10523 ;;		Unchanged: 0/0
 10524 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10525 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10526 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10527 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10528 ;;      Totals:         2       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10529 ;;Total ram usage:        6 bytes
 10530 ;; Hardware stack levels used: 1
 10531 ;; Hardware stack levels required when called: 5
 10532 ;; This function calls:
 10533 ;;		_MTOUCH_CVD_ScanA_0
 10534 ;;		_MTOUCH_CVD_ScanA_1
 10535 ;;		_MTOUCH_CVD_ScanA_2
 10536 ;;		_MTOUCH_CVD_ScanA_3
 10537 ;;		_MTOUCH_CVD_ScanA_4
 10538 ;;		_MTOUCH_CVD_ScanA_5
 10539 ;;		_MTOUCH_CVD_ScanA_6
 10540 ;;		_MTOUCH_CVD_ScanA_7
 10541 ;;		_MTOUCH_CVD_ScanA_8
 10542 ;;		_MTOUCH_CVD_ScanA_9
 10543 ;;		_MTOUCH_CVD_ScanB_0
 10544 ;;		_MTOUCH_CVD_ScanB_1
 10545 ;;		_MTOUCH_CVD_ScanB_2
 10546 ;;		_MTOUCH_CVD_ScanB_3
 10547 ;;		_MTOUCH_CVD_ScanB_4
 10548 ;;		_MTOUCH_CVD_ScanB_5
 10549 ;;		_MTOUCH_CVD_ScanB_6
 10550 ;;		_MTOUCH_CVD_ScanB_7
 10551 ;;		_MTOUCH_CVD_ScanB_8
 10552 ;;		_MTOUCH_CVD_ScanB_9
 10553 ;;		___wmul
 10554 ;; This function is called by:
 10555 ;;		_Sensor_Acq_ExecutePacket
 10556 ;; This function uses a non-reentrant model
 10557 ;;
 10558                           
 10559                           
 10560                           ;psect for function _Sensor_Acq_ExecuteScan
 10561  0CE1                     _Sensor_Acq_ExecuteScan:
 10562                           
 10563                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 390:     mtouch_sensor_adcsample_t result =
      +                           ADRES;
 10564                           
 10565                           ;incstack = 0
 10566                           ; Regs used in _Sensor_Acq_ExecuteScan: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10567  0CE1  0021               	movlb	1	; select bank1
 10568  0CE2  081C               	movf	28,w	;volatile
 10569  0CE3  00F9               	movwf	Sensor_Acq_ExecuteScan@result+1
 10570  0CE4  081B               	movf	27,w	;volatile
 10571  0CE5  00F8               	movwf	Sensor_Acq_ExecuteScan@result
 10572                           
 10573                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 392:     if(sensor_globalFlags.packet_done)
 10574  0CE6  0020               	movlb	0	; select bank0
 10575  0CE7  1862               	btfsc	_sensor_globalFlags,0	;volatile
 10576  0CE8  0008               	return
 10577                           
 10578                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 395:     if (packet_counter != (uint8_t)0)
 10579  0CE9  0861               	movf	_packet_counter,w
 10580  0CEA  1D03               	btfss	3,2
 10581  0CEB  2CFB               	goto	l5368
 10582  0CEC  2D3F               	goto	l5380
 10583  0CED                     l5362:
 10584  0CED  0021               	movlb	1	; select bank1
 10585  0CEE  083B               	movf	(_Sensor_scanA+1)^(0+128),w
 10586  0CEF  008A               	movwf	10
 10587  0CF0  083A               	movf	_Sensor_scanA^(0+128),w
 10588  0CF1  000A               	callw
 10589  0CF2  318C               	pagesel	$
 10590  0CF3  2D0C               	goto	l5370
 10591  0CF4                     l5364:
 10592  0CF4  0021               	movlb	1	; select bank1
 10593  0CF5  0839               	movf	(_Sensor_scanB+1)^(0+128),w
 10594  0CF6  008A               	movwf	10
 10595  0CF7  0838               	movf	_Sensor_scanB^(0+128),w
 10596  0CF8  000A               	callw
 10597  0CF9  318C               	pagesel	$
 10598  0CFA  2D0C               	goto	l5370
 10599  0CFB                     l5368:
 10600  0CFB  0861               	movf	_packet_counter,w
 10601  0CFC  3901               	andlw	1
 10602  0CFD  00A0               	movwf	??_Sensor_Acq_ExecuteScan
 10603  0CFE  01A1               	clrf	??_Sensor_Acq_ExecuteScan+1
 10604                           
 10605                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10606                           ; Switch size 1, requested type "simple"
 10607                           ; Number of cases is 1, Range of values is 0 to 0
 10608                           ; switch strategies available:
 10609                           ; Name         Instructions Cycles
 10610                           ; simple_byte            4     3 (average)
 10611                           ; direct_byte            8     6 (fixed)
 10612                           ; jumptable            260     6 (fixed)
 10613                           ;	Chosen strategy is simple_byte
 10614  0CFF  0821               	movf	??_Sensor_Acq_ExecuteScan+1,w
 10615  0D00  3A00               	xorlw	0	; case 0
 10616  0D01  1903               	skipnz
 10617  0D02  2D04               	goto	l6720
 10618  0D03  2D0C               	goto	l5370
 10619  0D04                     l6720:
 10620                           
 10621                           ; Switch size 1, requested type "simple"
 10622                           ; Number of cases is 2, Range of values is 0 to 1
 10623                           ; switch strategies available:
 10624                           ; Name         Instructions Cycles
 10625                           ; simple_byte            7     4 (average)
 10626                           ; direct_byte           10     6 (fixed)
 10627                           ; jumptable            260     6 (fixed)
 10628                           ;	Chosen strategy is simple_byte
 10629  0D04  0820               	movf	??_Sensor_Acq_ExecuteScan,w
 10630  0D05  3A00               	xorlw	0	; case 0
 10631  0D06  1903               	skipnz
 10632  0D07  2CED               	goto	l5362
 10633  0D08  3A01               	xorlw	1	; case 1
 10634  0D09  1903               	skipnz
 10635  0D0A  2CF4               	goto	l5364
 10636  0D0B  2D0C               	goto	l5370
 10637  0D0C                     l5370:
 10638  0D0C  0021               	movlb	1	; select bank1
 10639  0D0D  084C               	movf	_currentScannSensor^(0+128),w
 10640  0D0E  0020               	movlb	0	; select bank0
 10641  0D0F  00A0               	movwf	??_Sensor_Acq_ExecuteScan
 10642  0D10  01A1               	clrf	??_Sensor_Acq_ExecuteScan+1
 10643  0D11  0820               	movf	??_Sensor_Acq_ExecuteScan,w
 10644  0D12  00F2               	movwf	___wmul@multiplier
 10645  0D13  0821               	movf	??_Sensor_Acq_ExecuteScan+1,w
 10646  0D14  00F3               	movwf	___wmul@multiplier+1
 10647  0D15  3009               	movlw	9
 10648  0D16  00F4               	movwf	___wmul@multiplicand
 10649  0D17  3000               	movlw	0
 10650  0D18  00F5               	movwf	___wmul@multiplicand+1
 10651  0D19  3188  2000  318C   	fcall	___wmul
 10652  0D1C  30E7               	movlw	231
 10653  0D1D  00A2               	movwf	??_Sensor_Acq_ExecuteScan+2
 10654  0D1E  3022               	movlw	34
 10655  0D1F  00A3               	movwf	??_Sensor_Acq_ExecuteScan+3
 10656  0D20  0872               	movf	?___wmul,w
 10657  0D21  0722               	addwf	??_Sensor_Acq_ExecuteScan+2,w
 10658  0D22  0086               	movwf	6
 10659  0D23  0873               	movf	?___wmul+1,w
 10660  0D24  3D23               	addwfc	??_Sensor_Acq_ExecuteScan+3,w
 10661  0D25  0087               	movwf	7
 10662  0D26  0801               	movf	1,w
 10663  0D27  0661               	xorwf	_packet_counter,w
 10664  0D28  1903               	skipnz
 10665  0D29  2D3B               	goto	l5378
 10666  0D2A  1C61               	btfss	_packet_counter,0
 10667  0D2B  2D36               	goto	l5376
 10668  0D2C  3000               	movlw	0
 10669  0D2D  00A0               	movwf	??_Sensor_Acq_ExecuteScan
 10670  0D2E  3004               	movlw	4
 10671  0D2F  00A1               	movwf	??_Sensor_Acq_ExecuteScan+1
 10672  0D30  0878               	movf	Sensor_Acq_ExecuteScan@result,w
 10673  0D31  0220               	subwf	??_Sensor_Acq_ExecuteScan,w
 10674  0D32  00F8               	movwf	Sensor_Acq_ExecuteScan@result
 10675  0D33  0879               	movf	Sensor_Acq_ExecuteScan@result+1,w
 10676  0D34  3B21               	subwfb	??_Sensor_Acq_ExecuteScan+1,w
 10677  0D35  00F9               	movwf	Sensor_Acq_ExecuteScan@result+1
 10678  0D36                     l5376:
 10679  0D36  0878               	movf	Sensor_Acq_ExecuteScan@result,w
 10680  0D37  0021               	movlb	1	; select bank1
 10681  0D38  07C4               	addwf	_packet_sample^(0+128),f
 10682  0D39  0879               	movf	Sensor_Acq_ExecuteScan@result+1,w
 10683  0D3A  3DC5               	addwfc	(_packet_sample+1)^(0+128),f
 10684  0D3B                     l5378:
 10685  0D3B  3001               	movlw	1
 10686  0D3C  0020               	movlb	0	; select bank0
 10687  0D3D  02E1               	subwf	_packet_counter,f
 10688  0D3E  0008               	return
 10689  0D3F                     l5380:
 10690  0D3F  0878               	movf	Sensor_Acq_ExecuteScan@result,w
 10691  0D40  0021               	movlb	1	; select bank1
 10692  0D41  07C4               	addwf	_packet_sample^(0+128),f
 10693  0D42  0879               	movf	Sensor_Acq_ExecuteScan@result+1,w
 10694  0D43  3DC5               	addwfc	(_packet_sample+1)^(0+128),f
 10695  0D44  0020               	movlb	0	; select bank0
 10696  0D45  1462               	bsf	_sensor_globalFlags,0	;volatile
 10697  0D46  0008               	return
 10698  0D47                     __end_of_Sensor_Acq_ExecuteScan:
 10699                           
 10700                           	psect	text53
 10701  15D7                     __ptext53:	
 10702 ;; *************** function _MTOUCH_CVD_ScanB_8 *****************
 10703 ;; Defined at:
 10704 ;;		line 1129 in file "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
 10705 ;; Parameters:    Size  Location     Type
 10706 ;;		None
 10707 ;; Auto vars:     Size  Location     Type
 10708 ;;		None
 10709 ;; Return value:  Size  Location     Type
 10710 ;;                  1    wreg      void 
 10711 ;; Registers used:
 10712 ;;		wreg
 10713 ;; Tracked objects:
 10714 ;;		On entry : 1F/1
 10715 ;;		On exit  : 0/0
 10716 ;;		Unchanged: 0/0
 10717 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10718 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10719 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10720 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10721 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10722 ;;Total ram usage:        0 bytes
 10723 ;; Hardware stack levels used: 1
 10724 ;; Hardware stack levels required when called: 4
 10725 ;; This function calls:
 10726 ;;		Nothing
 10727 ;; This function is called by:
 10728 ;;		_Sensor_Acq_ExecuteScan
 10729 ;; This function uses a non-reentrant model
 10730 ;;
 10731                           
 10732                           
 10733                           ;psect for function _MTOUCH_CVD_ScanB_8
 10734  15D7                     _MTOUCH_CVD_ScanB_8:
 10735                           
 10736                           ;incstack = 0
 10737                           ; Regs used in _MTOUCH_CVD_ScanB_8: [wreg]
 10738  15D7  0022               	banksel	268	;# 
 10739  15D8  110C               	bcf	12,2	;# 
 10740  15D9  0021               	banksel	157	;# 
 10741  15DA  3009               	movlw	9	;# 
 10742  15DB  009D               	movwf	29	;# 
 10743                           
 10744                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 1141:     _delay(32u);
 10745  15DC  300A               	movlw	10
 10746  15DD                     u6207:
 10747  15DD  0B89               	decfsz	9,f
 10748  15DE  2DDD               	goto	u6207
 10749  15DF  3200               	nop2
 10750  15E0  308C               	movlw	140	;# 
 10751  15E1  0084               	movwf	4	;# 
 10752  15E2  3000               	movlw	0	;# 
 10753  15E3  0085               	movwf	5	;# 
 10754  15E4  300C               	movlw	12	;# 
 10755  15E5  0086               	movwf	6	;# 
 10756  15E6  3001               	movlw	1	;# 
 10757  15E7  0087               	movwf	7	;# 
 10758  15E8  3005               	movlw	5	;# 
 10759  15E9  1480               	bsf	0,1	;# 
 10760                           
 10761                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 1159:     _delay(0u);
 10762  15EA  009D               	movwf	29	;# 
 10763  15EB  1281               	bcf	1,5	;# 
 10764                           
 10765                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 1166:     _delay(16u);
 10766  15EC  3005               	movlw	5
 10767  15ED                     u6217:
 10768  15ED  0B89               	decfsz	9,f
 10769  15EE  2DED               	goto	u6217
 10770  15EF  0000               	nop
 10771  15F0  0021               	banksel	157	;# 
 10772  15F1  149D               	bsf	29,1	;# 
 10773                           
 10774                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 1173:     _delay(3u);
 10775  15F2  3200               	nop2	;2 cycle nop
 10776  15F3  0000               	nop
 10777  15F4  0022               	banksel	268	;# 
 10778  15F5  108C               	bcf	12,1	;# 
 10779  15F6  1080               	bcf	0,1	;# 
 10780  15F7  0008               	return
 10781  15F8                     __end_of_MTOUCH_CVD_ScanB_8:
 10782                           
 10783                           	psect	text54
 10784  15B6                     __ptext54:	
 10785 ;; *************** function _MTOUCH_CVD_ScanB_7 *****************
 10786 ;; Defined at:
 10787 ;;		line 1002 in file "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
 10788 ;; Parameters:    Size  Location     Type
 10789 ;;		None
 10790 ;; Auto vars:     Size  Location     Type
 10791 ;;		None
 10792 ;; Return value:  Size  Location     Type
 10793 ;;                  1    wreg      void 
 10794 ;; Registers used:
 10795 ;;		wreg
 10796 ;; Tracked objects:
 10797 ;;		On entry : 1F/1
 10798 ;;		On exit  : 0/0
 10799 ;;		Unchanged: 0/0
 10800 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10801 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10802 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10803 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10804 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10805 ;;Total ram usage:        0 bytes
 10806 ;; Hardware stack levels used: 1
 10807 ;; Hardware stack levels required when called: 4
 10808 ;; This function calls:
 10809 ;;		Nothing
 10810 ;; This function is called by:
 10811 ;;		_Sensor_Acq_ExecuteScan
 10812 ;; This function uses a non-reentrant model
 10813 ;;
 10814                           
 10815                           
 10816                           ;psect for function _MTOUCH_CVD_ScanB_7
 10817  15B6                     _MTOUCH_CVD_ScanB_7:
 10818                           
 10819                           ;incstack = 0
 10820                           ; Regs used in _MTOUCH_CVD_ScanB_7: [wreg]
 10821  15B6  0022               	banksel	268	;# 
 10822  15B7  118C               	bcf	12,3	;# 
 10823  15B8  0021               	banksel	157	;# 
 10824  15B9  300D               	movlw	13	;# 
 10825  15BA  009D               	movwf	29	;# 
 10826                           
 10827                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 1014:     _delay(32u);
 10828  15BB  300A               	movlw	10
 10829  15BC                     u6227:
 10830  15BC  0B89               	decfsz	9,f
 10831  15BD  2DBC               	goto	u6227
 10832  15BE  3200               	nop2
 10833  15BF  308C               	movlw	140	;# 
 10834  15C0  0084               	movwf	4	;# 
 10835  15C1  3000               	movlw	0	;# 
 10836  15C2  0085               	movwf	5	;# 
 10837  15C3  300C               	movlw	12	;# 
 10838  15C4  0086               	movwf	6	;# 
 10839  15C5  3001               	movlw	1	;# 
 10840  15C6  0087               	movwf	7	;# 
 10841  15C7  3009               	movlw	9	;# 
 10842  15C8  1500               	bsf	0,2	;# 
 10843                           
 10844                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 1032:     _delay(0u);
 10845  15C9  009D               	movwf	29	;# 
 10846  15CA  1281               	bcf	1,5	;# 
 10847                           
 10848                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 1039:     _delay(16u);
 10849  15CB  3005               	movlw	5
 10850  15CC                     u6237:
 10851  15CC  0B89               	decfsz	9,f
 10852  15CD  2DCC               	goto	u6237
 10853  15CE  0000               	nop
 10854  15CF  0021               	banksel	157	;# 
 10855  15D0  149D               	bsf	29,1	;# 
 10856                           
 10857                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 1046:     _delay(3u);
 10858  15D1  3200               	nop2	;2 cycle nop
 10859  15D2  0000               	nop
 10860  15D3  0022               	banksel	268	;# 
 10861  15D4  110C               	bcf	12,2	;# 
 10862  15D5  1100               	bcf	0,2	;# 
 10863  15D6  0008               	return
 10864  15D7                     __end_of_MTOUCH_CVD_ScanB_7:
 10865                           
 10866                           	psect	text55
 10867  1595                     __ptext55:	
 10868 ;; *************** function _MTOUCH_CVD_ScanB_6 *****************
 10869 ;; Defined at:
 10870 ;;		line 875 in file "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
 10871 ;; Parameters:    Size  Location     Type
 10872 ;;		None
 10873 ;; Auto vars:     Size  Location     Type
 10874 ;;		None
 10875 ;; Return value:  Size  Location     Type
 10876 ;;                  1    wreg      void 
 10877 ;; Registers used:
 10878 ;;		wreg
 10879 ;; Tracked objects:
 10880 ;;		On entry : 1F/1
 10881 ;;		On exit  : 0/0
 10882 ;;		Unchanged: 0/0
 10883 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10884 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10885 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10886 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10887 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10888 ;;Total ram usage:        0 bytes
 10889 ;; Hardware stack levels used: 1
 10890 ;; Hardware stack levels required when called: 4
 10891 ;; This function calls:
 10892 ;;		Nothing
 10893 ;; This function is called by:
 10894 ;;		_Sensor_Acq_ExecuteScan
 10895 ;; This function uses a non-reentrant model
 10896 ;;
 10897                           
 10898                           
 10899                           ;psect for function _MTOUCH_CVD_ScanB_6
 10900  1595                     _MTOUCH_CVD_ScanB_6:
 10901                           
 10902                           ;incstack = 0
 10903                           ; Regs used in _MTOUCH_CVD_ScanB_6: [wreg]
 10904  1595  0022               	banksel	269	;# 
 10905  1596  128D               	bcf	13,5	;# 
 10906  1597  0021               	banksel	157	;# 
 10907  1598  3035               	movlw	53	;# 
 10908  1599  009D               	movwf	29	;# 
 10909                           
 10910                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 887:     _delay(32u);
 10911  159A  300A               	movlw	10
 10912  159B                     u6247:
 10913  159B  0B89               	decfsz	9,f
 10914  159C  2D9B               	goto	u6247
 10915  159D  3200               	nop2
 10916  159E  308C               	movlw	140	;# 
 10917  159F  0084               	movwf	4	;# 
 10918  15A0  3000               	movlw	0	;# 
 10919  15A1  0085               	movwf	5	;# 
 10920  15A2  300C               	movlw	12	;# 
 10921  15A3  0086               	movwf	6	;# 
 10922  15A4  3001               	movlw	1	;# 
 10923  15A5  0087               	movwf	7	;# 
 10924  15A6  300D               	movlw	13	;# 
 10925  15A7  1580               	bsf	0,3	;# 
 10926                           
 10927                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 905:     _delay(0u);
 10928  15A8  009D               	movwf	29	;# 
 10929  15A9  1281               	bcf	1,5	;# 
 10930                           
 10931                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 912:     _delay(16u);
 10932  15AA  3005               	movlw	5
 10933  15AB                     u6257:
 10934  15AB  0B89               	decfsz	9,f
 10935  15AC  2DAB               	goto	u6257
 10936  15AD  0000               	nop
 10937  15AE  0021               	banksel	157	;# 
 10938  15AF  149D               	bsf	29,1	;# 
 10939                           
 10940                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 919:     _delay(3u);
 10941  15B0  3200               	nop2	;2 cycle nop
 10942  15B1  0000               	nop
 10943  15B2  0022               	banksel	268	;# 
 10944  15B3  118C               	bcf	12,3	;# 
 10945  15B4  1180               	bcf	0,3	;# 
 10946  15B5  0008               	return
 10947  15B6                     __end_of_MTOUCH_CVD_ScanB_6:
 10948                           
 10949                           	psect	text56
 10950  1574                     __ptext56:	
 10951 ;; *************** function _MTOUCH_CVD_ScanB_5 *****************
 10952 ;; Defined at:
 10953 ;;		line 748 in file "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
 10954 ;; Parameters:    Size  Location     Type
 10955 ;;		None
 10956 ;; Auto vars:     Size  Location     Type
 10957 ;;		None
 10958 ;; Return value:  Size  Location     Type
 10959 ;;                  1    wreg      void 
 10960 ;; Registers used:
 10961 ;;		wreg
 10962 ;; Tracked objects:
 10963 ;;		On entry : 1F/1
 10964 ;;		On exit  : 0/0
 10965 ;;		Unchanged: 0/0
 10966 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10967 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10968 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10969 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10970 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10971 ;;Total ram usage:        0 bytes
 10972 ;; Hardware stack levels used: 1
 10973 ;; Hardware stack levels required when called: 4
 10974 ;; This function calls:
 10975 ;;		Nothing
 10976 ;; This function is called by:
 10977 ;;		_Sensor_Acq_ExecuteScan
 10978 ;; This function uses a non-reentrant model
 10979 ;;
 10980                           
 10981                           
 10982                           ;psect for function _MTOUCH_CVD_ScanB_5
 10983  1574                     _MTOUCH_CVD_ScanB_5:
 10984                           
 10985                           ;incstack = 0
 10986                           ; Regs used in _MTOUCH_CVD_ScanB_5: [wreg]
 10987  1574  0022               	banksel	269	;# 
 10988  1575  120D               	bcf	13,4	;# 
 10989  1576  0021               	banksel	157	;# 
 10990  1577  302D               	movlw	45	;# 
 10991  1578  009D               	movwf	29	;# 
 10992                           
 10993                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 760:     _delay(32u);
 10994  1579  300A               	movlw	10
 10995  157A                     u6267:
 10996  157A  0B89               	decfsz	9,f
 10997  157B  2D7A               	goto	u6267
 10998  157C  3200               	nop2
 10999  157D  308D               	movlw	141	;# 
 11000  157E  0084               	movwf	4	;# 
 11001  157F  3000               	movlw	0	;# 
 11002  1580  0085               	movwf	5	;# 
 11003  1581  300C               	movlw	12	;# 
 11004  1582  0086               	movwf	6	;# 
 11005  1583  3001               	movlw	1	;# 
 11006  1584  0087               	movwf	7	;# 
 11007  1585  3035               	movlw	53	;# 
 11008  1586  1680               	bsf	0,5	;# 
 11009                           
 11010                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 778:     _delay(0u);
 11011  1587  009D               	movwf	29	;# 
 11012  1588  1281               	bcf	1,5	;# 
 11013                           
 11014                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 785:     _delay(16u);
 11015  1589  3005               	movlw	5
 11016  158A                     u6277:
 11017  158A  0B89               	decfsz	9,f
 11018  158B  2D8A               	goto	u6277
 11019  158C  0000               	nop
 11020  158D  0021               	banksel	157	;# 
 11021  158E  149D               	bsf	29,1	;# 
 11022                           
 11023                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 792:     _delay(3u);
 11024  158F  3200               	nop2	;2 cycle nop
 11025  1590  0000               	nop
 11026  1591  0022               	banksel	269	;# 
 11027  1592  128D               	bcf	13,5	;# 
 11028  1593  1280               	bcf	0,5	;# 
 11029  1594  0008               	return
 11030  1595                     __end_of_MTOUCH_CVD_ScanB_5:
 11031                           
 11032                           	psect	text57
 11033  1553                     __ptext57:	
 11034 ;; *************** function _MTOUCH_CVD_ScanB_4 *****************
 11035 ;; Defined at:
 11036 ;;		line 621 in file "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
 11037 ;; Parameters:    Size  Location     Type
 11038 ;;		None
 11039 ;; Auto vars:     Size  Location     Type
 11040 ;;		None
 11041 ;; Return value:  Size  Location     Type
 11042 ;;                  1    wreg      void 
 11043 ;; Registers used:
 11044 ;;		wreg
 11045 ;; Tracked objects:
 11046 ;;		On entry : 1F/1
 11047 ;;		On exit  : 0/0
 11048 ;;		Unchanged: 0/0
 11049 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11050 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11051 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11052 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11053 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11054 ;;Total ram usage:        0 bytes
 11055 ;; Hardware stack levels used: 1
 11056 ;; Hardware stack levels required when called: 4
 11057 ;; This function calls:
 11058 ;;		Nothing
 11059 ;; This function is called by:
 11060 ;;		_Sensor_Acq_ExecuteScan
 11061 ;; This function uses a non-reentrant model
 11062 ;;
 11063                           
 11064                           
 11065                           ;psect for function _MTOUCH_CVD_ScanB_4
 11066  1553                     _MTOUCH_CVD_ScanB_4:
 11067                           
 11068                           ;incstack = 0
 11069                           ; Regs used in _MTOUCH_CVD_ScanB_4: [wreg]
 11070  1553  0022               	banksel	269	;# 
 11071  1554  118D               	bcf	13,3	;# 
 11072  1555  0021               	banksel	157	;# 
 11073  1556  3025               	movlw	37	;# 
 11074  1557  009D               	movwf	29	;# 
 11075                           
 11076                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 633:     _delay(32u);
 11077  1558  300A               	movlw	10
 11078  1559                     u6287:
 11079  1559  0B89               	decfsz	9,f
 11080  155A  2D59               	goto	u6287
 11081  155B  3200               	nop2
 11082  155C  308D               	movlw	141	;# 
 11083  155D  0084               	movwf	4	;# 
 11084  155E  3000               	movlw	0	;# 
 11085  155F  0085               	movwf	5	;# 
 11086  1560  300C               	movlw	12	;# 
 11087  1561  0086               	movwf	6	;# 
 11088  1562  3001               	movlw	1	;# 
 11089  1563  0087               	movwf	7	;# 
 11090  1564  302D               	movlw	45	;# 
 11091  1565  1600               	bsf	0,4	;# 
 11092                           
 11093                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 651:     _delay(0u);
 11094  1566  009D               	movwf	29	;# 
 11095  1567  1281               	bcf	1,5	;# 
 11096                           
 11097                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 658:     _delay(16u);
 11098  1568  3005               	movlw	5
 11099  1569                     u6297:
 11100  1569  0B89               	decfsz	9,f
 11101  156A  2D69               	goto	u6297
 11102  156B  0000               	nop
 11103  156C  0021               	banksel	157	;# 
 11104  156D  149D               	bsf	29,1	;# 
 11105                           
 11106                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 665:     _delay(3u);
 11107  156E  3200               	nop2	;2 cycle nop
 11108  156F  0000               	nop
 11109  1570  0022               	banksel	269	;# 
 11110  1571  120D               	bcf	13,4	;# 
 11111  1572  1200               	bcf	0,4	;# 
 11112  1573  0008               	return
 11113  1574                     __end_of_MTOUCH_CVD_ScanB_4:
 11114                           
 11115                           	psect	text58
 11116  1532                     __ptext58:	
 11117 ;; *************** function _MTOUCH_CVD_ScanB_3 *****************
 11118 ;; Defined at:
 11119 ;;		line 494 in file "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
 11120 ;; Parameters:    Size  Location     Type
 11121 ;;		None
 11122 ;; Auto vars:     Size  Location     Type
 11123 ;;		None
 11124 ;; Return value:  Size  Location     Type
 11125 ;;                  1    wreg      void 
 11126 ;; Registers used:
 11127 ;;		wreg
 11128 ;; Tracked objects:
 11129 ;;		On entry : 1F/1
 11130 ;;		On exit  : 0/0
 11131 ;;		Unchanged: 0/0
 11132 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11133 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11134 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11135 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11136 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11137 ;;Total ram usage:        0 bytes
 11138 ;; Hardware stack levels used: 1
 11139 ;; Hardware stack levels required when called: 4
 11140 ;; This function calls:
 11141 ;;		Nothing
 11142 ;; This function is called by:
 11143 ;;		_Sensor_Acq_ExecuteScan
 11144 ;; This function uses a non-reentrant model
 11145 ;;
 11146                           
 11147                           
 11148                           ;psect for function _MTOUCH_CVD_ScanB_3
 11149  1532                     _MTOUCH_CVD_ScanB_3:
 11150                           
 11151                           ;incstack = 0
 11152                           ; Regs used in _MTOUCH_CVD_ScanB_3: [wreg]
 11153  1532  0022               	banksel	269	;# 
 11154  1533  110D               	bcf	13,2	;# 
 11155  1534  0021               	banksel	157	;# 
 11156  1535  3021               	movlw	33	;# 
 11157  1536  009D               	movwf	29	;# 
 11158                           
 11159                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 506:     _delay(32u);
 11160  1537  300A               	movlw	10
 11161  1538                     u6307:
 11162  1538  0B89               	decfsz	9,f
 11163  1539  2D38               	goto	u6307
 11164  153A  3200               	nop2
 11165  153B  308D               	movlw	141	;# 
 11166  153C  0084               	movwf	4	;# 
 11167  153D  3000               	movlw	0	;# 
 11168  153E  0085               	movwf	5	;# 
 11169  153F  300C               	movlw	12	;# 
 11170  1540  0086               	movwf	6	;# 
 11171  1541  3001               	movlw	1	;# 
 11172  1542  0087               	movwf	7	;# 
 11173  1543  3025               	movlw	37	;# 
 11174  1544  1580               	bsf	0,3	;# 
 11175                           
 11176                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 524:     _delay(0u);
 11177  1545  009D               	movwf	29	;# 
 11178  1546  1281               	bcf	1,5	;# 
 11179                           
 11180                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 531:     _delay(16u);
 11181  1547  3005               	movlw	5
 11182  1548                     u6317:
 11183  1548  0B89               	decfsz	9,f
 11184  1549  2D48               	goto	u6317
 11185  154A  0000               	nop
 11186  154B  0021               	banksel	157	;# 
 11187  154C  149D               	bsf	29,1	;# 
 11188                           
 11189                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 538:     _delay(3u);
 11190  154D  3200               	nop2	;2 cycle nop
 11191  154E  0000               	nop
 11192  154F  0022               	banksel	269	;# 
 11193  1550  118D               	bcf	13,3	;# 
 11194  1551  1180               	bcf	0,3	;# 
 11195  1552  0008               	return
 11196  1553                     __end_of_MTOUCH_CVD_ScanB_3:
 11197                           
 11198                           	psect	text59
 11199  1511                     __ptext59:	
 11200 ;; *************** function _MTOUCH_CVD_ScanB_2 *****************
 11201 ;; Defined at:
 11202 ;;		line 367 in file "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
 11203 ;; Parameters:    Size  Location     Type
 11204 ;;		None
 11205 ;; Auto vars:     Size  Location     Type
 11206 ;;		None
 11207 ;; Return value:  Size  Location     Type
 11208 ;;                  1    wreg      void 
 11209 ;; Registers used:
 11210 ;;		wreg
 11211 ;; Tracked objects:
 11212 ;;		On entry : 1F/1
 11213 ;;		On exit  : 0/0
 11214 ;;		Unchanged: 0/0
 11215 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11216 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11217 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11218 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11219 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11220 ;;Total ram usage:        0 bytes
 11221 ;; Hardware stack levels used: 1
 11222 ;; Hardware stack levels required when called: 4
 11223 ;; This function calls:
 11224 ;;		Nothing
 11225 ;; This function is called by:
 11226 ;;		_Sensor_Acq_ExecuteScan
 11227 ;; This function uses a non-reentrant model
 11228 ;;
 11229                           
 11230                           
 11231                           ;psect for function _MTOUCH_CVD_ScanB_2
 11232  1511                     _MTOUCH_CVD_ScanB_2:
 11233                           
 11234                           ;incstack = 0
 11235                           ; Regs used in _MTOUCH_CVD_ScanB_2: [wreg]
 11236  1511  0022               	banksel	269	;# 
 11237  1512  108D               	bcf	13,1	;# 
 11238  1513  0021               	banksel	157	;# 
 11239  1514  3029               	movlw	41	;# 
 11240  1515  009D               	movwf	29	;# 
 11241                           
 11242                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 379:     _delay(32u);
 11243  1516  300A               	movlw	10
 11244  1517                     u6327:
 11245  1517  0B89               	decfsz	9,f
 11246  1518  2D17               	goto	u6327
 11247  1519  3200               	nop2
 11248  151A  308D               	movlw	141	;# 
 11249  151B  0084               	movwf	4	;# 
 11250  151C  3000               	movlw	0	;# 
 11251  151D  0085               	movwf	5	;# 
 11252  151E  300C               	movlw	12	;# 
 11253  151F  0086               	movwf	6	;# 
 11254  1520  3001               	movlw	1	;# 
 11255  1521  0087               	movwf	7	;# 
 11256  1522  3021               	movlw	33	;# 
 11257  1523  1500               	bsf	0,2	;# 
 11258                           
 11259                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 397:     _delay(0u);
 11260  1524  009D               	movwf	29	;# 
 11261  1525  1281               	bcf	1,5	;# 
 11262                           
 11263                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 404:     _delay(16u);
 11264  1526  3005               	movlw	5
 11265  1527                     u6337:
 11266  1527  0B89               	decfsz	9,f
 11267  1528  2D27               	goto	u6337
 11268  1529  0000               	nop
 11269  152A  0021               	banksel	157	;# 
 11270  152B  149D               	bsf	29,1	;# 
 11271                           
 11272                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 411:     _delay(3u);
 11273  152C  3200               	nop2	;2 cycle nop
 11274  152D  0000               	nop
 11275  152E  0022               	banksel	269	;# 
 11276  152F  110D               	bcf	13,2	;# 
 11277  1530  1100               	bcf	0,2	;# 
 11278  1531  0008               	return
 11279  1532                     __end_of_MTOUCH_CVD_ScanB_2:
 11280                           
 11281                           	psect	text60
 11282  14F0                     __ptext60:	
 11283 ;; *************** function _MTOUCH_CVD_ScanB_1 *****************
 11284 ;; Defined at:
 11285 ;;		line 240 in file "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
 11286 ;; Parameters:    Size  Location     Type
 11287 ;;		None
 11288 ;; Auto vars:     Size  Location     Type
 11289 ;;		None
 11290 ;; Return value:  Size  Location     Type
 11291 ;;                  1    wreg      void 
 11292 ;; Registers used:
 11293 ;;		wreg
 11294 ;; Tracked objects:
 11295 ;;		On entry : 1F/1
 11296 ;;		On exit  : 0/0
 11297 ;;		Unchanged: 0/0
 11298 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11299 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11300 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11301 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11302 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11303 ;;Total ram usage:        0 bytes
 11304 ;; Hardware stack levels used: 1
 11305 ;; Hardware stack levels required when called: 4
 11306 ;; This function calls:
 11307 ;;		Nothing
 11308 ;; This function is called by:
 11309 ;;		_Sensor_Acq_ExecuteScan
 11310 ;; This function uses a non-reentrant model
 11311 ;;
 11312                           
 11313                           
 11314                           ;psect for function _MTOUCH_CVD_ScanB_1
 11315  14F0                     _MTOUCH_CVD_ScanB_1:
 11316                           
 11317                           ;incstack = 0
 11318                           ; Regs used in _MTOUCH_CVD_ScanB_1: [wreg]
 11319  14F0  0022               	banksel	269	;# 
 11320  14F1  100D               	bcf	13,0	;# 
 11321  14F2  0021               	banksel	157	;# 
 11322  14F3  3031               	movlw	49	;# 
 11323  14F4  009D               	movwf	29	;# 
 11324                           
 11325                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 252:     _delay(32u);
 11326  14F5  300A               	movlw	10
 11327  14F6                     u6347:
 11328  14F6  0B89               	decfsz	9,f
 11329  14F7  2CF6               	goto	u6347
 11330  14F8  3200               	nop2
 11331  14F9  308D               	movlw	141	;# 
 11332  14FA  0084               	movwf	4	;# 
 11333  14FB  3000               	movlw	0	;# 
 11334  14FC  0085               	movwf	5	;# 
 11335  14FD  300C               	movlw	12	;# 
 11336  14FE  0086               	movwf	6	;# 
 11337  14FF  3001               	movlw	1	;# 
 11338  1500  0087               	movwf	7	;# 
 11339  1501  3029               	movlw	41	;# 
 11340  1502  1480               	bsf	0,1	;# 
 11341                           
 11342                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 270:     _delay(0u);
 11343  1503  009D               	movwf	29	;# 
 11344  1504  1281               	bcf	1,5	;# 
 11345                           
 11346                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 277:     _delay(16u);
 11347  1505  3005               	movlw	5
 11348  1506                     u6357:
 11349  1506  0B89               	decfsz	9,f
 11350  1507  2D06               	goto	u6357
 11351  1508  0000               	nop
 11352  1509  0021               	banksel	157	;# 
 11353  150A  149D               	bsf	29,1	;# 
 11354                           
 11355                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 284:     _delay(3u);
 11356  150B  3200               	nop2	;2 cycle nop
 11357  150C  0000               	nop
 11358  150D  0022               	banksel	269	;# 
 11359  150E  108D               	bcf	13,1	;# 
 11360  150F  1080               	bcf	0,1	;# 
 11361  1510  0008               	return
 11362  1511                     __end_of_MTOUCH_CVD_ScanB_1:
 11363                           
 11364                           	psect	text61
 11365  14CF                     __ptext61:	
 11366 ;; *************** function _MTOUCH_CVD_ScanB_0 *****************
 11367 ;; Defined at:
 11368 ;;		line 113 in file "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
 11369 ;; Parameters:    Size  Location     Type
 11370 ;;		None
 11371 ;; Auto vars:     Size  Location     Type
 11372 ;;		None
 11373 ;; Return value:  Size  Location     Type
 11374 ;;                  1    wreg      void 
 11375 ;; Registers used:
 11376 ;;		wreg
 11377 ;; Tracked objects:
 11378 ;;		On entry : 1F/1
 11379 ;;		On exit  : 0/0
 11380 ;;		Unchanged: 0/0
 11381 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11382 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11383 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11384 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11385 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11386 ;;Total ram usage:        0 bytes
 11387 ;; Hardware stack levels used: 1
 11388 ;; Hardware stack levels required when called: 4
 11389 ;; This function calls:
 11390 ;;		Nothing
 11391 ;; This function is called by:
 11392 ;;		_Sensor_Acq_ExecuteScan
 11393 ;; This function uses a non-reentrant model
 11394 ;;
 11395                           
 11396                           
 11397                           ;psect for function _MTOUCH_CVD_ScanB_0
 11398  14CF                     _MTOUCH_CVD_ScanB_0:
 11399                           
 11400                           ;incstack = 0
 11401                           ; Regs used in _MTOUCH_CVD_ScanB_0: [wreg]
 11402  14CF  0022               	banksel	268	;# 
 11403  14D0  100C               	bcf	12,0	;# 
 11404  14D1  0021               	banksel	157	;# 
 11405  14D2  3001               	movlw	1	;# 
 11406  14D3  009D               	movwf	29	;# 
 11407                           
 11408                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 125:     _delay(32u);
 11409  14D4  300A               	movlw	10
 11410  14D5                     u6367:
 11411  14D5  0B89               	decfsz	9,f
 11412  14D6  2CD5               	goto	u6367
 11413  14D7  3200               	nop2
 11414  14D8  308D               	movlw	141	;# 
 11415  14D9  0084               	movwf	4	;# 
 11416  14DA  3000               	movlw	0	;# 
 11417  14DB  0085               	movwf	5	;# 
 11418  14DC  300C               	movlw	12	;# 
 11419  14DD  0086               	movwf	6	;# 
 11420  14DE  3001               	movlw	1	;# 
 11421  14DF  0087               	movwf	7	;# 
 11422  14E0  3031               	movlw	49	;# 
 11423  14E1  1400               	bsf	0,0	;# 
 11424                           
 11425                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 143:     _delay(0u);
 11426  14E2  009D               	movwf	29	;# 
 11427  14E3  1281               	bcf	1,5	;# 
 11428                           
 11429                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 150:     _delay(16u);
 11430  14E4  3005               	movlw	5
 11431  14E5                     u6377:
 11432  14E5  0B89               	decfsz	9,f
 11433  14E6  2CE5               	goto	u6377
 11434  14E7  0000               	nop
 11435  14E8  0021               	banksel	157	;# 
 11436  14E9  149D               	bsf	29,1	;# 
 11437                           
 11438                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 157:     _delay(3u);
 11439  14EA  3200               	nop2	;2 cycle nop
 11440  14EB  0000               	nop
 11441  14EC  0022               	banksel	269	;# 
 11442  14ED  100D               	bcf	13,0	;# 
 11443  14EE  1000               	bcf	0,0	;# 
 11444  14EF  0008               	return
 11445  14F0                     __end_of_MTOUCH_CVD_ScanB_0:
 11446                           
 11447                           	psect	text62
 11448  14AE                     __ptext62:	
 11449 ;; *************** function _MTOUCH_CVD_ScanB_9 *****************
 11450 ;; Defined at:
 11451 ;;		line 1256 in file "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
 11452 ;; Parameters:    Size  Location     Type
 11453 ;;		None
 11454 ;; Auto vars:     Size  Location     Type
 11455 ;;		None
 11456 ;; Return value:  Size  Location     Type
 11457 ;;                  1    wreg      void 
 11458 ;; Registers used:
 11459 ;;		wreg
 11460 ;; Tracked objects:
 11461 ;;		On entry : 1F/1
 11462 ;;		On exit  : 0/0
 11463 ;;		Unchanged: 0/0
 11464 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11465 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11466 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11467 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11468 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11469 ;;Total ram usage:        0 bytes
 11470 ;; Hardware stack levels used: 1
 11471 ;; Hardware stack levels required when called: 4
 11472 ;; This function calls:
 11473 ;;		Nothing
 11474 ;; This function is called by:
 11475 ;;		_Sensor_Acq_ExecuteScan
 11476 ;; This function uses a non-reentrant model
 11477 ;;
 11478                           
 11479                           
 11480                           ;psect for function _MTOUCH_CVD_ScanB_9
 11481  14AE                     _MTOUCH_CVD_ScanB_9:
 11482                           
 11483                           ;incstack = 0
 11484                           ; Regs used in _MTOUCH_CVD_ScanB_9: [wreg]
 11485  14AE  0022               	banksel	268	;# 
 11486  14AF  108C               	bcf	12,1	;# 
 11487  14B0  0021               	banksel	157	;# 
 11488  14B1  3005               	movlw	5	;# 
 11489  14B2  009D               	movwf	29	;# 
 11490                           
 11491                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 1268:     _delay(32u);
 11492  14B3  300A               	movlw	10
 11493  14B4                     u6387:
 11494  14B4  0B89               	decfsz	9,f
 11495  14B5  2CB4               	goto	u6387
 11496  14B6  3200               	nop2
 11497  14B7  308C               	movlw	140	;# 
 11498  14B8  0084               	movwf	4	;# 
 11499  14B9  3000               	movlw	0	;# 
 11500  14BA  0085               	movwf	5	;# 
 11501  14BB  300C               	movlw	12	;# 
 11502  14BC  0086               	movwf	6	;# 
 11503  14BD  3001               	movlw	1	;# 
 11504  14BE  0087               	movwf	7	;# 
 11505  14BF  3001               	movlw	1	;# 
 11506  14C0  1400               	bsf	0,0	;# 
 11507                           
 11508                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 1286:     _delay(0u);
 11509  14C1  009D               	movwf	29	;# 
 11510  14C2  1281               	bcf	1,5	;# 
 11511                           
 11512                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 1293:     _delay(16u);
 11513  14C3  3005               	movlw	5
 11514  14C4                     u6397:
 11515  14C4  0B89               	decfsz	9,f
 11516  14C5  2CC4               	goto	u6397
 11517  14C6  0000               	nop
 11518  14C7  0021               	banksel	157	;# 
 11519  14C8  149D               	bsf	29,1	;# 
 11520                           
 11521                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 1300:     _delay(3u);
 11522  14C9  3200               	nop2	;2 cycle nop
 11523  14CA  0000               	nop
 11524  14CB  0022               	banksel	268	;# 
 11525  14CC  100C               	bcf	12,0	;# 
 11526  14CD  1000               	bcf	0,0	;# 
 11527  14CE  0008               	return
 11528  14CF                     __end_of_MTOUCH_CVD_ScanB_9:
 11529                           
 11530                           	psect	text63
 11531  148D                     __ptext63:	
 11532 ;; *************** function _MTOUCH_CVD_ScanA_8 *****************
 11533 ;; Defined at:
 11534 ;;		line 1066 in file "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
 11535 ;; Parameters:    Size  Location     Type
 11536 ;;		None
 11537 ;; Auto vars:     Size  Location     Type
 11538 ;;		None
 11539 ;; Return value:  Size  Location     Type
 11540 ;;                  1    wreg      void 
 11541 ;; Registers used:
 11542 ;;		wreg
 11543 ;; Tracked objects:
 11544 ;;		On entry : 1F/1
 11545 ;;		On exit  : 0/0
 11546 ;;		Unchanged: 0/0
 11547 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11548 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11549 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11550 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11551 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11552 ;;Total ram usage:        0 bytes
 11553 ;; Hardware stack levels used: 1
 11554 ;; Hardware stack levels required when called: 4
 11555 ;; This function calls:
 11556 ;;		Nothing
 11557 ;; This function is called by:
 11558 ;;		_Sensor_Acq_ExecuteScan
 11559 ;; This function uses a non-reentrant model
 11560 ;;
 11561                           
 11562                           
 11563                           ;psect for function _MTOUCH_CVD_ScanA_8
 11564  148D                     _MTOUCH_CVD_ScanA_8:
 11565                           
 11566                           ;incstack = 0
 11567                           ; Regs used in _MTOUCH_CVD_ScanA_8: [wreg]
 11568  148D  0022               	banksel	268	;# 
 11569  148E  150C               	bsf	12,2	;# 
 11570  148F  0021               	banksel	157	;# 
 11571  1490  3009               	movlw	9	;# 
 11572  1491  009D               	movwf	29	;# 
 11573                           
 11574                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 1078:     _delay(32u);
 11575  1492  300A               	movlw	10
 11576  1493                     u6407:
 11577  1493  0B89               	decfsz	9,f
 11578  1494  2C93               	goto	u6407
 11579  1495  3200               	nop2
 11580  1496  308C               	movlw	140	;# 
 11581  1497  0084               	movwf	4	;# 
 11582  1498  3000               	movlw	0	;# 
 11583  1499  0085               	movwf	5	;# 
 11584  149A  300C               	movlw	12	;# 
 11585  149B  0086               	movwf	6	;# 
 11586  149C  3001               	movlw	1	;# 
 11587  149D  0087               	movwf	7	;# 
 11588  149E  3005               	movlw	5	;# 
 11589  149F  1480               	bsf	0,1	;# 
 11590                           
 11591                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 1096:     _delay(0u);
 11592  14A0  009D               	movwf	29	;# 
 11593  14A1  1681               	bsf	1,5	;# 
 11594                           
 11595                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 1102:     _delay(16u);
 11596  14A2  3005               	movlw	5
 11597  14A3                     u6417:
 11598  14A3  0B89               	decfsz	9,f
 11599  14A4  2CA3               	goto	u6417
 11600  14A5  0000               	nop
 11601  14A6  0021               	banksel	157	;# 
 11602  14A7  149D               	bsf	29,1	;# 
 11603                           
 11604                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 1109:     _delay(3u);
 11605  14A8  3200               	nop2	;2 cycle nop
 11606  14A9  0000               	nop
 11607  14AA  0022               	banksel	268	;# 
 11608  14AB  148C               	bsf	12,1	;# 
 11609  14AC  1080               	bcf	0,1	;# 
 11610  14AD  0008               	return
 11611  14AE                     __end_of_MTOUCH_CVD_ScanA_8:
 11612                           
 11613                           	psect	text64
 11614  146C                     __ptext64:	
 11615 ;; *************** function _MTOUCH_CVD_ScanA_7 *****************
 11616 ;; Defined at:
 11617 ;;		line 939 in file "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
 11618 ;; Parameters:    Size  Location     Type
 11619 ;;		None
 11620 ;; Auto vars:     Size  Location     Type
 11621 ;;		None
 11622 ;; Return value:  Size  Location     Type
 11623 ;;                  1    wreg      void 
 11624 ;; Registers used:
 11625 ;;		wreg
 11626 ;; Tracked objects:
 11627 ;;		On entry : 1F/1
 11628 ;;		On exit  : 0/0
 11629 ;;		Unchanged: 0/0
 11630 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11631 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11632 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11633 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11634 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11635 ;;Total ram usage:        0 bytes
 11636 ;; Hardware stack levels used: 1
 11637 ;; Hardware stack levels required when called: 4
 11638 ;; This function calls:
 11639 ;;		Nothing
 11640 ;; This function is called by:
 11641 ;;		_Sensor_Acq_ExecuteScan
 11642 ;; This function uses a non-reentrant model
 11643 ;;
 11644                           
 11645                           
 11646                           ;psect for function _MTOUCH_CVD_ScanA_7
 11647  146C                     _MTOUCH_CVD_ScanA_7:
 11648                           
 11649                           ;incstack = 0
 11650                           ; Regs used in _MTOUCH_CVD_ScanA_7: [wreg]
 11651  146C  0022               	banksel	268	;# 
 11652  146D  158C               	bsf	12,3	;# 
 11653  146E  0021               	banksel	157	;# 
 11654  146F  300D               	movlw	13	;# 
 11655  1470  009D               	movwf	29	;# 
 11656                           
 11657                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 951:     _delay(32u);
 11658  1471  300A               	movlw	10
 11659  1472                     u6427:
 11660  1472  0B89               	decfsz	9,f
 11661  1473  2C72               	goto	u6427
 11662  1474  3200               	nop2
 11663  1475  308C               	movlw	140	;# 
 11664  1476  0084               	movwf	4	;# 
 11665  1477  3000               	movlw	0	;# 
 11666  1478  0085               	movwf	5	;# 
 11667  1479  300C               	movlw	12	;# 
 11668  147A  0086               	movwf	6	;# 
 11669  147B  3001               	movlw	1	;# 
 11670  147C  0087               	movwf	7	;# 
 11671  147D  3009               	movlw	9	;# 
 11672  147E  1500               	bsf	0,2	;# 
 11673                           
 11674                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 969:     _delay(0u);
 11675  147F  009D               	movwf	29	;# 
 11676  1480  1681               	bsf	1,5	;# 
 11677                           
 11678                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 975:     _delay(16u);
 11679  1481  3005               	movlw	5
 11680  1482                     u6437:
 11681  1482  0B89               	decfsz	9,f
 11682  1483  2C82               	goto	u6437
 11683  1484  0000               	nop
 11684  1485  0021               	banksel	157	;# 
 11685  1486  149D               	bsf	29,1	;# 
 11686                           
 11687                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 982:     _delay(3u);
 11688  1487  3200               	nop2	;2 cycle nop
 11689  1488  0000               	nop
 11690  1489  0022               	banksel	268	;# 
 11691  148A  150C               	bsf	12,2	;# 
 11692  148B  1100               	bcf	0,2	;# 
 11693  148C  0008               	return
 11694  148D                     __end_of_MTOUCH_CVD_ScanA_7:
 11695                           
 11696                           	psect	text65
 11697  144B                     __ptext65:	
 11698 ;; *************** function _MTOUCH_CVD_ScanA_6 *****************
 11699 ;; Defined at:
 11700 ;;		line 812 in file "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
 11701 ;; Parameters:    Size  Location     Type
 11702 ;;		None
 11703 ;; Auto vars:     Size  Location     Type
 11704 ;;		None
 11705 ;; Return value:  Size  Location     Type
 11706 ;;                  1    wreg      void 
 11707 ;; Registers used:
 11708 ;;		wreg
 11709 ;; Tracked objects:
 11710 ;;		On entry : 1F/1
 11711 ;;		On exit  : 0/0
 11712 ;;		Unchanged: 0/0
 11713 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11714 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11715 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11716 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11717 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11718 ;;Total ram usage:        0 bytes
 11719 ;; Hardware stack levels used: 1
 11720 ;; Hardware stack levels required when called: 4
 11721 ;; This function calls:
 11722 ;;		Nothing
 11723 ;; This function is called by:
 11724 ;;		_Sensor_Acq_ExecuteScan
 11725 ;; This function uses a non-reentrant model
 11726 ;;
 11727                           
 11728                           
 11729                           ;psect for function _MTOUCH_CVD_ScanA_6
 11730  144B                     _MTOUCH_CVD_ScanA_6:
 11731                           
 11732                           ;incstack = 0
 11733                           ; Regs used in _MTOUCH_CVD_ScanA_6: [wreg]
 11734  144B  0022               	banksel	269	;# 
 11735  144C  168D               	bsf	13,5	;# 
 11736  144D  0021               	banksel	157	;# 
 11737  144E  3035               	movlw	53	;# 
 11738  144F  009D               	movwf	29	;# 
 11739                           
 11740                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 824:     _delay(32u);
 11741  1450  300A               	movlw	10
 11742  1451                     u6447:
 11743  1451  0B89               	decfsz	9,f
 11744  1452  2C51               	goto	u6447
 11745  1453  3200               	nop2
 11746  1454  308C               	movlw	140	;# 
 11747  1455  0084               	movwf	4	;# 
 11748  1456  3000               	movlw	0	;# 
 11749  1457  0085               	movwf	5	;# 
 11750  1458  300C               	movlw	12	;# 
 11751  1459  0086               	movwf	6	;# 
 11752  145A  3001               	movlw	1	;# 
 11753  145B  0087               	movwf	7	;# 
 11754  145C  300D               	movlw	13	;# 
 11755  145D  1580               	bsf	0,3	;# 
 11756                           
 11757                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 842:     _delay(0u);
 11758  145E  009D               	movwf	29	;# 
 11759  145F  1681               	bsf	1,5	;# 
 11760                           
 11761                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 848:     _delay(16u);
 11762  1460  3005               	movlw	5
 11763  1461                     u6457:
 11764  1461  0B89               	decfsz	9,f
 11765  1462  2C61               	goto	u6457
 11766  1463  0000               	nop
 11767  1464  0021               	banksel	157	;# 
 11768  1465  149D               	bsf	29,1	;# 
 11769                           
 11770                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 855:     _delay(3u);
 11771  1466  3200               	nop2	;2 cycle nop
 11772  1467  0000               	nop
 11773  1468  0022               	banksel	268	;# 
 11774  1469  158C               	bsf	12,3	;# 
 11775  146A  1180               	bcf	0,3	;# 
 11776  146B  0008               	return
 11777  146C                     __end_of_MTOUCH_CVD_ScanA_6:
 11778                           
 11779                           	psect	text66
 11780  142A                     __ptext66:	
 11781 ;; *************** function _MTOUCH_CVD_ScanA_5 *****************
 11782 ;; Defined at:
 11783 ;;		line 685 in file "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
 11784 ;; Parameters:    Size  Location     Type
 11785 ;;		None
 11786 ;; Auto vars:     Size  Location     Type
 11787 ;;		None
 11788 ;; Return value:  Size  Location     Type
 11789 ;;                  1    wreg      void 
 11790 ;; Registers used:
 11791 ;;		wreg
 11792 ;; Tracked objects:
 11793 ;;		On entry : 1F/1
 11794 ;;		On exit  : 0/0
 11795 ;;		Unchanged: 0/0
 11796 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11797 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11798 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11799 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11800 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11801 ;;Total ram usage:        0 bytes
 11802 ;; Hardware stack levels used: 1
 11803 ;; Hardware stack levels required when called: 4
 11804 ;; This function calls:
 11805 ;;		Nothing
 11806 ;; This function is called by:
 11807 ;;		_Sensor_Acq_ExecuteScan
 11808 ;; This function uses a non-reentrant model
 11809 ;;
 11810                           
 11811                           
 11812                           ;psect for function _MTOUCH_CVD_ScanA_5
 11813  142A                     _MTOUCH_CVD_ScanA_5:
 11814                           
 11815                           ;incstack = 0
 11816                           ; Regs used in _MTOUCH_CVD_ScanA_5: [wreg]
 11817  142A  0022               	banksel	269	;# 
 11818  142B  160D               	bsf	13,4	;# 
 11819  142C  0021               	banksel	157	;# 
 11820  142D  302D               	movlw	45	;# 
 11821  142E  009D               	movwf	29	;# 
 11822                           
 11823                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 697:     _delay(32u);
 11824  142F  300A               	movlw	10
 11825  1430                     u6467:
 11826  1430  0B89               	decfsz	9,f
 11827  1431  2C30               	goto	u6467
 11828  1432  3200               	nop2
 11829  1433  308D               	movlw	141	;# 
 11830  1434  0084               	movwf	4	;# 
 11831  1435  3000               	movlw	0	;# 
 11832  1436  0085               	movwf	5	;# 
 11833  1437  300C               	movlw	12	;# 
 11834  1438  0086               	movwf	6	;# 
 11835  1439  3001               	movlw	1	;# 
 11836  143A  0087               	movwf	7	;# 
 11837  143B  3035               	movlw	53	;# 
 11838  143C  1680               	bsf	0,5	;# 
 11839                           
 11840                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 715:     _delay(0u);
 11841  143D  009D               	movwf	29	;# 
 11842  143E  1681               	bsf	1,5	;# 
 11843                           
 11844                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 721:     _delay(16u);
 11845  143F  3005               	movlw	5
 11846  1440                     u6477:
 11847  1440  0B89               	decfsz	9,f
 11848  1441  2C40               	goto	u6477
 11849  1442  0000               	nop
 11850  1443  0021               	banksel	157	;# 
 11851  1444  149D               	bsf	29,1	;# 
 11852                           
 11853                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 728:     _delay(3u);
 11854  1445  3200               	nop2	;2 cycle nop
 11855  1446  0000               	nop
 11856  1447  0022               	banksel	269	;# 
 11857  1448  168D               	bsf	13,5	;# 
 11858  1449  1280               	bcf	0,5	;# 
 11859  144A  0008               	return
 11860  144B                     __end_of_MTOUCH_CVD_ScanA_5:
 11861                           
 11862                           	psect	text67
 11863  1409                     __ptext67:	
 11864 ;; *************** function _MTOUCH_CVD_ScanA_4 *****************
 11865 ;; Defined at:
 11866 ;;		line 558 in file "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
 11867 ;; Parameters:    Size  Location     Type
 11868 ;;		None
 11869 ;; Auto vars:     Size  Location     Type
 11870 ;;		None
 11871 ;; Return value:  Size  Location     Type
 11872 ;;                  1    wreg      void 
 11873 ;; Registers used:
 11874 ;;		wreg
 11875 ;; Tracked objects:
 11876 ;;		On entry : 1F/1
 11877 ;;		On exit  : 0/0
 11878 ;;		Unchanged: 0/0
 11879 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11880 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11881 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11882 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11883 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11884 ;;Total ram usage:        0 bytes
 11885 ;; Hardware stack levels used: 1
 11886 ;; Hardware stack levels required when called: 4
 11887 ;; This function calls:
 11888 ;;		Nothing
 11889 ;; This function is called by:
 11890 ;;		_Sensor_Acq_ExecuteScan
 11891 ;; This function uses a non-reentrant model
 11892 ;;
 11893                           
 11894                           
 11895                           ;psect for function _MTOUCH_CVD_ScanA_4
 11896  1409                     _MTOUCH_CVD_ScanA_4:
 11897                           
 11898                           ;incstack = 0
 11899                           ; Regs used in _MTOUCH_CVD_ScanA_4: [wreg]
 11900  1409  0022               	banksel	269	;# 
 11901  140A  158D               	bsf	13,3	;# 
 11902  140B  0021               	banksel	157	;# 
 11903  140C  3025               	movlw	37	;# 
 11904  140D  009D               	movwf	29	;# 
 11905                           
 11906                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 570:     _delay(32u);
 11907  140E  300A               	movlw	10
 11908  140F                     u6487:
 11909  140F  0B89               	decfsz	9,f
 11910  1410  2C0F               	goto	u6487
 11911  1411  3200               	nop2
 11912  1412  308D               	movlw	141	;# 
 11913  1413  0084               	movwf	4	;# 
 11914  1414  3000               	movlw	0	;# 
 11915  1415  0085               	movwf	5	;# 
 11916  1416  300C               	movlw	12	;# 
 11917  1417  0086               	movwf	6	;# 
 11918  1418  3001               	movlw	1	;# 
 11919  1419  0087               	movwf	7	;# 
 11920  141A  302D               	movlw	45	;# 
 11921  141B  1600               	bsf	0,4	;# 
 11922                           
 11923                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 588:     _delay(0u);
 11924  141C  009D               	movwf	29	;# 
 11925  141D  1681               	bsf	1,5	;# 
 11926                           
 11927                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 594:     _delay(16u);
 11928  141E  3005               	movlw	5
 11929  141F                     u6497:
 11930  141F  0B89               	decfsz	9,f
 11931  1420  2C1F               	goto	u6497
 11932  1421  0000               	nop
 11933  1422  0021               	banksel	157	;# 
 11934  1423  149D               	bsf	29,1	;# 
 11935                           
 11936                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 601:     _delay(3u);
 11937  1424  3200               	nop2	;2 cycle nop
 11938  1425  0000               	nop
 11939  1426  0022               	banksel	269	;# 
 11940  1427  160D               	bsf	13,4	;# 
 11941  1428  1200               	bcf	0,4	;# 
 11942  1429  0008               	return
 11943  142A                     __end_of_MTOUCH_CVD_ScanA_4:
 11944                           
 11945                           	psect	text68
 11946  13E8                     __ptext68:	
 11947 ;; *************** function _MTOUCH_CVD_ScanA_3 *****************
 11948 ;; Defined at:
 11949 ;;		line 431 in file "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
 11950 ;; Parameters:    Size  Location     Type
 11951 ;;		None
 11952 ;; Auto vars:     Size  Location     Type
 11953 ;;		None
 11954 ;; Return value:  Size  Location     Type
 11955 ;;                  1    wreg      void 
 11956 ;; Registers used:
 11957 ;;		wreg
 11958 ;; Tracked objects:
 11959 ;;		On entry : 1F/1
 11960 ;;		On exit  : 0/0
 11961 ;;		Unchanged: 0/0
 11962 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11963 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11964 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11965 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11966 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11967 ;;Total ram usage:        0 bytes
 11968 ;; Hardware stack levels used: 1
 11969 ;; Hardware stack levels required when called: 4
 11970 ;; This function calls:
 11971 ;;		Nothing
 11972 ;; This function is called by:
 11973 ;;		_Sensor_Acq_ExecuteScan
 11974 ;; This function uses a non-reentrant model
 11975 ;;
 11976                           
 11977                           
 11978                           ;psect for function _MTOUCH_CVD_ScanA_3
 11979  13E8                     _MTOUCH_CVD_ScanA_3:
 11980                           
 11981                           ;incstack = 0
 11982                           ; Regs used in _MTOUCH_CVD_ScanA_3: [wreg]
 11983  13E8  0022               	banksel	269	;# 
 11984  13E9  150D               	bsf	13,2	;# 
 11985  13EA  0021               	banksel	157	;# 
 11986  13EB  3021               	movlw	33	;# 
 11987  13EC  009D               	movwf	29	;# 
 11988                           
 11989                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 443:     _delay(32u);
 11990  13ED  300A               	movlw	10
 11991  13EE                     u6507:
 11992  13EE  0B89               	decfsz	9,f
 11993  13EF  2BEE               	goto	u6507
 11994  13F0  3200               	nop2
 11995  13F1  308D               	movlw	141	;# 
 11996  13F2  0084               	movwf	4	;# 
 11997  13F3  3000               	movlw	0	;# 
 11998  13F4  0085               	movwf	5	;# 
 11999  13F5  300C               	movlw	12	;# 
 12000  13F6  0086               	movwf	6	;# 
 12001  13F7  3001               	movlw	1	;# 
 12002  13F8  0087               	movwf	7	;# 
 12003  13F9  3025               	movlw	37	;# 
 12004  13FA  1580               	bsf	0,3	;# 
 12005                           
 12006                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 461:     _delay(0u);
 12007  13FB  009D               	movwf	29	;# 
 12008  13FC  1681               	bsf	1,5	;# 
 12009                           
 12010                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 467:     _delay(16u);
 12011  13FD  3005               	movlw	5
 12012  13FE                     u6517:
 12013  13FE  0B89               	decfsz	9,f
 12014  13FF  2BFE               	goto	u6517
 12015  1400  0000               	nop
 12016  1401  0021               	banksel	157	;# 
 12017  1402  149D               	bsf	29,1	;# 
 12018                           
 12019                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 474:     _delay(3u);
 12020  1403  3200               	nop2	;2 cycle nop
 12021  1404  0000               	nop
 12022  1405  0022               	banksel	269	;# 
 12023  1406  158D               	bsf	13,3	;# 
 12024  1407  1180               	bcf	0,3	;# 
 12025  1408  0008               	return
 12026  1409                     __end_of_MTOUCH_CVD_ScanA_3:
 12027                           
 12028                           	psect	text69
 12029  13C7                     __ptext69:	
 12030 ;; *************** function _MTOUCH_CVD_ScanA_2 *****************
 12031 ;; Defined at:
 12032 ;;		line 304 in file "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
 12033 ;; Parameters:    Size  Location     Type
 12034 ;;		None
 12035 ;; Auto vars:     Size  Location     Type
 12036 ;;		None
 12037 ;; Return value:  Size  Location     Type
 12038 ;;                  1    wreg      void 
 12039 ;; Registers used:
 12040 ;;		wreg
 12041 ;; Tracked objects:
 12042 ;;		On entry : 1F/1
 12043 ;;		On exit  : 0/0
 12044 ;;		Unchanged: 0/0
 12045 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12046 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12047 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12048 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12049 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12050 ;;Total ram usage:        0 bytes
 12051 ;; Hardware stack levels used: 1
 12052 ;; Hardware stack levels required when called: 4
 12053 ;; This function calls:
 12054 ;;		Nothing
 12055 ;; This function is called by:
 12056 ;;		_Sensor_Acq_ExecuteScan
 12057 ;; This function uses a non-reentrant model
 12058 ;;
 12059                           
 12060                           
 12061                           ;psect for function _MTOUCH_CVD_ScanA_2
 12062  13C7                     _MTOUCH_CVD_ScanA_2:
 12063                           
 12064                           ;incstack = 0
 12065                           ; Regs used in _MTOUCH_CVD_ScanA_2: [wreg]
 12066  13C7  0022               	banksel	269	;# 
 12067  13C8  148D               	bsf	13,1	;# 
 12068  13C9  0021               	banksel	157	;# 
 12069  13CA  3029               	movlw	41	;# 
 12070  13CB  009D               	movwf	29	;# 
 12071                           
 12072                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 316:     _delay(32u);
 12073  13CC  300A               	movlw	10
 12074  13CD                     u6527:
 12075  13CD  0B89               	decfsz	9,f
 12076  13CE  2BCD               	goto	u6527
 12077  13CF  3200               	nop2
 12078  13D0  308D               	movlw	141	;# 
 12079  13D1  0084               	movwf	4	;# 
 12080  13D2  3000               	movlw	0	;# 
 12081  13D3  0085               	movwf	5	;# 
 12082  13D4  300C               	movlw	12	;# 
 12083  13D5  0086               	movwf	6	;# 
 12084  13D6  3001               	movlw	1	;# 
 12085  13D7  0087               	movwf	7	;# 
 12086  13D8  3021               	movlw	33	;# 
 12087  13D9  1500               	bsf	0,2	;# 
 12088                           
 12089                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 334:     _delay(0u);
 12090  13DA  009D               	movwf	29	;# 
 12091  13DB  1681               	bsf	1,5	;# 
 12092                           
 12093                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 340:     _delay(16u);
 12094  13DC  3005               	movlw	5
 12095  13DD                     u6537:
 12096  13DD  0B89               	decfsz	9,f
 12097  13DE  2BDD               	goto	u6537
 12098  13DF  0000               	nop
 12099  13E0  0021               	banksel	157	;# 
 12100  13E1  149D               	bsf	29,1	;# 
 12101                           
 12102                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 347:     _delay(3u);
 12103  13E2  3200               	nop2	;2 cycle nop
 12104  13E3  0000               	nop
 12105  13E4  0022               	banksel	269	;# 
 12106  13E5  150D               	bsf	13,2	;# 
 12107  13E6  1100               	bcf	0,2	;# 
 12108  13E7  0008               	return
 12109  13E8                     __end_of_MTOUCH_CVD_ScanA_2:
 12110                           
 12111                           	psect	text70
 12112  13A6                     __ptext70:	
 12113 ;; *************** function _MTOUCH_CVD_ScanA_1 *****************
 12114 ;; Defined at:
 12115 ;;		line 177 in file "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
 12116 ;; Parameters:    Size  Location     Type
 12117 ;;		None
 12118 ;; Auto vars:     Size  Location     Type
 12119 ;;		None
 12120 ;; Return value:  Size  Location     Type
 12121 ;;                  1    wreg      void 
 12122 ;; Registers used:
 12123 ;;		wreg
 12124 ;; Tracked objects:
 12125 ;;		On entry : 1F/1
 12126 ;;		On exit  : 0/0
 12127 ;;		Unchanged: 0/0
 12128 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12129 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12130 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12131 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12132 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12133 ;;Total ram usage:        0 bytes
 12134 ;; Hardware stack levels used: 1
 12135 ;; Hardware stack levels required when called: 4
 12136 ;; This function calls:
 12137 ;;		Nothing
 12138 ;; This function is called by:
 12139 ;;		_Sensor_Acq_ExecuteScan
 12140 ;; This function uses a non-reentrant model
 12141 ;;
 12142                           
 12143                           
 12144                           ;psect for function _MTOUCH_CVD_ScanA_1
 12145  13A6                     _MTOUCH_CVD_ScanA_1:
 12146                           
 12147                           ;incstack = 0
 12148                           ; Regs used in _MTOUCH_CVD_ScanA_1: [wreg]
 12149  13A6  0022               	banksel	269	;# 
 12150  13A7  140D               	bsf	13,0	;# 
 12151  13A8  0021               	banksel	157	;# 
 12152  13A9  3031               	movlw	49	;# 
 12153  13AA  009D               	movwf	29	;# 
 12154                           
 12155                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 189:     _delay(32u);
 12156  13AB  300A               	movlw	10
 12157  13AC                     u6547:
 12158  13AC  0B89               	decfsz	9,f
 12159  13AD  2BAC               	goto	u6547
 12160  13AE  3200               	nop2
 12161  13AF  308D               	movlw	141	;# 
 12162  13B0  0084               	movwf	4	;# 
 12163  13B1  3000               	movlw	0	;# 
 12164  13B2  0085               	movwf	5	;# 
 12165  13B3  300C               	movlw	12	;# 
 12166  13B4  0086               	movwf	6	;# 
 12167  13B5  3001               	movlw	1	;# 
 12168  13B6  0087               	movwf	7	;# 
 12169  13B7  3029               	movlw	41	;# 
 12170  13B8  1480               	bsf	0,1	;# 
 12171                           
 12172                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 207:     _delay(0u);
 12173  13B9  009D               	movwf	29	;# 
 12174  13BA  1681               	bsf	1,5	;# 
 12175                           
 12176                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 213:     _delay(16u);
 12177  13BB  3005               	movlw	5
 12178  13BC                     u6557:
 12179  13BC  0B89               	decfsz	9,f
 12180  13BD  2BBC               	goto	u6557
 12181  13BE  0000               	nop
 12182  13BF  0021               	banksel	157	;# 
 12183  13C0  149D               	bsf	29,1	;# 
 12184                           
 12185                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 220:     _delay(3u);
 12186  13C1  3200               	nop2	;2 cycle nop
 12187  13C2  0000               	nop
 12188  13C3  0022               	banksel	269	;# 
 12189  13C4  148D               	bsf	13,1	;# 
 12190  13C5  1080               	bcf	0,1	;# 
 12191  13C6  0008               	return
 12192  13C7                     __end_of_MTOUCH_CVD_ScanA_1:
 12193                           
 12194                           	psect	text71
 12195  1385                     __ptext71:	
 12196 ;; *************** function _MTOUCH_CVD_ScanA_0 *****************
 12197 ;; Defined at:
 12198 ;;		line 50 in file "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
 12199 ;; Parameters:    Size  Location     Type
 12200 ;;		None
 12201 ;; Auto vars:     Size  Location     Type
 12202 ;;		None
 12203 ;; Return value:  Size  Location     Type
 12204 ;;                  1    wreg      void 
 12205 ;; Registers used:
 12206 ;;		wreg
 12207 ;; Tracked objects:
 12208 ;;		On entry : 1F/1
 12209 ;;		On exit  : 0/0
 12210 ;;		Unchanged: 0/0
 12211 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12212 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12213 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12214 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12215 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12216 ;;Total ram usage:        0 bytes
 12217 ;; Hardware stack levels used: 1
 12218 ;; Hardware stack levels required when called: 4
 12219 ;; This function calls:
 12220 ;;		Nothing
 12221 ;; This function is called by:
 12222 ;;		_Sensor_Acq_ExecuteScan
 12223 ;; This function uses a non-reentrant model
 12224 ;;
 12225                           
 12226                           
 12227                           ;psect for function _MTOUCH_CVD_ScanA_0
 12228  1385                     _MTOUCH_CVD_ScanA_0:
 12229                           
 12230                           ;incstack = 0
 12231                           ; Regs used in _MTOUCH_CVD_ScanA_0: [wreg]
 12232  1385  0022               	banksel	268	;# 
 12233  1386  140C               	bsf	12,0	;# 
 12234  1387  0021               	banksel	157	;# 
 12235  1388  3001               	movlw	1	;# 
 12236  1389  009D               	movwf	29	;# 
 12237                           
 12238                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 62:     _delay(32u);
 12239  138A  300A               	movlw	10
 12240  138B                     u6567:
 12241  138B  0B89               	decfsz	9,f
 12242  138C  2B8B               	goto	u6567
 12243  138D  3200               	nop2
 12244  138E  308D               	movlw	141	;# 
 12245  138F  0084               	movwf	4	;# 
 12246  1390  3000               	movlw	0	;# 
 12247  1391  0085               	movwf	5	;# 
 12248  1392  300C               	movlw	12	;# 
 12249  1393  0086               	movwf	6	;# 
 12250  1394  3001               	movlw	1	;# 
 12251  1395  0087               	movwf	7	;# 
 12252  1396  3031               	movlw	49	;# 
 12253  1397  1400               	bsf	0,0	;# 
 12254                           
 12255                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 80:     _delay(0u);
 12256  1398  009D               	movwf	29	;# 
 12257  1399  1681               	bsf	1,5	;# 
 12258                           
 12259                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 86:     _delay(16u);
 12260  139A  3005               	movlw	5
 12261  139B                     u6577:
 12262  139B  0B89               	decfsz	9,f
 12263  139C  2B9B               	goto	u6577
 12264  139D  0000               	nop
 12265  139E  0021               	banksel	157	;# 
 12266  139F  149D               	bsf	29,1	;# 
 12267                           
 12268                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 93:     _delay(3u);
 12269  13A0  3200               	nop2	;2 cycle nop
 12270  13A1  0000               	nop
 12271  13A2  0022               	banksel	269	;# 
 12272  13A3  140D               	bsf	13,0	;# 
 12273  13A4  1000               	bcf	0,0	;# 
 12274  13A5  0008               	return
 12275  13A6                     __end_of_MTOUCH_CVD_ScanA_0:
 12276                           
 12277                           	psect	text72
 12278  1364                     __ptext72:	
 12279 ;; *************** function _MTOUCH_CVD_ScanA_9 *****************
 12280 ;; Defined at:
 12281 ;;		line 1193 in file "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
 12282 ;; Parameters:    Size  Location     Type
 12283 ;;		None
 12284 ;; Auto vars:     Size  Location     Type
 12285 ;;		None
 12286 ;; Return value:  Size  Location     Type
 12287 ;;                  1    wreg      void 
 12288 ;; Registers used:
 12289 ;;		wreg
 12290 ;; Tracked objects:
 12291 ;;		On entry : 1F/1
 12292 ;;		On exit  : 0/0
 12293 ;;		Unchanged: 0/0
 12294 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12295 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12296 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12297 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12298 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12299 ;;Total ram usage:        0 bytes
 12300 ;; Hardware stack levels used: 1
 12301 ;; Hardware stack levels required when called: 4
 12302 ;; This function calls:
 12303 ;;		Nothing
 12304 ;; This function is called by:
 12305 ;;		_Sensor_Acq_ExecuteScan
 12306 ;; This function uses a non-reentrant model
 12307 ;;
 12308                           
 12309                           
 12310                           ;psect for function _MTOUCH_CVD_ScanA_9
 12311  1364                     _MTOUCH_CVD_ScanA_9:
 12312                           
 12313                           ;incstack = 0
 12314                           ; Regs used in _MTOUCH_CVD_ScanA_9: [wreg]
 12315  1364  0022               	banksel	268	;# 
 12316  1365  148C               	bsf	12,1	;# 
 12317  1366  0021               	banksel	157	;# 
 12318  1367  3005               	movlw	5	;# 
 12319  1368  009D               	movwf	29	;# 
 12320                           
 12321                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 1205:     _delay(32u);
 12322  1369  300A               	movlw	10
 12323  136A                     u6587:
 12324  136A  0B89               	decfsz	9,f
 12325  136B  2B6A               	goto	u6587
 12326  136C  3200               	nop2
 12327  136D  308C               	movlw	140	;# 
 12328  136E  0084               	movwf	4	;# 
 12329  136F  3000               	movlw	0	;# 
 12330  1370  0085               	movwf	5	;# 
 12331  1371  300C               	movlw	12	;# 
 12332  1372  0086               	movwf	6	;# 
 12333  1373  3001               	movlw	1	;# 
 12334  1374  0087               	movwf	7	;# 
 12335  1375  3001               	movlw	1	;# 
 12336  1376  1400               	bsf	0,0	;# 
 12337                           
 12338                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 1223:     _delay(0u);
 12339  1377  009D               	movwf	29	;# 
 12340  1378  1681               	bsf	1,5	;# 
 12341                           
 12342                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 1229:     _delay(16u);
 12343  1379  3005               	movlw	5
 12344  137A                     u6597:
 12345  137A  0B89               	decfsz	9,f
 12346  137B  2B7A               	goto	u6597
 12347  137C  0000               	nop
 12348  137D  0021               	banksel	157	;# 
 12349  137E  149D               	bsf	29,1	;# 
 12350                           
 12351                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 1236:     _delay(3u);
 12352  137F  3200               	nop2	;2 cycle nop
 12353  1380  0000               	nop
 12354  1381  0022               	banksel	268	;# 
 12355  1382  140C               	bsf	12,0	;# 
 12356  1383  1000               	bcf	0,0	;# 
 12357  1384  0008               	return
 12358  1385                     __end_of_MTOUCH_CVD_ScanA_9:
 12359                           
 12360                           	psect	text73
 12361  106A                     __ptext73:	
 12362 ;; *************** function _MTOUCH_Random *****************
 12363 ;; Defined at:
 12364 ;;		line 66 in file "mcc_generated_files/mtouch/mtouch_random.c"
 12365 ;; Parameters:    Size  Location     Type
 12366 ;;		None
 12367 ;; Auto vars:     Size  Location     Type
 12368 ;;		None
 12369 ;; Return value:  Size  Location     Type
 12370 ;;                  1    wreg      unsigned char 
 12371 ;; Registers used:
 12372 ;;		wreg, status,2, status,0
 12373 ;; Tracked objects:
 12374 ;;		On entry : 1F/0
 12375 ;;		On exit  : 1F/0
 12376 ;;		Unchanged: 1F/0
 12377 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12378 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12379 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12380 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12381 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12382 ;;Total ram usage:        1 bytes
 12383 ;; Hardware stack levels used: 1
 12384 ;; Hardware stack levels required when called: 4
 12385 ;; This function calls:
 12386 ;;		Nothing
 12387 ;; This function is called by:
 12388 ;;		_Sensor_Acq_ExecutePacket
 12389 ;; This function uses a non-reentrant model
 12390 ;;
 12391                           
 12392                           
 12393                           ;psect for function _MTOUCH_Random
 12394  106A                     _MTOUCH_Random:
 12395                           
 12396                           ;mcc_generated_files/mtouch/mtouch_random.c: 68:     static MTOUCH_RANDOM_t seed = (MTOU
      +                          CH_RANDOM_t)0;;mcc_generated_files/mtouch/mtouch_random.c: 70:     if ((seed & (MTOUCH_R
      +                          ANDOM_t)1) != (MTOUCH_RANDOM_t)0)
 12397                           
 12398                           ;incstack = 0
 12399                           ; Regs used in _MTOUCH_Random: [wreg+status,2+status,0]
 12400  106A  1C7A               	btfss	MTOUCH_Random@seed,0
 12401  106B  286E               	goto	l5344
 12402                           
 12403                           ;mcc_generated_files/mtouch/mtouch_random.c: 71:     {;mcc_generated_files/mtouch/mtouch
      +                          _random.c: 73:         seed = seed >> (uint8_t)1;
 12404  106C  367A               	lsrf	MTOUCH_Random@seed,w
 12405  106D  2874               	goto	L7
 12406  106E                     l5344:	
 12407                           ;mcc_generated_files/mtouch/mtouch_random.c: 74:     }
 12408                           
 12409                           
 12410                           ;mcc_generated_files/mtouch/mtouch_random.c: 76:     {;mcc_generated_files/mtouch/mtouch
      +                          _random.c: 81:         seed = seed >> (uint8_t)1;
 12411  106E  367A               	lsrf	MTOUCH_Random@seed,w
 12412  106F  00F2               	movwf	??_MTOUCH_Random
 12413  1070  0872               	movf	??_MTOUCH_Random,w
 12414  1071  00FA               	movwf	MTOUCH_Random@seed
 12415                           
 12416                           ;mcc_generated_files/mtouch/mtouch_random.c: 82:         seed = seed ^ (MTOUCH_RANDOM_t)
      +                          0xB4;
 12417  1072  087A               	movf	MTOUCH_Random@seed,w
 12418  1073  3AB4               	xorlw	180
 12419  1074                     L7:
 12420  1074  00F2               	movwf	??_MTOUCH_Random
 12421  1075  0872               	movf	??_MTOUCH_Random,w
 12422  1076  00FA               	movwf	MTOUCH_Random@seed
 12423                           
 12424                           ;mcc_generated_files/mtouch/mtouch_random.c: 85:     return (uint8_t)seed & 0x0F;
 12425  1077  087A               	movf	MTOUCH_Random@seed,w
 12426  1078  390F               	andlw	15
 12427  1079  0008               	return
 12428  107A                     __end_of_MTOUCH_Random:
 12429                           
 12430                           	psect	text74
 12431  100D                     __ptext74:	
 12432 ;; *************** function _MTOUCH_Delay *****************
 12433 ;; Defined at:
 12434 ;;		line 371 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
 12435 ;; Parameters:    Size  Location     Type
 12436 ;;		None
 12437 ;; Auto vars:     Size  Location     Type
 12438 ;;  i               1    3[COMMON] unsigned char 
 12439 ;; Return value:  Size  Location     Type
 12440 ;;                  1    wreg      void 
 12441 ;; Registers used:
 12442 ;;		wreg, status,2, status,0
 12443 ;; Tracked objects:
 12444 ;;		On entry : 1F/0
 12445 ;;		On exit  : 1E/0
 12446 ;;		Unchanged: 0/0
 12447 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12448 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12449 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12450 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12451 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12452 ;;Total ram usage:        2 bytes
 12453 ;; Hardware stack levels used: 1
 12454 ;; Hardware stack levels required when called: 4
 12455 ;; This function calls:
 12456 ;;		Nothing
 12457 ;; This function is called by:
 12458 ;;		_Sensor_Acq_ExecutePacket
 12459 ;; This function uses a non-reentrant model
 12460 ;;
 12461                           
 12462                           
 12463                           ;psect for function _MTOUCH_Delay
 12464  100D                     _MTOUCH_Delay:
 12465                           
 12466                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 373:     for(uint8_t i = sample_delay;i>0;i
      +                          --)
 12467                           
 12468                           ;incstack = 0
 12469                           ; Regs used in _MTOUCH_Delay: [wreg+status,2+status,0]
 12470  100D  0021               	movlb	1	; select bank1
 12471  100E  084B               	movf	_sample_delay^(0+128),w
 12472  100F  00F2               	movwf	??_MTOUCH_Delay
 12473  1010  0872               	movf	??_MTOUCH_Delay,w
 12474  1011  00F3               	movwf	MTOUCH_Delay@i
 12475  1012                     L8:
 12476  1012  0873               	movf	MTOUCH_Delay@i,w
 12477  1013  1903               	btfsc	3,2
 12478  1014  0008               	return
 12479                           
 12480                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 374:     { }
 12481  1015  3001               	movlw	1
 12482  1016  02F3               	subwf	MTOUCH_Delay@i,f
 12483  1017  2812               	goto	L8
 12484  1018                     __end_of_MTOUCH_Delay:
 12485                           
 12486                           	psect	text75
 12487  115E                     __ptext75:	
 12488 ;; *************** function _MTOUCH_Initialize *****************
 12489 ;; Defined at:
 12490 ;;		line 101 in file "mcc_generated_files/mtouch/mtouch.c"
 12491 ;; Parameters:    Size  Location     Type
 12492 ;;		None
 12493 ;; Auto vars:     Size  Location     Type
 12494 ;;		None
 12495 ;; Return value:  Size  Location     Type
 12496 ;;                  1    wreg      void 
 12497 ;; Registers used:
 12498 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12499 ;; Tracked objects:
 12500 ;;		On entry : 1F/1
 12501 ;;		On exit  : 1F/1
 12502 ;;		Unchanged: 0/0
 12503 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12504 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12505 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12506 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12507 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12508 ;;Total ram usage:        0 bytes
 12509 ;; Hardware stack levels used: 1
 12510 ;; Hardware stack levels required when called: 8
 12511 ;; This function calls:
 12512 ;;		_MTOUCH_Button_InitializeAll
 12513 ;;		_MTOUCH_Sensor_InitializeAll
 12514 ;;		_MTOUCH_Sensor_Sampled_ResetAll
 12515 ;;		_MTOUCH_Sensor_Scan_Initialize
 12516 ;;		_MTOUCH_Slider_InitializeAll
 12517 ;;		_TMR1_SetInterruptHandler
 12518 ;; This function is called by:
 12519 ;;		_MTOUCH_Service_Mainloop
 12520 ;;		_SYSTEM_Initialize
 12521 ;; This function uses a non-reentrant model
 12522 ;;
 12523                           
 12524                           
 12525                           ;psect for function _MTOUCH_Initialize
 12526  115E                     _MTOUCH_Initialize:
 12527                           
 12528                           ;mcc_generated_files/mtouch/mtouch.c: 103:     MTOUCH_Sensor_InitializeAll();
 12529                           
 12530                           ;incstack = 0
 12531                           ; Regs used in _MTOUCH_Initialize: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12532  115E  3190  205B  3191   	fcall	_MTOUCH_Sensor_InitializeAll
 12533                           
 12534                           ;mcc_generated_files/mtouch/mtouch.c: 104:     MTOUCH_Button_InitializeAll();
 12535  1161  3192  220C  3191   	fcall	_MTOUCH_Button_InitializeAll
 12536                           
 12537                           ;mcc_generated_files/mtouch/mtouch.c: 105:     MTOUCH_Slider_InitializeAll();
 12538  1164  3190  2030  3191   	fcall	_MTOUCH_Slider_InitializeAll
 12539                           
 12540                           ;mcc_generated_files/mtouch/mtouch.c: 106:     MTOUCH_Sensor_Sampled_ResetAll();
 12541  1167  3192  2229  3191   	fcall	_MTOUCH_Sensor_Sampled_ResetAll
 12542                           
 12543                           ;mcc_generated_files/mtouch/mtouch.c: 107:     MTOUCH_Sensor_Scan_Initialize();
 12544  116A  319F  27BB  3191   	fcall	_MTOUCH_Sensor_Scan_Initialize
 12545                           
 12546                           ;mcc_generated_files/mtouch/mtouch.c: 108:     TMR1_SetInterruptHandler(MTOUCH_ScanSched
      +                          uler);
 12547  116D  3004               	movlw	low _MTOUCH_ScanScheduler
 12548  116E  00F2               	movwf	TMR1_SetInterruptHandler@InterruptHandler
 12549  116F  3010               	movlw	high _MTOUCH_ScanScheduler
 12550  1170  00F3               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1
 12551  1171  319F  27C0         	fcall	_TMR1_SetInterruptHandler
 12552  1173  0008               	return
 12553  1174                     __end_of_MTOUCH_Initialize:
 12554                           
 12555                           	psect	text76
 12556  1FC0                     __ptext76:	
 12557 ;; *************** function _TMR1_SetInterruptHandler *****************
 12558 ;; Defined at:
 12559 ;;		line 171 in file "mcc_generated_files/tmr1.c"
 12560 ;; Parameters:    Size  Location     Type
 12561 ;;  InterruptHan    2    2[COMMON] PTR FTN()void 
 12562 ;;		 -> TMR1_DefaultInterruptHandler(1), MTOUCH_ScanScheduler(1), 
 12563 ;; Auto vars:     Size  Location     Type
 12564 ;;		None
 12565 ;; Return value:  Size  Location     Type
 12566 ;;                  1    wreg      void 
 12567 ;; Registers used:
 12568 ;;		wreg
 12569 ;; Tracked objects:
 12570 ;;		On entry : 1F/1
 12571 ;;		On exit  : 1F/1
 12572 ;;		Unchanged: 0/0
 12573 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12574 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12575 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12576 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12577 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12578 ;;Total ram usage:        2 bytes
 12579 ;; Hardware stack levels used: 1
 12580 ;; Hardware stack levels required when called: 4
 12581 ;; This function calls:
 12582 ;;		Nothing
 12583 ;; This function is called by:
 12584 ;;		_MTOUCH_Initialize
 12585 ;;		_TMR1_Initialize
 12586 ;; This function uses a non-reentrant model
 12587 ;;
 12588                           
 12589                           
 12590                           ;psect for function _TMR1_SetInterruptHandler
 12591  1FC0                     _TMR1_SetInterruptHandler:
 12592                           
 12593                           ;mcc_generated_files/tmr1.c: 172:     TMR1_InterruptHandler = InterruptHandler;
 12594                           
 12595                           ;incstack = 0
 12596                           ; Regs used in _TMR1_SetInterruptHandler: [wreg]
 12597  1FC0  0873               	movf	TMR1_SetInterruptHandler@InterruptHandler+1,w
 12598  1FC1  00DD               	movwf	(_TMR1_InterruptHandler+1)^(0+128)
 12599  1FC2  0872               	movf	TMR1_SetInterruptHandler@InterruptHandler,w
 12600  1FC3  00DC               	movwf	_TMR1_InterruptHandler^(0+128)
 12601  1FC4  0008               	return
 12602  1FC5                     __end_of_TMR1_SetInterruptHandler:
 12603                           
 12604                           	psect	text77
 12605  1030                     __ptext77:	
 12606 ;; *************** function _MTOUCH_Slider_InitializeAll *****************
 12607 ;; Defined at:
 12608 ;;		line 976 in file "mcc_generated_files/mtouch/mtouch_slider.c"
 12609 ;; Parameters:    Size  Location     Type
 12610 ;;		None
 12611 ;; Auto vars:     Size  Location     Type
 12612 ;;  slider          1    6[COMMON] enum E2918
 12613 ;; Return value:  Size  Location     Type
 12614 ;;                  1    wreg      void 
 12615 ;; Registers used:
 12616 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12617 ;; Tracked objects:
 12618 ;;		On entry : 1F/0
 12619 ;;		On exit  : 0/0
 12620 ;;		Unchanged: 0/0
 12621 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12622 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12623 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12624 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12625 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12626 ;;Total ram usage:        2 bytes
 12627 ;; Hardware stack levels used: 1
 12628 ;; Hardware stack levels required when called: 5
 12629 ;; This function calls:
 12630 ;;		_Slider_Initialize
 12631 ;; This function is called by:
 12632 ;;		_MTOUCH_Initialize
 12633 ;; This function uses a non-reentrant model
 12634 ;;
 12635                           
 12636                           
 12637                           ;psect for function _MTOUCH_Slider_InitializeAll
 12638  1030                     _MTOUCH_Slider_InitializeAll:
 12639                           
 12640                           ;mcc_generated_files/mtouch/mtouch_slider.c: 978:     enum mtouch_slider_names slider;;m
      +                          cc_generated_files/mtouch/mtouch_slider.c: 980:     for (slider = 0u; slider < 2u; slide
      +                          r++)
 12641                           
 12642                           ;incstack = 0
 12643                           ; Regs used in _MTOUCH_Slider_InitializeAll: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
 12644  1030  01F6               	clrf	MTOUCH_Slider_InitializeAll@slider
 12645  1031                     l6158:
 12646                           
 12647                           ;mcc_generated_files/mtouch/mtouch_slider.c: 981:     {;mcc_generated_files/mtouch/mtouc
      +                          h_slider.c: 982:         Slider_Initialize(slider);
 12648  1031  0876               	movf	MTOUCH_Slider_InitializeAll@slider,w
 12649  1032  3197  277F  3190   	fcall	_Slider_Initialize
 12650                           
 12651                           ;mcc_generated_files/mtouch/mtouch_slider.c: 983:     }
 12652  1035  3001               	movlw	1
 12653  1036  00F5               	movwf	??_MTOUCH_Slider_InitializeAll
 12654  1037  0875               	movf	??_MTOUCH_Slider_InitializeAll,w
 12655  1038  07F6               	addwf	MTOUCH_Slider_InitializeAll@slider,f
 12656  1039  3002               	movlw	2
 12657  103A  0276               	subwf	MTOUCH_Slider_InitializeAll@slider,w
 12658  103B  1803               	btfsc	3,0
 12659  103C  0008               	return
 12660  103D  2831               	goto	l6158
 12661  103E                     __end_of_MTOUCH_Slider_InitializeAll:
 12662                           
 12663                           	psect	text78
 12664  177F                     __ptext78:	
 12665 ;; *************** function _Slider_Initialize *****************
 12666 ;; Defined at:
 12667 ;;		line 806 in file "mcc_generated_files/mtouch/mtouch_slider.c"
 12668 ;; Parameters:    Size  Location     Type
 12669 ;;  sliderName      1    wreg     enum E2918
 12670 ;; Auto vars:     Size  Location     Type
 12671 ;;  sliderName      1    3[COMMON] enum E2918
 12672 ;;  slider          1    4[COMMON] PTR struct .
 12673 ;;		 -> mtouch_slider(34), 
 12674 ;; Return value:  Size  Location     Type
 12675 ;;                  1    wreg      void 
 12676 ;; Registers used:
 12677 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 12678 ;; Tracked objects:
 12679 ;;		On entry : 0/0
 12680 ;;		On exit  : 0/0
 12681 ;;		Unchanged: 0/0
 12682 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12683 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12684 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12685 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12686 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12687 ;;Total ram usage:        3 bytes
 12688 ;; Hardware stack levels used: 1
 12689 ;; Hardware stack levels required when called: 4
 12690 ;; This function calls:
 12691 ;;		Nothing
 12692 ;; This function is called by:
 12693 ;;		_MTOUCH_Slider_InitializeAll
 12694 ;; This function uses a non-reentrant model
 12695 ;;
 12696                           
 12697                           
 12698                           ;psect for function _Slider_Initialize
 12699  177F                     _Slider_Initialize:
 12700                           
 12701                           ;incstack = 0
 12702                           ; Regs used in _Slider_Initialize: [wreg+fsr1l+fsr1h+status,2+status,0]
 12703                           ;Slider_Initialize@sliderName stored from wreg
 12704  177F  00F3               	movwf	Slider_Initialize@sliderName
 12705                           
 12706                           ;mcc_generated_files/mtouch/mtouch_slider.c: 806: static void Slider_Initialize(enum mto
      +                          uch_slider_names sliderName);mcc_generated_files/mtouch/mtouch_slider.c: 807: {;mcc_gene
      +                          rated_files/mtouch/mtouch_slider.c: 808:     if (sliderName < 2u)
 12707  1780  3002               	movlw	2
 12708  1781  0273               	subwf	Slider_Initialize@sliderName,w
 12709  1782  1803               	skipnc
 12710  1783  0008               	return
 12711                           
 12712                           ;mcc_generated_files/mtouch/mtouch_slider.c: 809:     {;mcc_generated_files/mtouch/mtouc
      +                          h_slider.c: 810:         mtouch_slider_t* slider = &mtouch_slider[sliderName];
 12713  1784  0E73               	swapf	Slider_Initialize@sliderName,w
 12714  1785  39F0               	andlw	240
 12715  1786  0773               	addwf	Slider_Initialize@sliderName,w
 12716  1787  3E20               	addlw	(low (_mtouch_slider| (0+256)))& (0+255)
 12717  1788  00F2               	movwf	??_Slider_Initialize
 12718  1789  0872               	movf	??_Slider_Initialize,w
 12719  178A  00F4               	movwf	Slider_Initialize@slider
 12720                           
 12721                           ;mcc_generated_files/mtouch/mtouch_slider.c: 813:         slider->sliderStatus = MTOUCH_
      +                          SLIDER_STATE_initializing;
 12722  178B  0874               	movf	Slider_Initialize@slider,w
 12723  178C  3E10               	addlw	16
 12724  178D  0086               	movwf	6
 12725  178E  3001               	movlw	1	; select bank2/3
 12726  178F  0087               	movwf	7
 12727  1790  0181               	clrf	1
 12728                           
 12729                           ;mcc_generated_files/mtouch/mtouch_slider.c: 815:         slider->rightHysteresis = 0u;
 12730  1791  0874               	movf	Slider_Initialize@slider,w
 12731  1792  3E08               	addlw	8
 12732  1793  0086               	movwf	6
 12733  1794  3001               	movlw	1	; select bank2/3
 12734  1795  0087               	movwf	7
 12735  1796  0181               	clrf	1
 12736                           
 12737                           ;mcc_generated_files/mtouch/mtouch_slider.c: 816:         slider->leftHysteresis = slide
      +                          r->positionHysteresis;
 12738  1797  0874               	movf	Slider_Initialize@slider,w
 12739  1798  3E05               	addlw	5
 12740  1799  0086               	movwf	6
 12741  179A  3001               	movlw	1	; select bank2/3
 12742  179B  0087               	movwf	7
 12743  179C  0801               	movf	1,w
 12744  179D  00F2               	movwf	??_Slider_Initialize
 12745  179E  0874               	movf	Slider_Initialize@slider,w
 12746  179F  3E09               	addlw	9
 12747  17A0  0086               	movwf	6
 12748  17A1  3001               	movlw	1	; select bank2/3
 12749  17A2  0087               	movwf	7
 12750  17A3  0872               	movf	??_Slider_Initialize,w
 12751  17A4  0081               	movwf	1
 12752                           
 12753                           ;mcc_generated_files/mtouch/mtouch_slider.c: 818:         slider->rawPosition = 0u;
 12754  17A5  0874               	movf	Slider_Initialize@slider,w
 12755  17A6  3E0A               	addlw	10
 12756  17A7  0086               	movwf	6
 12757  17A8  3001               	movlw	1	; select bank2/3
 12758  17A9  0087               	movwf	7
 12759  17AA  3000               	movlw	0
 12760  17AB  3FC0               	movwi [0]fsr1
 12761  17AC  3FC1               	movwi [1]fsr1
 12762                           
 12763                           ;mcc_generated_files/mtouch/mtouch_slider.c: 819:         slider->sliderPosition = 0u;
 12764  17AD  0874               	movf	Slider_Initialize@slider,w
 12765  17AE  3E0C               	addlw	12
 12766  17AF  0086               	movwf	6
 12767  17B0  3001               	movlw	1	; select bank2/3
 12768  17B1  0087               	movwf	7
 12769  17B2  3000               	movlw	0
 12770  17B3  3FC0               	movwi [0]fsr1
 12771  17B4  3FC1               	movwi [1]fsr1
 12772                           
 12773                           ;mcc_generated_files/mtouch/mtouch_slider.c: 820:         slider->contactSize = 0u;
 12774  17B5  0874               	movf	Slider_Initialize@slider,w
 12775  17B6  3E0E               	addlw	14
 12776  17B7  0086               	movwf	6
 12777  17B8  3001               	movlw	1	; select bank2/3
 12778  17B9  0087               	movwf	7
 12779  17BA  3000               	movlw	0
 12780  17BB  3FC0               	movwi [0]fsr1
 12781  17BC  3FC1               	movwi [1]fsr1
 12782  17BD  0008               	return
 12783  17BE                     __end_of_Slider_Initialize:
 12784                           
 12785                           	psect	text79
 12786  1FBB                     __ptext79:	
 12787 ;; *************** function _MTOUCH_Sensor_Scan_Initialize *****************
 12788 ;; Defined at:
 12789 ;;		line 180 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
 12790 ;; Parameters:    Size  Location     Type
 12791 ;;		None
 12792 ;; Auto vars:     Size  Location     Type
 12793 ;;		None
 12794 ;; Return value:  Size  Location     Type
 12795 ;;                  1    wreg      void 
 12796 ;; Registers used:
 12797 ;;		wreg, status,2
 12798 ;; Tracked objects:
 12799 ;;		On entry : 1F/0
 12800 ;;		On exit  : 1F/1
 12801 ;;		Unchanged: 0/0
 12802 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12803 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12804 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12805 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12806 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12807 ;;Total ram usage:        0 bytes
 12808 ;; Hardware stack levels used: 1
 12809 ;; Hardware stack levels required when called: 4
 12810 ;; This function calls:
 12811 ;;		Nothing
 12812 ;; This function is called by:
 12813 ;;		_MTOUCH_Initialize
 12814 ;;		_Sensor_Acq_ExecutePacket
 12815 ;; This function uses a non-reentrant model
 12816 ;;
 12817                           
 12818                           
 12819                           ;psect for function _MTOUCH_Sensor_Scan_Initialize
 12820  1FBB                     _MTOUCH_Sensor_Scan_Initialize:
 12821                           
 12822                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 183:     ADCON0 = (uint8_t)0;
 12823                           
 12824                           ;incstack = 0
 12825                           ; Regs used in _MTOUCH_Sensor_Scan_Initialize: [wreg+status,2]
 12826  1FBB  0021               	movlb	1	; select bank1
 12827  1FBC  019D               	clrf	29	;volatile
 12828                           
 12829                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 184:     ADCON1 = (uint8_t)( 0x1<<7 | 0x2<<
      +                          4 | 0x0 );
 12830  1FBD  30A0               	movlw	160
 12831  1FBE  009E               	movwf	30	;volatile
 12832  1FBF  0008               	return
 12833  1FC0                     __end_of_MTOUCH_Sensor_Scan_Initialize:
 12834                           
 12835                           	psect	text80
 12836  1229                     __ptext80:	
 12837 ;; *************** function _MTOUCH_Sensor_Sampled_ResetAll *****************
 12838 ;; Defined at:
 12839 ;;		line 555 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
 12840 ;; Parameters:    Size  Location     Type
 12841 ;;		None
 12842 ;; Auto vars:     Size  Location     Type
 12843 ;;  sensor          2    2[BANK0 ] PTR struct .
 12844 ;;		 -> mtouch_sensor(90), 
 12845 ;; Return value:  Size  Location     Type
 12846 ;;                  1    wreg      void 
 12847 ;; Registers used:
 12848 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12849 ;; Tracked objects:
 12850 ;;		On entry : 0/0
 12851 ;;		On exit  : 1F/0
 12852 ;;		Unchanged: 0/0
 12853 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12854 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12855 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12856 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12857 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12858 ;;Total ram usage:        4 bytes
 12859 ;; Hardware stack levels used: 1
 12860 ;; Hardware stack levels required when called: 5
 12861 ;; This function calls:
 12862 ;;		_Sensor_Sampled_Reset
 12863 ;; This function is called by:
 12864 ;;		_MTOUCH_Initialize
 12865 ;;		_MTOUCH_Service_Mainloop
 12866 ;; This function uses a non-reentrant model
 12867 ;;
 12868                           
 12869                           
 12870                           ;psect for function _MTOUCH_Sensor_Sampled_ResetAll
 12871  1229                     _MTOUCH_Sensor_Sampled_ResetAll:
 12872                           
 12873                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 557:     mtouch_sensor_t* sensor;;mcc_gener
      +                          ated_files/mtouch/mtouch_sensor.c: 558:     for(sensor = &mtouch_sensor[0];sensor<= &mto
      +                          uch_sensor[10u -1];sensor++)
 12874                           
 12875                           ;incstack = 0
 12876                           ; Regs used in _MTOUCH_Sensor_Sampled_ResetAll: [wreg+fsr1l+fsr1h+status,2+status,0+pcla
      +                          th+cstack]
 12877  1229  30E2               	movlw	226
 12878  122A  0020               	movlb	0	; select bank0
 12879  122B  00A2               	movwf	MTOUCH_Sensor_Sampled_ResetAll@sensor
 12880  122C  3022               	movlw	34
 12881  122D  00A3               	movwf	MTOUCH_Sensor_Sampled_ResetAll@sensor+1
 12882  122E                     L9:
 12883  122E  3033               	movlw	51
 12884  122F  00A0               	movwf	??_MTOUCH_Sensor_Sampled_ResetAll
 12885  1230  3023               	movlw	35
 12886  1231  00A1               	movwf	??_MTOUCH_Sensor_Sampled_ResetAll+1
 12887  1232  0823               	movf	MTOUCH_Sensor_Sampled_ResetAll@sensor+1,w
 12888  1233  0221               	subwf	??_MTOUCH_Sensor_Sampled_ResetAll+1,w
 12889  1234  1D03               	skipz
 12890  1235  2A38               	goto	u5525
 12891  1236  0822               	movf	MTOUCH_Sensor_Sampled_ResetAll@sensor,w
 12892  1237  0220               	subwf	??_MTOUCH_Sensor_Sampled_ResetAll,w
 12893  1238                     u5525:
 12894  1238  1C03               	btfss	3,0
 12895  1239  0008               	return
 12896                           
 12897                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 559:     {;mcc_generated_files/mtouch/mtouc
      +                          h_sensor.c: 560:         Sensor_Sampled_Reset(sensor);
 12898  123A  0823               	movf	MTOUCH_Sensor_Sampled_ResetAll@sensor+1,w
 12899  123B  00F9               	movwf	Sensor_Sampled_Reset@sensor+1
 12900  123C  0822               	movf	MTOUCH_Sensor_Sampled_ResetAll@sensor,w
 12901  123D  00F8               	movwf	Sensor_Sampled_Reset@sensor
 12902  123E  319F  27D5  3192   	fcall	_Sensor_Sampled_Reset
 12903                           
 12904                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 561:     }
 12905  1241  3009               	movlw	9
 12906  1242  07A2               	addwf	MTOUCH_Sensor_Sampled_ResetAll@sensor,f
 12907  1243  3000               	movlw	0
 12908  1244  3DA3               	addwfc	MTOUCH_Sensor_Sampled_ResetAll@sensor+1,f
 12909  1245  2A2E               	goto	L9
 12910  1246                     __end_of_MTOUCH_Sensor_Sampled_ResetAll:
 12911                           
 12912                           	psect	text81
 12913  105B                     __ptext81:	
 12914 ;; *************** function _MTOUCH_Sensor_InitializeAll *****************
 12915 ;; Defined at:
 12916 ;;		line 165 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
 12917 ;; Parameters:    Size  Location     Type
 12918 ;;		None
 12919 ;; Auto vars:     Size  Location     Type
 12920 ;;  sensor          1   10[BANK0 ] enum E2707
 12921 ;; Return value:  Size  Location     Type
 12922 ;;                  1    wreg      void 
 12923 ;; Registers used:
 12924 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12925 ;; Tracked objects:
 12926 ;;		On entry : 1F/1
 12927 ;;		On exit  : 1F/0
 12928 ;;		Unchanged: 0/0
 12929 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12930 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12931 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12932 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12933 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12934 ;;Total ram usage:        2 bytes
 12935 ;; Hardware stack levels used: 1
 12936 ;; Hardware stack levels required when called: 7
 12937 ;; This function calls:
 12938 ;;		_MTOUCH_Sensor_Initialize
 12939 ;; This function is called by:
 12940 ;;		_MTOUCH_Initialize
 12941 ;; This function uses a non-reentrant model
 12942 ;;
 12943                           
 12944                           
 12945                           ;psect for function _MTOUCH_Sensor_InitializeAll
 12946  105B                     _MTOUCH_Sensor_InitializeAll:
 12947                           
 12948                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 167:     enum mtouch_sensor_names sensor;;m
      +                          cc_generated_files/mtouch/mtouch_sensor.c: 168:     for (sensor = 0; sensor < 10u; senso
      +                          r++)
 12949                           
 12950                           ;incstack = 0
 12951                           ; Regs used in _MTOUCH_Sensor_InitializeAll: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
 12952  105B  0020               	movlb	0	; select bank0
 12953  105C  01AA               	clrf	MTOUCH_Sensor_InitializeAll@sensor
 12954  105D                     l6132:
 12955                           
 12956                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 169:     {;mcc_generated_files/mtouch/mtouc
      +                          h_sensor.c: 170:         MTOUCH_Sensor_Initialize(sensor);
 12957  105D  082A               	movf	MTOUCH_Sensor_InitializeAll@sensor,w
 12958  105E  3192  2282  3190   	fcall	_MTOUCH_Sensor_Initialize
 12959                           
 12960                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 171:     }
 12961  1061  3001               	movlw	1
 12962  1062  00A9               	movwf	??_MTOUCH_Sensor_InitializeAll
 12963  1063  0829               	movf	??_MTOUCH_Sensor_InitializeAll,w
 12964  1064  07AA               	addwf	MTOUCH_Sensor_InitializeAll@sensor,f
 12965  1065  300A               	movlw	10
 12966  1066  022A               	subwf	MTOUCH_Sensor_InitializeAll@sensor,w
 12967  1067  1803               	btfsc	3,0
 12968  1068  0008               	return
 12969  1069  285D               	goto	l6132
 12970  106A                     __end_of_MTOUCH_Sensor_InitializeAll:
 12971                           
 12972                           	psect	text82
 12973  1282                     __ptext82:	
 12974 ;; *************** function _MTOUCH_Sensor_Initialize *****************
 12975 ;; Defined at:
 12976 ;;		line 151 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
 12977 ;; Parameters:    Size  Location     Type
 12978 ;;  sensor          1    wreg     enum E2707
 12979 ;; Auto vars:     Size  Location     Type
 12980 ;;  sensor          1    8[BANK0 ] enum E2707
 12981 ;; Return value:  Size  Location     Type
 12982 ;;                  1    wreg      enum E2718
 12983 ;; Registers used:
 12984 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12985 ;; Tracked objects:
 12986 ;;		On entry : 1F/0
 12987 ;;		On exit  : 1F/0
 12988 ;;		Unchanged: 0/0
 12989 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12990 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12991 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12992 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12993 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12994 ;;Total ram usage:        5 bytes
 12995 ;; Hardware stack levels used: 1
 12996 ;; Hardware stack levels required when called: 6
 12997 ;; This function calls:
 12998 ;;		_MTOUCH_Sensor_Enable
 12999 ;;		_Sensor_Sampled_Reset
 13000 ;;		___wmul
 13001 ;; This function is called by:
 13002 ;;		_MTOUCH_Sensor_InitializeAll
 13003 ;; This function uses a non-reentrant model
 13004 ;;
 13005                           
 13006                           
 13007                           ;psect for function _MTOUCH_Sensor_Initialize
 13008  1282                     _MTOUCH_Sensor_Initialize:
 13009                           
 13010                           ;incstack = 0
 13011                           ; Regs used in _MTOUCH_Sensor_Initialize: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cst
      +                          ack]
 13012                           ;MTOUCH_Sensor_Initialize@sensor stored from wreg
 13013  1282  00A8               	movwf	MTOUCH_Sensor_Initialize@sensor
 13014                           
 13015                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 151: enum mtouch_sensor_error MTOUCH_Sensor
      +                          _Initialize(enum mtouch_sensor_names sensor);mcc_generated_files/mtouch/mtouch_sensor.c:
      +                           152: {;mcc_generated_files/mtouch/mtouch_sensor.c: 153:     MTOUCH_Sensor_Enable(sensor
      +                          );
 13016  1283  0828               	movf	MTOUCH_Sensor_Initialize@sensor,w
 13017  1284  3192  2264  3192   	fcall	_MTOUCH_Sensor_Enable
 13018                           
 13019                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 154:     Sensor_Sampled_Reset(&mtouch_senso
      +                          r[sensor]);
 13020  1287  0828               	movf	MTOUCH_Sensor_Initialize@sensor,w
 13021  1288  00A4               	movwf	??_MTOUCH_Sensor_Initialize
 13022  1289  01A5               	clrf	??_MTOUCH_Sensor_Initialize+1
 13023  128A  0824               	movf	??_MTOUCH_Sensor_Initialize,w
 13024  128B  00F2               	movwf	___wmul@multiplier
 13025  128C  0825               	movf	??_MTOUCH_Sensor_Initialize+1,w
 13026  128D  00F3               	movwf	___wmul@multiplier+1
 13027  128E  3009               	movlw	9
 13028  128F  00F4               	movwf	___wmul@multiplicand
 13029  1290  3000               	movlw	0
 13030  1291  00F5               	movwf	___wmul@multiplicand+1
 13031  1292  3188  2000  3192   	fcall	___wmul
 13032  1295  30E2               	movlw	226
 13033  1296  00A6               	movwf	??_MTOUCH_Sensor_Initialize+2
 13034  1297  3022               	movlw	34
 13035  1298  00A7               	movwf	??_MTOUCH_Sensor_Initialize+3
 13036  1299  0872               	movf	?___wmul,w
 13037  129A  0726               	addwf	??_MTOUCH_Sensor_Initialize+2,w
 13038  129B  00F8               	movwf	Sensor_Sampled_Reset@sensor
 13039  129C  0873               	movf	?___wmul+1,w
 13040  129D  3D27               	addwfc	??_MTOUCH_Sensor_Initialize+3,w
 13041  129E  00F9               	movwf	Sensor_Sampled_Reset@sensor+1
 13042  129F  319F  27D5         	fcall	_Sensor_Sampled_Reset
 13043  12A1  0008               	return
 13044  12A2                     __end_of_MTOUCH_Sensor_Initialize:
 13045                           
 13046                           	psect	text83
 13047  1FD5                     __ptext83:	
 13048 ;; *************** function _Sensor_Sampled_Reset *****************
 13049 ;; Defined at:
 13050 ;;		line 572 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
 13051 ;; Parameters:    Size  Location     Type
 13052 ;;  sensor          2    8[COMMON] PTR struct .
 13053 ;;		 -> mtouch_sensor(90), 
 13054 ;; Auto vars:     Size  Location     Type
 13055 ;;		None
 13056 ;; Return value:  Size  Location     Type
 13057 ;;                  1    wreg      void 
 13058 ;; Registers used:
 13059 ;;		wreg, fsr1l, fsr1h
 13060 ;; Tracked objects:
 13061 ;;		On entry : 1F/0
 13062 ;;		On exit  : 1F/0
 13063 ;;		Unchanged: 1F/0
 13064 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13065 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13066 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13067 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13068 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13069 ;;Total ram usage:        2 bytes
 13070 ;; Hardware stack levels used: 1
 13071 ;; Hardware stack levels required when called: 4
 13072 ;; This function calls:
 13073 ;;		Nothing
 13074 ;; This function is called by:
 13075 ;;		_MTOUCH_Sensor_Initialize
 13076 ;;		_MTOUCH_Sensor_Sampled_ResetAll
 13077 ;; This function uses a non-reentrant model
 13078 ;;
 13079                           
 13080                           
 13081                           ;psect for function _Sensor_Sampled_Reset
 13082  1FD5                     _Sensor_Sampled_Reset:
 13083                           
 13084                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 572: static __attribute__((inline)) void Se
      +                          nsor_Sampled_Reset(mtouch_sensor_t* sensor);mcc_generated_files/mtouch/mtouch_sensor.c: 
      +                          573: {;mcc_generated_files/mtouch/mtouch_sensor.c: 574:     sensor->sampled = 0;
 13085                           
 13086                           ;incstack = 0
 13087                           ; Regs used in _Sensor_Sampled_Reset: [wregfsr1]
 13088  1FD5  0878               	movf	Sensor_Sampled_Reset@sensor,w
 13089  1FD6  0086               	movwf	6
 13090  1FD7  0879               	movf	Sensor_Sampled_Reset@sensor+1,w
 13091  1FD8  0087               	movwf	7
 13092  1FD9  3148               	addfsr 1,8
 13093  1FDA  1081               	bcf	1,1
 13094  1FDB  0008               	return
 13095  1FDC                     __end_of_Sensor_Sampled_Reset:
 13096                           
 13097                           	psect	text84
 13098  1264                     __ptext84:	
 13099 ;; *************** function _MTOUCH_Sensor_Enable *****************
 13100 ;; Defined at:
 13101 ;;		line 489 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
 13102 ;; Parameters:    Size  Location     Type
 13103 ;;  sensor          1    wreg     enum E2707
 13104 ;; Auto vars:     Size  Location     Type
 13105 ;;  sensor          1    8[COMMON] enum E2707
 13106 ;; Return value:  Size  Location     Type
 13107 ;;                  1    wreg      void 
 13108 ;; Registers used:
 13109 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13110 ;; Tracked objects:
 13111 ;;		On entry : 1F/0
 13112 ;;		On exit  : 1F/0
 13113 ;;		Unchanged: 0/0
 13114 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13115 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13116 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13117 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13118 ;;      Totals:         1       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13119 ;;Total ram usage:        5 bytes
 13120 ;; Hardware stack levels used: 1
 13121 ;; Hardware stack levels required when called: 5
 13122 ;; This function calls:
 13123 ;;		___wmul
 13124 ;; This function is called by:
 13125 ;;		_MTOUCH_Sensor_Initialize
 13126 ;;		_Button_Tick_helper
 13127 ;; This function uses a non-reentrant model
 13128 ;;
 13129                           
 13130                           
 13131                           ;psect for function _MTOUCH_Sensor_Enable
 13132  1264                     _MTOUCH_Sensor_Enable:
 13133                           
 13134                           ;incstack = 0
 13135                           ; Regs used in _MTOUCH_Sensor_Enable: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 13136                           ;MTOUCH_Sensor_Enable@sensor stored from wreg
 13137  1264  00F8               	movwf	MTOUCH_Sensor_Enable@sensor
 13138                           
 13139                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 489: void MTOUCH_Sensor_Enable(enum mtouch_
      +                          sensor_names sensor);mcc_generated_files/mtouch/mtouch_sensor.c: 490: {;mcc_generated_fi
      +                          les/mtouch/mtouch_sensor.c: 491:     if(sensor < 10u)
 13140  1265  300A               	movlw	10
 13141  1266  0278               	subwf	MTOUCH_Sensor_Enable@sensor,w
 13142  1267  1803               	skipnc
 13143  1268  0008               	return
 13144                           
 13145                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 492:         mtouch_sensor[sensor].enabled 
      +                          = 1;
 13146  1269  0878               	movf	MTOUCH_Sensor_Enable@sensor,w
 13147  126A  00A0               	movwf	??_MTOUCH_Sensor_Enable
 13148  126B  01A1               	clrf	??_MTOUCH_Sensor_Enable+1
 13149  126C  0820               	movf	??_MTOUCH_Sensor_Enable,w
 13150  126D  00F2               	movwf	___wmul@multiplier
 13151  126E  0821               	movf	??_MTOUCH_Sensor_Enable+1,w
 13152  126F  00F3               	movwf	___wmul@multiplier+1
 13153  1270  3009               	movlw	9
 13154  1271  00F4               	movwf	___wmul@multiplicand
 13155  1272  3000               	movlw	0
 13156  1273  00F5               	movwf	___wmul@multiplicand+1
 13157  1274  3188  2000         	fcall	___wmul
 13158  1276  30EA               	movlw	234
 13159  1277  00A2               	movwf	??_MTOUCH_Sensor_Enable+2
 13160  1278  3022               	movlw	34
 13161  1279  00A3               	movwf	??_MTOUCH_Sensor_Enable+3
 13162  127A  0872               	movf	?___wmul,w
 13163  127B  0722               	addwf	??_MTOUCH_Sensor_Enable+2,w
 13164  127C  0086               	movwf	6
 13165  127D  0873               	movf	?___wmul+1,w
 13166  127E  3D23               	addwfc	??_MTOUCH_Sensor_Enable+3,w
 13167  127F  0087               	movwf	7
 13168  1280  1401               	bsf	1,0
 13169  1281  0008               	return
 13170  1282                     __end_of_MTOUCH_Sensor_Enable:
 13171                           
 13172                           	psect	text85
 13173  120C                     __ptext85:	
 13174 ;; *************** function _MTOUCH_Button_InitializeAll *****************
 13175 ;; Defined at:
 13176 ;;		line 289 in file "mcc_generated_files/mtouch/mtouch_button.c"
 13177 ;; Parameters:    Size  Location     Type
 13178 ;;		None
 13179 ;; Auto vars:     Size  Location     Type
 13180 ;;  button          1    7[BANK0 ] enum E2935
 13181 ;; Return value:  Size  Location     Type
 13182 ;;                  1    wreg      void 
 13183 ;; Registers used:
 13184 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13185 ;; Tracked objects:
 13186 ;;		On entry : 1F/0
 13187 ;;		On exit  : 1F/0
 13188 ;;		Unchanged: 0/0
 13189 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13190 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13191 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13192 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13193 ;;      Totals:         1       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13194 ;;Total ram usage:        2 bytes
 13195 ;; Hardware stack levels used: 1
 13196 ;; Hardware stack levels required when called: 6
 13197 ;; This function calls:
 13198 ;;		_MTOUCH_Button_Initialize
 13199 ;;		_memcpy
 13200 ;; This function is called by:
 13201 ;;		_MTOUCH_Initialize
 13202 ;; This function uses a non-reentrant model
 13203 ;;
 13204                           
 13205                           
 13206                           ;psect for function _MTOUCH_Button_InitializeAll
 13207  120C                     _MTOUCH_Button_InitializeAll:
 13208                           
 13209                           ;mcc_generated_files/mtouch/mtouch_button.c: 291:     enum mtouch_button_names button;;m
      +                          cc_generated_files/mtouch/mtouch_button.c: 293:     memcpy(mtouch_button,mtouch_button_i
      +                          nit,sizeof(mtouch_button_init));
 13210                           
 13211                           ;incstack = 0
 13212                           ; Regs used in _MTOUCH_Button_InitializeAll: [wreg-fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 13213  120C  303C               	movlw	60
 13214  120D  00F2               	movwf	memcpy@d1
 13215  120E  3023               	movlw	35
 13216  120F  00F3               	movwf	memcpy@d1+1
 13217  1210  3050               	movlw	low (_mtouch_button_init| (0+32768))
 13218  1211  00F4               	movwf	memcpy@s1
 13219  1212  3084               	movlw	high (_mtouch_button_init| (0+32768))
 13220  1213  00F5               	movwf	memcpy@s1+1
 13221  1214  30B4               	movlw	180
 13222  1215  00F6               	movwf	memcpy@n
 13223  1216  3000               	movlw	0
 13224  1217  00F7               	movwf	memcpy@n+1
 13225  1218  3196  2688  3192   	fcall	_memcpy
 13226                           
 13227                           ;mcc_generated_files/mtouch/mtouch_button.c: 295:     for (button = 0; button < 10u; but
      +                          ton++)
 13228  121B  01A7               	clrf	MTOUCH_Button_InitializeAll@button
 13229  121C                     l6146:
 13230                           
 13231                           ;mcc_generated_files/mtouch/mtouch_button.c: 296:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 297:         MTOUCH_Button_Initialize(button);
 13232  121C  0827               	movf	MTOUCH_Button_InitializeAll@button,w
 13233  121D  3188  201B  3192   	fcall	_MTOUCH_Button_Initialize
 13234                           
 13235                           ;mcc_generated_files/mtouch/mtouch_button.c: 298:     }
 13236  1220  3001               	movlw	1
 13237  1221  00F9               	movwf	??_MTOUCH_Button_InitializeAll
 13238  1222  0879               	movf	??_MTOUCH_Button_InitializeAll,w
 13239  1223  07A7               	addwf	MTOUCH_Button_InitializeAll@button,f
 13240  1224  300A               	movlw	10
 13241  1225  0227               	subwf	MTOUCH_Button_InitializeAll@button,w
 13242  1226  1803               	btfsc	3,0
 13243  1227  0008               	return
 13244  1228  2A1C               	goto	l6146
 13245  1229                     __end_of_MTOUCH_Button_InitializeAll:
 13246                           
 13247                           	psect	text86
 13248  1688                     __ptext86:	
 13249 ;; *************** function _memcpy *****************
 13250 ;; Defined at:
 13251 ;;		line 4 in file "/Applications/microchip/xc8/v2.32/pic/sources/c99/common/memcpy.c"
 13252 ;; Parameters:    Size  Location     Type
 13253 ;;  d1              2    2[COMMON] PTR void 
 13254 ;;		 -> mtouch_button(180), 
 13255 ;;  s1              2    4[COMMON] PTR const void 
 13256 ;;		 -> mtouch_button_init(180), 
 13257 ;;  n               2    6[COMMON] unsigned int 
 13258 ;; Auto vars:     Size  Location     Type
 13259 ;;  s               2    3[BANK0 ] PTR const unsigned char 
 13260 ;;		 -> mtouch_button_init(180), 
 13261 ;;  d               2    1[BANK0 ] PTR unsigned char 
 13262 ;;		 -> mtouch_button(180), 
 13263 ;;  tmp             1    0[BANK0 ] unsigned char 
 13264 ;; Return value:  Size  Location     Type
 13265 ;;                  2    2[COMMON] PTR void 
 13266 ;; Registers used:
 13267 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
 13268 ;; Tracked objects:
 13269 ;;		On entry : 1F/0
 13270 ;;		On exit  : 1F/0
 13271 ;;		Unchanged: 0/0
 13272 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13273 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13274 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13275 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13276 ;;      Totals:         7       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13277 ;;Total ram usage:       12 bytes
 13278 ;; Hardware stack levels used: 1
 13279 ;; Hardware stack levels required when called: 4
 13280 ;; This function calls:
 13281 ;;		Nothing
 13282 ;; This function is called by:
 13283 ;;		_MTOUCH_Button_InitializeAll
 13284 ;; This function uses a non-reentrant model
 13285 ;;
 13286                           
 13287                           
 13288                           ;psect for function _memcpy
 13289  1688                     _memcpy:
 13290                           
 13291                           ;incstack = 0
 13292                           ; Regs used in _memcpy: [wreg-fsr1h+status,2+status,0+pclath]
 13293  1688  0875               	movf	memcpy@s1+1,w
 13294  1689  00A4               	movwf	memcpy@s+1
 13295  168A  0874               	movf	memcpy@s1,w
 13296  168B  00A3               	movwf	memcpy@s
 13297  168C  0873               	movf	memcpy@d1+1,w
 13298  168D  00A2               	movwf	memcpy@d+1
 13299  168E  0872               	movf	memcpy@d1,w
 13300  168F  00A1               	movwf	memcpy@d
 13301  1690                     l5896:
 13302  1690  3001               	movlw	1
 13303  1691  02F6               	subwf	memcpy@n,f
 13304  1692  3000               	movlw	0
 13305  1693  3BF7               	subwfb	memcpy@n+1,f
 13306  1694  0A76               	incf	memcpy@n,w
 13307  1695  1903               	btfsc	3,2
 13308  1696  0A77               	incf	memcpy@n+1,w
 13309  1697  1903               	btfsc	3,2
 13310  1698  0008               	return
 13311  1699  0823               	movf	memcpy@s,w
 13312  169A  0084               	movwf	4
 13313  169B  0824               	movf	memcpy@s+1,w
 13314  169C  0085               	movwf	5
 13315  169D  0800               	movf	0,w	;code access
 13316  169E  00F8               	movwf	??_memcpy
 13317  169F  0878               	movf	??_memcpy,w
 13318  16A0  00A0               	movwf	memcpy@tmp
 13319  16A1  3001               	movlw	1
 13320  16A2  07A3               	addwf	memcpy@s,f
 13321  16A3  3000               	movlw	0
 13322  16A4  3DA4               	addwfc	memcpy@s+1,f
 13323  16A5  0821               	movf	memcpy@d,w
 13324  16A6  0086               	movwf	6
 13325  16A7  0822               	movf	memcpy@d+1,w
 13326  16A8  0087               	movwf	7
 13327  16A9  0820               	movf	memcpy@tmp,w
 13328  16AA  0081               	movwf	1
 13329  16AB  3001               	movlw	1
 13330  16AC  07A1               	addwf	memcpy@d,f
 13331  16AD  3000               	movlw	0
 13332  16AE  3DA2               	addwfc	memcpy@d+1,f
 13333  16AF  2E90               	goto	l5896
 13334  16B0                     __end_of_memcpy:
 13335                           
 13336                           	psect	text87
 13337  10D2                     __ptext87:	
 13338 ;; *************** function _MTOUCH_Button_ServiceAll *****************
 13339 ;; Defined at:
 13340 ;;		line 307 in file "mcc_generated_files/mtouch/mtouch_button.c"
 13341 ;; Parameters:    Size  Location     Type
 13342 ;;		None
 13343 ;; Auto vars:     Size  Location     Type
 13344 ;;  button          1   29[BANK0 ] enum E2935
 13345 ;; Return value:  Size  Location     Type
 13346 ;;                  1    wreg      void 
 13347 ;; Registers used:
 13348 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13349 ;; Tracked objects:
 13350 ;;		On entry : 1F/0
 13351 ;;		On exit  : 1F/0
 13352 ;;		Unchanged: 0/0
 13353 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13354 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13355 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13356 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13357 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13358 ;;Total ram usage:        2 bytes
 13359 ;; Hardware stack levels used: 1
 13360 ;; Hardware stack levels required when called: 9
 13361 ;; This function calls:
 13362 ;;		_Button_Reburst_Clear
 13363 ;;		_Button_Service
 13364 ;; This function is called by:
 13365 ;;		_MTOUCH_Service_Mainloop
 13366 ;; This function uses a non-reentrant model
 13367 ;;
 13368                           
 13369                           
 13370                           ;psect for function _MTOUCH_Button_ServiceAll
 13371  10D2                     _MTOUCH_Button_ServiceAll:
 13372                           
 13373                           ;mcc_generated_files/mtouch/mtouch_button.c: 309:     enum mtouch_button_names button;;m
      +                          cc_generated_files/mtouch/mtouch_button.c: 311:     Button_Reburst_Clear();
 13374                           
 13375                           ;incstack = 0
 13376                           ; Regs used in _MTOUCH_Button_ServiceAll: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13377  10D2  319F  27AE  3190   	fcall	_Button_Reburst_Clear
 13378                           
 13379                           ;mcc_generated_files/mtouch/mtouch_button.c: 313:     for (button = 0; button < 10u; but
      +                          ton++)
 13380  10D5  0020               	movlb	0	; select bank0
 13381  10D6  01BD               	clrf	MTOUCH_Button_ServiceAll@button
 13382  10D7                     l6364:
 13383                           
 13384                           ;mcc_generated_files/mtouch/mtouch_button.c: 314:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 315:         Button_Service(button);
 13385  10D7  083D               	movf	MTOUCH_Button_ServiceAll@button,w
 13386  10D8  318C  241A  3190   	fcall	_Button_Service
 13387                           
 13388                           ;mcc_generated_files/mtouch/mtouch_button.c: 316:     }
 13389  10DB  3001               	movlw	1
 13390  10DC  0020               	movlb	0	; select bank0
 13391  10DD  00BC               	movwf	??_MTOUCH_Button_ServiceAll
 13392  10DE  083C               	movf	??_MTOUCH_Button_ServiceAll,w
 13393  10DF  07BD               	addwf	MTOUCH_Button_ServiceAll@button,f
 13394  10E0  300A               	movlw	10
 13395  10E1  023D               	subwf	MTOUCH_Button_ServiceAll@button,w
 13396  10E2  1803               	btfsc	3,0
 13397  10E3  0008               	return
 13398  10E4  28D7               	goto	l6364
 13399  10E5                     __end_of_MTOUCH_Button_ServiceAll:
 13400                           
 13401                           	psect	text88
 13402  0C1A                     __ptext88:	
 13403 ;; *************** function _Button_Service *****************
 13404 ;; Defined at:
 13405 ;;		line 319 in file "mcc_generated_files/mtouch/mtouch_button.c"
 13406 ;; Parameters:    Size  Location     Type
 13407 ;;  name            1    wreg     enum E2935
 13408 ;; Auto vars:     Size  Location     Type
 13409 ;;  name            1   25[BANK0 ] enum E2935
 13410 ;;  button          2   26[BANK0 ] PTR struct .
 13411 ;;		 -> mtouch_button(180), 
 13412 ;; Return value:  Size  Location     Type
 13413 ;;                  1    wreg      void 
 13414 ;; Registers used:
 13415 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13416 ;; Tracked objects:
 13417 ;;		On entry : 1F/0
 13418 ;;		On exit  : 0/0
 13419 ;;		Unchanged: 0/0
 13420 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13421 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13422 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13423 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13424 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13425 ;;Total ram usage:        7 bytes
 13426 ;; Hardware stack levels used: 1
 13427 ;; Hardware stack levels required when called: 8
 13428 ;; This function calls:
 13429 ;;		_Button_Deviation_Update
 13430 ;;		_Button_Reading_Update
 13431 ;;		_Button_State_Disabled
 13432 ;;		_Button_State_Initializing
 13433 ;;		_Button_State_NotPressed
 13434 ;;		_Button_State_PressDebounce
 13435 ;;		_Button_State_Pressed
 13436 ;;		_Button_State_ReleaseDebounce
 13437 ;;		_Button_State_Suspended
 13438 ;;		_MTOUCH_Button_Initialize
 13439 ;;		_MTOUCH_Sensor_isCalibrated
 13440 ;;		_MTOUCH_Sensor_wasSampled
 13441 ;;		___wmul
 13442 ;; This function is called by:
 13443 ;;		_MTOUCH_Button_ServiceAll
 13444 ;; This function uses a non-reentrant model
 13445 ;;
 13446                           
 13447                           
 13448                           ;psect for function _Button_Service
 13449  0C1A                     _Button_Service:
 13450                           
 13451                           ;incstack = 0
 13452                           ; Regs used in _Button_Service: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13453                           ;Button_Service@name stored from wreg
 13454  0C1A  00B9               	movwf	Button_Service@name
 13455                           
 13456                           ;mcc_generated_files/mtouch/mtouch_button.c: 319: static void Button_Service(enum mtouch
      +                          _button_names name);mcc_generated_files/mtouch/mtouch_button.c: 320: {;mcc_generated_fil
      +                          es/mtouch/mtouch_button.c: 321:     mtouch_button_t* button = &mtouch_button[name];
 13457  0C1B  0839               	movf	Button_Service@name,w
 13458  0C1C  00B5               	movwf	??_Button_Service
 13459  0C1D  01B6               	clrf	??_Button_Service+1
 13460  0C1E  0835               	movf	??_Button_Service,w
 13461  0C1F  00F2               	movwf	___wmul@multiplier
 13462  0C20  0836               	movf	??_Button_Service+1,w
 13463  0C21  00F3               	movwf	___wmul@multiplier+1
 13464  0C22  3012               	movlw	18
 13465  0C23  00F4               	movwf	___wmul@multiplicand
 13466  0C24  3000               	movlw	0
 13467  0C25  00F5               	movwf	___wmul@multiplicand+1
 13468  0C26  3188  2000  318C   	fcall	___wmul
 13469  0C29  303C               	movlw	60
 13470  0C2A  00B7               	movwf	??_Button_Service+2
 13471  0C2B  3023               	movlw	35
 13472  0C2C  00B8               	movwf	??_Button_Service+3
 13473  0C2D  0872               	movf	?___wmul,w
 13474  0C2E  0737               	addwf	??_Button_Service+2,w
 13475  0C2F  00BA               	movwf	Button_Service@button
 13476  0C30  0873               	movf	?___wmul+1,w
 13477  0C31  3D38               	addwfc	??_Button_Service+3,w
 13478  0C32  00BB               	movwf	Button_Service@button+1
 13479                           
 13480                           ;mcc_generated_files/mtouch/mtouch_button.c: 323:     if (MTOUCH_Sensor_wasSampled(butto
      +                          n->sensor) && MTOUCH_Sensor_isCalibrated(button->sensor))
 13481  0C33  083A               	movf	Button_Service@button,w
 13482  0C34  0086               	movwf	6
 13483  0C35  083B               	movf	Button_Service@button+1,w
 13484  0C36  0087               	movwf	7
 13485  0C37  3141               	addfsr 1,1
 13486  0C38  0801               	movf	1,w
 13487  0C39  3193  2343  318C   	fcall	_MTOUCH_Sensor_wasSampled
 13488  0C3C  3A00               	xorlw	0
 13489  0C3D  1903               	skipnz
 13490  0C3E  0008               	return
 13491  0C3F  083A               	movf	Button_Service@button,w
 13492  0C40  0086               	movwf	6
 13493  0C41  083B               	movf	Button_Service@button+1,w
 13494  0C42  0087               	movwf	7
 13495  0C43  3141               	addfsr 1,1
 13496  0C44  0801               	movf	1,w
 13497  0C45  3180  2002  318C   	fcall	_MTOUCH_Sensor_isCalibrated
 13498  0C48  3A00               	xorlw	0
 13499  0C49  1903               	skipnz
 13500  0C4A  0008               	return
 13501                           
 13502                           ;mcc_generated_files/mtouch/mtouch_button.c: 324:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 325:         Button_Reading_Update(button);
 13503  0C4B  083B               	movf	Button_Service@button+1,w
 13504  0C4C  00AA               	movwf	Button_Reading_Update@button+1
 13505  0C4D  083A               	movf	Button_Service@button,w
 13506  0C4E  00A9               	movwf	Button_Reading_Update@button
 13507  0C4F  3190  209C  318C   	fcall	_Button_Reading_Update
 13508                           
 13509                           ;mcc_generated_files/mtouch/mtouch_button.c: 326:         Button_Deviation_Update(button
      +                          );
 13510  0C52  083B               	movf	Button_Service@button+1,w
 13511  0C53  00F3               	movwf	Button_Deviation_Update@button+1
 13512  0C54  083A               	movf	Button_Service@button,w
 13513  0C55  00F2               	movwf	Button_Deviation_Update@button
 13514  0C56  3187  275E  318C   	fcall	_Button_Deviation_Update
 13515                           
 13516                           ;mcc_generated_files/mtouch/mtouch_button.c: 328:         if (button->state >= (uint8_t)
      +                          (sizeof(Button_StateMachine)/sizeof(button_statemachine_state_t)))
 13517  0C59  083A               	movf	Button_Service@button,w
 13518  0C5A  0086               	movwf	6
 13519  0C5B  083B               	movf	Button_Service@button+1,w
 13520  0C5C  0087               	movwf	7
 13521  0C5D  3142               	addfsr 1,2
 13522  0C5E  3007               	movlw	7
 13523  0C5F  0201               	subwf	1,w
 13524  0C60  1C03               	skipc
 13525  0C61  2C6A               	goto	l6252
 13526                           
 13527                           ;mcc_generated_files/mtouch/mtouch_button.c: 329:         {;mcc_generated_files/mtouch/m
      +                          touch_button.c: 330:             MTOUCH_Button_Initialize(button->name);
 13528  0C62  083A               	movf	Button_Service@button,w
 13529  0C63  0086               	movwf	6
 13530  0C64  083B               	movf	Button_Service@button+1,w
 13531  0C65  0087               	movwf	7
 13532  0C66  0801               	movf	1,w
 13533  0C67  3188  201B  318C   	fcall	_MTOUCH_Button_Initialize
 13534  0C6A                     l6252:
 13535                           
 13536                           ;mcc_generated_files/mtouch/mtouch_button.c: 332:         Button_StateMachine[(uint8_t)b
      +                          utton->state](button);
 13537  0C6A  083B               	movf	Button_Service@button+1,w
 13538  0C6B  00B0               	movwf	Button_State_Disabled@button+1
 13539  0C6C  083A               	movf	Button_Service@button,w
 13540  0C6D  00AF               	movwf	Button_State_Disabled@button
 13541  0C6E  083A               	movf	Button_Service@button,w
 13542  0C6F  0086               	movwf	6
 13543  0C70  083B               	movf	Button_Service@button+1,w
 13544  0C71  0087               	movwf	7
 13545  0C72  3142               	addfsr 1,2
 13546  0C73  3501               	lslf	1,w
 13547  0C74  3EA0               	addlw	(low (_Button_StateMachine| 0))& (0+255)
 13548  0C75  0086               	movwf	6
 13549  0C76  0187               	clrf	7
 13550  0C77  3F41               	moviw [1]fsr1
 13551  0C78  008A               	movwf	10
 13552  0C79  3F40               	moviw [0]fsr1
 13553  0C7A  000A               	callw
 13554  0C7B  318C               	pagesel	$
 13555  0C7C  0008               	return
 13556  0C7D                     __end_of_Button_Service:
 13557                           
 13558                           	psect	text89
 13559  1343                     __ptext89:	
 13560 ;; *************** function _MTOUCH_Sensor_wasSampled *****************
 13561 ;; Defined at:
 13562 ;;		line 564 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
 13563 ;; Parameters:    Size  Location     Type
 13564 ;;  sensor          1    wreg     enum E2707
 13565 ;; Auto vars:     Size  Location     Type
 13566 ;;  sensor          1    8[COMMON] enum E2707
 13567 ;; Return value:  Size  Location     Type
 13568 ;;                  1    wreg      _Bool 
 13569 ;; Registers used:
 13570 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13571 ;; Tracked objects:
 13572 ;;		On entry : 1F/0
 13573 ;;		On exit  : 1F/0
 13574 ;;		Unchanged: 0/0
 13575 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13576 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13577 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13578 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13579 ;;      Totals:         1       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13580 ;;Total ram usage:        5 bytes
 13581 ;; Hardware stack levels used: 1
 13582 ;; Hardware stack levels required when called: 5
 13583 ;; This function calls:
 13584 ;;		___wmul
 13585 ;; This function is called by:
 13586 ;;		_Button_Service
 13587 ;; This function uses a non-reentrant model
 13588 ;;
 13589                           
 13590                           
 13591                           ;psect for function _MTOUCH_Sensor_wasSampled
 13592  1343                     _MTOUCH_Sensor_wasSampled:
 13593                           
 13594                           ;incstack = 0
 13595                           ; Regs used in _MTOUCH_Sensor_wasSampled: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cst
      +                          ack]
 13596                           ;MTOUCH_Sensor_wasSampled@sensor stored from wreg
 13597  1343  00F8               	movwf	MTOUCH_Sensor_wasSampled@sensor
 13598                           
 13599                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 564: _Bool MTOUCH_Sensor_wasSampled(enum mt
      +                          ouch_sensor_names sensor);mcc_generated_files/mtouch/mtouch_sensor.c: 565: {;mcc_generat
      +                          ed_files/mtouch/mtouch_sensor.c: 566:     if(sensor < 10u)
 13600  1344  300A               	movlw	10
 13601  1345  0278               	subwf	MTOUCH_Sensor_wasSampled@sensor,w
 13602  1346  1803               	skipnc
 13603  1347  2B62               	goto	l5882
 13604                           
 13605                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 567:         return (_Bool)mtouch_sensor[se
      +                          nsor].sampled;
 13606  1348  0878               	movf	MTOUCH_Sensor_wasSampled@sensor,w
 13607  1349  00A0               	movwf	??_MTOUCH_Sensor_wasSampled
 13608  134A  01A1               	clrf	??_MTOUCH_Sensor_wasSampled+1
 13609  134B  0820               	movf	??_MTOUCH_Sensor_wasSampled,w
 13610  134C  00F2               	movwf	___wmul@multiplier
 13611  134D  0821               	movf	??_MTOUCH_Sensor_wasSampled+1,w
 13612  134E  00F3               	movwf	___wmul@multiplier+1
 13613  134F  3009               	movlw	9
 13614  1350  00F4               	movwf	___wmul@multiplicand
 13615  1351  3000               	movlw	0
 13616  1352  00F5               	movwf	___wmul@multiplicand+1
 13617  1353  3188  2000         	fcall	___wmul
 13618  1355  30EA               	movlw	234
 13619  1356  00A2               	movwf	??_MTOUCH_Sensor_wasSampled+2
 13620  1357  3022               	movlw	34
 13621  1358  00A3               	movwf	??_MTOUCH_Sensor_wasSampled+3
 13622  1359  0872               	movf	?___wmul,w
 13623  135A  0722               	addwf	??_MTOUCH_Sensor_wasSampled+2,w
 13624  135B  0086               	movwf	6
 13625  135C  0873               	movf	?___wmul+1,w
 13626  135D  3D23               	addwfc	??_MTOUCH_Sensor_wasSampled+3,w
 13627  135E  0087               	movwf	7
 13628  135F  0C01               	rrf	1,w
 13629  1360  3901               	andlw	1
 13630  1361  0008               	return
 13631  1362                     l5882:
 13632                           
 13633                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 569:         return 0;
 13634  1362  3000               	movlw	0
 13635  1363  0008               	return
 13636  1364                     __end_of_MTOUCH_Sensor_wasSampled:
 13637                           
 13638                           	psect	text90
 13639  0002                     __ptext90:	
 13640 ;; *************** function _MTOUCH_Sensor_isCalibrated *****************
 13641 ;; Defined at:
 13642 ;;		line 537 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
 13643 ;; Parameters:    Size  Location     Type
 13644 ;;  sensor          1    wreg     enum E2707
 13645 ;; Auto vars:     Size  Location     Type
 13646 ;;  sensor          1    0[COMMON] enum E2707
 13647 ;; Return value:  Size  Location     Type
 13648 ;;                  1    wreg      _Bool 
 13649 ;; Registers used:
 13650 ;;		wreg
 13651 ;; Tracked objects:
 13652 ;;		On entry : 1F/0
 13653 ;;		On exit  : 1F/0
 13654 ;;		Unchanged: 1F/0
 13655 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13656 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13657 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13658 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13659 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13660 ;;Total ram usage:        0 bytes
 13661 ;; Hardware stack levels used: 1
 13662 ;; Hardware stack levels required when called: 4
 13663 ;; This function calls:
 13664 ;;		Nothing
 13665 ;; This function is called by:
 13666 ;;		_Button_Service
 13667 ;; This function uses a non-reentrant model
 13668 ;;
 13669                           
 13670                           
 13671                           ;psect for function _MTOUCH_Sensor_isCalibrated
 13672  0002                     _MTOUCH_Sensor_isCalibrated:
 13673                           
 13674                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 537: _Bool MTOUCH_Sensor_isCalibrated(enum 
      +                          mtouch_sensor_names sensor);mcc_generated_files/mtouch/mtouch_sensor.c: 538: {;mcc_gener
      +                          ated_files/mtouch/mtouch_sensor.c: 540:     return 1;
 13675                           
 13676                           ;incstack = 0
 13677                           ; Regs used in _MTOUCH_Sensor_isCalibrated: [wreg]
 13678  0002  3001               	movlw	1
 13679  0003  0008               	return
 13680  0004                     __end_of_MTOUCH_Sensor_isCalibrated:
 13681                           
 13682                           	psect	text91
 13683  1FAB                     __ptext91:	
 13684 ;; *************** function _Button_State_Disabled *****************
 13685 ;; Defined at:
 13686 ;;		line 487 in file "mcc_generated_files/mtouch/mtouch_button.c"
 13687 ;; Parameters:    Size  Location     Type
 13688 ;;  button          2   15[BANK0 ] PTR struct .
 13689 ;;		 -> mtouch_button(180), 
 13690 ;; Auto vars:     Size  Location     Type
 13691 ;;		None
 13692 ;; Return value:  Size  Location     Type
 13693 ;;                  1    wreg      void 
 13694 ;; Registers used:
 13695 ;;		None
 13696 ;; Tracked objects:
 13697 ;;		On entry : 1F/0
 13698 ;;		On exit  : 1F/0
 13699 ;;		Unchanged: 1F/0
 13700 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13701 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13702 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13703 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13704 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13705 ;;Total ram usage:        2 bytes
 13706 ;; Hardware stack levels used: 1
 13707 ;; Hardware stack levels required when called: 4
 13708 ;; This function calls:
 13709 ;;		Nothing
 13710 ;; This function is called by:
 13711 ;;		_Button_Service
 13712 ;; This function uses a non-reentrant model
 13713 ;;
 13714                           
 13715                           
 13716                           ;psect for function _Button_State_Disabled
 13717  1FAB                     _Button_State_Disabled:
 13718                           
 13719                           ;incstack = 0
 13720                           ; Regs used in _Button_State_Disabled: []
 13721  1FAB  0008               	return
 13722  1FAC                     __end_of_Button_State_Disabled:
 13723                           
 13724                           	psect	text92
 13725  0EF8                     __ptext92:	
 13726 ;; *************** function _Button_State_ReleaseDebounce *****************
 13727 ;; Defined at:
 13728 ;;		line 458 in file "mcc_generated_files/mtouch/mtouch_button.c"
 13729 ;; Parameters:    Size  Location     Type
 13730 ;;  button          2   15[BANK0 ] PTR struct .
 13731 ;;		 -> mtouch_button(180), 
 13732 ;; Auto vars:     Size  Location     Type
 13733 ;;		None
 13734 ;; Return value:  Size  Location     Type
 13735 ;;                  1    wreg      void 
 13736 ;; Registers used:
 13737 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13738 ;; Tracked objects:
 13739 ;;		On entry : 1F/0
 13740 ;;		On exit  : 1E/0
 13741 ;;		Unchanged: 0/0
 13742 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13743 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13744 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13745 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13746 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13747 ;;Total ram usage:        4 bytes
 13748 ;; Hardware stack levels used: 1
 13749 ;; Hardware stack levels required when called: 5
 13750 ;; This function calls:
 13751 ;;		_Button_DefaultCallback
 13752 ;;		_Button_Reburst_Request
 13753 ;; This function is called by:
 13754 ;;		_Button_Service
 13755 ;; This function uses a non-reentrant model
 13756 ;;
 13757                           
 13758                           
 13759                           ;psect for function _Button_State_ReleaseDebounce
 13760  0EF8                     _Button_State_ReleaseDebounce:
 13761                           
 13762                           ;mcc_generated_files/mtouch/mtouch_button.c: 458: static void Button_State_ReleaseDeboun
      +                          ce(mtouch_button_t* button);mcc_generated_files/mtouch/mtouch_button.c: 459: {;mcc_gener
      +                          ated_files/mtouch/mtouch_button.c: 460:     if ((button->deviation) < (mtouch_button_dev
      +                          iation_t)((button->threshold)-((button->threshold) >> button->hysteresis)))
 13763                           
 13764                           ;incstack = 0
 13765                           ; Regs used in _Button_State_ReleaseDebounce: [wreg-fsr1h+status,2+status,0+pclath+cstac
      +                          k]
 13766  0EF8  082F               	movf	Button_State_ReleaseDebounce@button,w
 13767  0EF9  0086               	movwf	6
 13768  0EFA  0830               	movf	Button_State_ReleaseDebounce@button+1,w
 13769  0EFB  0087               	movwf	7
 13770  0EFC  314A               	addfsr 1,10
 13771  0EFD  0801               	movf	1,w
 13772  0EFE  3A80               	xorlw	128
 13773  0EFF  00B1               	movwf	??_Button_State_ReleaseDebounce
 13774  0F00  082F               	movf	Button_State_ReleaseDebounce@button,w
 13775  0F01  0086               	movwf	6
 13776  0F02  0830               	movf	Button_State_ReleaseDebounce@button+1,w
 13777  0F03  0087               	movwf	7
 13778  0F04  314F               	addfsr 1,15
 13779  0F05  082F               	movf	Button_State_ReleaseDebounce@button,w
 13780  0F06  0084               	movwf	4
 13781  0F07  0830               	movf	Button_State_ReleaseDebounce@button+1,w
 13782  0F08  0085               	movwf	5
 13783  0F09  310F               	addfsr 0,15
 13784  0F0A  0800               	movf	0,w
 13785  0F0B  00B2               	movwf	??_Button_State_ReleaseDebounce+1
 13786  0F0C  082F               	movf	Button_State_ReleaseDebounce@button,w
 13787  0F0D  0084               	movwf	4
 13788  0F0E  0830               	movf	Button_State_ReleaseDebounce@button+1,w
 13789  0F0F  0085               	movwf	5
 13790  0F10  3111               	addfsr 0,17
 13791  0F11  0A00               	incf	0,w
 13792  0F12  2F14               	goto	u5354
 13793  0F13                     u5355:
 13794  0F13  36B2               	lsrf	??_Button_State_ReleaseDebounce+1,f
 13795  0F14                     u5354:
 13796  0F14  0B89               	decfsz	9,f
 13797  0F15  2F13               	goto	u5355
 13798  0F16  0832               	movf	??_Button_State_ReleaseDebounce+1,w
 13799  0F17  0201               	subwf	1,w
 13800  0F18  3A80               	xorlw	128
 13801  0F19  02B1               	subwf	??_Button_State_ReleaseDebounce,f
 13802  0F1A  1803               	skipnc
 13803  0F1B  2F65               	goto	l6034
 13804                           
 13805                           ;mcc_generated_files/mtouch/mtouch_button.c: 461:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 462:         (button->counter)++;
 13806  0F1C  082F               	movf	Button_State_ReleaseDebounce@button,w
 13807  0F1D  0086               	movwf	6
 13808  0F1E  0830               	movf	Button_State_ReleaseDebounce@button+1,w
 13809  0F1F  0087               	movwf	7
 13810  0F20  314B               	addfsr 1,11
 13811  0F21  3001               	movlw	1
 13812  0F22  0781               	addwf	1,f
 13813  0F23  3141               	addfsr 1,1
 13814  0F24  1803               	skipnc
 13815  0F25  0A81               	incf	1,f
 13816                           
 13817                           ;mcc_generated_files/mtouch/mtouch_button.c: 463:         if ((button->counter) >= (4u))
 13818  0F26  082F               	movf	Button_State_ReleaseDebounce@button,w
 13819  0F27  0086               	movwf	6
 13820  0F28  0830               	movf	Button_State_ReleaseDebounce@button+1,w
 13821  0F29  0087               	movwf	7
 13822  0F2A  314B               	addfsr 1,11
 13823  0F2B  3F40               	moviw [0]fsr1
 13824  0F2C  00B1               	movwf	??_Button_State_ReleaseDebounce
 13825  0F2D  3F41               	moviw [1]fsr1
 13826  0F2E  00B2               	movwf	??_Button_State_ReleaseDebounce+1
 13827  0F2F  3000               	movlw	0
 13828  0F30  0232               	subwf	??_Button_State_ReleaseDebounce+1,w
 13829  0F31  3004               	movlw	4
 13830  0F32  1903               	skipnz
 13831  0F33  0231               	subwf	??_Button_State_ReleaseDebounce,w
 13832  0F34  1C03               	skipc
 13833  0F35  2F5E               	goto	l6032
 13834                           
 13835                           ;mcc_generated_files/mtouch/mtouch_button.c: 464:         {;mcc_generated_files/mtouch/m
      +                          touch_button.c: 465:             button->state = MTOUCH_BUTTON_STATE_notPressed;
 13836  0F36  082F               	movf	Button_State_ReleaseDebounce@button,w
 13837  0F37  3E02               	addlw	2
 13838  0F38  00B1               	movwf	??_Button_State_ReleaseDebounce
 13839  0F39  3000               	movlw	0
 13840  0F3A  3D30               	addwfc	Button_State_ReleaseDebounce@button+1,w
 13841  0F3B  00B2               	movwf	??_Button_State_ReleaseDebounce+1
 13842  0F3C  0831               	movf	??_Button_State_ReleaseDebounce,w
 13843  0F3D  0086               	movwf	6
 13844  0F3E  0832               	movf	??_Button_State_ReleaseDebounce+1,w
 13845  0F3F  0087               	movwf	7
 13846  0F40  3001               	movlw	1
 13847  0F41  0081               	movwf	1
 13848                           
 13849                           ;mcc_generated_files/mtouch/mtouch_button.c: 466:             button->counter = 0;
 13850  0F42  082F               	movf	Button_State_ReleaseDebounce@button,w
 13851  0F43  0086               	movwf	6
 13852  0F44  0830               	movf	Button_State_ReleaseDebounce@button+1,w
 13853  0F45  0087               	movwf	7
 13854  0F46  314B               	addfsr 1,11
 13855  0F47  3000               	movlw	0
 13856  0F48  3FC0               	movwi [0]fsr1
 13857  0F49  3FC1               	movwi [1]fsr1
 13858                           
 13859                           ;mcc_generated_files/mtouch/mtouch_button.c: 467:             button->baseline_count = (
      +                          mtouch_button_baselinecounter_t)((0xffff))-((mtouch_button_baselinecounter_t)1024u);
 13860  0F4A  082F               	movf	Button_State_ReleaseDebounce@button,w
 13861  0F4B  0086               	movwf	6
 13862  0F4C  0830               	movf	Button_State_ReleaseDebounce@button+1,w
 13863  0F4D  0087               	movwf	7
 13864  0F4E  314D               	addfsr 1,13
 13865  0F4F  30FF               	movlw	255
 13866  0F50  3FC0               	movwi [0]fsr1
 13867  0F51  30FB               	movlw	251
 13868  0F52  3FC1               	movwi [1]fsr1
 13869                           
 13870                           ;mcc_generated_files/mtouch/mtouch_button.c: 468:             callback_notPressed(button
      +                          ->name);
 13871  0F53  082F               	movf	Button_State_ReleaseDebounce@button,w
 13872  0F54  0086               	movwf	6
 13873  0F55  0830               	movf	Button_State_ReleaseDebounce@button+1,w
 13874  0F56  0087               	movwf	7
 13875  0F57  0801               	movf	1,w
 13876  0F58  00B1               	movwf	??_Button_State_ReleaseDebounce
 13877  0F59  0831               	movf	??_Button_State_ReleaseDebounce,w
 13878  0F5A  00F2               	movwf	Button_DefaultCallback@button
 13879  0F5B  319F  27AA  318E   	fcall	_Button_DefaultCallback
 13880  0F5E                     l6032:
 13881                           
 13882                           ;mcc_generated_files/mtouch/mtouch_button.c: 470:         Button_Reburst_Request(button)
      +                          ;
 13883  0F5E  0830               	movf	Button_State_ReleaseDebounce@button+1,w
 13884  0F5F  00F9               	movwf	Button_Reburst_Request@button+1
 13885  0F60  082F               	movf	Button_State_ReleaseDebounce@button,w
 13886  0F61  00F8               	movwf	Button_Reburst_Request@button
 13887  0F62  319F  27B7         	fcall	_Button_Reburst_Request
 13888                           
 13889                           ;mcc_generated_files/mtouch/mtouch_button.c: 471:     }
 13890  0F64  0008               	return
 13891  0F65                     l6034:
 13892                           
 13893                           ;mcc_generated_files/mtouch/mtouch_button.c: 473:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 474:         button->state = MTOUCH_BUTTON_STATE_pressed;
 13894  0F65  082F               	movf	Button_State_ReleaseDebounce@button,w
 13895  0F66  3E02               	addlw	2
 13896  0F67  00B1               	movwf	??_Button_State_ReleaseDebounce
 13897  0F68  3000               	movlw	0
 13898  0F69  3D30               	addwfc	Button_State_ReleaseDebounce@button+1,w
 13899  0F6A  00B2               	movwf	??_Button_State_ReleaseDebounce+1
 13900  0F6B  0831               	movf	??_Button_State_ReleaseDebounce,w
 13901  0F6C  0086               	movwf	6
 13902  0F6D  0832               	movf	??_Button_State_ReleaseDebounce+1,w
 13903  0F6E  0087               	movwf	7
 13904  0F6F  3003               	movlw	3
 13905  0F70  0081               	movwf	1
 13906                           
 13907                           ;mcc_generated_files/mtouch/mtouch_button.c: 475:         button->counter = (mtouch_butt
      +                          on_statecounter_t)0;
 13908  0F71  082F               	movf	Button_State_ReleaseDebounce@button,w
 13909  0F72  0086               	movwf	6
 13910  0F73  0830               	movf	Button_State_ReleaseDebounce@button+1,w
 13911  0F74  0087               	movwf	7
 13912  0F75  314B               	addfsr 1,11
 13913  0F76  3000               	movlw	0
 13914  0F77  3FC0               	movwi [0]fsr1
 13915  0F78  3FC1               	movwi [1]fsr1
 13916  0F79  0008               	return
 13917  0F7A                     __end_of_Button_State_ReleaseDebounce:
 13918                           
 13919                           	psect	text93
 13920  0B56                     __ptext93:	
 13921 ;; *************** function _Button_State_Pressed *****************
 13922 ;; Defined at:
 13923 ;;		line 409 in file "mcc_generated_files/mtouch/mtouch_button.c"
 13924 ;; Parameters:    Size  Location     Type
 13925 ;;  button          2   15[BANK0 ] PTR struct .
 13926 ;;		 -> mtouch_button(180), 
 13927 ;; Auto vars:     Size  Location     Type
 13928 ;;		None
 13929 ;; Return value:  Size  Location     Type
 13930 ;;                  1    wreg      void 
 13931 ;; Registers used:
 13932 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13933 ;; Tracked objects:
 13934 ;;		On entry : 1F/0
 13935 ;;		On exit  : 1E/0
 13936 ;;		Unchanged: 0/0
 13937 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13938 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13939 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13940 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13941 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13942 ;;Total ram usage:        4 bytes
 13943 ;; Hardware stack levels used: 1
 13944 ;; Hardware stack levels required when called: 6
 13945 ;; This function calls:
 13946 ;;		_Button_DefaultCallback
 13947 ;;		_Button_Reburst_Request
 13948 ;;		_MTOUCH_Button_Initialize
 13949 ;; This function is called by:
 13950 ;;		_Button_Service
 13951 ;; This function uses a non-reentrant model
 13952 ;;
 13953                           
 13954                           
 13955                           ;psect for function _Button_State_Pressed
 13956  0B56                     _Button_State_Pressed:
 13957                           
 13958                           ;mcc_generated_files/mtouch/mtouch_button.c: 409: static void Button_State_Pressed(mtouc
      +                          h_button_t* button);mcc_generated_files/mtouch/mtouch_button.c: 410: {;mcc_generated_fil
      +                          es/mtouch/mtouch_button.c: 412:     if ((button->counter) >= ((mtouch_button_statecounte
      +                          r_t)500u))
 13959                           
 13960                           ;incstack = 0
 13961                           ; Regs used in _Button_State_Pressed: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13962  0B56  082F               	movf	Button_State_Pressed@button,w
 13963  0B57  0086               	movwf	6
 13964  0B58  0830               	movf	Button_State_Pressed@button+1,w
 13965  0B59  0087               	movwf	7
 13966  0B5A  314B               	addfsr 1,11
 13967  0B5B  3F40               	moviw [0]fsr1
 13968  0B5C  00B1               	movwf	??_Button_State_Pressed
 13969  0B5D  3F41               	moviw [1]fsr1
 13970  0B5E  00B2               	movwf	??_Button_State_Pressed+1
 13971  0B5F  3001               	movlw	1
 13972  0B60  0232               	subwf	??_Button_State_Pressed+1,w
 13973  0B61  30F4               	movlw	244
 13974  0B62  1903               	skipnz
 13975  0B63  0231               	subwf	??_Button_State_Pressed,w
 13976  0B64  1C03               	skipc
 13977  0B65  2B79               	goto	l5982
 13978                           
 13979                           ;mcc_generated_files/mtouch/mtouch_button.c: 413:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 414:         MTOUCH_Button_Initialize(button->name);
 13980  0B66  082F               	movf	Button_State_Pressed@button,w
 13981  0B67  0086               	movwf	6
 13982  0B68  0830               	movf	Button_State_Pressed@button+1,w
 13983  0B69  0087               	movwf	7
 13984  0B6A  0801               	movf	1,w
 13985  0B6B  3188  201B  318B   	fcall	_MTOUCH_Button_Initialize
 13986                           
 13987                           ;mcc_generated_files/mtouch/mtouch_button.c: 415:         callback_notPressed(button->na
      +                          me);
 13988  0B6E  082F               	movf	Button_State_Pressed@button,w
 13989  0B6F  0086               	movwf	6
 13990  0B70  0830               	movf	Button_State_Pressed@button+1,w
 13991  0B71  0087               	movwf	7
 13992  0B72  0801               	movf	1,w
 13993  0B73  00B1               	movwf	??_Button_State_Pressed
 13994  0B74  0831               	movf	??_Button_State_Pressed,w
 13995  0B75  00F2               	movwf	Button_DefaultCallback@button
 13996  0B76  319F  27AA         	fcall	_Button_DefaultCallback
 13997                           
 13998                           ;mcc_generated_files/mtouch/mtouch_button.c: 416:     }
 13999  0B78  0008               	return
 14000  0B79                     l5982:
 14001  0B79  082F               	movf	Button_State_Pressed@button,w
 14002  0B7A  0086               	movwf	6
 14003  0B7B  0830               	movf	Button_State_Pressed@button+1,w
 14004  0B7C  0087               	movwf	7
 14005  0B7D  314A               	addfsr 1,10
 14006  0B7E  0801               	movf	1,w
 14007  0B7F  3A80               	xorlw	128
 14008  0B80  00B1               	movwf	??_Button_State_Pressed
 14009  0B81  082F               	movf	Button_State_Pressed@button,w
 14010  0B82  0086               	movwf	6
 14011  0B83  0830               	movf	Button_State_Pressed@button+1,w
 14012  0B84  0087               	movwf	7
 14013  0B85  314F               	addfsr 1,15
 14014  0B86  082F               	movf	Button_State_Pressed@button,w
 14015  0B87  0084               	movwf	4
 14016  0B88  0830               	movf	Button_State_Pressed@button+1,w
 14017  0B89  0085               	movwf	5
 14018  0B8A  310F               	addfsr 0,15
 14019  0B8B  0800               	movf	0,w
 14020  0B8C  00B2               	movwf	??_Button_State_Pressed+1
 14021  0B8D  082F               	movf	Button_State_Pressed@button,w
 14022  0B8E  0084               	movwf	4
 14023  0B8F  0830               	movf	Button_State_Pressed@button+1,w
 14024  0B90  0085               	movwf	5
 14025  0B91  3111               	addfsr 0,17
 14026  0B92  0A00               	incf	0,w
 14027  0B93  2B95               	goto	u5294
 14028  0B94                     u5295:
 14029  0B94  36B2               	lsrf	??_Button_State_Pressed+1,f
 14030  0B95                     u5294:
 14031  0B95  0B89               	decfsz	9,f
 14032  0B96  2B94               	goto	u5295
 14033  0B97  0832               	movf	??_Button_State_Pressed+1,w
 14034  0B98  0201               	subwf	1,w
 14035  0B99  3A80               	xorlw	128
 14036  0B9A  02B1               	subwf	??_Button_State_Pressed,f
 14037  0B9B  1803               	skipnc
 14038  0B9C  0008               	return
 14039                           
 14040                           ;mcc_generated_files/mtouch/mtouch_button.c: 420:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 421:         button->state = MTOUCH_BUTTON_STATE_releaseDebounce;
 14041  0B9D  082F               	movf	Button_State_Pressed@button,w
 14042  0B9E  3E02               	addlw	2
 14043  0B9F  00B1               	movwf	??_Button_State_Pressed
 14044  0BA0  3000               	movlw	0
 14045  0BA1  3D30               	addwfc	Button_State_Pressed@button+1,w
 14046  0BA2  00B2               	movwf	??_Button_State_Pressed+1
 14047  0BA3  0831               	movf	??_Button_State_Pressed,w
 14048  0BA4  0086               	movwf	6
 14049  0BA5  0832               	movf	??_Button_State_Pressed+1,w
 14050  0BA6  0087               	movwf	7
 14051  0BA7  3004               	movlw	4
 14052  0BA8  0081               	movwf	1
 14053                           
 14054                           ;mcc_generated_files/mtouch/mtouch_button.c: 422:         button->counter = (mtouch_butt
      +                          on_statecounter_t)0;
 14055  0BA9  082F               	movf	Button_State_Pressed@button,w
 14056  0BAA  0086               	movwf	6
 14057  0BAB  0830               	movf	Button_State_Pressed@button+1,w
 14058  0BAC  0087               	movwf	7
 14059  0BAD  314B               	addfsr 1,11
 14060  0BAE  3000               	movlw	0
 14061  0BAF  3FC0               	movwi [0]fsr1
 14062  0BB0  3FC1               	movwi [1]fsr1
 14063                           
 14064                           ;mcc_generated_files/mtouch/mtouch_button.c: 423:         Button_Reburst_Request(button)
      +                          ;
 14065  0BB1  0830               	movf	Button_State_Pressed@button+1,w
 14066  0BB2  00F9               	movwf	Button_Reburst_Request@button+1
 14067  0BB3  082F               	movf	Button_State_Pressed@button,w
 14068  0BB4  00F8               	movwf	Button_Reburst_Request@button
 14069  0BB5  319F  27B7         	fcall	_Button_Reburst_Request
 14070  0BB7  0008               	return
 14071  0BB8                     __end_of_Button_State_Pressed:
 14072                           
 14073                           	psect	text94
 14074  05A3                     __ptext94:	
 14075 ;; *************** function _Button_State_PressDebounce *****************
 14076 ;; Defined at:
 14077 ;;		line 427 in file "mcc_generated_files/mtouch/mtouch_button.c"
 14078 ;; Parameters:    Size  Location     Type
 14079 ;;  button          2   15[BANK0 ] PTR struct .
 14080 ;;		 -> mtouch_button(180), 
 14081 ;; Auto vars:     Size  Location     Type
 14082 ;;		None
 14083 ;; Return value:  Size  Location     Type
 14084 ;;                  1    wreg      void 
 14085 ;; Registers used:
 14086 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14087 ;; Tracked objects:
 14088 ;;		On entry : 1F/0
 14089 ;;		On exit  : 1E/0
 14090 ;;		Unchanged: 0/0
 14091 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14092 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14093 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14094 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14095 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14096 ;;Total ram usage:        4 bytes
 14097 ;; Hardware stack levels used: 1
 14098 ;; Hardware stack levels required when called: 7
 14099 ;; This function calls:
 14100 ;;		_Button_Check_AKS_Block
 14101 ;;		_Button_DefaultCallback
 14102 ;;		_Button_Reburst_Request
 14103 ;; This function is called by:
 14104 ;;		_Button_Service
 14105 ;; This function uses a non-reentrant model
 14106 ;;
 14107                           
 14108                           
 14109                           ;psect for function _Button_State_PressDebounce
 14110  05A3                     _Button_State_PressDebounce:
 14111                           
 14112                           ;mcc_generated_files/mtouch/mtouch_button.c: 427: static void Button_State_PressDebounce
      +                           (mtouch_button_t* button);mcc_generated_files/mtouch/mtouch_button.c: 428: {;mcc_genera
      +                          ted_files/mtouch/mtouch_button.c: 429:     if(button->aks_group != No_AKS_Group)
 14113                           
 14114                           ;incstack = 0
 14115                           ; Regs used in _Button_State_PressDebounce: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14116  05A3  082F               	movf	Button_State_PressDebounce@button,w
 14117  05A4  0086               	movwf	6
 14118  05A5  0830               	movf	Button_State_PressDebounce@button+1,w
 14119  05A6  0087               	movwf	7
 14120  05A7  3143               	addfsr 1,3
 14121  05A8  0801               	movf	1,w
 14122  05A9  1903               	btfsc	3,2
 14123  05AA  2DCB               	goto	l6000
 14124                           
 14125                           ;mcc_generated_files/mtouch/mtouch_button.c: 430:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 431:         if(Button_Check_AKS_Block(button))
 14126  05AB  0830               	movf	Button_State_PressDebounce@button+1,w
 14127  05AC  00A5               	movwf	Button_Check_AKS_Block@button+1
 14128  05AD  082F               	movf	Button_State_PressDebounce@button,w
 14129  05AE  00A4               	movwf	Button_Check_AKS_Block@button
 14130  05AF  3185  2504  3185   	fcall	_Button_Check_AKS_Block
 14131  05B2  3A00               	xorlw	0
 14132  05B3  1903               	skipnz
 14133  05B4  2DCB               	goto	l6000
 14134                           
 14135                           ;mcc_generated_files/mtouch/mtouch_button.c: 432:         {;mcc_generated_files/mtouch/m
      +                          touch_button.c: 433:             button->state = MTOUCH_BUTTON_STATE_notPressed;
 14136  05B5  0020               	movlb	0	; select bank0
 14137  05B6  082F               	movf	Button_State_PressDebounce@button,w
 14138  05B7  3E02               	addlw	2
 14139  05B8  00B1               	movwf	??_Button_State_PressDebounce
 14140  05B9  3000               	movlw	0
 14141  05BA  3D30               	addwfc	Button_State_PressDebounce@button+1,w
 14142  05BB  00B2               	movwf	??_Button_State_PressDebounce+1
 14143  05BC  0831               	movf	??_Button_State_PressDebounce,w
 14144  05BD  0086               	movwf	6
 14145  05BE  0832               	movf	??_Button_State_PressDebounce+1,w
 14146  05BF  0087               	movwf	7
 14147  05C0  3001               	movlw	1
 14148  05C1  0081               	movwf	1
 14149                           
 14150                           ;mcc_generated_files/mtouch/mtouch_button.c: 434:             button->counter = (mtouch_
      +                          button_statecounter_t)0;
 14151  05C2  082F               	movf	Button_State_PressDebounce@button,w
 14152  05C3  0086               	movwf	6
 14153  05C4  0830               	movf	Button_State_PressDebounce@button+1,w
 14154  05C5  0087               	movwf	7
 14155  05C6  314B               	addfsr 1,11
 14156  05C7  3000               	movlw	0
 14157  05C8  3FC0               	movwi [0]fsr1
 14158  05C9  3FC1               	movwi [1]fsr1
 14159  05CA  0008               	return
 14160  05CB                     l6000:
 14161                           
 14162                           ;mcc_generated_files/mtouch/mtouch_button.c: 440:     if((button->deviation) > (button->
      +                          threshold))
 14163  05CB  0020               	movlb	0	; select bank0
 14164  05CC  082F               	movf	Button_State_PressDebounce@button,w
 14165  05CD  0086               	movwf	6
 14166  05CE  0830               	movf	Button_State_PressDebounce@button+1,w
 14167  05CF  0087               	movwf	7
 14168  05D0  314A               	addfsr 1,10
 14169  05D1  0801               	movf	1,w
 14170  05D2  00B1               	movwf	??_Button_State_PressDebounce
 14171  05D3  01B2               	clrf	??_Button_State_PressDebounce+1
 14172  05D4  1BB1               	btfsc	??_Button_State_PressDebounce,7
 14173  05D5  03B2               	decf	??_Button_State_PressDebounce+1,f
 14174  05D6  082F               	movf	Button_State_PressDebounce@button,w
 14175  05D7  0086               	movwf	6
 14176  05D8  0830               	movf	Button_State_PressDebounce@button+1,w
 14177  05D9  0087               	movwf	7
 14178  05DA  314F               	addfsr 1,15
 14179  05DB  0832               	movf	??_Button_State_PressDebounce+1,w
 14180  05DC  3A80               	xorlw	128
 14181  05DD  3C80               	sublw	128
 14182  05DE  1D03               	skipz
 14183  05DF  2DE2               	goto	u5335
 14184  05E0  0831               	movf	??_Button_State_PressDebounce,w
 14185  05E1  0201               	subwf	1,w
 14186  05E2                     u5335:
 14187  05E2  1803               	skipnc
 14188  05E3  2E25               	goto	l6014
 14189                           
 14190                           ;mcc_generated_files/mtouch/mtouch_button.c: 441:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 442:         (button->counter)++;
 14191  05E4  0020               	movlb	0	; select bank0
 14192  05E5  082F               	movf	Button_State_PressDebounce@button,w
 14193  05E6  0086               	movwf	6
 14194  05E7  0830               	movf	Button_State_PressDebounce@button+1,w
 14195  05E8  0087               	movwf	7
 14196  05E9  314B               	addfsr 1,11
 14197  05EA  3001               	movlw	1
 14198  05EB  0781               	addwf	1,f
 14199  05EC  3141               	addfsr 1,1
 14200  05ED  1803               	skipnc
 14201  05EE  0A81               	incf	1,f
 14202                           
 14203                           ;mcc_generated_files/mtouch/mtouch_button.c: 443:         if ((button->counter) >= (4u))
 14204  05EF  082F               	movf	Button_State_PressDebounce@button,w
 14205  05F0  0086               	movwf	6
 14206  05F1  0830               	movf	Button_State_PressDebounce@button+1,w
 14207  05F2  0087               	movwf	7
 14208  05F3  314B               	addfsr 1,11
 14209  05F4  3F40               	moviw [0]fsr1
 14210  05F5  00B1               	movwf	??_Button_State_PressDebounce
 14211  05F6  3F41               	moviw [1]fsr1
 14212  05F7  00B2               	movwf	??_Button_State_PressDebounce+1
 14213  05F8  3000               	movlw	0
 14214  05F9  0232               	subwf	??_Button_State_PressDebounce+1,w
 14215  05FA  3004               	movlw	4
 14216  05FB  1903               	skipnz
 14217  05FC  0231               	subwf	??_Button_State_PressDebounce,w
 14218  05FD  1C03               	skipc
 14219  05FE  2E1E               	goto	l6012
 14220                           
 14221                           ;mcc_generated_files/mtouch/mtouch_button.c: 444:         {;mcc_generated_files/mtouch/m
      +                          touch_button.c: 445:             button->state = MTOUCH_BUTTON_STATE_pressed;
 14222  05FF  082F               	movf	Button_State_PressDebounce@button,w
 14223  0600  3E02               	addlw	2
 14224  0601  00B1               	movwf	??_Button_State_PressDebounce
 14225  0602  3000               	movlw	0
 14226  0603  3D30               	addwfc	Button_State_PressDebounce@button+1,w
 14227  0604  00B2               	movwf	??_Button_State_PressDebounce+1
 14228  0605  0831               	movf	??_Button_State_PressDebounce,w
 14229  0606  0086               	movwf	6
 14230  0607  0832               	movf	??_Button_State_PressDebounce+1,w
 14231  0608  0087               	movwf	7
 14232  0609  3003               	movlw	3
 14233  060A  0081               	movwf	1
 14234                           
 14235                           ;mcc_generated_files/mtouch/mtouch_button.c: 446:             button->counter = (mtouch_
      +                          button_statecounter_t)0;
 14236  060B  082F               	movf	Button_State_PressDebounce@button,w
 14237  060C  0086               	movwf	6
 14238  060D  0830               	movf	Button_State_PressDebounce@button+1,w
 14239  060E  0087               	movwf	7
 14240  060F  314B               	addfsr 1,11
 14241  0610  3000               	movlw	0
 14242  0611  3FC0               	movwi [0]fsr1
 14243  0612  3FC1               	movwi [1]fsr1
 14244                           
 14245                           ;mcc_generated_files/mtouch/mtouch_button.c: 447:             callback_pressed(button->n
      +                          ame);
 14246  0613  082F               	movf	Button_State_PressDebounce@button,w
 14247  0614  0086               	movwf	6
 14248  0615  0830               	movf	Button_State_PressDebounce@button+1,w
 14249  0616  0087               	movwf	7
 14250  0617  0801               	movf	1,w
 14251  0618  00B1               	movwf	??_Button_State_PressDebounce
 14252  0619  0831               	movf	??_Button_State_PressDebounce,w
 14253  061A  00F2               	movwf	Button_DefaultCallback@button
 14254  061B  319F  27AA  3185   	fcall	_Button_DefaultCallback
 14255  061E                     l6012:
 14256                           
 14257                           ;mcc_generated_files/mtouch/mtouch_button.c: 449:         Button_Reburst_Request(button)
      +                          ;
 14258  061E  0830               	movf	Button_State_PressDebounce@button+1,w
 14259  061F  00F9               	movwf	Button_Reburst_Request@button+1
 14260  0620  082F               	movf	Button_State_PressDebounce@button,w
 14261  0621  00F8               	movwf	Button_Reburst_Request@button
 14262  0622  319F  27B7         	fcall	_Button_Reburst_Request
 14263                           
 14264                           ;mcc_generated_files/mtouch/mtouch_button.c: 450:     }
 14265  0624  0008               	return
 14266  0625                     l6014:
 14267                           
 14268                           ;mcc_generated_files/mtouch/mtouch_button.c: 452:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 453:         button->state = MTOUCH_BUTTON_STATE_notPressed;
 14269  0625  0020               	movlb	0	; select bank0
 14270  0626  082F               	movf	Button_State_PressDebounce@button,w
 14271  0627  3E02               	addlw	2
 14272  0628  00B1               	movwf	??_Button_State_PressDebounce
 14273  0629  3000               	movlw	0
 14274  062A  3D30               	addwfc	Button_State_PressDebounce@button+1,w
 14275  062B  00B2               	movwf	??_Button_State_PressDebounce+1
 14276  062C  0831               	movf	??_Button_State_PressDebounce,w
 14277  062D  0086               	movwf	6
 14278  062E  0832               	movf	??_Button_State_PressDebounce+1,w
 14279  062F  0087               	movwf	7
 14280  0630  3001               	movlw	1
 14281  0631  0081               	movwf	1
 14282                           
 14283                           ;mcc_generated_files/mtouch/mtouch_button.c: 454:         button->counter = (mtouch_butt
      +                          on_statecounter_t)0;
 14284  0632  082F               	movf	Button_State_PressDebounce@button,w
 14285  0633  0086               	movwf	6
 14286  0634  0830               	movf	Button_State_PressDebounce@button+1,w
 14287  0635  0087               	movwf	7
 14288  0636  314B               	addfsr 1,11
 14289  0637  3000               	movlw	0
 14290  0638  3FC0               	movwi [0]fsr1
 14291  0639  3FC1               	movwi [1]fsr1
 14292  063A  0008               	return
 14293  063B                     __end_of_Button_State_PressDebounce:
 14294                           
 14295                           	psect	text95
 14296  02B7                     __ptext95:	
 14297 ;; *************** function _Button_State_NotPressed *****************
 14298 ;; Defined at:
 14299 ;;		line 357 in file "mcc_generated_files/mtouch/mtouch_button.c"
 14300 ;; Parameters:    Size  Location     Type
 14301 ;;  button          2   15[BANK0 ] PTR struct .
 14302 ;;		 -> mtouch_button(180), 
 14303 ;; Auto vars:     Size  Location     Type
 14304 ;;		None
 14305 ;; Return value:  Size  Location     Type
 14306 ;;                  1    wreg      void 
 14307 ;; Registers used:
 14308 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14309 ;; Tracked objects:
 14310 ;;		On entry : 1F/0
 14311 ;;		On exit  : 0/0
 14312 ;;		Unchanged: 0/0
 14313 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14314 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14315 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14316 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14317 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14318 ;;Total ram usage:        4 bytes
 14319 ;; Hardware stack levels used: 1
 14320 ;; Hardware stack levels required when called: 7
 14321 ;; This function calls:
 14322 ;;		_Button_Baseline_Update
 14323 ;;		_Button_Check_AKS_Block
 14324 ;;		_Button_Reburst_Request
 14325 ;;		_MTOUCH_Button_Initialize
 14326 ;; This function is called by:
 14327 ;;		_Button_Service
 14328 ;; This function uses a non-reentrant model
 14329 ;;
 14330                           
 14331                           
 14332                           ;psect for function _Button_State_NotPressed
 14333  02B7                     _Button_State_NotPressed:
 14334                           
 14335                           ;mcc_generated_files/mtouch/mtouch_button.c: 357: static void Button_State_NotPressed(mt
      +                          ouch_button_t* button);mcc_generated_files/mtouch/mtouch_button.c: 358: {;mcc_generated_
      +                          files/mtouch/mtouch_button.c: 360:     if ((button->deviation) < (mtouch_button_deviatio
      +                          n_t)(-button->threshold))
 14336                           
 14337                           ;incstack = 0
 14338                           ; Regs used in _Button_State_NotPressed: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14339  02B7  082F               	movf	Button_State_NotPressed@button,w
 14340  02B8  0086               	movwf	6
 14341  02B9  0830               	movf	Button_State_NotPressed@button+1,w
 14342  02BA  0087               	movwf	7
 14343  02BB  314A               	addfsr 1,10
 14344  02BC  0801               	movf	1,w
 14345  02BD  3A80               	xorlw	128
 14346  02BE  00B1               	movwf	??_Button_State_NotPressed
 14347  02BF  082F               	movf	Button_State_NotPressed@button,w
 14348  02C0  0086               	movwf	6
 14349  02C1  0830               	movf	Button_State_NotPressed@button+1,w
 14350  02C2  0087               	movwf	7
 14351  02C3  314F               	addfsr 1,15
 14352  02C4  0301               	decf	1,w
 14353  02C5  3AFF               	xorlw	255
 14354  02C6  3A80               	xorlw	128
 14355  02C7  02B1               	subwf	??_Button_State_NotPressed,f
 14356  02C8  1803               	skipnc
 14357  02C9  2AFC               	goto	l5948
 14358                           
 14359                           ;mcc_generated_files/mtouch/mtouch_button.c: 361:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 362:         (button->counter)++;
 14360  02CA  082F               	movf	Button_State_NotPressed@button,w
 14361  02CB  0086               	movwf	6
 14362  02CC  0830               	movf	Button_State_NotPressed@button+1,w
 14363  02CD  0087               	movwf	7
 14364  02CE  314B               	addfsr 1,11
 14365  02CF  3001               	movlw	1
 14366  02D0  0781               	addwf	1,f
 14367  02D1  3141               	addfsr 1,1
 14368  02D2  1803               	skipnc
 14369  02D3  0A81               	incf	1,f
 14370                           
 14371                           ;mcc_generated_files/mtouch/mtouch_button.c: 363:         if ((button->counter) > (mtouc
      +                          h_button_statecounter_t)((mtouch_button_statecounter_t)8u))
 14372  02D4  082F               	movf	Button_State_NotPressed@button,w
 14373  02D5  0086               	movwf	6
 14374  02D6  0830               	movf	Button_State_NotPressed@button+1,w
 14375  02D7  0087               	movwf	7
 14376  02D8  314B               	addfsr 1,11
 14377  02D9  3F40               	moviw [0]fsr1
 14378  02DA  00B1               	movwf	??_Button_State_NotPressed
 14379  02DB  3F41               	moviw [1]fsr1
 14380  02DC  00B2               	movwf	??_Button_State_NotPressed+1
 14381  02DD  3000               	movlw	0
 14382  02DE  0232               	subwf	??_Button_State_NotPressed+1,w
 14383  02DF  3009               	movlw	9
 14384  02E0  1903               	skipnz
 14385  02E1  0231               	subwf	??_Button_State_NotPressed,w
 14386  02E2  1C03               	skipc
 14387  02E3  2B46               	goto	l5964
 14388                           
 14389                           ;mcc_generated_files/mtouch/mtouch_button.c: 364:         {;mcc_generated_files/mtouch/m
      +                          touch_button.c: 365:             button->counter = (mtouch_button_statecounter_t)0;
 14390  02E4  082F               	movf	Button_State_NotPressed@button,w
 14391  02E5  0086               	movwf	6
 14392  02E6  0830               	movf	Button_State_NotPressed@button+1,w
 14393  02E7  0087               	movwf	7
 14394  02E8  314B               	addfsr 1,11
 14395  02E9  3000               	movlw	0
 14396  02EA  3FC0               	movwi [0]fsr1
 14397  02EB  3FC1               	movwi [1]fsr1
 14398                           
 14399                           ;mcc_generated_files/mtouch/mtouch_button.c: 366:             MTOUCH_Button_Initialize(b
      +                          utton->name);
 14400  02EC  082F               	movf	Button_State_NotPressed@button,w
 14401  02ED  0086               	movwf	6
 14402  02EE  0830               	movf	Button_State_NotPressed@button+1,w
 14403  02EF  0087               	movwf	7
 14404  02F0  0801               	movf	1,w
 14405  02F1  3188  201B  3182   	fcall	_MTOUCH_Button_Initialize
 14406  02F4                     l5946:
 14407                           
 14408                           ;mcc_generated_files/mtouch/mtouch_button.c: 367:             Button_Reburst_Request(but
      +                          ton);
 14409  02F4  0830               	movf	Button_State_NotPressed@button+1,w
 14410  02F5  00F9               	movwf	Button_Reburst_Request@button+1
 14411  02F6  082F               	movf	Button_State_NotPressed@button,w
 14412  02F7  00F8               	movwf	Button_Reburst_Request@button
 14413  02F8  319F  27B7  3182   	fcall	_Button_Reburst_Request
 14414  02FB  2B46               	goto	l5964
 14415  02FC                     l5948:
 14416  02FC  082F               	movf	Button_State_NotPressed@button,w
 14417  02FD  0086               	movwf	6
 14418  02FE  0830               	movf	Button_State_NotPressed@button+1,w
 14419  02FF  0087               	movwf	7
 14420  0300  314A               	addfsr 1,10
 14421  0301  0801               	movf	1,w
 14422  0302  00B1               	movwf	??_Button_State_NotPressed
 14423  0303  01B2               	clrf	??_Button_State_NotPressed+1
 14424  0304  1BB1               	btfsc	??_Button_State_NotPressed,7
 14425  0305  03B2               	decf	??_Button_State_NotPressed+1,f
 14426  0306  082F               	movf	Button_State_NotPressed@button,w
 14427  0307  0086               	movwf	6
 14428  0308  0830               	movf	Button_State_NotPressed@button+1,w
 14429  0309  0087               	movwf	7
 14430  030A  314F               	addfsr 1,15
 14431  030B  0832               	movf	??_Button_State_NotPressed+1,w
 14432  030C  3A80               	xorlw	128
 14433  030D  3C80               	sublw	128
 14434  030E  1D03               	skipz
 14435  030F  2B12               	goto	u5225
 14436  0310  0831               	movf	??_Button_State_NotPressed,w
 14437  0311  0201               	subwf	1,w
 14438  0312                     u5225:
 14439  0312  1803               	skipnc
 14440  0313  2B3D               	goto	l5962
 14441                           
 14442                           ;mcc_generated_files/mtouch/mtouch_button.c: 372:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 373:         if(button->aks_group != No_AKS_Group)
 14443  0314  0020               	movlb	0	; select bank0
 14444  0315  082F               	movf	Button_State_NotPressed@button,w
 14445  0316  0086               	movwf	6
 14446  0317  0830               	movf	Button_State_NotPressed@button+1,w
 14447  0318  0087               	movwf	7
 14448  0319  3143               	addfsr 1,3
 14449  031A  0801               	movf	1,w
 14450  031B  1903               	btfsc	3,2
 14451  031C  2B27               	goto	l5956
 14452                           
 14453                           ;mcc_generated_files/mtouch/mtouch_button.c: 374:         {;mcc_generated_files/mtouch/m
      +                          touch_button.c: 375:             if(Button_Check_AKS_Block(button))
 14454  031D  0830               	movf	Button_State_NotPressed@button+1,w
 14455  031E  00A5               	movwf	Button_Check_AKS_Block@button+1
 14456  031F  082F               	movf	Button_State_NotPressed@button,w
 14457  0320  00A4               	movwf	Button_Check_AKS_Block@button
 14458  0321  3185  2504  3182   	fcall	_Button_Check_AKS_Block
 14459  0324  3A00               	xorlw	0
 14460  0325  1D03               	btfss	3,2
 14461  0326  0008               	return
 14462  0327                     l5956:
 14463                           
 14464                           ;mcc_generated_files/mtouch/mtouch_button.c: 379:         button->state = MTOUCH_BUTTON_
      +                          STATE_pressDebounce;
 14465  0327  0020               	movlb	0	; select bank0
 14466  0328  082F               	movf	Button_State_NotPressed@button,w
 14467  0329  3E02               	addlw	2
 14468  032A  00B1               	movwf	??_Button_State_NotPressed
 14469  032B  3000               	movlw	0
 14470  032C  3D30               	addwfc	Button_State_NotPressed@button+1,w
 14471  032D  00B2               	movwf	??_Button_State_NotPressed+1
 14472  032E  0831               	movf	??_Button_State_NotPressed,w
 14473  032F  0086               	movwf	6
 14474  0330  0832               	movf	??_Button_State_NotPressed+1,w
 14475  0331  0087               	movwf	7
 14476  0332  3002               	movlw	2
 14477  0333  0081               	movwf	1
 14478                           
 14479                           ;mcc_generated_files/mtouch/mtouch_button.c: 380:         button->counter = (mtouch_butt
      +                          on_statecounter_t)0;
 14480  0334  082F               	movf	Button_State_NotPressed@button,w
 14481  0335  0086               	movwf	6
 14482  0336  0830               	movf	Button_State_NotPressed@button+1,w
 14483  0337  0087               	movwf	7
 14484  0338  314B               	addfsr 1,11
 14485  0339  3000               	movlw	0
 14486  033A  3FC0               	movwi [0]fsr1
 14487  033B  3FC1               	movwi [1]fsr1
 14488  033C  2AF4               	goto	l5946
 14489  033D                     l5962:
 14490                           
 14491                           ;mcc_generated_files/mtouch/mtouch_button.c: 384:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 386:         button->counter = (mtouch_button_statecounter_t)0;
 14492  033D  0020               	movlb	0	; select bank0
 14493  033E  082F               	movf	Button_State_NotPressed@button,w
 14494  033F  0086               	movwf	6
 14495  0340  0830               	movf	Button_State_NotPressed@button+1,w
 14496  0341  0087               	movwf	7
 14497  0342  314B               	addfsr 1,11
 14498  0343  3000               	movlw	0
 14499  0344  3FC0               	movwi [0]fsr1
 14500  0345  3FC1               	movwi [1]fsr1
 14501  0346                     l5964:
 14502                           
 14503                           ;mcc_generated_files/mtouch/mtouch_button.c: 391:     if(button->aks_group != No_AKS_Gro
      +                          up)
 14504  0346  0020               	movlb	0	; select bank0
 14505  0347  082F               	movf	Button_State_NotPressed@button,w
 14506  0348  0086               	movwf	6
 14507  0349  0830               	movf	Button_State_NotPressed@button+1,w
 14508  034A  0087               	movwf	7
 14509  034B  3143               	addfsr 1,3
 14510  034C  0801               	movf	1,w
 14511  034D  1903               	btfsc	3,2
 14512  034E  2B64               	goto	l5972
 14513                           
 14514                           ;mcc_generated_files/mtouch/mtouch_button.c: 392:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 393:         if(Button_Check_AKS_Block(button))
 14515  034F  0830               	movf	Button_State_NotPressed@button+1,w
 14516  0350  00A5               	movwf	Button_Check_AKS_Block@button+1
 14517  0351  082F               	movf	Button_State_NotPressed@button,w
 14518  0352  00A4               	movwf	Button_Check_AKS_Block@button
 14519  0353  3185  2504  3182   	fcall	_Button_Check_AKS_Block
 14520  0356  3A00               	xorlw	0
 14521  0357  1903               	skipnz
 14522  0358  2B64               	goto	l5972
 14523                           
 14524                           ;mcc_generated_files/mtouch/mtouch_button.c: 394:         {;mcc_generated_files/mtouch/m
      +                          touch_button.c: 395:             button->baseline_count = (mtouch_button_baselinecounter
      +                          _t)
 14525  0359  0020               	movlb	0	; select bank0
 14526  035A  082F               	movf	Button_State_NotPressed@button,w
 14527  035B  0086               	movwf	6
 14528  035C  0830               	movf	Button_State_NotPressed@button+1,w
 14529  035D  0087               	movwf	7
 14530  035E  314D               	addfsr 1,13
 14531  035F  30FF               	movlw	255
 14532  0360  3FC0               	movwi [0]fsr1
 14533  0361  30FB               	movlw	251
 14534  0362  3FC1               	movwi [1]fsr1
 14535  0363  0008               	return
 14536  0364                     l5972:
 14537                           
 14538                           ;mcc_generated_files/mtouch/mtouch_button.c: 401:     (button->baseline_count)++;
 14539  0364  0020               	movlb	0	; select bank0
 14540  0365  082F               	movf	Button_State_NotPressed@button,w
 14541  0366  0086               	movwf	6
 14542  0367  0830               	movf	Button_State_NotPressed@button+1,w
 14543  0368  0087               	movwf	7
 14544  0369  314D               	addfsr 1,13
 14545  036A  3001               	movlw	1
 14546  036B  0781               	addwf	1,f
 14547  036C  3141               	addfsr 1,1
 14548  036D  1803               	skipnc
 14549  036E  0A81               	incf	1,f
 14550                           
 14551                           ;mcc_generated_files/mtouch/mtouch_button.c: 402:     if ((button->baseline_count) == ((
      +                          mtouch_button_baselinecounter_t)64u))
 14552  036F  082F               	movf	Button_State_NotPressed@button,w
 14553  0370  0086               	movwf	6
 14554  0371  0830               	movf	Button_State_NotPressed@button+1,w
 14555  0372  0087               	movwf	7
 14556  0373  314D               	addfsr 1,13
 14557  0374  0016               	moviw fsr1++
 14558  0375  3A40               	xorlw	64
 14559  0376  00B1               	movwf	??_Button_State_NotPressed
 14560  0377  0016               	moviw fsr1++
 14561  0378  04B1               	iorwf	??_Button_State_NotPressed,f
 14562  0379  1D03               	btfss	3,2
 14563  037A  0008               	return
 14564                           
 14565                           ;mcc_generated_files/mtouch/mtouch_button.c: 403:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 404:         button->baseline_count = (mtouch_button_baselinecounter_t)0;
 14566  037B  082F               	movf	Button_State_NotPressed@button,w
 14567  037C  0086               	movwf	6
 14568  037D  0830               	movf	Button_State_NotPressed@button+1,w
 14569  037E  0087               	movwf	7
 14570  037F  314D               	addfsr 1,13
 14571  0380  3000               	movlw	0
 14572  0381  3FC0               	movwi [0]fsr1
 14573  0382  3FC1               	movwi [1]fsr1
 14574                           
 14575                           ;mcc_generated_files/mtouch/mtouch_button.c: 405:         Button_Baseline_Update(button)
      +                          ;
 14576  0383  0830               	movf	Button_State_NotPressed@button+1,w
 14577  0384  00F3               	movwf	Button_Baseline_Update@button+1
 14578  0385  082F               	movf	Button_State_NotPressed@button,w
 14579  0386  00F2               	movwf	Button_Baseline_Update@button
 14580  0387  3186  26D0         	fcall	_Button_Baseline_Update
 14581  0389  0008               	return
 14582  038A                     __end_of_Button_State_NotPressed:
 14583                           
 14584                           	psect	text96
 14585  0E14                     __ptext96:	
 14586 ;; *************** function _Button_State_Initializing *****************
 14587 ;; Defined at:
 14588 ;;		line 336 in file "mcc_generated_files/mtouch/mtouch_button.c"
 14589 ;; Parameters:    Size  Location     Type
 14590 ;;  button          2   15[BANK0 ] PTR struct .
 14591 ;;		 -> mtouch_button(180), 
 14592 ;; Auto vars:     Size  Location     Type
 14593 ;;		None
 14594 ;; Return value:  Size  Location     Type
 14595 ;;                  1    wreg      void 
 14596 ;; Registers used:
 14597 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14598 ;; Tracked objects:
 14599 ;;		On entry : 1F/0
 14600 ;;		On exit  : 1F/1
 14601 ;;		Unchanged: 0/0
 14602 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14603 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14604 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14605 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14606 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14607 ;;Total ram usage:        6 bytes
 14608 ;; Hardware stack levels used: 1
 14609 ;; Hardware stack levels required when called: 7
 14610 ;; This function calls:
 14611 ;;		_Button_Baseline_Initialize
 14612 ;;		_Button_Baseline_Update
 14613 ;;		_Button_Reburst_Request
 14614 ;; This function is called by:
 14615 ;;		_Button_Service
 14616 ;; This function uses a non-reentrant model
 14617 ;;
 14618                           
 14619                           
 14620                           ;psect for function _Button_State_Initializing
 14621  0E14                     _Button_State_Initializing:
 14622                           
 14623                           ;mcc_generated_files/mtouch/mtouch_button.c: 336: static void Button_State_Initializing(
      +                          mtouch_button_t* button);mcc_generated_files/mtouch/mtouch_button.c: 337: {;mcc_generate
      +                          d_files/mtouch/mtouch_button.c: 339:     if ((button->counter) <= (mtouch_button_stateco
      +                          unter_t)((mtouch_button_baselinecounter_t)16u)/2)
 14624                           
 14625                           ;incstack = 0
 14626                           ; Regs used in _Button_State_Initializing: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cs
      +                          tack]
 14627  0E14  082F               	movf	Button_State_Initializing@button,w
 14628  0E15  0086               	movwf	6
 14629  0E16  0830               	movf	Button_State_Initializing@button+1,w
 14630  0E17  0087               	movwf	7
 14631  0E18  314B               	addfsr 1,11
 14632  0E19  3F40               	moviw [0]fsr1
 14633  0E1A  00B1               	movwf	??_Button_State_Initializing
 14634  0E1B  3F41               	moviw [1]fsr1
 14635  0E1C  00B2               	movwf	??_Button_State_Initializing+1
 14636  0E1D  3000               	movlw	0
 14637  0E1E  0232               	subwf	??_Button_State_Initializing+1,w
 14638  0E1F  3009               	movlw	9
 14639  0E20  1903               	skipnz
 14640  0E21  0231               	subwf	??_Button_State_Initializing,w
 14641  0E22  1803               	skipnc
 14642  0E23  2E2C               	goto	l5924
 14643                           
 14644                           ;mcc_generated_files/mtouch/mtouch_button.c: 340:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 341:         Button_Baseline_Initialize(button);
 14645  0E24  0830               	movf	Button_State_Initializing@button+1,w
 14646  0E25  00A6               	movwf	Button_Baseline_Initialize@button+1
 14647  0E26  082F               	movf	Button_State_Initializing@button,w
 14648  0E27  00A5               	movwf	Button_Baseline_Initialize@button
 14649  0E28  3196  26D9  318E   	fcall	_Button_Baseline_Initialize
 14650                           
 14651                           ;mcc_generated_files/mtouch/mtouch_button.c: 342:     } else {
 14652  0E2B  2E33               	goto	l5926
 14653  0E2C                     l5924:
 14654                           
 14655                           ;mcc_generated_files/mtouch/mtouch_button.c: 343:         Button_Baseline_Update(button)
      +                          ;
 14656  0E2C  0830               	movf	Button_State_Initializing@button+1,w
 14657  0E2D  00F3               	movwf	Button_Baseline_Update@button+1
 14658  0E2E  082F               	movf	Button_State_Initializing@button,w
 14659  0E2F  00F2               	movwf	Button_Baseline_Update@button
 14660  0E30  3186  26D0  318E   	fcall	_Button_Baseline_Update
 14661  0E33                     l5926:
 14662                           
 14663                           ;mcc_generated_files/mtouch/mtouch_button.c: 347:     (button->counter)++;
 14664  0E33  082F               	movf	Button_State_Initializing@button,w
 14665  0E34  0086               	movwf	6
 14666  0E35  0830               	movf	Button_State_Initializing@button+1,w
 14667  0E36  0087               	movwf	7
 14668  0E37  314B               	addfsr 1,11
 14669  0E38  3001               	movlw	1
 14670  0E39  0781               	addwf	1,f
 14671  0E3A  3141               	addfsr 1,1
 14672  0E3B  1803               	skipnc
 14673  0E3C  0A81               	incf	1,f
 14674                           
 14675                           ;mcc_generated_files/mtouch/mtouch_button.c: 348:     if ((button->counter) >= (mtouch_b
      +                          utton_statecounter_t)((mtouch_button_baselinecounter_t)16u))
 14676  0E3D  082F               	movf	Button_State_Initializing@button,w
 14677  0E3E  0086               	movwf	6
 14678  0E3F  0830               	movf	Button_State_Initializing@button+1,w
 14679  0E40  0087               	movwf	7
 14680  0E41  314B               	addfsr 1,11
 14681  0E42  3F40               	moviw [0]fsr1
 14682  0E43  00B1               	movwf	??_Button_State_Initializing
 14683  0E44  3F41               	moviw [1]fsr1
 14684  0E45  00B2               	movwf	??_Button_State_Initializing+1
 14685  0E46  3000               	movlw	0
 14686  0E47  0232               	subwf	??_Button_State_Initializing+1,w
 14687  0E48  3010               	movlw	16
 14688  0E49  1903               	skipnz
 14689  0E4A  0231               	subwf	??_Button_State_Initializing,w
 14690  0E4B  1C03               	skipc
 14691  0E4C  2E7E               	goto	l5934
 14692                           
 14693                           ;mcc_generated_files/mtouch/mtouch_button.c: 349:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 350:         button->reading = (mtouch_button_reading_t)((button->baseline)>
      +                          >((uint8_t)4u));
 14694  0E4D  082F               	movf	Button_State_Initializing@button,w
 14695  0E4E  0086               	movwf	6
 14696  0E4F  0830               	movf	Button_State_Initializing@button+1,w
 14697  0E50  0087               	movwf	7
 14698  0E51  3146               	addfsr 1,6
 14699  0E52  3F40               	moviw [0]fsr1
 14700  0E53  00B1               	movwf	??_Button_State_Initializing
 14701  0E54  3F41               	moviw [1]fsr1
 14702  0E55  00B2               	movwf	??_Button_State_Initializing+1
 14703  0E56  3F42               	moviw [2]fsr1
 14704  0E57  00B3               	movwf	??_Button_State_Initializing+2
 14705  0E58  3F43               	moviw [3]fsr1
 14706  0E59  00B4               	movwf	??_Button_State_Initializing+3
 14707  0E5A  3004               	movlw	4
 14708  0E5B                     u5195:
 14709  0E5B  36B4               	lsrf	??_Button_State_Initializing+3,f
 14710  0E5C  0CB3               	rrf	??_Button_State_Initializing+2,f
 14711  0E5D  0CB2               	rrf	??_Button_State_Initializing+1,f
 14712  0E5E  0CB1               	rrf	??_Button_State_Initializing,f
 14713  0E5F  0B89               	decfsz	9,f
 14714  0E60  2E5B               	goto	u5195
 14715  0E61  082F               	movf	Button_State_Initializing@button,w
 14716  0E62  0086               	movwf	6
 14717  0E63  0830               	movf	Button_State_Initializing@button+1,w
 14718  0E64  0087               	movwf	7
 14719  0E65  3144               	addfsr 1,4
 14720  0E66  0831               	movf	??_Button_State_Initializing,w
 14721  0E67  3FC0               	movwi [0]fsr1
 14722  0E68  0832               	movf	??_Button_State_Initializing+1,w
 14723  0E69  3FC1               	movwi [1]fsr1
 14724                           
 14725                           ;mcc_generated_files/mtouch/mtouch_button.c: 351:         button->state = MTOUCH_BUTTON_
      +                          STATE_notPressed;
 14726  0E6A  082F               	movf	Button_State_Initializing@button,w
 14727  0E6B  3E02               	addlw	2
 14728  0E6C  00B1               	movwf	??_Button_State_Initializing
 14729  0E6D  3000               	movlw	0
 14730  0E6E  3D30               	addwfc	Button_State_Initializing@button+1,w
 14731  0E6F  00B2               	movwf	??_Button_State_Initializing+1
 14732  0E70  0831               	movf	??_Button_State_Initializing,w
 14733  0E71  0086               	movwf	6
 14734  0E72  0832               	movf	??_Button_State_Initializing+1,w
 14735  0E73  0087               	movwf	7
 14736  0E74  3001               	movlw	1
 14737  0E75  0081               	movwf	1
 14738                           
 14739                           ;mcc_generated_files/mtouch/mtouch_button.c: 352:         button->counter = (mtouch_butt
      +                          on_statecounter_t)0;
 14740  0E76  082F               	movf	Button_State_Initializing@button,w
 14741  0E77  0086               	movwf	6
 14742  0E78  0830               	movf	Button_State_Initializing@button+1,w
 14743  0E79  0087               	movwf	7
 14744  0E7A  314B               	addfsr 1,11
 14745  0E7B  3000               	movlw	0
 14746  0E7C  3FC0               	movwi [0]fsr1
 14747  0E7D  3FC1               	movwi [1]fsr1
 14748  0E7E                     l5934:
 14749                           
 14750                           ;mcc_generated_files/mtouch/mtouch_button.c: 355:     Button_Reburst_Request(button);
 14751  0E7E  0830               	movf	Button_State_Initializing@button+1,w
 14752  0E7F  00F9               	movwf	Button_Reburst_Request@button+1
 14753  0E80  082F               	movf	Button_State_Initializing@button,w
 14754  0E81  00F8               	movwf	Button_Reburst_Request@button
 14755  0E82  319F  27B7         	fcall	_Button_Reburst_Request
 14756  0E84  0008               	return
 14757  0E85                     __end_of_Button_State_Initializing:
 14758                           
 14759                           	psect	text97
 14760  118B                     __ptext97:	
 14761 ;; *************** function _Button_State_Suspended *****************
 14762 ;; Defined at:
 14763 ;;		line 478 in file "mcc_generated_files/mtouch/mtouch_button.c"
 14764 ;; Parameters:    Size  Location     Type
 14765 ;;  button          2   15[BANK0 ] PTR struct .
 14766 ;;		 -> mtouch_button(180), 
 14767 ;; Auto vars:     Size  Location     Type
 14768 ;;		None
 14769 ;; Return value:  Size  Location     Type
 14770 ;;                  1    wreg      void 
 14771 ;; Registers used:
 14772 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14773 ;; Tracked objects:
 14774 ;;		On entry : 1F/0
 14775 ;;		On exit  : 1F/0
 14776 ;;		Unchanged: 0/0
 14777 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14778 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14779 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14780 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14781 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14782 ;;Total ram usage:        2 bytes
 14783 ;; Hardware stack levels used: 1
 14784 ;; Hardware stack levels required when called: 6
 14785 ;; This function calls:
 14786 ;;		_Button_Baseline_Update
 14787 ;;		_MTOUCH_Sensor_Disable
 14788 ;; This function is called by:
 14789 ;;		_Button_Service
 14790 ;; This function uses a non-reentrant model
 14791 ;;
 14792                           
 14793                           
 14794                           ;psect for function _Button_State_Suspended
 14795  118B                     _Button_State_Suspended:
 14796                           
 14797                           ;mcc_generated_files/mtouch/mtouch_button.c: 478: static void Button_State_Suspended(mto
      +                          uch_button_t* button);mcc_generated_files/mtouch/mtouch_button.c: 479: {;mcc_generated_f
      +                          iles/mtouch/mtouch_button.c: 481:     Button_Baseline_Update(button);
 14798                           
 14799                           ;incstack = 0
 14800                           ; Regs used in _Button_State_Suspended: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstac
      +                          k]
 14801  118B  0830               	movf	Button_State_Suspended@button+1,w
 14802  118C  00F3               	movwf	Button_Baseline_Update@button+1
 14803  118D  082F               	movf	Button_State_Suspended@button,w
 14804  118E  00F2               	movwf	Button_Baseline_Update@button
 14805  118F  3186  26D0  3191   	fcall	_Button_Baseline_Update
 14806                           
 14807                           ;mcc_generated_files/mtouch/mtouch_button.c: 482:     button->counter = (mtouch_button_s
      +                          tatecounter_t)0;
 14808  1192  082F               	movf	Button_State_Suspended@button,w
 14809  1193  0086               	movwf	6
 14810  1194  0830               	movf	Button_State_Suspended@button+1,w
 14811  1195  0087               	movwf	7
 14812  1196  314B               	addfsr 1,11
 14813  1197  3000               	movlw	0
 14814  1198  3FC0               	movwi [0]fsr1
 14815  1199  3FC1               	movwi [1]fsr1
 14816                           
 14817                           ;mcc_generated_files/mtouch/mtouch_button.c: 485:     MTOUCH_Sensor_Disable(button->sens
      +                          or);
 14818  119A  082F               	movf	Button_State_Suspended@button,w
 14819  119B  0086               	movwf	6
 14820  119C  0830               	movf	Button_State_Suspended@button+1,w
 14821  119D  0087               	movwf	7
 14822  119E  3141               	addfsr 1,1
 14823  119F  0801               	movf	1,w
 14824  11A0  3192  2246         	fcall	_MTOUCH_Sensor_Disable
 14825  11A2  0008               	return
 14826  11A3                     __end_of_Button_State_Suspended:
 14827                           
 14828                           	psect	text98
 14829  1246                     __ptext98:	
 14830 ;; *************** function _MTOUCH_Sensor_Disable *****************
 14831 ;; Defined at:
 14832 ;;		line 483 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
 14833 ;; Parameters:    Size  Location     Type
 14834 ;;  sensor          1    wreg     enum E2707
 14835 ;; Auto vars:     Size  Location     Type
 14836 ;;  sensor          1    8[COMMON] enum E2707
 14837 ;; Return value:  Size  Location     Type
 14838 ;;                  1    wreg      void 
 14839 ;; Registers used:
 14840 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14841 ;; Tracked objects:
 14842 ;;		On entry : 1F/0
 14843 ;;		On exit  : 1F/0
 14844 ;;		Unchanged: 0/0
 14845 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14846 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14847 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14848 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14849 ;;      Totals:         1       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14850 ;;Total ram usage:        5 bytes
 14851 ;; Hardware stack levels used: 1
 14852 ;; Hardware stack levels required when called: 5
 14853 ;; This function calls:
 14854 ;;		___wmul
 14855 ;; This function is called by:
 14856 ;;		_Button_State_Suspended
 14857 ;; This function uses a non-reentrant model
 14858 ;;
 14859                           
 14860                           
 14861                           ;psect for function _MTOUCH_Sensor_Disable
 14862  1246                     _MTOUCH_Sensor_Disable:
 14863                           
 14864                           ;incstack = 0
 14865                           ; Regs used in _MTOUCH_Sensor_Disable: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 14866                           ;MTOUCH_Sensor_Disable@sensor stored from wreg
 14867  1246  00F8               	movwf	MTOUCH_Sensor_Disable@sensor
 14868                           
 14869                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 483: void MTOUCH_Sensor_Disable(enum mtouch
      +                          _sensor_names sensor);mcc_generated_files/mtouch/mtouch_sensor.c: 484: {;mcc_generated_f
      +                          iles/mtouch/mtouch_sensor.c: 485:     if(sensor < 10u)
 14870  1247  300A               	movlw	10
 14871  1248  0278               	subwf	MTOUCH_Sensor_Disable@sensor,w
 14872  1249  1803               	skipnc
 14873  124A  0008               	return
 14874                           
 14875                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 486:         mtouch_sensor[sensor].enabled 
      +                          = 0;
 14876  124B  0878               	movf	MTOUCH_Sensor_Disable@sensor,w
 14877  124C  00A0               	movwf	??_MTOUCH_Sensor_Disable
 14878  124D  01A1               	clrf	??_MTOUCH_Sensor_Disable+1
 14879  124E  0820               	movf	??_MTOUCH_Sensor_Disable,w
 14880  124F  00F2               	movwf	___wmul@multiplier
 14881  1250  0821               	movf	??_MTOUCH_Sensor_Disable+1,w
 14882  1251  00F3               	movwf	___wmul@multiplier+1
 14883  1252  3009               	movlw	9
 14884  1253  00F4               	movwf	___wmul@multiplicand
 14885  1254  3000               	movlw	0
 14886  1255  00F5               	movwf	___wmul@multiplicand+1
 14887  1256  3188  2000         	fcall	___wmul
 14888  1258  30EA               	movlw	234
 14889  1259  00A2               	movwf	??_MTOUCH_Sensor_Disable+2
 14890  125A  3022               	movlw	34
 14891  125B  00A3               	movwf	??_MTOUCH_Sensor_Disable+3
 14892  125C  0872               	movf	?___wmul,w
 14893  125D  0722               	addwf	??_MTOUCH_Sensor_Disable+2,w
 14894  125E  0086               	movwf	6
 14895  125F  0873               	movf	?___wmul+1,w
 14896  1260  3D23               	addwfc	??_MTOUCH_Sensor_Disable+3,w
 14897  1261  0087               	movwf	7
 14898  1262  1001               	bcf	1,0
 14899  1263  0008               	return
 14900  1264                     __end_of_MTOUCH_Sensor_Disable:
 14901                           
 14902                           	psect	text99
 14903  1FAA                     __ptext99:	
 14904 ;; *************** function _Button_DefaultCallback *****************
 14905 ;; Defined at:
 14906 ;;		line 852 in file "mcc_generated_files/mtouch/mtouch_button.c"
 14907 ;; Parameters:    Size  Location     Type
 14908 ;;  button          1    2[COMMON] enum E2935
 14909 ;; Auto vars:     Size  Location     Type
 14910 ;;		None
 14911 ;; Return value:  Size  Location     Type
 14912 ;;                  1    wreg      void 
 14913 ;; Registers used:
 14914 ;;		None
 14915 ;; Tracked objects:
 14916 ;;		On entry : 1F/0
 14917 ;;		On exit  : 1F/0
 14918 ;;		Unchanged: 1F/0
 14919 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14920 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14921 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14922 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14923 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14924 ;;Total ram usage:        1 bytes
 14925 ;; Hardware stack levels used: 1
 14926 ;; Hardware stack levels required when called: 4
 14927 ;; This function calls:
 14928 ;;		Nothing
 14929 ;; This function is called by:
 14930 ;;		_Button_State_Pressed
 14931 ;;		_Button_State_PressDebounce
 14932 ;;		_Button_State_ReleaseDebounce
 14933 ;; This function uses a non-reentrant model
 14934 ;;
 14935                           
 14936                           
 14937                           ;psect for function _Button_DefaultCallback
 14938  1FAA                     _Button_DefaultCallback:
 14939                           
 14940                           ;incstack = 0
 14941                           ; Regs used in _Button_DefaultCallback: []
 14942  1FAA  0008               	return
 14943  1FAB                     __end_of_Button_DefaultCallback:
 14944                           
 14945                           	psect	text100
 14946  081B                     __ptext100:	
 14947 ;; *************** function _MTOUCH_Button_Initialize *****************
 14948 ;; Defined at:
 14949 ;;		line 277 in file "mcc_generated_files/mtouch/mtouch_button.c"
 14950 ;; Parameters:    Size  Location     Type
 14951 ;;  name            1    wreg     enum E2935
 14952 ;; Auto vars:     Size  Location     Type
 14953 ;;  name            1    4[BANK0 ] enum E2935
 14954 ;;  button          2    5[BANK0 ] PTR struct .
 14955 ;;		 -> mtouch_button(180), 
 14956 ;; Return value:  Size  Location     Type
 14957 ;;                  1    wreg      void 
 14958 ;; Registers used:
 14959 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14960 ;; Tracked objects:
 14961 ;;		On entry : 1F/0
 14962 ;;		On exit  : 1F/0
 14963 ;;		Unchanged: 0/0
 14964 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14965 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14966 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14967 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14968 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14969 ;;Total ram usage:        7 bytes
 14970 ;; Hardware stack levels used: 1
 14971 ;; Hardware stack levels required when called: 5
 14972 ;; This function calls:
 14973 ;;		_MTOUCH_Sensor_Calibrate
 14974 ;;		___wmul
 14975 ;; This function is called by:
 14976 ;;		_MTOUCH_Button_InitializeAll
 14977 ;;		_Button_Service
 14978 ;;		_Button_State_NotPressed
 14979 ;;		_Button_State_Pressed
 14980 ;; This function uses a non-reentrant model
 14981 ;;
 14982                           
 14983                           
 14984                           ;psect for function _MTOUCH_Button_Initialize
 14985  081B                     _MTOUCH_Button_Initialize:
 14986                           
 14987                           ;incstack = 0
 14988                           ; Regs used in _MTOUCH_Button_Initialize: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cst
      +                          ack]
 14989                           ;MTOUCH_Button_Initialize@name stored from wreg
 14990  081B  00A4               	movwf	MTOUCH_Button_Initialize@name
 14991                           
 14992                           ;mcc_generated_files/mtouch/mtouch_button.c: 277: void MTOUCH_Button_Initialize(enum mto
      +                          uch_button_names name);mcc_generated_files/mtouch/mtouch_button.c: 278: {;mcc_generated_
      +                          files/mtouch/mtouch_button.c: 279:     mtouch_button_t* button = &mtouch_button[name];
 14993  081C  0824               	movf	MTOUCH_Button_Initialize@name,w
 14994  081D  00A0               	movwf	??_MTOUCH_Button_Initialize
 14995  081E  01A1               	clrf	??_MTOUCH_Button_Initialize+1
 14996  081F  0820               	movf	??_MTOUCH_Button_Initialize,w
 14997  0820  00F2               	movwf	___wmul@multiplier
 14998  0821  0821               	movf	??_MTOUCH_Button_Initialize+1,w
 14999  0822  00F3               	movwf	___wmul@multiplier+1
 15000  0823  3012               	movlw	18
 15001  0824  00F4               	movwf	___wmul@multiplicand
 15002  0825  3000               	movlw	0
 15003  0826  00F5               	movwf	___wmul@multiplicand+1
 15004  0827  3188  2000  3188   	fcall	___wmul
 15005  082A  303C               	movlw	60
 15006  082B  00A2               	movwf	??_MTOUCH_Button_Initialize+2
 15007  082C  3023               	movlw	35
 15008  082D  00A3               	movwf	??_MTOUCH_Button_Initialize+3
 15009  082E  0872               	movf	?___wmul,w
 15010  082F  0722               	addwf	??_MTOUCH_Button_Initialize+2,w
 15011  0830  00A5               	movwf	MTOUCH_Button_Initialize@button
 15012  0831  0873               	movf	?___wmul+1,w
 15013  0832  3D23               	addwfc	??_MTOUCH_Button_Initialize+3,w
 15014  0833  00A6               	movwf	MTOUCH_Button_Initialize@button+1
 15015                           
 15016                           ;mcc_generated_files/mtouch/mtouch_button.c: 281:     button->state = MTOUCH_BUTTON_STAT
      +                          E_initializing;
 15017  0834  0825               	movf	MTOUCH_Button_Initialize@button,w
 15018  0835  0086               	movwf	6
 15019  0836  0826               	movf	MTOUCH_Button_Initialize@button+1,w
 15020  0837  0087               	movwf	7
 15021  0838  3142               	addfsr 1,2
 15022  0839  0181               	clrf	1
 15023                           
 15024                           ;mcc_generated_files/mtouch/mtouch_button.c: 282:     button->baseline = (mtouch_button_
      +                          baseline_t)0;
 15025  083A  0825               	movf	MTOUCH_Button_Initialize@button,w
 15026  083B  3E06               	addlw	6
 15027  083C  00A0               	movwf	??_MTOUCH_Button_Initialize
 15028  083D  3000               	movlw	0
 15029  083E  3D26               	addwfc	MTOUCH_Button_Initialize@button+1,w
 15030  083F  00A1               	movwf	??_MTOUCH_Button_Initialize+1
 15031  0840  0820               	movf	??_MTOUCH_Button_Initialize,w
 15032  0841  0086               	movwf	6
 15033  0842  0821               	movf	??_MTOUCH_Button_Initialize+1,w
 15034  0843  0087               	movwf	7
 15035  0844  3000               	movlw	0
 15036  0845  3FC0               	movwi [0]fsr1
 15037  0846  3FC1               	movwi [1]fsr1
 15038  0847  3FC2               	movwi [2]fsr1
 15039  0848  3FC3               	movwi [3]fsr1
 15040                           
 15041                           ;mcc_generated_files/mtouch/mtouch_button.c: 283:     button->counter = (mtouch_button_s
      +                          tatecounter_t)0;
 15042  0849  0825               	movf	MTOUCH_Button_Initialize@button,w
 15043  084A  0086               	movwf	6
 15044  084B  0826               	movf	MTOUCH_Button_Initialize@button+1,w
 15045  084C  0087               	movwf	7
 15046  084D  314B               	addfsr 1,11
 15047  084E  3000               	movlw	0
 15048  084F  3FC0               	movwi [0]fsr1
 15049  0850  3FC1               	movwi [1]fsr1
 15050                           
 15051                           ;mcc_generated_files/mtouch/mtouch_button.c: 284:     button->baseline_count = (mtouch_b
      +                          utton_baselinecounter_t)0;
 15052  0851  0825               	movf	MTOUCH_Button_Initialize@button,w
 15053  0852  0086               	movwf	6
 15054  0853  0826               	movf	MTOUCH_Button_Initialize@button+1,w
 15055  0854  0087               	movwf	7
 15056  0855  314D               	addfsr 1,13
 15057  0856  3000               	movlw	0
 15058  0857  3FC0               	movwi [0]fsr1
 15059  0858  3FC1               	movwi [1]fsr1
 15060                           
 15061                           ;mcc_generated_files/mtouch/mtouch_button.c: 286:     MTOUCH_Sensor_Calibrate(button->se
      +                          nsor);
 15062  0859  0825               	movf	MTOUCH_Button_Initialize@button,w
 15063  085A  0086               	movwf	6
 15064  085B  0826               	movf	MTOUCH_Button_Initialize@button+1,w
 15065  085C  0087               	movwf	7
 15066  085D  3141               	addfsr 1,1
 15067  085E  0801               	movf	1,w
 15068  085F  319F  27A9         	fcall	_MTOUCH_Sensor_Calibrate
 15069  0861  0008               	return
 15070  0862                     __end_of_MTOUCH_Button_Initialize:
 15071                           
 15072                           	psect	text101
 15073  1FA9                     __ptext101:	
 15074 ;; *************** function _MTOUCH_Sensor_Calibrate *****************
 15075 ;; Defined at:
 15076 ;;		line 543 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
 15077 ;; Parameters:    Size  Location     Type
 15078 ;;  sensor          1    wreg     enum E2707
 15079 ;; Auto vars:     Size  Location     Type
 15080 ;;  sensor          1    0[COMMON] enum E2707
 15081 ;; Return value:  Size  Location     Type
 15082 ;;                  1    wreg      void 
 15083 ;; Registers used:
 15084 ;;		wreg
 15085 ;; Tracked objects:
 15086 ;;		On entry : 1F/0
 15087 ;;		On exit  : 1F/0
 15088 ;;		Unchanged: 1F/0
 15089 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15090 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15091 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15092 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15093 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15094 ;;Total ram usage:        0 bytes
 15095 ;; Hardware stack levels used: 1
 15096 ;; Hardware stack levels required when called: 4
 15097 ;; This function calls:
 15098 ;;		Nothing
 15099 ;; This function is called by:
 15100 ;;		_MTOUCH_Button_Initialize
 15101 ;; This function uses a non-reentrant model
 15102 ;;
 15103                           
 15104                           
 15105                           ;psect for function _MTOUCH_Sensor_Calibrate
 15106  1FA9                     _MTOUCH_Sensor_Calibrate:
 15107                           
 15108                           ;incstack = 0
 15109                           ; Regs used in _MTOUCH_Sensor_Calibrate: [wreg]
 15110  1FA9  0008               	return
 15111  1FAA                     __end_of_MTOUCH_Sensor_Calibrate:
 15112                           
 15113                           	psect	text102
 15114  0504                     __ptext102:	
 15115 ;; *************** function _Button_Check_AKS_Block *****************
 15116 ;; Defined at:
 15117 ;;		line 783 in file "mcc_generated_files/mtouch/mtouch_button.c"
 15118 ;; Parameters:    Size  Location     Type
 15119 ;;  button          2    4[BANK0 ] PTR struct .
 15120 ;;		 -> mtouch_button(180), 
 15121 ;; Auto vars:     Size  Location     Type
 15122 ;;  check_button    2   13[BANK0 ] PTR struct .
 15123 ;;		 -> mtouch_button(180), 
 15124 ;;  surplus_devi    2   11[BANK0 ] short 
 15125 ;;  surplus_devi    2    8[BANK0 ] short 
 15126 ;;  currentAKSGr    1   10[BANK0 ] enum E3170
 15127 ;; Return value:  Size  Location     Type
 15128 ;;                  1    wreg      _Bool 
 15129 ;; Registers used:
 15130 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15131 ;; Tracked objects:
 15132 ;;		On entry : 1F/0
 15133 ;;		On exit  : 0/0
 15134 ;;		Unchanged: 0/0
 15135 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15136 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15137 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15138 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15139 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15140 ;;Total ram usage:       11 bytes
 15141 ;; Hardware stack levels used: 1
 15142 ;; Hardware stack levels required when called: 6
 15143 ;; This function calls:
 15144 ;;		_Button_Unscaled_Deviation_Get
 15145 ;;		_MTOUCH_Sensor_isEnabled
 15146 ;; This function is called by:
 15147 ;;		_Button_State_NotPressed
 15148 ;;		_Button_State_PressDebounce
 15149 ;; This function uses a non-reentrant model
 15150 ;;
 15151                           
 15152                           
 15153                           ;psect for function _Button_Check_AKS_Block
 15154  0504                     _Button_Check_AKS_Block:
 15155                           
 15156                           ;mcc_generated_files/mtouch/mtouch_button.c: 783: static _Bool Button_Check_AKS_Block(mt
      +                          ouch_button_t* button);mcc_generated_files/mtouch/mtouch_button.c: 784: {;mcc_generated_
      +                          files/mtouch/mtouch_button.c: 785:     enum mtouch_button_aks_group currentAKSGroup = bu
      +                          tton->aks_group;
 15157                           
 15158                           ;incstack = 0
 15159                           ; Regs used in _Button_Check_AKS_Block: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15160  0504  0824               	movf	Button_Check_AKS_Block@button,w
 15161  0505  0086               	movwf	6
 15162  0506  0825               	movf	Button_Check_AKS_Block@button+1,w
 15163  0507  0087               	movwf	7
 15164  0508  3143               	addfsr 1,3
 15165  0509  0801               	movf	1,w
 15166  050A  00A6               	movwf	??_Button_Check_AKS_Block
 15167  050B  0826               	movf	??_Button_Check_AKS_Block,w
 15168  050C  00AA               	movwf	Button_Check_AKS_Block@currentAKSGroup
 15169                           
 15170                           ;mcc_generated_files/mtouch/mtouch_button.c: 786:     int16_t surplus_deviation_this_but
      +                          ton,surplus_deviation_check_button;;mcc_generated_files/mtouch/mtouch_button.c: 787:    
      +                           mtouch_button_t* check_button;;mcc_generated_files/mtouch/mtouch_button.c: 789:     sur
      +                          plus_deviation_this_button = (int16_t)(Button_Unscaled_Deviation_Get(button) - (mtouch_b
      +                          utton_reading_t)button->threshold);
 15171  050D  0824               	movf	Button_Check_AKS_Block@button,w
 15172  050E  0086               	movwf	6
 15173  050F  0825               	movf	Button_Check_AKS_Block@button+1,w
 15174  0510  0087               	movwf	7
 15175  0511  314F               	addfsr 1,15
 15176  0512  0801               	movf	1,w
 15177  0513  00A6               	movwf	??_Button_Check_AKS_Block
 15178  0514  01A7               	clrf	??_Button_Check_AKS_Block+1
 15179  0515  0825               	movf	Button_Check_AKS_Block@button+1,w
 15180  0516  00F3               	movwf	Button_Unscaled_Deviation_Get@button+1
 15181  0517  0824               	movf	Button_Check_AKS_Block@button,w
 15182  0518  00F2               	movwf	Button_Unscaled_Deviation_Get@button
 15183  0519  3196  263E  3185   	fcall	_Button_Unscaled_Deviation_Get
 15184  051C  0826               	movf	??_Button_Check_AKS_Block,w
 15185  051D  0272               	subwf	?_Button_Unscaled_Deviation_Get,w
 15186  051E  00A8               	movwf	Button_Check_AKS_Block@surplus_deviation_this_button
 15187  051F  0827               	movf	??_Button_Check_AKS_Block+1,w
 15188  0520  3B73               	subwfb	?_Button_Unscaled_Deviation_Get+1,w
 15189  0521  00A9               	movwf	Button_Check_AKS_Block@surplus_deviation_this_button+1
 15190                           
 15191                           ;mcc_generated_files/mtouch/mtouch_button.c: 791:     for(check_button = &mtouch_button[
      +                          0];check_button <= &mtouch_button[10u -1];check_button++)
 15192  0522  303C               	movlw	60
 15193  0523  00AD               	movwf	Button_Check_AKS_Block@check_button
 15194  0524  3023               	movlw	35
 15195  0525  00AE               	movwf	Button_Check_AKS_Block@check_button+1
 15196  0526  30DE               	movlw	222
 15197  0527  00A6               	movwf	??_Button_Check_AKS_Block
 15198  0528  3023               	movlw	35
 15199  0529  00A7               	movwf	??_Button_Check_AKS_Block+1
 15200  052A  082E               	movf	Button_Check_AKS_Block@check_button+1,w
 15201  052B  0227               	subwf	??_Button_Check_AKS_Block+1,w
 15202  052C  1D03               	skipz
 15203  052D  2D30               	goto	u4585
 15204  052E  082D               	movf	Button_Check_AKS_Block@check_button,w
 15205  052F  0226               	subwf	??_Button_Check_AKS_Block,w
 15206  0530                     u4585:
 15207  0530  1C03               	btfss	3,0
 15208  0531  2DA1               	goto	l5608
 15209  0532                     l5578:
 15210                           
 15211                           ;mcc_generated_files/mtouch/mtouch_button.c: 792:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 793:         if(check_button->name == button->name)
 15212  0532  0824               	movf	Button_Check_AKS_Block@button,w
 15213  0533  0086               	movwf	6
 15214  0534  0825               	movf	Button_Check_AKS_Block@button+1,w
 15215  0535  0087               	movwf	7
 15216  0536  082D               	movf	Button_Check_AKS_Block@check_button,w
 15217  0537  0084               	movwf	4
 15218  0538  082E               	movf	Button_Check_AKS_Block@check_button+1,w
 15219  0539  0085               	movwf	5
 15220  053A  0800               	movf	0,w
 15221  053B  0601               	xorwf	1,w
 15222  053C  1903               	btfsc	3,2
 15223  053D  2D90               	goto	l5606
 15224                           
 15225                           ;mcc_generated_files/mtouch/mtouch_button.c: 798:         {;mcc_generated_files/mtouch/m
      +                          touch_button.c: 799:             if(check_button->aks_group == currentAKSGroup)
 15226                           
 15227                           ;mcc_generated_files/mtouch/mtouch_button.c: 794:         {;mcc_generated_files/mtouch/m
      +                          touch_button.c: 796:         }
 15228  053E  082D               	movf	Button_Check_AKS_Block@check_button,w
 15229  053F  0086               	movwf	6
 15230  0540  082E               	movf	Button_Check_AKS_Block@check_button+1,w
 15231  0541  0087               	movwf	7
 15232  0542  3143               	addfsr 1,3
 15233  0543  0801               	movf	1,w
 15234  0544  062A               	xorwf	Button_Check_AKS_Block@currentAKSGroup,w
 15235  0545  1D03               	skipz
 15236  0546  2D90               	goto	l5606
 15237                           
 15238                           ;mcc_generated_files/mtouch/mtouch_button.c: 800:             {;mcc_generated_files/mtou
      +                          ch/mtouch_button.c: 801:                 if(MTOUCH_Sensor_isEnabled(check_button))
 15239  0547  082D               	movf	Button_Check_AKS_Block@check_button,w
 15240  0548  3193  2322  3185   	fcall	_MTOUCH_Sensor_isEnabled
 15241  054B  3A00               	xorlw	0
 15242  054C  1903               	skipnz
 15243  054D  2D90               	goto	l5606
 15244                           
 15245                           ;mcc_generated_files/mtouch/mtouch_button.c: 802:                 {;mcc_generated_files/
      +                          mtouch/mtouch_button.c: 803:                         if(check_button->state == MTOUCH_BU
      +                          TTON_STATE_pressed || check_button->state == MTOUCH_BUTTON_STATE_pressDebounce)
 15246  054E  082D               	movf	Button_Check_AKS_Block@check_button,w
 15247  054F  0086               	movwf	6
 15248  0550  082E               	movf	Button_Check_AKS_Block@check_button+1,w
 15249  0551  0087               	movwf	7
 15250  0552  3142               	addfsr 1,2
 15251  0553  3003               	movlw	3
 15252  0554  0601               	xorwf	1,w
 15253  0555  1903               	btfsc	3,2
 15254  0556  2D6E               	goto	l5590
 15255  0557  082D               	movf	Button_Check_AKS_Block@check_button,w
 15256  0558  0086               	movwf	6
 15257  0559  082E               	movf	Button_Check_AKS_Block@check_button+1,w
 15258  055A  0087               	movwf	7
 15259  055B  3142               	addfsr 1,2
 15260  055C  3002               	movlw	2
 15261  055D  0601               	xorwf	1,w
 15262  055E  1903               	btfsc	3,2
 15263  055F  2D6E               	goto	l5590
 15264  0560  2D70               	goto	l5596
 15265  0561                     l5600:
 15266  0561  0020               	movlb	0	; select bank0
 15267  0562  0829               	movf	Button_Check_AKS_Block@surplus_deviation_this_button+1,w
 15268  0563  3A80               	xorlw	128
 15269  0564  00A6               	movwf	??_Button_Check_AKS_Block
 15270  0565  082C               	movf	Button_Check_AKS_Block@surplus_deviation_check_button+1,w
 15271  0566  3A80               	xorlw	128
 15272  0567  0226               	subwf	??_Button_Check_AKS_Block,w
 15273  0568  1D03               	skipz
 15274  0569  2D6C               	goto	u4655
 15275  056A  082B               	movf	Button_Check_AKS_Block@surplus_deviation_check_button,w
 15276  056B  0228               	subwf	Button_Check_AKS_Block@surplus_deviation_this_button,w
 15277  056C                     u4655:
 15278  056C  1803               	skipnc
 15279  056D  2D90               	goto	l5606
 15280  056E                     l5590:
 15281                           
 15282                           ;mcc_generated_files/mtouch/mtouch_button.c: 804:                             return 1;
 15283  056E  3001               	movlw	1
 15284  056F  0008               	return
 15285  0570                     l5596:
 15286                           
 15287                           ;mcc_generated_files/mtouch/mtouch_button.c: 806:                             {;mcc_gene
      +                          rated_files/mtouch/mtouch_button.c: 807:                                 surplus_deviati
      +                          on_check_button = (int16_t)(Button_Unscaled_Deviation_Get(check_button) - (mtouch_button
      +                          _reading_t)check_button->threshold);
 15288  0570  082D               	movf	Button_Check_AKS_Block@check_button,w
 15289  0571  0086               	movwf	6
 15290  0572  082E               	movf	Button_Check_AKS_Block@check_button+1,w
 15291  0573  0087               	movwf	7
 15292  0574  314F               	addfsr 1,15
 15293  0575  0801               	movf	1,w
 15294  0576  00A6               	movwf	??_Button_Check_AKS_Block
 15295  0577  01A7               	clrf	??_Button_Check_AKS_Block+1
 15296  0578  082E               	movf	Button_Check_AKS_Block@check_button+1,w
 15297  0579  00F3               	movwf	Button_Unscaled_Deviation_Get@button+1
 15298  057A  082D               	movf	Button_Check_AKS_Block@check_button,w
 15299  057B  00F2               	movwf	Button_Unscaled_Deviation_Get@button
 15300  057C  3196  263E  3185   	fcall	_Button_Unscaled_Deviation_Get
 15301  057F  0826               	movf	??_Button_Check_AKS_Block,w
 15302  0580  0272               	subwf	?_Button_Unscaled_Deviation_Get,w
 15303  0581  00AB               	movwf	Button_Check_AKS_Block@surplus_deviation_check_button
 15304  0582  0827               	movf	??_Button_Check_AKS_Block+1,w
 15305  0583  3B73               	subwfb	?_Button_Unscaled_Deviation_Get+1,w
 15306  0584  00AC               	movwf	Button_Check_AKS_Block@surplus_deviation_check_button+1
 15307                           
 15308                           ;mcc_generated_files/mtouch/mtouch_button.c: 808:                                 if(sur
      +                          plus_deviation_check_button > 0 && surplus_deviation_check_button > surplus_deviation_th
      +                          is_button)
 15309  0585  082C               	movf	Button_Check_AKS_Block@surplus_deviation_check_button+1,w
 15310  0586  3A80               	xorlw	128
 15311  0587  00A6               	movwf	??_Button_Check_AKS_Block
 15312  0588  3080               	movlw	128
 15313  0589  0226               	subwf	??_Button_Check_AKS_Block,w
 15314  058A  1D03               	skipz
 15315  058B  2D8E               	goto	u4645
 15316  058C  3001               	movlw	1
 15317  058D  022B               	subwf	Button_Check_AKS_Block@surplus_deviation_check_button,w
 15318  058E                     u4645:
 15319  058E  1803               	btfsc	3,0
 15320  058F  2D61               	goto	l5600
 15321  0590                     l5606:
 15322                           
 15323                           ;mcc_generated_files/mtouch/mtouch_button.c: 815:     }
 15324  0590  3012               	movlw	18
 15325  0591  0020               	movlb	0	; select bank0
 15326  0592  07AD               	addwf	Button_Check_AKS_Block@check_button,f
 15327  0593  3000               	movlw	0
 15328  0594  3DAE               	addwfc	Button_Check_AKS_Block@check_button+1,f
 15329  0595  30DE               	movlw	222
 15330  0596  00A6               	movwf	??_Button_Check_AKS_Block
 15331  0597  3023               	movlw	35
 15332  0598  00A7               	movwf	??_Button_Check_AKS_Block+1
 15333  0599  082E               	movf	Button_Check_AKS_Block@check_button+1,w
 15334  059A  0227               	subwf	??_Button_Check_AKS_Block+1,w
 15335  059B  1D03               	skipz
 15336  059C  2D9F               	goto	u4665
 15337  059D  082D               	movf	Button_Check_AKS_Block@check_button,w
 15338  059E  0226               	subwf	??_Button_Check_AKS_Block,w
 15339  059F                     u4665:
 15340  059F  1803               	skipnc
 15341  05A0  2D32               	goto	l5578
 15342  05A1                     l5608:
 15343                           
 15344                           ;mcc_generated_files/mtouch/mtouch_button.c: 816:     return 0;
 15345  05A1  3000               	movlw	0
 15346  05A2  0008               	return
 15347  05A3                     __end_of_Button_Check_AKS_Block:
 15348                           
 15349                           	psect	text103
 15350  1322                     __ptext103:	
 15351 ;; *************** function _MTOUCH_Sensor_isEnabled *****************
 15352 ;; Defined at:
 15353 ;;		line 495 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
 15354 ;; Parameters:    Size  Location     Type
 15355 ;;  sensor          1    wreg     enum E2707
 15356 ;; Auto vars:     Size  Location     Type
 15357 ;;  sensor          1    8[COMMON] enum E2707
 15358 ;; Return value:  Size  Location     Type
 15359 ;;                  1    wreg      _Bool 
 15360 ;; Registers used:
 15361 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15362 ;; Tracked objects:
 15363 ;;		On entry : 1F/0
 15364 ;;		On exit  : 1F/0
 15365 ;;		Unchanged: 0/0
 15366 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15367 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15368 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15369 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15370 ;;      Totals:         1       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15371 ;;Total ram usage:        5 bytes
 15372 ;; Hardware stack levels used: 1
 15373 ;; Hardware stack levels required when called: 5
 15374 ;; This function calls:
 15375 ;;		___wmul
 15376 ;; This function is called by:
 15377 ;;		_Button_Check_AKS_Block
 15378 ;; This function uses a non-reentrant model
 15379 ;;
 15380                           
 15381                           
 15382                           ;psect for function _MTOUCH_Sensor_isEnabled
 15383  1322                     _MTOUCH_Sensor_isEnabled:
 15384                           
 15385                           ;incstack = 0
 15386                           ; Regs used in _MTOUCH_Sensor_isEnabled: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+csta
      +                          ck]
 15387                           ;MTOUCH_Sensor_isEnabled@sensor stored from wreg
 15388  1322  00F8               	movwf	MTOUCH_Sensor_isEnabled@sensor
 15389                           
 15390                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 495: _Bool MTOUCH_Sensor_isEnabled(enum mto
      +                          uch_sensor_names sensor);mcc_generated_files/mtouch/mtouch_sensor.c: 496: {;mcc_generate
      +                          d_files/mtouch/mtouch_sensor.c: 497:     if(sensor < 10u)
 15391  1323  300A               	movlw	10
 15392  1324  0278               	subwf	MTOUCH_Sensor_isEnabled@sensor,w
 15393  1325  1803               	skipnc
 15394  1326  2B41               	goto	l5416
 15395                           
 15396                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 498:         return (_Bool)mtouch_sensor[se
      +                          nsor].enabled;
 15397  1327  0878               	movf	MTOUCH_Sensor_isEnabled@sensor,w
 15398  1328  00A0               	movwf	??_MTOUCH_Sensor_isEnabled
 15399  1329  01A1               	clrf	??_MTOUCH_Sensor_isEnabled+1
 15400  132A  0820               	movf	??_MTOUCH_Sensor_isEnabled,w
 15401  132B  00F2               	movwf	___wmul@multiplier
 15402  132C  0821               	movf	??_MTOUCH_Sensor_isEnabled+1,w
 15403  132D  00F3               	movwf	___wmul@multiplier+1
 15404  132E  3009               	movlw	9
 15405  132F  00F4               	movwf	___wmul@multiplicand
 15406  1330  3000               	movlw	0
 15407  1331  00F5               	movwf	___wmul@multiplicand+1
 15408  1332  3188  2000         	fcall	___wmul
 15409  1334  30EA               	movlw	234
 15410  1335  00A2               	movwf	??_MTOUCH_Sensor_isEnabled+2
 15411  1336  3022               	movlw	34
 15412  1337  00A3               	movwf	??_MTOUCH_Sensor_isEnabled+3
 15413  1338  0872               	movf	?___wmul,w
 15414  1339  0722               	addwf	??_MTOUCH_Sensor_isEnabled+2,w
 15415  133A  0086               	movwf	6
 15416  133B  0873               	movf	?___wmul+1,w
 15417  133C  3D23               	addwfc	??_MTOUCH_Sensor_isEnabled+3,w
 15418  133D  0087               	movwf	7
 15419  133E  0801               	movf	1,w
 15420  133F  3901               	andlw	1
 15421  1340  0008               	return
 15422  1341                     l5416:
 15423                           
 15424                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 500:         return 0;
 15425  1341  3000               	movlw	0
 15426  1342  0008               	return
 15427  1343                     __end_of_MTOUCH_Sensor_isEnabled:
 15428                           
 15429                           	psect	text104
 15430  163E                     __ptext104:	
 15431 ;; *************** function _Button_Unscaled_Deviation_Get *****************
 15432 ;; Defined at:
 15433 ;;		line 676 in file "mcc_generated_files/mtouch/mtouch_button.c"
 15434 ;; Parameters:    Size  Location     Type
 15435 ;;  button          2    2[COMMON] PTR struct .
 15436 ;;		 -> mtouch_button(180), 
 15437 ;; Auto vars:     Size  Location     Type
 15438 ;;		None
 15439 ;; Return value:  Size  Location     Type
 15440 ;;                  2    2[COMMON] unsigned short 
 15441 ;; Registers used:
 15442 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 15443 ;; Tracked objects:
 15444 ;;		On entry : 1F/0
 15445 ;;		On exit  : 1F/0
 15446 ;;		Unchanged: 1F/0
 15447 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15448 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15449 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15450 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15451 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15452 ;;Total ram usage:        8 bytes
 15453 ;; Hardware stack levels used: 1
 15454 ;; Hardware stack levels required when called: 4
 15455 ;; This function calls:
 15456 ;;		Nothing
 15457 ;; This function is called by:
 15458 ;;		_Button_Check_AKS_Block
 15459 ;; This function uses a non-reentrant model
 15460 ;;
 15461                           
 15462                           
 15463                           ;psect for function _Button_Unscaled_Deviation_Get
 15464  163E                     _Button_Unscaled_Deviation_Get:
 15465                           
 15466                           ;mcc_generated_files/mtouch/mtouch_button.c: 676: static mtouch_button_reading_t Button_
      +                          Unscaled_Deviation_Get(mtouch_button_t* button);mcc_generated_files/mtouch/mtouch_button
      +                          .c: 677: {;mcc_generated_files/mtouch/mtouch_button.c: 678:     return (mtouch_button_re
      +                          ading_t)(button->reading - (mtouch_button_reading_t)((button->baseline)>>((uint8_t)4u)))
      +                          ;
 15467                           
 15468                           ;incstack = 0
 15469                           ; Regs used in _Button_Unscaled_Deviation_Get: [wreg+fsr1l+fsr1h+status,2+status,0]
 15470  163E  0872               	movf	Button_Unscaled_Deviation_Get@button,w
 15471  163F  0086               	movwf	6
 15472  1640  0873               	movf	Button_Unscaled_Deviation_Get@button+1,w
 15473  1641  0087               	movwf	7
 15474  1642  3146               	addfsr 1,6
 15475  1643  3F40               	moviw [0]fsr1
 15476  1644  00F4               	movwf	??_Button_Unscaled_Deviation_Get
 15477  1645  3F41               	moviw [1]fsr1
 15478  1646  00F5               	movwf	??_Button_Unscaled_Deviation_Get+1
 15479  1647  3F42               	moviw [2]fsr1
 15480  1648  00F6               	movwf	??_Button_Unscaled_Deviation_Get+2
 15481  1649  3F43               	moviw [3]fsr1
 15482  164A  00F7               	movwf	??_Button_Unscaled_Deviation_Get+3
 15483  164B  3004               	movlw	4
 15484  164C                     u4405:
 15485  164C  36F7               	lsrf	??_Button_Unscaled_Deviation_Get+3,f
 15486  164D  0CF6               	rrf	??_Button_Unscaled_Deviation_Get+2,f
 15487  164E  0CF5               	rrf	??_Button_Unscaled_Deviation_Get+1,f
 15488  164F  0CF4               	rrf	??_Button_Unscaled_Deviation_Get,f
 15489  1650  0B89               	decfsz	9,f
 15490  1651  2E4C               	goto	u4405
 15491  1652  0872               	movf	Button_Unscaled_Deviation_Get@button,w
 15492  1653  0086               	movwf	6
 15493  1654  0873               	movf	Button_Unscaled_Deviation_Get@button+1,w
 15494  1655  0087               	movwf	7
 15495  1656  3144               	addfsr 1,4
 15496  1657  3F40               	moviw [0]fsr1
 15497  1658  00F8               	movwf	??_Button_Unscaled_Deviation_Get+4
 15498  1659  3F41               	moviw [1]fsr1
 15499  165A  00F9               	movwf	??_Button_Unscaled_Deviation_Get+5
 15500  165B  0874               	movf	??_Button_Unscaled_Deviation_Get,w
 15501  165C  0278               	subwf	??_Button_Unscaled_Deviation_Get+4,w
 15502  165D  00F2               	movwf	?_Button_Unscaled_Deviation_Get
 15503  165E  0875               	movf	??_Button_Unscaled_Deviation_Get+1,w
 15504  165F  3B79               	subwfb	??_Button_Unscaled_Deviation_Get+5,w
 15505  1660  00F3               	movwf	?_Button_Unscaled_Deviation_Get+1
 15506  1661  0008               	return
 15507  1662                     __end_of_Button_Unscaled_Deviation_Get:
 15508                           
 15509                           	psect	text105
 15510  1FB7                     __ptext105:	
 15511 ;; *************** function _Button_Reburst_Request *****************
 15512 ;; Defined at:
 15513 ;;		line 825 in file "mcc_generated_files/mtouch/mtouch_button.c"
 15514 ;; Parameters:    Size  Location     Type
 15515 ;;  button          2    8[COMMON] PTR struct .
 15516 ;;		 -> mtouch_button(180), 
 15517 ;; Auto vars:     Size  Location     Type
 15518 ;;		None
 15519 ;; Return value:  Size  Location     Type
 15520 ;;                  1    wreg      void 
 15521 ;; Registers used:
 15522 ;;		None
 15523 ;; Tracked objects:
 15524 ;;		On entry : 1F/0
 15525 ;;		On exit  : 1F/1
 15526 ;;		Unchanged: 0/0
 15527 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15528 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15529 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15530 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15531 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15532 ;;Total ram usage:        2 bytes
 15533 ;; Hardware stack levels used: 1
 15534 ;; Hardware stack levels required when called: 4
 15535 ;; This function calls:
 15536 ;;		Nothing
 15537 ;; This function is called by:
 15538 ;;		_Button_State_Initializing
 15539 ;;		_Button_State_NotPressed
 15540 ;;		_Button_State_Pressed
 15541 ;;		_Button_State_PressDebounce
 15542 ;;		_Button_State_ReleaseDebounce
 15543 ;;		_MTOUCH_Button_Reburst_Request
 15544 ;; This function uses a non-reentrant model
 15545 ;;
 15546                           
 15547                           
 15548                           ;psect for function _Button_Reburst_Request
 15549  1FB7                     _Button_Reburst_Request:
 15550                           
 15551                           ;mcc_generated_files/mtouch/mtouch_button.c: 825: static __attribute__((inline)) void Bu
      +                          tton_Reburst_Request(mtouch_button_t* button);mcc_generated_files/mtouch/mtouch_button.c
      +                          : 826: {;mcc_generated_files/mtouch/mtouch_button.c: 827:     button_reburst_request = 1
      +                          ;
 15552                           
 15553                           ;incstack = 0
 15554                           ; Regs used in _Button_Reburst_Request: []
 15555  1FB7  0021               	movlb	1	; select bank1
 15556  1FB8  01C9               	clrf	_button_reburst_request^(0+128)
 15557  1FB9  0AC9               	incf	_button_reburst_request^(0+128),f
 15558  1FBA  0008               	return
 15559  1FBB                     __end_of_Button_Reburst_Request:
 15560                           
 15561                           	psect	text106
 15562  06D0                     __ptext106:	
 15563 ;; *************** function _Button_Baseline_Update *****************
 15564 ;; Defined at:
 15565 ;;		line 740 in file "mcc_generated_files/mtouch/mtouch_button.c"
 15566 ;; Parameters:    Size  Location     Type
 15567 ;;  button          2    2[COMMON] PTR struct .
 15568 ;;		 -> mtouch_button(180), 
 15569 ;; Auto vars:     Size  Location     Type
 15570 ;;		None
 15571 ;; Return value:  Size  Location     Type
 15572 ;;                  1    wreg      void 
 15573 ;; Registers used:
 15574 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 15575 ;; Tracked objects:
 15576 ;;		On entry : 1F/0
 15577 ;;		On exit  : 1F/0
 15578 ;;		Unchanged: 1F/0
 15579 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15580 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15581 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15582 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15583 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15584 ;;Total ram usage:        8 bytes
 15585 ;; Hardware stack levels used: 1
 15586 ;; Hardware stack levels required when called: 4
 15587 ;; This function calls:
 15588 ;;		Nothing
 15589 ;; This function is called by:
 15590 ;;		_Button_State_Initializing
 15591 ;;		_Button_State_NotPressed
 15592 ;;		_Button_State_Suspended
 15593 ;; This function uses a non-reentrant model
 15594 ;;
 15595                           
 15596                           
 15597                           ;psect for function _Button_Baseline_Update
 15598  06D0                     _Button_Baseline_Update:
 15599                           
 15600                           ;mcc_generated_files/mtouch/mtouch_button.c: 740: static void Button_Baseline_Update(mto
      +                          uch_button_t* button);mcc_generated_files/mtouch/mtouch_button.c: 741: {;mcc_generated_f
      +                          iles/mtouch/mtouch_button.c: 742:     if (GIE == (uint8_t)1)
 15601                           
 15602                           ;incstack = 0
 15603                           ; Regs used in _Button_Baseline_Update: [wreg+fsr1l+fsr1h+status,2+status,0]
 15604  06D0  1F8B               	btfss	11,7	;volatile
 15605  06D1  2F19               	goto	l5562
 15606                           
 15607                           ;mcc_generated_files/mtouch/mtouch_button.c: 743:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 744:         GIE = (uint8_t)0;
 15608  06D2  138B               	bcf	11,7	;volatile
 15609                           
 15610                           ;mcc_generated_files/mtouch/mtouch_button.c: 745:         button->baseline -= (button->b
      +                          aseline) >> ((uint8_t)4u);
 15611  06D3  0872               	movf	Button_Baseline_Update@button,w
 15612  06D4  0086               	movwf	6
 15613  06D5  0873               	movf	Button_Baseline_Update@button+1,w
 15614  06D6  0087               	movwf	7
 15615  06D7  3146               	addfsr 1,6
 15616  06D8  3F40               	moviw [0]fsr1
 15617  06D9  00F4               	movwf	??_Button_Baseline_Update
 15618  06DA  3F41               	moviw [1]fsr1
 15619  06DB  00F5               	movwf	??_Button_Baseline_Update+1
 15620  06DC  3F42               	moviw [2]fsr1
 15621  06DD  00F6               	movwf	??_Button_Baseline_Update+2
 15622  06DE  3F43               	moviw [3]fsr1
 15623  06DF  00F7               	movwf	??_Button_Baseline_Update+3
 15624  06E0  3004               	movlw	4
 15625  06E1                     u4565:
 15626  06E1  36F7               	lsrf	??_Button_Baseline_Update+3,f
 15627  06E2  0CF6               	rrf	??_Button_Baseline_Update+2,f
 15628  06E3  0CF5               	rrf	??_Button_Baseline_Update+1,f
 15629  06E4  0CF4               	rrf	??_Button_Baseline_Update,f
 15630  06E5  0B89               	decfsz	9,f
 15631  06E6  2EE1               	goto	u4565
 15632  06E7  0872               	movf	Button_Baseline_Update@button,w
 15633  06E8  0086               	movwf	6
 15634  06E9  0873               	movf	Button_Baseline_Update@button+1,w
 15635  06EA  0087               	movwf	7
 15636  06EB  3146               	addfsr 1,6
 15637  06EC  0874               	movf	??_Button_Baseline_Update,w
 15638  06ED  0281               	subwf	1,f
 15639  06EE  3141               	addfsr 1,1
 15640  06EF  0875               	movf	??_Button_Baseline_Update+1,w
 15641  06F0  3B81               	subwfb	1,f
 15642  06F1  3141               	addfsr 1,1
 15643  06F2  0876               	movf	??_Button_Baseline_Update+2,w
 15644  06F3  3B81               	subwfb	1,f
 15645  06F4  3141               	addfsr 1,1
 15646  06F5  0877               	movf	??_Button_Baseline_Update+3,w
 15647  06F6  3B81               	subwfb	1,f
 15648  06F7  317D               	addfsr 1,-3
 15649                           
 15650                           ;mcc_generated_files/mtouch/mtouch_button.c: 746:         button->baseline += button->re
      +                          ading;
 15651  06F8  0872               	movf	Button_Baseline_Update@button,w
 15652  06F9  0086               	movwf	6
 15653  06FA  0873               	movf	Button_Baseline_Update@button+1,w
 15654  06FB  0087               	movwf	7
 15655  06FC  3144               	addfsr 1,4
 15656  06FD  3F40               	moviw [0]fsr1
 15657  06FE  00F4               	movwf	??_Button_Baseline_Update
 15658  06FF  3F41               	moviw [1]fsr1
 15659  0700  00F5               	movwf	??_Button_Baseline_Update+1
 15660  0701  0874               	movf	??_Button_Baseline_Update,w
 15661  0702  00F6               	movwf	??_Button_Baseline_Update+2
 15662  0703  0875               	movf	??_Button_Baseline_Update+1,w
 15663  0704  00F7               	movwf	??_Button_Baseline_Update+3
 15664  0705  01F8               	clrf	??_Button_Baseline_Update+4
 15665  0706  01F9               	clrf	??_Button_Baseline_Update+5
 15666  0707  0872               	movf	Button_Baseline_Update@button,w
 15667  0708  0086               	movwf	6
 15668  0709  0873               	movf	Button_Baseline_Update@button+1,w
 15669  070A  0087               	movwf	7
 15670  070B  3146               	addfsr 1,6
 15671  070C  0876               	movf	??_Button_Baseline_Update+2,w
 15672  070D  0781               	addwf	1,f
 15673  070E  3141               	addfsr 1,1
 15674  070F  0877               	movf	??_Button_Baseline_Update+3,w
 15675  0710  3D81               	addwfc	1,f
 15676  0711  3141               	addfsr 1,1
 15677  0712  0878               	movf	??_Button_Baseline_Update+4,w
 15678  0713  3D81               	addwfc	1,f
 15679  0714  3141               	addfsr 1,1
 15680  0715  0879               	movf	??_Button_Baseline_Update+5,w
 15681  0716  3D81               	addwfc	1,f
 15682                           
 15683                           ;mcc_generated_files/mtouch/mtouch_button.c: 747:         GIE = (uint8_t)1;
 15684  0717  178B               	bsf	11,7	;volatile
 15685                           
 15686                           ;mcc_generated_files/mtouch/mtouch_button.c: 748:     }
 15687  0718  0008               	return
 15688  0719                     l5562:
 15689                           
 15690                           ;mcc_generated_files/mtouch/mtouch_button.c: 750:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 751:         button->baseline -= (button->baseline) >> ((uint8_t)4u);
 15691  0719  0872               	movf	Button_Baseline_Update@button,w
 15692  071A  0086               	movwf	6
 15693  071B  0873               	movf	Button_Baseline_Update@button+1,w
 15694  071C  0087               	movwf	7
 15695  071D  3146               	addfsr 1,6
 15696  071E  3F40               	moviw [0]fsr1
 15697  071F  00F4               	movwf	??_Button_Baseline_Update
 15698  0720  3F41               	moviw [1]fsr1
 15699  0721  00F5               	movwf	??_Button_Baseline_Update+1
 15700  0722  3F42               	moviw [2]fsr1
 15701  0723  00F6               	movwf	??_Button_Baseline_Update+2
 15702  0724  3F43               	moviw [3]fsr1
 15703  0725  00F7               	movwf	??_Button_Baseline_Update+3
 15704  0726  3004               	movlw	4
 15705  0727                     u4575:
 15706  0727  36F7               	lsrf	??_Button_Baseline_Update+3,f
 15707  0728  0CF6               	rrf	??_Button_Baseline_Update+2,f
 15708  0729  0CF5               	rrf	??_Button_Baseline_Update+1,f
 15709  072A  0CF4               	rrf	??_Button_Baseline_Update,f
 15710  072B  0B89               	decfsz	9,f
 15711  072C  2F27               	goto	u4575
 15712  072D  0872               	movf	Button_Baseline_Update@button,w
 15713  072E  0086               	movwf	6
 15714  072F  0873               	movf	Button_Baseline_Update@button+1,w
 15715  0730  0087               	movwf	7
 15716  0731  3146               	addfsr 1,6
 15717  0732  0874               	movf	??_Button_Baseline_Update,w
 15718  0733  0281               	subwf	1,f
 15719  0734  3141               	addfsr 1,1
 15720  0735  0875               	movf	??_Button_Baseline_Update+1,w
 15721  0736  3B81               	subwfb	1,f
 15722  0737  3141               	addfsr 1,1
 15723  0738  0876               	movf	??_Button_Baseline_Update+2,w
 15724  0739  3B81               	subwfb	1,f
 15725  073A  3141               	addfsr 1,1
 15726  073B  0877               	movf	??_Button_Baseline_Update+3,w
 15727  073C  3B81               	subwfb	1,f
 15728  073D  317D               	addfsr 1,-3
 15729                           
 15730                           ;mcc_generated_files/mtouch/mtouch_button.c: 752:         button->baseline += button->re
      +                          ading;
 15731  073E  0872               	movf	Button_Baseline_Update@button,w
 15732  073F  0086               	movwf	6
 15733  0740  0873               	movf	Button_Baseline_Update@button+1,w
 15734  0741  0087               	movwf	7
 15735  0742  3144               	addfsr 1,4
 15736  0743  3F40               	moviw [0]fsr1
 15737  0744  00F4               	movwf	??_Button_Baseline_Update
 15738  0745  3F41               	moviw [1]fsr1
 15739  0746  00F5               	movwf	??_Button_Baseline_Update+1
 15740  0747  0874               	movf	??_Button_Baseline_Update,w
 15741  0748  00F6               	movwf	??_Button_Baseline_Update+2
 15742  0749  0875               	movf	??_Button_Baseline_Update+1,w
 15743  074A  00F7               	movwf	??_Button_Baseline_Update+3
 15744  074B  01F8               	clrf	??_Button_Baseline_Update+4
 15745  074C  01F9               	clrf	??_Button_Baseline_Update+5
 15746  074D  0872               	movf	Button_Baseline_Update@button,w
 15747  074E  0086               	movwf	6
 15748  074F  0873               	movf	Button_Baseline_Update@button+1,w
 15749  0750  0087               	movwf	7
 15750  0751  3146               	addfsr 1,6
 15751  0752  0876               	movf	??_Button_Baseline_Update+2,w
 15752  0753  0781               	addwf	1,f
 15753  0754  3141               	addfsr 1,1
 15754  0755  0877               	movf	??_Button_Baseline_Update+3,w
 15755  0756  3D81               	addwfc	1,f
 15756  0757  3141               	addfsr 1,1
 15757  0758  0878               	movf	??_Button_Baseline_Update+4,w
 15758  0759  3D81               	addwfc	1,f
 15759  075A  3141               	addfsr 1,1
 15760  075B  0879               	movf	??_Button_Baseline_Update+5,w
 15761  075C  3D81               	addwfc	1,f
 15762  075D  0008               	return
 15763  075E                     __end_of_Button_Baseline_Update:
 15764                           
 15765                           	psect	text107
 15766  16D9                     __ptext107:	
 15767 ;; *************** function _Button_Baseline_Initialize *****************
 15768 ;; Defined at:
 15769 ;;		line 734 in file "mcc_generated_files/mtouch/mtouch_button.c"
 15770 ;; Parameters:    Size  Location     Type
 15771 ;;  button          2    5[BANK0 ] PTR struct .
 15772 ;;		 -> mtouch_button(180), 
 15773 ;; Auto vars:     Size  Location     Type
 15774 ;;		None
 15775 ;; Return value:  Size  Location     Type
 15776 ;;                  1    wreg      void 
 15777 ;; Registers used:
 15778 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15779 ;; Tracked objects:
 15780 ;;		On entry : 1F/0
 15781 ;;		On exit  : 1F/0
 15782 ;;		Unchanged: 0/0
 15783 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15784 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15785 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15786 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15787 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15788 ;;Total ram usage:        6 bytes
 15789 ;; Hardware stack levels used: 1
 15790 ;; Hardware stack levels required when called: 6
 15791 ;; This function calls:
 15792 ;;		_MTOUCH_Sensor_RawSample_Get
 15793 ;; This function is called by:
 15794 ;;		_Button_State_Initializing
 15795 ;; This function uses a non-reentrant model
 15796 ;;
 15797                           
 15798                           
 15799                           ;psect for function _Button_Baseline_Initialize
 15800  16D9                     _Button_Baseline_Initialize:
 15801                           
 15802                           ;mcc_generated_files/mtouch/mtouch_button.c: 734: static void Button_Baseline_Initialize
      +                          (mtouch_button_t* button);mcc_generated_files/mtouch/mtouch_button.c: 735: {;mcc_generat
      +                          ed_files/mtouch/mtouch_button.c: 736:     button->baseline = MTOUCH_Sensor_RawSample_Get
      +                          (button->sensor);
 15803                           
 15804                           ;incstack = 0
 15805                           ; Regs used in _Button_Baseline_Initialize: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
 15806  16D9  0825               	movf	Button_Baseline_Initialize@button,w
 15807  16DA  0086               	movwf	6
 15808  16DB  0826               	movf	Button_Baseline_Initialize@button+1,w
 15809  16DC  0087               	movwf	7
 15810  16DD  3141               	addfsr 1,1
 15811  16DE  0801               	movf	1,w
 15812  16DF  3196  261A  3196   	fcall	_MTOUCH_Sensor_RawSample_Get
 15813  16E2  0878               	movf	?_MTOUCH_Sensor_RawSample_Get,w
 15814  16E3  00A7               	movwf	??_Button_Baseline_Initialize
 15815  16E4  0879               	movf	?_MTOUCH_Sensor_RawSample_Get+1,w
 15816  16E5  00A8               	movwf	??_Button_Baseline_Initialize+1
 15817  16E6  01A9               	clrf	??_Button_Baseline_Initialize+2
 15818  16E7  01AA               	clrf	??_Button_Baseline_Initialize+3
 15819  16E8  0825               	movf	Button_Baseline_Initialize@button,w
 15820  16E9  0086               	movwf	6
 15821  16EA  0826               	movf	Button_Baseline_Initialize@button+1,w
 15822  16EB  0087               	movwf	7
 15823  16EC  3146               	addfsr 1,6
 15824  16ED  0827               	movf	??_Button_Baseline_Initialize,w
 15825  16EE  3FC0               	movwi [0]fsr1
 15826  16EF  0828               	movf	??_Button_Baseline_Initialize+1,w
 15827  16F0  3FC1               	movwi [1]fsr1
 15828  16F1  0829               	movf	??_Button_Baseline_Initialize+2,w
 15829  16F2  3FC2               	movwi [2]fsr1
 15830  16F3  082A               	movf	??_Button_Baseline_Initialize+3,w
 15831  16F4  3FC3               	movwi [3]fsr1
 15832                           
 15833                           ;mcc_generated_files/mtouch/mtouch_button.c: 737:     button->baseline <<= ((uint8_t)4u)
      +                          ;
 15834  16F5  0825               	movf	Button_Baseline_Initialize@button,w
 15835  16F6  0086               	movwf	6
 15836  16F7  0826               	movf	Button_Baseline_Initialize@button+1,w
 15837  16F8  0087               	movwf	7
 15838  16F9  3146               	addfsr 1,6
 15839  16FA  3004               	movlw	4
 15840  16FB                     u4545:
 15841  16FB  3581               	lslf	1,f
 15842  16FC  3141               	addfsr 1,1
 15843  16FD  0D81               	rlf	1,f
 15844  16FE  3141               	addfsr 1,1
 15845  16FF  0D81               	rlf	1,f
 15846  1700  3141               	addfsr 1,1
 15847  1701  0D81               	rlf	1,f
 15848  1702  317D               	addfsr 1,-3
 15849  1703  0B89               	decfsz	9,f
 15850  1704  2EFB               	goto	u4545
 15851  1705  0008               	return
 15852  1706                     __end_of_Button_Baseline_Initialize:
 15853                           
 15854                           	psect	text108
 15855  109C                     __ptext108:	
 15856 ;; *************** function _Button_Reading_Update *****************
 15857 ;; Defined at:
 15858 ;;		line 707 in file "mcc_generated_files/mtouch/mtouch_button.c"
 15859 ;; Parameters:    Size  Location     Type
 15860 ;;  button          2    9[BANK0 ] PTR struct .
 15861 ;;		 -> mtouch_button(180), 
 15862 ;; Auto vars:     Size  Location     Type
 15863 ;;		None
 15864 ;; Return value:  Size  Location     Type
 15865 ;;                  1    wreg      void 
 15866 ;; Registers used:
 15867 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15868 ;; Tracked objects:
 15869 ;;		On entry : 1F/0
 15870 ;;		On exit  : 1F/0
 15871 ;;		Unchanged: 0/0
 15872 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15873 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15874 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15875 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15876 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15877 ;;Total ram usage:        2 bytes
 15878 ;; Hardware stack levels used: 1
 15879 ;; Hardware stack levels required when called: 7
 15880 ;; This function calls:
 15881 ;;		_Button_Reading_Update_Helper
 15882 ;; This function is called by:
 15883 ;;		_Button_Service
 15884 ;; This function uses a non-reentrant model
 15885 ;;
 15886                           
 15887                           
 15888                           ;psect for function _Button_Reading_Update
 15889  109C                     _Button_Reading_Update:
 15890                           
 15891                           ;mcc_generated_files/mtouch/mtouch_button.c: 707: static void Button_Reading_Update(mtou
      +                          ch_button_t* button);mcc_generated_files/mtouch/mtouch_button.c: 708: {;mcc_generated_fi
      +                          les/mtouch/mtouch_button.c: 709:     if (GIE == (uint8_t) 1)
 15892                           
 15893                           ;incstack = 0
 15894                           ; Regs used in _Button_Reading_Update: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 15895  109C  1F8B               	btfss	11,7	;volatile
 15896  109D  28A7               	goto	l5906
 15897                           
 15898                           ;mcc_generated_files/mtouch/mtouch_button.c: 710:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 711:         GIE = (uint8_t) 0;
 15899  109E  138B               	bcf	11,7	;volatile
 15900                           
 15901                           ;mcc_generated_files/mtouch/mtouch_button.c: 712:         Button_Reading_Update_Helper(b
      +                          utton);
 15902  109F  082A               	movf	Button_Reading_Update@button+1,w
 15903  10A0  00A6               	movwf	Button_Reading_Update_Helper@button+1
 15904  10A1  0829               	movf	Button_Reading_Update@button,w
 15905  10A2  00A5               	movwf	Button_Reading_Update_Helper@button
 15906  10A3  3188  20AB         	fcall	_Button_Reading_Update_Helper
 15907                           
 15908                           ;mcc_generated_files/mtouch/mtouch_button.c: 713:         GIE = (uint8_t) 1;
 15909  10A5  178B               	bsf	11,7	;volatile
 15910                           
 15911                           ;mcc_generated_files/mtouch/mtouch_button.c: 714:     }
 15912  10A6  0008               	return
 15913  10A7                     l5906:
 15914                           
 15915                           ;mcc_generated_files/mtouch/mtouch_button.c: 716:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 717:         Button_Reading_Update_Helper(button);
 15916  10A7  082A               	movf	Button_Reading_Update@button+1,w
 15917  10A8  00A6               	movwf	Button_Reading_Update_Helper@button+1
 15918  10A9  0829               	movf	Button_Reading_Update@button,w
 15919  10AA  00A5               	movwf	Button_Reading_Update_Helper@button
 15920  10AB  3188  20AB         	fcall	_Button_Reading_Update_Helper
 15921  10AD  0008               	return
 15922  10AE                     __end_of_Button_Reading_Update:
 15923                           
 15924                           	psect	text109
 15925  08AB                     __ptext109:	
 15926 ;; *************** function _Button_Reading_Update_Helper *****************
 15927 ;; Defined at:
 15928 ;;		line 721 in file "mcc_generated_files/mtouch/mtouch_button.c"
 15929 ;; Parameters:    Size  Location     Type
 15930 ;;  button          2    5[BANK0 ] PTR struct .
 15931 ;;		 -> mtouch_button(180), 
 15932 ;; Auto vars:     Size  Location     Type
 15933 ;;		None
 15934 ;; Return value:  Size  Location     Type
 15935 ;;                  1    wreg      void 
 15936 ;; Registers used:
 15937 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15938 ;; Tracked objects:
 15939 ;;		On entry : 1F/0
 15940 ;;		On exit  : 1F/0
 15941 ;;		Unchanged: 0/0
 15942 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15943 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15944 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15945 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15946 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15947 ;;Total ram usage:        4 bytes
 15948 ;; Hardware stack levels used: 1
 15949 ;; Hardware stack levels required when called: 6
 15950 ;; This function calls:
 15951 ;;		_MTOUCH_Sensor_RawSample_Get
 15952 ;; This function is called by:
 15953 ;;		_Button_Reading_Update
 15954 ;; This function uses a non-reentrant model
 15955 ;;
 15956                           
 15957                           
 15958                           ;psect for function _Button_Reading_Update_Helper
 15959  08AB                     _Button_Reading_Update_Helper:
 15960                           
 15961                           ;mcc_generated_files/mtouch/mtouch_button.c: 721: static void Button_Reading_Update_Help
      +                          er(mtouch_button_t* button);mcc_generated_files/mtouch/mtouch_button.c: 722: {;mcc_gener
      +                          ated_files/mtouch/mtouch_button.c: 723:     if (button->state != MTOUCH_BUTTON_STATE_ini
      +                          tializing)
 15962                           
 15963                           ;incstack = 0
 15964                           ; Regs used in _Button_Reading_Update_Helper: [wreg+fsr1l+fsr1h+status,2+status,0+pclath
      +                          +cstack]
 15965  08AB  0825               	movf	Button_Reading_Update_Helper@button,w
 15966  08AC  0086               	movwf	6
 15967  08AD  0826               	movf	Button_Reading_Update_Helper@button+1,w
 15968  08AE  0087               	movwf	7
 15969  08AF  3142               	addfsr 1,2
 15970  08B0  0801               	movf	1,w
 15971  08B1  1903               	btfsc	3,2
 15972  08B2  28EA               	goto	l5618
 15973                           
 15974                           ;mcc_generated_files/mtouch/mtouch_button.c: 724:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 725:         button->reading -= button->reading>>((uint8_t)4u);
 15975  08B3  0825               	movf	Button_Reading_Update_Helper@button,w
 15976  08B4  0086               	movwf	6
 15977  08B5  0826               	movf	Button_Reading_Update_Helper@button+1,w
 15978  08B6  0087               	movwf	7
 15979  08B7  3144               	addfsr 1,4
 15980  08B8  3F40               	moviw [0]fsr1
 15981  08B9  00A7               	movwf	??_Button_Reading_Update_Helper
 15982  08BA  3F41               	moviw [1]fsr1
 15983  08BB  00A8               	movwf	??_Button_Reading_Update_Helper+1
 15984  08BC  3004               	movlw	4
 15985  08BD                     u4685:
 15986  08BD  36A8               	lsrf	??_Button_Reading_Update_Helper+1,f
 15987  08BE  0CA7               	rrf	??_Button_Reading_Update_Helper,f
 15988  08BF  0B89               	decfsz	9,f
 15989  08C0  28BD               	goto	u4685
 15990  08C1  0825               	movf	Button_Reading_Update_Helper@button,w
 15991  08C2  0086               	movwf	6
 15992  08C3  0826               	movf	Button_Reading_Update_Helper@button+1,w
 15993  08C4  0087               	movwf	7
 15994  08C5  3144               	addfsr 1,4
 15995  08C6  0827               	movf	??_Button_Reading_Update_Helper,w
 15996  08C7  0281               	subwf	1,f
 15997  08C8  3141               	addfsr 1,1
 15998  08C9  0828               	movf	??_Button_Reading_Update_Helper+1,w
 15999  08CA  3B81               	subwfb	1,f
 16000  08CB  317F               	addfsr 1,-1
 16001                           
 16002                           ;mcc_generated_files/mtouch/mtouch_button.c: 726:         button->reading += MTOUCH_Sens
      +                          or_RawSample_Get(button->sensor) >> ((uint8_t)4u);
 16003  08CC  0825               	movf	Button_Reading_Update_Helper@button,w
 16004  08CD  0086               	movwf	6
 16005  08CE  0826               	movf	Button_Reading_Update_Helper@button+1,w
 16006  08CF  0087               	movwf	7
 16007  08D0  3141               	addfsr 1,1
 16008  08D1  0801               	movf	1,w
 16009  08D2  3196  261A  3188   	fcall	_MTOUCH_Sensor_RawSample_Get
 16010  08D5  0878               	movf	?_MTOUCH_Sensor_RawSample_Get,w
 16011  08D6  00A7               	movwf	??_Button_Reading_Update_Helper
 16012  08D7  0879               	movf	?_MTOUCH_Sensor_RawSample_Get+1,w
 16013  08D8  00A8               	movwf	??_Button_Reading_Update_Helper+1
 16014  08D9  3004               	movlw	4
 16015  08DA                     u4695:
 16016  08DA  36A8               	lsrf	??_Button_Reading_Update_Helper+1,f
 16017  08DB  0CA7               	rrf	??_Button_Reading_Update_Helper,f
 16018  08DC  0B89               	decfsz	9,f
 16019  08DD  28DA               	goto	u4695
 16020  08DE  0825               	movf	Button_Reading_Update_Helper@button,w
 16021  08DF  0086               	movwf	6
 16022  08E0  0826               	movf	Button_Reading_Update_Helper@button+1,w
 16023  08E1  0087               	movwf	7
 16024  08E2  3144               	addfsr 1,4
 16025  08E3  0827               	movf	??_Button_Reading_Update_Helper,w
 16026  08E4  0781               	addwf	1,f
 16027  08E5  3141               	addfsr 1,1
 16028  08E6  0828               	movf	??_Button_Reading_Update_Helper+1,w
 16029  08E7  3D81               	addwfc	1,f
 16030  08E8  317F               	addfsr 1,-1
 16031                           
 16032                           ;mcc_generated_files/mtouch/mtouch_button.c: 727:     }
 16033  08E9  0008               	return
 16034  08EA                     l5618:
 16035                           
 16036                           ;mcc_generated_files/mtouch/mtouch_button.c: 729:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 730:         button->reading = MTOUCH_Sensor_RawSample_Get(button->sensor);
 16037  08EA  0825               	movf	Button_Reading_Update_Helper@button,w
 16038  08EB  0086               	movwf	6
 16039  08EC  0826               	movf	Button_Reading_Update_Helper@button+1,w
 16040  08ED  0087               	movwf	7
 16041  08EE  3141               	addfsr 1,1
 16042  08EF  0801               	movf	1,w
 16043  08F0  3196  261A         	fcall	_MTOUCH_Sensor_RawSample_Get
 16044  08F2  0825               	movf	Button_Reading_Update_Helper@button,w
 16045  08F3  0086               	movwf	6
 16046  08F4  0826               	movf	Button_Reading_Update_Helper@button+1,w
 16047  08F5  0087               	movwf	7
 16048  08F6  3144               	addfsr 1,4
 16049  08F7  0878               	movf	?_MTOUCH_Sensor_RawSample_Get,w
 16050  08F8  3FC0               	movwi [0]fsr1
 16051  08F9  0879               	movf	?_MTOUCH_Sensor_RawSample_Get+1,w
 16052  08FA  3FC1               	movwi [1]fsr1
 16053  08FB  0008               	return
 16054  08FC                     __end_of_Button_Reading_Update_Helper:
 16055                           
 16056                           	psect	text110
 16057  161A                     __ptext110:	
 16058 ;; *************** function _MTOUCH_Sensor_RawSample_Get *****************
 16059 ;; Defined at:
 16060 ;;		line 428 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
 16061 ;; Parameters:    Size  Location     Type
 16062 ;;  name            1    wreg     enum E2707
 16063 ;; Auto vars:     Size  Location     Type
 16064 ;;  name            1    4[BANK0 ] enum E2707
 16065 ;; Return value:  Size  Location     Type
 16066 ;;                  2    8[COMMON] unsigned short 
 16067 ;; Registers used:
 16068 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16069 ;; Tracked objects:
 16070 ;;		On entry : 1F/0
 16071 ;;		On exit  : 1F/0
 16072 ;;		Unchanged: 0/0
 16073 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16074 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16075 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16076 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16077 ;;      Totals:         2       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16078 ;;Total ram usage:        7 bytes
 16079 ;; Hardware stack levels used: 1
 16080 ;; Hardware stack levels required when called: 5
 16081 ;; This function calls:
 16082 ;;		___wmul
 16083 ;; This function is called by:
 16084 ;;		_Button_Reading_Update_Helper
 16085 ;;		_Button_Baseline_Initialize
 16086 ;; This function uses a non-reentrant model
 16087 ;;
 16088                           
 16089                           
 16090                           ;psect for function _MTOUCH_Sensor_RawSample_Get
 16091  161A                     _MTOUCH_Sensor_RawSample_Get:
 16092                           
 16093                           ;incstack = 0
 16094                           ; Regs used in _MTOUCH_Sensor_RawSample_Get: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
 16095                           ;MTOUCH_Sensor_RawSample_Get@name stored from wreg
 16096  161A  00A4               	movwf	MTOUCH_Sensor_RawSample_Get@name
 16097  161B  300A               	movlw	10
 16098  161C  0224               	subwf	MTOUCH_Sensor_RawSample_Get@name,w
 16099  161D  1803               	skipnc
 16100  161E  2E3B               	goto	l5404
 16101  161F  0824               	movf	MTOUCH_Sensor_RawSample_Get@name,w
 16102  1620  00A0               	movwf	??_MTOUCH_Sensor_RawSample_Get
 16103  1621  01A1               	clrf	??_MTOUCH_Sensor_RawSample_Get+1
 16104  1622  0820               	movf	??_MTOUCH_Sensor_RawSample_Get,w
 16105  1623  00F2               	movwf	___wmul@multiplier
 16106  1624  0821               	movf	??_MTOUCH_Sensor_RawSample_Get+1,w
 16107  1625  00F3               	movwf	___wmul@multiplier+1
 16108  1626  3009               	movlw	9
 16109  1627  00F4               	movwf	___wmul@multiplicand
 16110  1628  3000               	movlw	0
 16111  1629  00F5               	movwf	___wmul@multiplicand+1
 16112  162A  3188  2000         	fcall	___wmul
 16113  162C  30E8               	movlw	232
 16114  162D  00A2               	movwf	??_MTOUCH_Sensor_RawSample_Get+2
 16115  162E  3022               	movlw	34
 16116  162F  00A3               	movwf	??_MTOUCH_Sensor_RawSample_Get+3
 16117  1630  0872               	movf	?___wmul,w
 16118  1631  0722               	addwf	??_MTOUCH_Sensor_RawSample_Get+2,w
 16119  1632  0086               	movwf	6
 16120  1633  0873               	movf	?___wmul+1,w
 16121  1634  3D23               	addwfc	??_MTOUCH_Sensor_RawSample_Get+3,w
 16122  1635  0087               	movwf	7
 16123  1636  3F40               	moviw [0]fsr1
 16124  1637  00F8               	movwf	?_MTOUCH_Sensor_RawSample_Get
 16125  1638  3F41               	moviw [1]fsr1
 16126  1639  00F9               	movwf	?_MTOUCH_Sensor_RawSample_Get+1
 16127  163A  0008               	return
 16128  163B                     l5404:
 16129  163B  01F8               	clrf	?_MTOUCH_Sensor_RawSample_Get
 16130  163C  01F9               	clrf	?_MTOUCH_Sensor_RawSample_Get+1
 16131  163D  0008               	return
 16132  163E                     __end_of_MTOUCH_Sensor_RawSample_Get:
 16133                           
 16134                           	psect	text111
 16135  0800                     __ptext111:	
 16136 ;; *************** function ___wmul *****************
 16137 ;; Defined at:
 16138 ;;		line 15 in file "/Applications/microchip/xc8/v2.32/pic/sources/c99/common/Umul16.c"
 16139 ;; Parameters:    Size  Location     Type
 16140 ;;  multiplier      2    2[COMMON] unsigned int 
 16141 ;;  multiplicand    2    4[COMMON] unsigned int 
 16142 ;; Auto vars:     Size  Location     Type
 16143 ;;  product         2    6[COMMON] unsigned int 
 16144 ;; Return value:  Size  Location     Type
 16145 ;;                  2    2[COMMON] unsigned int 
 16146 ;; Registers used:
 16147 ;;		wreg, status,2, status,0
 16148 ;; Tracked objects:
 16149 ;;		On entry : 1F/0
 16150 ;;		On exit  : 1F/0
 16151 ;;		Unchanged: 1F/0
 16152 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16153 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16154 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16155 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16156 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16157 ;;Total ram usage:        6 bytes
 16158 ;; Hardware stack levels used: 1
 16159 ;; Hardware stack levels required when called: 4
 16160 ;; This function calls:
 16161 ;;		Nothing
 16162 ;; This function is called by:
 16163 ;;		_MTOUCH_Sensor_Initialize
 16164 ;;		_Sensor_Service
 16165 ;;		_Sensor_Acq_ExecuteScan
 16166 ;;		_MTOUCH_Sensor_RawSample_Get
 16167 ;;		_MTOUCH_Sensor_Disable
 16168 ;;		_MTOUCH_Sensor_Enable
 16169 ;;		_MTOUCH_Sensor_isEnabled
 16170 ;;		_MTOUCH_Sensor_wasSampled
 16171 ;;		_MTOUCH_Button_Initialize
 16172 ;;		_Button_Service
 16173 ;;		_MTOUCH_Button_Tick
 16174 ;;		_MTOUCH_Button_isPressed
 16175 ;;		_MTOUCH_Button_Deviation_Get
 16176 ;;		_MTOUCH_Button_Reburst_Request
 16177 ;; This function uses a non-reentrant model
 16178 ;;
 16179                           
 16180                           
 16181                           ;psect for function ___wmul
 16182  0800                     ___wmul:
 16183                           
 16184                           ;incstack = 0
 16185                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 16186  0800  01F6               	clrf	___wmul@product
 16187  0801  01F7               	clrf	___wmul@product+1
 16188  0802                     l5322:
 16189  0802  1C72               	btfss	___wmul@multiplier,0
 16190  0803  2808               	goto	l1373
 16191  0804  0874               	movf	___wmul@multiplicand,w
 16192  0805  07F6               	addwf	___wmul@product,f
 16193  0806  0875               	movf	___wmul@multiplicand+1,w
 16194  0807  3DF7               	addwfc	___wmul@product+1,f
 16195  0808                     l1373:
 16196  0808  3001               	movlw	1
 16197  0809                     u4275:
 16198  0809  35F4               	lslf	___wmul@multiplicand,f
 16199  080A  0DF5               	rlf	___wmul@multiplicand+1,f
 16200  080B  0B89               	decfsz	9,f
 16201  080C  2809               	goto	u4275
 16202  080D  3001               	movlw	1
 16203  080E                     u4285:
 16204  080E  36F3               	lsrf	___wmul@multiplier+1,f
 16205  080F  0CF2               	rrf	___wmul@multiplier,f
 16206  0810  0B89               	decfsz	9,f
 16207  0811  280E               	goto	u4285
 16208  0812  0872               	movf	___wmul@multiplier,w
 16209  0813  0473               	iorwf	___wmul@multiplier+1,w
 16210  0814  1D03               	btfss	3,2
 16211  0815  2802               	goto	l5322
 16212  0816  0877               	movf	___wmul@product+1,w
 16213  0817  00F3               	movwf	?___wmul+1
 16214  0818  0876               	movf	___wmul@product,w
 16215  0819  00F2               	movwf	?___wmul
 16216  081A  0008               	return
 16217  081B                     __end_of___wmul:
 16218                           
 16219                           	psect	text112
 16220  075E                     __ptext112:	
 16221 ;; *************** function _Button_Deviation_Update *****************
 16222 ;; Defined at:
 16223 ;;		line 654 in file "mcc_generated_files/mtouch/mtouch_button.c"
 16224 ;; Parameters:    Size  Location     Type
 16225 ;;  button          2    2[COMMON] PTR struct .
 16226 ;;		 -> mtouch_button(180), 
 16227 ;; Auto vars:     Size  Location     Type
 16228 ;;  deviation       4    4[COMMON] long 
 16229 ;; Return value:  Size  Location     Type
 16230 ;;                  1    wreg      void 
 16231 ;; Registers used:
 16232 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 16233 ;; Tracked objects:
 16234 ;;		On entry : 1F/0
 16235 ;;		On exit  : 1F/0
 16236 ;;		Unchanged: 0/0
 16237 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16238 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16239 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16240 ;;      Temps:          0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16241 ;;      Totals:         6      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16242 ;;Total ram usage:       16 bytes
 16243 ;; Hardware stack levels used: 1
 16244 ;; Hardware stack levels required when called: 4
 16245 ;; This function calls:
 16246 ;;		Nothing
 16247 ;; This function is called by:
 16248 ;;		_Button_Service
 16249 ;; This function uses a non-reentrant model
 16250 ;;
 16251                           
 16252                           
 16253                           ;psect for function _Button_Deviation_Update
 16254  075E                     _Button_Deviation_Update:
 16255                           
 16256                           ;mcc_generated_files/mtouch/mtouch_button.c: 654: static void Button_Deviation_Update(mt
      +                          ouch_button_t* button);mcc_generated_files/mtouch/mtouch_button.c: 655: {;mcc_generated_
      +                          files/mtouch/mtouch_button.c: 656:     int32_t deviation;;mcc_generated_files/mtouch/mto
      +                          uch_button.c: 658:     deviation = (int32_t)((int32_t)(button->reading) - (int32_t)((but
      +                          ton->baseline)>>((uint8_t)4u)));
 16257                           
 16258                           ;incstack = 0
 16259                           ; Regs used in _Button_Deviation_Update: [wreg+fsr1l+fsr1h+status,2+status,0]
 16260  075E  0872               	movf	Button_Deviation_Update@button,w
 16261  075F  0086               	movwf	6
 16262  0760  0873               	movf	Button_Deviation_Update@button+1,w
 16263  0761  0087               	movwf	7
 16264  0762  3146               	addfsr 1,6
 16265  0763  3F40               	moviw [0]fsr1
 16266  0764  00A0               	movwf	??_Button_Deviation_Update
 16267  0765  3F41               	moviw [1]fsr1
 16268  0766  00A1               	movwf	??_Button_Deviation_Update+1
 16269  0767  3F42               	moviw [2]fsr1
 16270  0768  00A2               	movwf	??_Button_Deviation_Update+2
 16271  0769  3F43               	moviw [3]fsr1
 16272  076A  00A3               	movwf	??_Button_Deviation_Update+3
 16273  076B  3004               	movlw	4
 16274  076C                     u5135:
 16275  076C  36A3               	lsrf	??_Button_Deviation_Update+3,f
 16276  076D  0CA2               	rrf	??_Button_Deviation_Update+2,f
 16277  076E  0CA1               	rrf	??_Button_Deviation_Update+1,f
 16278  076F  0CA0               	rrf	??_Button_Deviation_Update,f
 16279  0770  0B89               	decfsz	9,f
 16280  0771  2F6C               	goto	u5135
 16281  0772  0872               	movf	Button_Deviation_Update@button,w
 16282  0773  0086               	movwf	6
 16283  0774  0873               	movf	Button_Deviation_Update@button+1,w
 16284  0775  0087               	movwf	7
 16285  0776  3144               	addfsr 1,4
 16286  0777  3F40               	moviw [0]fsr1
 16287  0778  00A4               	movwf	??_Button_Deviation_Update+4
 16288  0779  3F41               	moviw [1]fsr1
 16289  077A  00A5               	movwf	??_Button_Deviation_Update+5
 16290  077B  0824               	movf	??_Button_Deviation_Update+4,w
 16291  077C  00A6               	movwf	??_Button_Deviation_Update+6
 16292  077D  0825               	movf	??_Button_Deviation_Update+5,w
 16293  077E  00A7               	movwf	??_Button_Deviation_Update+7
 16294  077F  01A8               	clrf	??_Button_Deviation_Update+8
 16295  0780  01A9               	clrf	??_Button_Deviation_Update+9
 16296  0781  0820               	movf	??_Button_Deviation_Update,w
 16297  0782  02A6               	subwf	??_Button_Deviation_Update+6,f
 16298  0783  0821               	movf	??_Button_Deviation_Update+1,w
 16299  0784  3BA7               	subwfb	??_Button_Deviation_Update+7,f
 16300  0785  0822               	movf	??_Button_Deviation_Update+2,w
 16301  0786  3BA8               	subwfb	??_Button_Deviation_Update+8,f
 16302  0787  0823               	movf	??_Button_Deviation_Update+3,w
 16303  0788  3BA9               	subwfb	??_Button_Deviation_Update+9,f
 16304  0789  0829               	movf	??_Button_Deviation_Update+9,w
 16305  078A  00F7               	movwf	Button_Deviation_Update@deviation+3
 16306  078B  0828               	movf	??_Button_Deviation_Update+8,w
 16307  078C  00F6               	movwf	Button_Deviation_Update@deviation+2
 16308  078D  0827               	movf	??_Button_Deviation_Update+7,w
 16309  078E  00F5               	movwf	Button_Deviation_Update@deviation+1
 16310  078F  0826               	movf	??_Button_Deviation_Update+6,w
 16311  0790  00F4               	movwf	Button_Deviation_Update@deviation
 16312                           
 16313                           ;mcc_generated_files/mtouch/mtouch_button.c: 661:     deviation = deviation >> (button->
      +                          scaling);
 16314  0791  0874               	movf	Button_Deviation_Update@deviation,w
 16315  0792  00A0               	movwf	??_Button_Deviation_Update
 16316  0793  0875               	movf	Button_Deviation_Update@deviation+1,w
 16317  0794  00A1               	movwf	??_Button_Deviation_Update+1
 16318  0795  0876               	movf	Button_Deviation_Update@deviation+2,w
 16319  0796  00A2               	movwf	??_Button_Deviation_Update+2
 16320  0797  0877               	movf	Button_Deviation_Update@deviation+3,w
 16321  0798  00A3               	movwf	??_Button_Deviation_Update+3
 16322  0799  0872               	movf	Button_Deviation_Update@button,w
 16323  079A  0086               	movwf	6
 16324  079B  0873               	movf	Button_Deviation_Update@button+1,w
 16325  079C  0087               	movwf	7
 16326  079D  3150               	addfsr 1,16
 16327  079E  0A01               	incf	1,w
 16328  079F  2FA4               	goto	u5140
 16329  07A0                     u5145:
 16330  07A0  37A3               	asrf	??_Button_Deviation_Update+3,f
 16331  07A1  0CA2               	rrf	??_Button_Deviation_Update+2,f
 16332  07A2  0CA1               	rrf	??_Button_Deviation_Update+1,f
 16333  07A3  0CA0               	rrf	??_Button_Deviation_Update,f
 16334  07A4                     u5140:
 16335  07A4  0B89               	decfsz	9,f
 16336  07A5  2FA0               	goto	u5145
 16337  07A6  0823               	movf	??_Button_Deviation_Update+3,w
 16338  07A7  00F7               	movwf	Button_Deviation_Update@deviation+3
 16339  07A8  0822               	movf	??_Button_Deviation_Update+2,w
 16340  07A9  00F6               	movwf	Button_Deviation_Update@deviation+2
 16341  07AA  0821               	movf	??_Button_Deviation_Update+1,w
 16342  07AB  00F5               	movwf	Button_Deviation_Update@deviation+1
 16343  07AC  0820               	movf	??_Button_Deviation_Update,w
 16344  07AD  00F4               	movwf	Button_Deviation_Update@deviation
 16345                           
 16346                           ;mcc_generated_files/mtouch/mtouch_button.c: 664:     if (deviation > ((0x7f)))
 16347  07AE  1BF7               	btfsc	Button_Deviation_Update@deviation+3,7
 16348  07AF  2FC5               	goto	l5914
 16349  07B0  0877               	movf	Button_Deviation_Update@deviation+3,w
 16350  07B1  1D03               	btfss	3,2
 16351  07B2  2FBD               	goto	l5912
 16352  07B3  0876               	movf	Button_Deviation_Update@deviation+2,w
 16353  07B4  1D03               	btfss	3,2
 16354  07B5  2FBD               	goto	l5912
 16355  07B6  0875               	movf	Button_Deviation_Update@deviation+1,w
 16356  07B7  1D03               	btfss	3,2
 16357  07B8  2FBD               	goto	l5912
 16358  07B9  3080               	movlw	128
 16359  07BA  0274               	subwf	Button_Deviation_Update@deviation,w
 16360  07BB  1C03               	btfss	3,0
 16361  07BC  2FC5               	goto	l5914
 16362  07BD                     l5912:
 16363                           
 16364                           ;mcc_generated_files/mtouch/mtouch_button.c: 665:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 666:         deviation = ((0x7f));
 16365  07BD  3000               	movlw	0
 16366  07BE  00F7               	movwf	Button_Deviation_Update@deviation+3
 16367  07BF  3000               	movlw	0
 16368  07C0  00F6               	movwf	Button_Deviation_Update@deviation+2
 16369  07C1  3000               	movlw	0
 16370  07C2  00F5               	movwf	Button_Deviation_Update@deviation+1
 16371  07C3  307F               	movlw	127
 16372  07C4  00F4               	movwf	Button_Deviation_Update@deviation
 16373  07C5                     l5914:
 16374                           
 16375                           ;mcc_generated_files/mtouch/mtouch_button.c: 668:     if (deviation < ((-1-0x7f)))
 16376  07C5  1FF7               	btfss	Button_Deviation_Update@deviation+3,7
 16377  07C6  2FD9               	goto	l5918
 16378  07C7  3080               	movlw	128
 16379  07C8  0274               	subwf	Button_Deviation_Update@deviation,w
 16380  07C9  30FF               	movlw	255
 16381  07CA  3B75               	subwfb	Button_Deviation_Update@deviation+1,w
 16382  07CB  30FF               	movlw	255
 16383  07CC  3B76               	subwfb	Button_Deviation_Update@deviation+2,w
 16384  07CD  30FF               	movlw	255
 16385  07CE  3B77               	subwfb	Button_Deviation_Update@deviation+3,w
 16386  07CF  1803               	btfsc	3,0
 16387  07D0  2FD9               	goto	l5918
 16388                           
 16389                           ;mcc_generated_files/mtouch/mtouch_button.c: 669:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 670:         deviation = ((-1-0x7f));
 16390  07D1  30FF               	movlw	255
 16391  07D2  00F7               	movwf	Button_Deviation_Update@deviation+3
 16392  07D3  30FF               	movlw	255
 16393  07D4  00F6               	movwf	Button_Deviation_Update@deviation+2
 16394  07D5  30FF               	movlw	255
 16395  07D6  00F5               	movwf	Button_Deviation_Update@deviation+1
 16396  07D7  3080               	movlw	128
 16397  07D8  00F4               	movwf	Button_Deviation_Update@deviation
 16398  07D9                     l5918:
 16399                           
 16400                           ;mcc_generated_files/mtouch/mtouch_button.c: 673:     button->deviation = (mtouch_button
      +                          _deviation_t)deviation;
 16401  07D9  0872               	movf	Button_Deviation_Update@button,w
 16402  07DA  3E0A               	addlw	10
 16403  07DB  0020               	movlb	0	; select bank0
 16404  07DC  00A0               	movwf	??_Button_Deviation_Update
 16405  07DD  3000               	movlw	0
 16406  07DE  3D73               	addwfc	Button_Deviation_Update@button+1,w
 16407  07DF  00A1               	movwf	??_Button_Deviation_Update+1
 16408  07E0  0820               	movf	??_Button_Deviation_Update,w
 16409  07E1  0086               	movwf	6
 16410  07E2  0821               	movf	??_Button_Deviation_Update+1,w
 16411  07E3  0087               	movwf	7
 16412  07E4  0874               	movf	Button_Deviation_Update@deviation,w
 16413  07E5  0081               	movwf	1
 16414  07E6  0008               	return
 16415  07E7                     __end_of_Button_Deviation_Update:
 16416                           
 16417                           	psect	text113
 16418  1FAE                     __ptext113:	
 16419 ;; *************** function _Button_Reburst_Clear *****************
 16420 ;; Defined at:
 16421 ;;		line 830 in file "mcc_generated_files/mtouch/mtouch_button.c"
 16422 ;; Parameters:    Size  Location     Type
 16423 ;;		None
 16424 ;; Auto vars:     Size  Location     Type
 16425 ;;		None
 16426 ;; Return value:  Size  Location     Type
 16427 ;;                  1    wreg      void 
 16428 ;; Registers used:
 16429 ;;		status,2
 16430 ;; Tracked objects:
 16431 ;;		On entry : 1F/0
 16432 ;;		On exit  : 1F/1
 16433 ;;		Unchanged: 0/0
 16434 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16435 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16436 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16437 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16438 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16439 ;;Total ram usage:        0 bytes
 16440 ;; Hardware stack levels used: 1
 16441 ;; Hardware stack levels required when called: 4
 16442 ;; This function calls:
 16443 ;;		Nothing
 16444 ;; This function is called by:
 16445 ;;		_MTOUCH_Button_ServiceAll
 16446 ;; This function uses a non-reentrant model
 16447 ;;
 16448                           
 16449                           
 16450                           ;psect for function _Button_Reburst_Clear
 16451  1FAE                     _Button_Reburst_Clear:
 16452                           
 16453                           ;mcc_generated_files/mtouch/mtouch_button.c: 832:     button_reburst_request = 0;
 16454                           
 16455                           ;incstack = 0
 16456                           ; Regs used in _Button_Reburst_Clear: [status,2]
 16457  1FAE  0021               	movlb	1	; select bank1
 16458  1FAF  01C9               	clrf	_button_reburst_request^(0+128)
 16459  1FB0  0008               	return
 16460  1FB1                     __end_of_Button_Reburst_Clear:
 16461                           
 16462                           	psect	text114
 16463  1FF8                     __ptext114:	
 16464 ;; *************** function _EUSART_Write *****************
 16465 ;; Defined at:
 16466 ;;		line 132 in file "mcc_generated_files/eusart.c"
 16467 ;; Parameters:    Size  Location     Type
 16468 ;;  txData          1    wreg     unsigned char 
 16469 ;; Auto vars:     Size  Location     Type
 16470 ;;  txData          1    2[COMMON] unsigned char 
 16471 ;; Return value:  Size  Location     Type
 16472 ;;                  1    wreg      void 
 16473 ;; Registers used:
 16474 ;;		wreg
 16475 ;; Tracked objects:
 16476 ;;		On entry : 1C/1
 16477 ;;		On exit  : 1F/3
 16478 ;;		Unchanged: 0/0
 16479 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16480 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16481 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16482 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16483 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16484 ;;Total ram usage:        1 bytes
 16485 ;; Hardware stack levels used: 1
 16486 ;; Hardware stack levels required when called: 4
 16487 ;; This function calls:
 16488 ;;		Nothing
 16489 ;; This function is called by:
 16490 ;;		_main
 16491 ;; This function uses a non-reentrant model
 16492 ;;
 16493                           
 16494                           
 16495                           ;psect for function _EUSART_Write
 16496  1FF8                     _EUSART_Write:
 16497                           
 16498                           ;incstack = 0
 16499                           ; Regs used in _EUSART_Write: [wreg]
 16500                           ;EUSART_Write@txData stored from wreg
 16501  1FF8  00F2               	movwf	EUSART_Write@txData
 16502  1FF9                     l1088:	
 16503                           ;mcc_generated_files/eusart.c: 135:     {;mcc_generated_files/eusart.c: 136:     }
 16504                           
 16505                           
 16506                           ;mcc_generated_files/eusart.c: 134:     while(0 == PIR1bits.TXIF)
 16507  1FF9  0020               	movlb	0	; select bank0
 16508  1FFA  1E11               	btfss	17,4	;volatile
 16509  1FFB  2FF9               	goto	l1088
 16510                           
 16511                           ;mcc_generated_files/eusart.c: 138:     TXREG = txData;
 16512  1FFC  0872               	movf	EUSART_Write@txData,w
 16513  1FFD  0023               	movlb	3	; select bank3
 16514  1FFE  009A               	movwf	26	;volatile
 16515  1FFF  0008               	return
 16516  2000                     __end_of_EUSART_Write:
 16517                           
 16518                           	psect	text115
 16519  108A                     __ptext115:	
 16520 ;; *************** function _DELAY_milliseconds *****************
 16521 ;; Defined at:
 16522 ;;		line 38 in file "mcc_generated_files/delay.c"
 16523 ;; Parameters:    Size  Location     Type
 16524 ;;  milliseconds    2    2[COMMON] unsigned short 
 16525 ;; Auto vars:     Size  Location     Type
 16526 ;;		None
 16527 ;; Return value:  Size  Location     Type
 16528 ;;                  1    wreg      void 
 16529 ;; Registers used:
 16530 ;;		wreg, status,2, status,0
 16531 ;; Tracked objects:
 16532 ;;		On entry : 1F/2
 16533 ;;		On exit  : 0/0
 16534 ;;		Unchanged: 0/0
 16535 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16536 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16537 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16538 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16539 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16540 ;;Total ram usage:        3 bytes
 16541 ;; Hardware stack levels used: 1
 16542 ;; Hardware stack levels required when called: 4
 16543 ;; This function calls:
 16544 ;;		Nothing
 16545 ;; This function is called by:
 16546 ;;		_main
 16547 ;; This function uses a non-reentrant model
 16548 ;;
 16549                           
 16550                           
 16551                           ;psect for function _DELAY_milliseconds
 16552  108A                     _DELAY_milliseconds:
 16553  108A                     l6526:	
 16554                           ;mcc_generated_files/delay.c: 39:     while(milliseconds--){
 16555                           
 16556                           ;incstack = 0
 16557                           ; Regs used in _DELAY_milliseconds: [wreg+status,2+status,0]
 16558                           
 16559                           
 16560                           ;mcc_generated_files/delay.c: 39:     while(milliseconds--){
 16561  108A  3001               	movlw	1
 16562  108B  02F2               	subwf	DELAY_milliseconds@milliseconds,f
 16563  108C  3000               	movlw	0
 16564  108D  3BF3               	subwfb	DELAY_milliseconds@milliseconds+1,f
 16565  108E  0A72               	incf	DELAY_milliseconds@milliseconds,w
 16566  108F  1903               	btfsc	3,2
 16567  1090  0A73               	incf	DELAY_milliseconds@milliseconds+1,w
 16568  1091  1903               	btfsc	3,2
 16569  1092  0008               	return
 16570                           
 16571                           ;mcc_generated_files/delay.c: 40:         _delay((unsigned long)((1)*(32000000/4000.0)))
      +                          ;
 16572  1093  300B               	movlw	11
 16573  1094  00F4               	movwf	??_DELAY_milliseconds
 16574  1095  3062               	movlw	98
 16575  1096                     u6607:
 16576  1096  0B89               	decfsz	9,f
 16577  1097  2896               	goto	u6607
 16578  1098  0BF4               	decfsz	??_DELAY_milliseconds,f
 16579  1099  2896               	goto	u6607
 16580  109A  3200               	nop2
 16581  109B  288A               	goto	l6526
 16582  109C                     __end_of_DELAY_milliseconds:
 16583                           
 16584                           	psect	intentry
 16585  0004                     __pintentry:	
 16586 ;; *************** function _INTERRUPT_InterruptManager *****************
 16587 ;; Defined at:
 16588 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 16589 ;; Parameters:    Size  Location     Type
 16590 ;;		None
 16591 ;; Auto vars:     Size  Location     Type
 16592 ;;		None
 16593 ;; Return value:  Size  Location     Type
 16594 ;;                  1    wreg      void 
 16595 ;; Registers used:
 16596 ;;		wreg, status,2, status,0, pclath, cstack
 16597 ;; Tracked objects:
 16598 ;;		On entry : 0/0
 16599 ;;		On exit  : 0/0
 16600 ;;		Unchanged: 0/0
 16601 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16602 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16603 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16604 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16605 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16606 ;;Total ram usage:        0 bytes
 16607 ;; Hardware stack levels used: 1
 16608 ;; Hardware stack levels required when called: 3
 16609 ;; This function calls:
 16610 ;;		_TMR1_ISR
 16611 ;; This function is called by:
 16612 ;;		Interrupt level 1
 16613 ;; This function uses a non-reentrant model
 16614 ;;
 16615                           
 16616  0004                     _INTERRUPT_InterruptManager:
 16617                           
 16618                           ;incstack = 0
 16619  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
 16620                           
 16621                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+status,2+status,0+pclath+cstack]
 16622  0005  3180               	pagesel	$
 16623                           
 16624                           ;mcc_generated_files/interrupt_manager.c: 55:     if(INTCONbits.PEIE == 1)
 16625  0006  1F0B               	btfss	11,6	;volatile
 16626  0007  2810               	goto	i1l1186
 16627                           
 16628                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         if(PIE1bits.TMR1IE == 1 && PIR1bits.TMR1IF == 1)
 16629  0008  0021               	movlb	1	; select bank1
 16630  0009  1C11               	btfss	17,0	;volatile
 16631  000A  2810               	goto	i1l1186
 16632  000B  0020               	movlb	0	; select bank0
 16633  000C  1C11               	btfss	17,0	;volatile
 16634  000D  2810               	goto	i1l1186
 16635                           
 16636                           ;mcc_generated_files/interrupt_manager.c: 58:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 59:             TMR1_ISR();
 16637  000E  3190  20E5         	fcall	_TMR1_ISR
 16638  0010                     i1l1186:	
 16639                           ;mcc_generated_files/interrupt_manager.c: 60:         }
 16640                           
 16641  0010  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
 16642  0011  0009               	retfie
 16643  0012                     __end_of_INTERRUPT_InterruptManager:
 16644                           
 16645                           	psect	text117
 16646  10E5                     __ptext117:	
 16647 ;; *************** function _TMR1_ISR *****************
 16648 ;; Defined at:
 16649 ;;		line 157 in file "mcc_generated_files/tmr1.c"
 16650 ;; Parameters:    Size  Location     Type
 16651 ;;		None
 16652 ;; Auto vars:     Size  Location     Type
 16653 ;;		None
 16654 ;; Return value:  Size  Location     Type
 16655 ;;                  1    wreg      void 
 16656 ;; Registers used:
 16657 ;;		wreg, status,2, status,0, pclath, cstack
 16658 ;; Tracked objects:
 16659 ;;		On entry : 1F/0
 16660 ;;		On exit  : 0/0
 16661 ;;		Unchanged: 0/0
 16662 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16663 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16664 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16665 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16666 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16667 ;;Total ram usage:        0 bytes
 16668 ;; Hardware stack levels used: 1
 16669 ;; Hardware stack levels required when called: 2
 16670 ;; This function calls:
 16671 ;;		Absolute function
 16672 ;;		_MTOUCH_ScanScheduler
 16673 ;;		_TMR1_DefaultInterruptHandler
 16674 ;;		_TMR1_WriteTimer
 16675 ;; This function is called by:
 16676 ;;		_INTERRUPT_InterruptManager
 16677 ;; This function uses a non-reentrant model
 16678 ;;
 16679                           
 16680                           
 16681                           ;psect for function _TMR1_ISR
 16682  10E5                     _TMR1_ISR:
 16683                           
 16684                           ;mcc_generated_files/tmr1.c: 161:     PIR1bits.TMR1IF = 0;
 16685                           
 16686                           ;incstack = 0
 16687                           ; Regs used in _TMR1_ISR: [wreg+status,2+status,0+pclath+cstack]
 16688  10E5  1011               	bcf	17,0	;volatile
 16689                           
 16690                           ;mcc_generated_files/tmr1.c: 162:     TMR1_WriteTimer(timer1ReloadVal);
 16691  10E6  0021               	movlb	1	; select bank1
 16692  10E7  085F               	movf	(_timer1ReloadVal+1)^(0+128),w	;volatile
 16693  10E8  00F1               	movwf	TMR1_WriteTimer@timerVal+1
 16694  10E9  085E               	movf	_timer1ReloadVal^(0+128),w	;volatile
 16695  10EA  00F0               	movwf	TMR1_WriteTimer@timerVal
 16696  10EB  3190  204C  3190   	fcall	_TMR1_WriteTimer
 16697                           
 16698                           ;mcc_generated_files/tmr1.c: 164:     if(TMR1_InterruptHandler)
 16699  10EE  0021               	movlb	1	; select bank1
 16700  10EF  085C               	movf	_TMR1_InterruptHandler^(0+128),w
 16701  10F0  045D               	iorwf	(_TMR1_InterruptHandler+1)^(0+128),w
 16702  10F1  1903               	btfsc	3,2
 16703  10F2  0008               	return
 16704                           
 16705                           ;mcc_generated_files/tmr1.c: 165:     {;mcc_generated_files/tmr1.c: 166:         TMR1_In
      +                          terruptHandler();
 16706  10F3  085D               	movf	(_TMR1_InterruptHandler+1)^(0+128),w
 16707  10F4  008A               	movwf	10
 16708  10F5  085C               	movf	_TMR1_InterruptHandler^(0+128),w
 16709  10F6  000A               	callw
 16710  10F7  3190               	pagesel	$
 16711  10F8  0008               	return
 16712  10F9                     __end_of_TMR1_ISR:
 16713                           
 16714                           	psect	text118
 16715  1004                     __ptext118:	
 16716 ;; *************** function _MTOUCH_ScanScheduler *****************
 16717 ;; Defined at:
 16718 ;;		line 72 in file "mcc_generated_files/mtouch/mtouch.c"
 16719 ;; Parameters:    Size  Location     Type
 16720 ;;		None
 16721 ;; Auto vars:     Size  Location     Type
 16722 ;;		None
 16723 ;; Return value:  Size  Location     Type
 16724 ;;                  1    wreg      void 
 16725 ;; Registers used:
 16726 ;;		wreg, status,2, status,0, pclath, cstack
 16727 ;; Tracked objects:
 16728 ;;		On entry : 1F/1
 16729 ;;		On exit  : 1F/0
 16730 ;;		Unchanged: 0/0
 16731 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16732 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16733 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16734 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16735 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16736 ;;Total ram usage:        0 bytes
 16737 ;; Hardware stack levels used: 1
 16738 ;; Hardware stack levels required when called: 1
 16739 ;; This function calls:
 16740 ;;		_TMR1_WriteTimer
 16741 ;; This function is called by:
 16742 ;;		_MTOUCH_Initialize
 16743 ;;		_TMR1_ISR
 16744 ;; This function uses a non-reentrant model
 16745 ;;
 16746                           
 16747                           
 16748                           ;psect for function _MTOUCH_ScanScheduler
 16749  1004                     _MTOUCH_ScanScheduler:
 16750                           
 16751                           ;mcc_generated_files/mtouch/mtouch.c: 76:     TMR1_WriteTimer(mTouchScanReload);
 16752                           
 16753                           ;incstack = 0
 16754                           ; Regs used in _MTOUCH_ScanScheduler: [wreg+status,2+status,0+pclath+cstack]
 16755  1004  083F               	movf	(_mTouchScanReload+1)^(0+128),w
 16756  1005  00F1               	movwf	TMR1_WriteTimer@timerVal+1
 16757  1006  083E               	movf	_mTouchScanReload^(0+128),w
 16758  1007  00F0               	movwf	TMR1_WriteTimer@timerVal
 16759  1008  3190  204C         	fcall	_TMR1_WriteTimer
 16760                           
 16761                           ;mcc_generated_files/mtouch/mtouch.c: 79:     mtouch_time_toScan = 1;
 16762  100A  01FB               	clrf	_mtouch_time_toScan
 16763  100B  0AFB               	incf	_mtouch_time_toScan,f
 16764  100C  0008               	return
 16765  100D                     __end_of_MTOUCH_ScanScheduler:
 16766                           
 16767                           	psect	text119
 16768  1FA8                     __ptext119:	
 16769 ;; *************** function _TMR1_DefaultInterruptHandler *****************
 16770 ;; Defined at:
 16771 ;;		line 175 in file "mcc_generated_files/tmr1.c"
 16772 ;; Parameters:    Size  Location     Type
 16773 ;;		None
 16774 ;; Auto vars:     Size  Location     Type
 16775 ;;		None
 16776 ;; Return value:  Size  Location     Type
 16777 ;;                  1    wreg      void 
 16778 ;; Registers used:
 16779 ;;		None
 16780 ;; Tracked objects:
 16781 ;;		On entry : 1F/1
 16782 ;;		On exit  : 1F/1
 16783 ;;		Unchanged: 1F/0
 16784 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16785 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16786 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16787 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16788 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16789 ;;Total ram usage:        0 bytes
 16790 ;; Hardware stack levels used: 1
 16791 ;; This function calls:
 16792 ;;		Nothing
 16793 ;; This function is called by:
 16794 ;;		_TMR1_Initialize
 16795 ;;		_TMR1_ISR
 16796 ;; This function uses a non-reentrant model
 16797 ;;
 16798                           
 16799                           
 16800                           ;psect for function _TMR1_DefaultInterruptHandler
 16801  1FA8                     _TMR1_DefaultInterruptHandler:
 16802                           
 16803                           ;incstack = 0
 16804                           ; Regs used in _TMR1_DefaultInterruptHandler: []
 16805  1FA8  0008               	return
 16806  1FA9                     __end_of_TMR1_DefaultInterruptHandler:
 16807                           
 16808                           	psect	text120
 16809  104C                     __ptext120:	
 16810 ;; *************** function _TMR1_WriteTimer *****************
 16811 ;; Defined at:
 16812 ;;		line 120 in file "mcc_generated_files/tmr1.c"
 16813 ;; Parameters:    Size  Location     Type
 16814 ;;  timerVal        2    0[COMMON] unsigned short 
 16815 ;; Auto vars:     Size  Location     Type
 16816 ;;		None
 16817 ;; Return value:  Size  Location     Type
 16818 ;;                  1    wreg      void 
 16819 ;; Registers used:
 16820 ;;		wreg
 16821 ;; Tracked objects:
 16822 ;;		On entry : 1F/1
 16823 ;;		On exit  : 1F/0
 16824 ;;		Unchanged: 0/0
 16825 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16826 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16827 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16828 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16829 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16830 ;;Total ram usage:        2 bytes
 16831 ;; Hardware stack levels used: 1
 16832 ;; This function calls:
 16833 ;;		Nothing
 16834 ;; This function is called by:
 16835 ;;		_MTOUCH_ScanScheduler
 16836 ;;		_TMR1_ISR
 16837 ;; This function uses a non-reentrant model
 16838 ;;
 16839                           
 16840                           
 16841                           ;psect for function _TMR1_WriteTimer
 16842  104C                     _TMR1_WriteTimer:
 16843                           
 16844                           ;mcc_generated_files/tmr1.c: 120: void TMR1_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr1.c: 121: {;mcc_generated_files/tmr1.c: 122:     if (T1CONbits.nT1SYNC == 1)
 16845                           
 16846                           ;incstack = 0
 16847                           ; Regs used in _TMR1_WriteTimer: [wreg]
 16848  104C  0020               	movlb	0	; select bank0
 16849  104D  1D18               	btfss	24,2	;volatile
 16850  104E  2856               	goto	i1l4504
 16851                           
 16852                           ;mcc_generated_files/tmr1.c: 123:     {;mcc_generated_files/tmr1.c: 125:         T1CONbi
      +                          ts.TMR1ON = 0;
 16853  104F  1018               	bcf	24,0	;volatile
 16854                           
 16855                           ;mcc_generated_files/tmr1.c: 128:         TMR1H = (uint8_t)(timerVal >> 8);
 16856  1050  0871               	movf	TMR1_WriteTimer@timerVal+1,w
 16857  1051  0097               	movwf	23	;volatile
 16858                           
 16859                           ;mcc_generated_files/tmr1.c: 129:         TMR1L = (uint8_t)timerVal;
 16860  1052  0870               	movf	TMR1_WriteTimer@timerVal,w
 16861  1053  0096               	movwf	22	;volatile
 16862                           
 16863                           ;mcc_generated_files/tmr1.c: 132:         T1CONbits.TMR1ON =1;
 16864  1054  1418               	bsf	24,0	;volatile
 16865                           
 16866                           ;mcc_generated_files/tmr1.c: 133:     }
 16867  1055  0008               	return
 16868  1056                     i1l4504:
 16869                           
 16870                           ;mcc_generated_files/tmr1.c: 135:     {;mcc_generated_files/tmr1.c: 137:         TMR1H =
      +                           (uint8_t)(timerVal >> 8);
 16871  1056  0871               	movf	TMR1_WriteTimer@timerVal+1,w
 16872  1057  0097               	movwf	23	;volatile
 16873                           
 16874                           ;mcc_generated_files/tmr1.c: 138:         TMR1L = (uint8_t)timerVal;
 16875  1058  0870               	movf	TMR1_WriteTimer@timerVal,w
 16876  1059  0096               	movwf	22	;volatile
 16877  105A  0008               	return
 16878  105B                     __end_of_TMR1_WriteTimer:
 16879  007E                     btemp	set	126	;btemp
 16880  007E                     int$flags	set	126
 16881  007E                     wtemp0	set	126
 16882  22E2                     
 16883                           	psect	idloc
 16884                           
 16885                           ;Config register IDLOC0 @ 0x8000
 16886                           ;	unspecified, using default values
 16887  8000                     	org	32768
 16888  8000  3FFF               	dw	16383
 16889                           
 16890                           ;Config register IDLOC1 @ 0x8001
 16891                           ;	unspecified, using default values
 16892  8001                     	org	32769
 16893  8001  3FFF               	dw	16383
 16894                           
 16895                           ;Config register IDLOC2 @ 0x8002
 16896                           ;	unspecified, using default values
 16897  8002                     	org	32770
 16898  8002  3FFF               	dw	16383
 16899                           
 16900                           ;Config register IDLOC3 @ 0x8003
 16901                           ;	unspecified, using default values
 16902  8003                     	org	32771
 16903  8003  3FFF               	dw	16383
 16904                           
 16905                           	psect	config
 16906                           
 16907                           ;Config register CONFIG1 @ 0x8007
 16908                           ;	Oscillator Selection
 16909                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
 16910                           ;	Watchdog Timer Enable
 16911                           ;	WDTE = OFF, WDT disabled
 16912                           ;	Power-up Timer Enable
 16913                           ;	PWRTE = OFF, PWRT disabled
 16914                           ;	MCLR Pin Function Select
 16915                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
 16916                           ;	Flash Program Memory Code Protection
 16917                           ;	CP = OFF, Program memory code protection is disabled
 16918                           ;	Data Memory Code Protection
 16919                           ;	CPD = OFF, Data memory code protection is disabled
 16920                           ;	Brown-out Reset Enable
 16921                           ;	BOREN = NSLEEP, Brown-out Reset enabled while running and disabled in Sleep
 16922                           ;	Clock Out Enable
 16923                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
 16924                           ;	Internal/External Switchover
 16925                           ;	IESO = ON, Internal/External Switchover mode is enabled
 16926                           ;	Fail-Safe Clock Monitor Enable
 16927                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
 16928  8007                     	org	32775
 16929  8007  3DE4               	dw	15844
 16930                           
 16931                           ;Config register CONFIG2 @ 0x8008
 16932                           ;	Flash Memory Self-Write Protection
 16933                           ;	WRT = OFF, Write protection off
 16934                           ;	Voltage Regulator Capacitor Enable
 16935                           ;	VCAPEN = OFF, All VCAP pin functionality is disabled
 16936                           ;	PLL Enable
 16937                           ;	PLLEN = ON, 4x PLL enabled
 16938                           ;	Stack Overflow/Underflow Reset Enable
 16939                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
 16940                           ;	Brown-out Reset Voltage Selection
 16941                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
 16942                           ;	Low-Voltage Programming Enable
 16943                           ;	LVP = ON, Low-voltage programming enabled
 16944  8008                     	org	32776
 16945  8008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    180
    Data        156
    BSS         24
    Persistent  42
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      12
    BANK0            80     60      68
    BANK1            80     14      70
    BANK2            80      0      34
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            18      0       0
    BANK10            0      0       0
    BANK11            0      0       0
    BANK12            0      0       0

Pointer List with Targets:

    Button_Service$2908$0	PTR struct . size(2) Largest target is 180
		 -> mtouch_button(BIGRAM[180]), 

    Button_Service$2908	PTR FTN(PTR struct .,)void  size(2) Largest target is 1
		 -> Button_State_Disabled(), Button_State_Suspended(), Button_State_ReleaseDebounce(), Button_State_Pressed(), 
		 -> Button_State_PressDebounce(), Button_State_NotPressed(), Button_State_Initializing(), 

    Button_State_Disabled@button	PTR struct . size(2) Largest target is 180
		 -> mtouch_button(BIGRAM[180]), 

    MTOUCH_Button_Tick$2906	PTR struct . size(2) Largest target is 180
		 -> mtouch_button(BIGRAM[180]), 

    Button_Reburst_Request@button	PTR struct . size(2) Largest target is 180
		 -> mtouch_button(BIGRAM[180]), 

    Button_StateMachine$0	PTR struct . size(2) Largest target is 180
		 -> mtouch_button(BIGRAM[180]), 

    memcpy@d1	PTR void  size(2) Largest target is 180
		 -> mtouch_button(BIGRAM[180]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 180
		 -> mtouch_button(BIGRAM[180]), 

    memcpy@s1	PTR const void  size(2) Largest target is 180
		 -> mtouch_button_init(CODE[180]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 180
		 -> mtouch_button_init(CODE[180]), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_DefaultInterruptHandler(), MTOUCH_ScanScheduler(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), TMR1_DefaultInterruptHandler(), MTOUCH_ScanScheduler(), 

    EUSART_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), 

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultErrorHandler(), 

    EUSART_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultOverrunErrorHandler(), 

    EUSART_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultFramingErrorHandler(), 

    Slider_Initialize@slider	PTR struct . size(1) Largest target is 34
		 -> mtouch_slider(BANK2[34]), 

    Slider_Service@slider	PTR struct . size(1) Largest target is 34
		 -> mtouch_slider(BANK2[34]), 

    calculate_position@slider	PTR struct . size(1) Largest target is 34
		 -> mtouch_slider(BANK2[34]), 

    calculate_contact_size@slider	PTR struct . size(1) Largest target is 34
		 -> mtouch_slider(BANK2[34]), 

    calculate_raw_position@slider	PTR struct . size(1) Largest target is 34
		 -> mtouch_slider(BANK2[34]), 

    Slider_FindRight@slider	PTR struct . size(1) Largest target is 34
		 -> mtouch_slider(BANK2[34]), 

    Slider_FindLeft@slider	PTR struct . size(1) Largest target is 34
		 -> mtouch_slider(BANK2[34]), 

    Slider_FindMiddle@slider	PTR struct . size(1) Largest target is 34
		 -> mtouch_slider(BANK2[34]), 

    moving_average_filter@slider	PTR struct . size(1) Largest target is 34
		 -> mtouch_slider(BANK2[34]), 

    positional_hysteresis@slider	PTR struct . size(1) Largest target is 34
		 -> mtouch_slider(BANK2[34]), 

    get_difference@slider	PTR struct . size(1) Largest target is 34
		 -> mtouch_slider(BANK2[34]), 

    callback_released	PTR FTN(enum E2918,)void  size(2) Largest target is 1
		 -> Slider_DefaultCallback(), 

    callback_pressed@mtouch_slider$F1195	PTR FTN(enum E2918,)void  size(2) Largest target is 1
		 -> Slider_DefaultCallback(), 

    callback_position_changed	PTR FTN(enum E2918,)void  size(2) Largest target is 1
		 -> Slider_DefaultCallback(), 

    Button_Check_AKS_Block@check_button	PTR struct . size(2) Largest target is 180
		 -> mtouch_button(BIGRAM[180]), 

    Button_Check_AKS_Block@button	PTR struct . size(2) Largest target is 180
		 -> mtouch_button(BIGRAM[180]), 

    Button_Baseline_Update@button	PTR struct . size(2) Largest target is 180
		 -> mtouch_button(BIGRAM[180]), 

    Button_Baseline_Initialize@button	PTR struct . size(2) Largest target is 180
		 -> mtouch_button(BIGRAM[180]), 

    Button_Reading_Update_Helper@button	PTR struct . size(2) Largest target is 180
		 -> mtouch_button(BIGRAM[180]), 

    Button_Reading_Update@button	PTR struct . size(2) Largest target is 180
		 -> mtouch_button(BIGRAM[180]), 

    Button_Unscaled_Deviation_Get@button	PTR struct . size(2) Largest target is 180
		 -> mtouch_button(BIGRAM[180]), 

    Button_Deviation_Update@button	PTR struct . size(2) Largest target is 180
		 -> mtouch_button(BIGRAM[180]), 

    Button_Tick_helper@button	PTR struct . size(2) Largest target is 180
		 -> mtouch_button(BIGRAM[180]), 

    Button_State_Suspended@button	PTR struct . size(2) Largest target is 180
		 -> mtouch_button(BIGRAM[180]), 

    Button_State_ReleaseDebounce@button	PTR struct . size(2) Largest target is 180
		 -> mtouch_button(BIGRAM[180]), 

    Button_State_PressDebounce@button	PTR struct . size(2) Largest target is 180
		 -> mtouch_button(BIGRAM[180]), 

    Button_State_Pressed@button	PTR struct . size(2) Largest target is 180
		 -> mtouch_button(BIGRAM[180]), 

    Button_State_NotPressed@button	PTR struct . size(2) Largest target is 180
		 -> mtouch_button(BIGRAM[180]), 

    Button_State_Initializing@button	PTR struct . size(2) Largest target is 180
		 -> mtouch_button(BIGRAM[180]), 

    Button_Service@button	PTR struct . size(2) Largest target is 180
		 -> mtouch_button(BIGRAM[180]), 

    sp__memcpy	PTR void  size(2) Largest target is 180
		 -> mtouch_button(BIGRAM[180]), 

    MTOUCH_Button_Initialize@button	PTR struct . size(2) Largest target is 180
		 -> mtouch_button(BIGRAM[180]), 

    Button_StateMachine	PTR FTN(PTR struct .,)void [7] size(2) Largest target is 1
		 -> Button_State_Disabled(), Button_State_Suspended(), Button_State_ReleaseDebounce(), Button_State_Pressed(), 
		 -> Button_State_PressDebounce(), Button_State_NotPressed(), Button_State_Initializing(), 

    callback_notPressed	PTR FTN(enum E2935,)void  size(2) Largest target is 1
		 -> Button_DefaultCallback(), 

    callback_pressed	PTR FTN(enum E2935,)void  size(2) Largest target is 1
		 -> Button_DefaultCallback(), 

    Sensor_setSampled@sensor.scanB	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanB_9(), MTOUCH_CVD_ScanB_8(), MTOUCH_CVD_ScanB_7(), MTOUCH_CVD_ScanB_6(), 
		 -> MTOUCH_CVD_ScanB_5(), MTOUCH_CVD_ScanB_4(), MTOUCH_CVD_ScanB_3(), MTOUCH_CVD_ScanB_2(), 
		 -> MTOUCH_CVD_ScanB_1(), MTOUCH_CVD_ScanB_0(), 

    Sensor_setSampled@sensor.scanA	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanA_9(), MTOUCH_CVD_ScanA_8(), MTOUCH_CVD_ScanA_7(), MTOUCH_CVD_ScanA_6(), 
		 -> MTOUCH_CVD_ScanA_5(), MTOUCH_CVD_ScanA_4(), MTOUCH_CVD_ScanA_3(), MTOUCH_CVD_ScanA_2(), 
		 -> MTOUCH_CVD_ScanA_1(), MTOUCH_CVD_ScanA_0(), 

    Sensor_setSampled@sensor	PTR struct . size(2) Largest target is 90
		 -> mtouch_sensor(BIGRAM[90]), 

    Sensor_Sampled_Reset@sensor.scanB	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanB_9(), MTOUCH_CVD_ScanB_8(), MTOUCH_CVD_ScanB_7(), MTOUCH_CVD_ScanB_6(), 
		 -> MTOUCH_CVD_ScanB_5(), MTOUCH_CVD_ScanB_4(), MTOUCH_CVD_ScanB_3(), MTOUCH_CVD_ScanB_2(), 
		 -> MTOUCH_CVD_ScanB_1(), MTOUCH_CVD_ScanB_0(), 

    Sensor_Sampled_Reset@sensor.scanA	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanA_9(), MTOUCH_CVD_ScanA_8(), MTOUCH_CVD_ScanA_7(), MTOUCH_CVD_ScanA_6(), 
		 -> MTOUCH_CVD_ScanA_5(), MTOUCH_CVD_ScanA_4(), MTOUCH_CVD_ScanA_3(), MTOUCH_CVD_ScanA_2(), 
		 -> MTOUCH_CVD_ScanA_1(), MTOUCH_CVD_ScanA_0(), 

    Sensor_Sampled_Reset@sensor	PTR struct . size(2) Largest target is 90
		 -> mtouch_sensor(BIGRAM[90]), 

    MTOUCH_Sensor_Sampled_ResetAll@sensor	PTR struct . size(2) Largest target is 90
		 -> mtouch_sensor(BIGRAM[90]), 

    Sensor_setInactive@sensor.scanB	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanB_9(), MTOUCH_CVD_ScanB_8(), MTOUCH_CVD_ScanB_7(), MTOUCH_CVD_ScanB_6(), 
		 -> MTOUCH_CVD_ScanB_5(), MTOUCH_CVD_ScanB_4(), MTOUCH_CVD_ScanB_3(), MTOUCH_CVD_ScanB_2(), 
		 -> MTOUCH_CVD_ScanB_1(), MTOUCH_CVD_ScanB_0(), 

    Sensor_setInactive@sensor.scanA	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanA_9(), MTOUCH_CVD_ScanA_8(), MTOUCH_CVD_ScanA_7(), MTOUCH_CVD_ScanA_6(), 
		 -> MTOUCH_CVD_ScanA_5(), MTOUCH_CVD_ScanA_4(), MTOUCH_CVD_ScanA_3(), MTOUCH_CVD_ScanA_2(), 
		 -> MTOUCH_CVD_ScanA_1(), MTOUCH_CVD_ScanA_0(), 

    Sensor_setInactive@sensor	PTR struct . size(2) Largest target is 90
		 -> mtouch_sensor(BIGRAM[90]), 

    Sensor_setActive@sensor.scanB	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanB_9(), MTOUCH_CVD_ScanB_8(), MTOUCH_CVD_ScanB_7(), MTOUCH_CVD_ScanB_6(), 
		 -> MTOUCH_CVD_ScanB_5(), MTOUCH_CVD_ScanB_4(), MTOUCH_CVD_ScanB_3(), MTOUCH_CVD_ScanB_2(), 
		 -> MTOUCH_CVD_ScanB_1(), MTOUCH_CVD_ScanB_0(), 

    Sensor_setActive@sensor.scanA	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanA_9(), MTOUCH_CVD_ScanA_8(), MTOUCH_CVD_ScanA_7(), MTOUCH_CVD_ScanA_6(), 
		 -> MTOUCH_CVD_ScanA_5(), MTOUCH_CVD_ScanA_4(), MTOUCH_CVD_ScanA_3(), MTOUCH_CVD_ScanA_2(), 
		 -> MTOUCH_CVD_ScanA_1(), MTOUCH_CVD_ScanA_0(), 

    Sensor_setActive@sensor	PTR struct . size(2) Largest target is 90
		 -> mtouch_sensor(BIGRAM[90]), 

    Sensor_isEnabled@sensor.scanB	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanB_9(), MTOUCH_CVD_ScanB_8(), MTOUCH_CVD_ScanB_7(), MTOUCH_CVD_ScanB_6(), 
		 -> MTOUCH_CVD_ScanB_5(), MTOUCH_CVD_ScanB_4(), MTOUCH_CVD_ScanB_3(), MTOUCH_CVD_ScanB_2(), 
		 -> MTOUCH_CVD_ScanB_1(), MTOUCH_CVD_ScanB_0(), 

    Sensor_isEnabled@sensor.scanA	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanA_9(), MTOUCH_CVD_ScanA_8(), MTOUCH_CVD_ScanA_7(), MTOUCH_CVD_ScanA_6(), 
		 -> MTOUCH_CVD_ScanA_5(), MTOUCH_CVD_ScanA_4(), MTOUCH_CVD_ScanA_3(), MTOUCH_CVD_ScanA_2(), 
		 -> MTOUCH_CVD_ScanA_1(), MTOUCH_CVD_ScanA_0(), 

    Sensor_isEnabled@sensor	PTR struct . size(2) Largest target is 90
		 -> mtouch_sensor(BIGRAM[90]), 

    Sensor_setScanFunction@sensor.scanB	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanB_9(), MTOUCH_CVD_ScanB_8(), MTOUCH_CVD_ScanB_7(), MTOUCH_CVD_ScanB_6(), 
		 -> MTOUCH_CVD_ScanB_5(), MTOUCH_CVD_ScanB_4(), MTOUCH_CVD_ScanB_3(), MTOUCH_CVD_ScanB_2(), 
		 -> MTOUCH_CVD_ScanB_1(), MTOUCH_CVD_ScanB_0(), 

    Sensor_setScanFunction@sensor.scanA	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanA_9(), MTOUCH_CVD_ScanA_8(), MTOUCH_CVD_ScanA_7(), MTOUCH_CVD_ScanA_6(), 
		 -> MTOUCH_CVD_ScanA_5(), MTOUCH_CVD_ScanA_4(), MTOUCH_CVD_ScanA_3(), MTOUCH_CVD_ScanA_2(), 
		 -> MTOUCH_CVD_ScanA_1(), MTOUCH_CVD_ScanA_0(), 

    Sensor_setScanFunction@sensor	PTR struct . size(2) Largest target is 90
		 -> mtouch_sensor(BIGRAM[90]), 

    Sensor_RawSample_Update@sensor.scanB	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanB_9(), MTOUCH_CVD_ScanB_8(), MTOUCH_CVD_ScanB_7(), MTOUCH_CVD_ScanB_6(), 
		 -> MTOUCH_CVD_ScanB_5(), MTOUCH_CVD_ScanB_4(), MTOUCH_CVD_ScanB_3(), MTOUCH_CVD_ScanB_2(), 
		 -> MTOUCH_CVD_ScanB_1(), MTOUCH_CVD_ScanB_0(), 

    Sensor_RawSample_Update@sensor.scanA	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanA_9(), MTOUCH_CVD_ScanA_8(), MTOUCH_CVD_ScanA_7(), MTOUCH_CVD_ScanA_6(), 
		 -> MTOUCH_CVD_ScanA_5(), MTOUCH_CVD_ScanA_4(), MTOUCH_CVD_ScanA_3(), MTOUCH_CVD_ScanA_2(), 
		 -> MTOUCH_CVD_ScanA_1(), MTOUCH_CVD_ScanA_0(), 

    Sensor_RawSample_Update@sensor	PTR struct . size(2) Largest target is 90
		 -> mtouch_sensor(BIGRAM[90]), 

    Sensor_Acq_ExecutePacket@sensor.scanB	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanB_9(), MTOUCH_CVD_ScanB_8(), MTOUCH_CVD_ScanB_7(), MTOUCH_CVD_ScanB_6(), 
		 -> MTOUCH_CVD_ScanB_5(), MTOUCH_CVD_ScanB_4(), MTOUCH_CVD_ScanB_3(), MTOUCH_CVD_ScanB_2(), 
		 -> MTOUCH_CVD_ScanB_1(), MTOUCH_CVD_ScanB_0(), 

    Sensor_Acq_ExecutePacket@sensor.scanA	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanA_9(), MTOUCH_CVD_ScanA_8(), MTOUCH_CVD_ScanA_7(), MTOUCH_CVD_ScanA_6(), 
		 -> MTOUCH_CVD_ScanA_5(), MTOUCH_CVD_ScanA_4(), MTOUCH_CVD_ScanA_3(), MTOUCH_CVD_ScanA_2(), 
		 -> MTOUCH_CVD_ScanA_1(), MTOUCH_CVD_ScanA_0(), 

    Sensor_Acq_ExecutePacket@sensor	PTR struct . size(2) Largest target is 90
		 -> mtouch_sensor(BIGRAM[90]), 

    Sensor_Acquisition@sensor.scanB	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanB_9(), MTOUCH_CVD_ScanB_8(), MTOUCH_CVD_ScanB_7(), MTOUCH_CVD_ScanB_6(), 
		 -> MTOUCH_CVD_ScanB_5(), MTOUCH_CVD_ScanB_4(), MTOUCH_CVD_ScanB_3(), MTOUCH_CVD_ScanB_2(), 
		 -> MTOUCH_CVD_ScanB_1(), MTOUCH_CVD_ScanB_0(), 

    Sensor_Acquisition@sensor.scanA	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanA_9(), MTOUCH_CVD_ScanA_8(), MTOUCH_CVD_ScanA_7(), MTOUCH_CVD_ScanA_6(), 
		 -> MTOUCH_CVD_ScanA_5(), MTOUCH_CVD_ScanA_4(), MTOUCH_CVD_ScanA_3(), MTOUCH_CVD_ScanA_2(), 
		 -> MTOUCH_CVD_ScanA_1(), MTOUCH_CVD_ScanA_0(), 

    Sensor_Acquisition@sensor	PTR struct . size(2) Largest target is 90
		 -> mtouch_sensor(BIGRAM[90]), 

    Sensor_Service@sensor	PTR struct . size(2) Largest target is 90
		 -> mtouch_sensor(BIGRAM[90]), 

    S185$scanB	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanB_9(), MTOUCH_CVD_ScanB_8(), MTOUCH_CVD_ScanB_7(), MTOUCH_CVD_ScanB_6(), 
		 -> MTOUCH_CVD_ScanB_5(), MTOUCH_CVD_ScanB_4(), MTOUCH_CVD_ScanB_3(), MTOUCH_CVD_ScanB_2(), 
		 -> MTOUCH_CVD_ScanB_1(), MTOUCH_CVD_ScanB_0(), 

    mtouch_sensor.scanB	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanB_9(), MTOUCH_CVD_ScanB_8(), MTOUCH_CVD_ScanB_7(), MTOUCH_CVD_ScanB_6(), 
		 -> MTOUCH_CVD_ScanB_5(), MTOUCH_CVD_ScanB_4(), MTOUCH_CVD_ScanB_3(), MTOUCH_CVD_ScanB_2(), 
		 -> MTOUCH_CVD_ScanB_1(), MTOUCH_CVD_ScanB_0(), 

    S185$scanA	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanA_9(), MTOUCH_CVD_ScanA_8(), MTOUCH_CVD_ScanA_7(), MTOUCH_CVD_ScanA_6(), 
		 -> MTOUCH_CVD_ScanA_5(), MTOUCH_CVD_ScanA_4(), MTOUCH_CVD_ScanA_3(), MTOUCH_CVD_ScanA_2(), 
		 -> MTOUCH_CVD_ScanA_1(), MTOUCH_CVD_ScanA_0(), 

    mtouch_sensor.scanA	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanA_9(), MTOUCH_CVD_ScanA_8(), MTOUCH_CVD_ScanA_7(), MTOUCH_CVD_ScanA_6(), 
		 -> MTOUCH_CVD_ScanA_5(), MTOUCH_CVD_ScanA_4(), MTOUCH_CVD_ScanA_3(), MTOUCH_CVD_ScanA_2(), 
		 -> MTOUCH_CVD_ScanA_1(), MTOUCH_CVD_ScanA_0(), 

    Sensor_scanB	PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanB_9(), MTOUCH_CVD_ScanB_8(), MTOUCH_CVD_ScanB_7(), MTOUCH_CVD_ScanB_6(), 
		 -> MTOUCH_CVD_ScanB_5(), MTOUCH_CVD_ScanB_4(), MTOUCH_CVD_ScanB_3(), MTOUCH_CVD_ScanB_2(), 
		 -> MTOUCH_CVD_ScanB_1(), MTOUCH_CVD_ScanB_0(), 

    Sensor_scanA	PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanA_9(), MTOUCH_CVD_ScanA_8(), MTOUCH_CVD_ScanA_7(), MTOUCH_CVD_ScanA_6(), 
		 -> MTOUCH_CVD_ScanA_5(), MTOUCH_CVD_ScanA_4(), MTOUCH_CVD_ScanA_3(), MTOUCH_CVD_ScanA_2(), 
		 -> MTOUCH_CVD_ScanA_1(), MTOUCH_CVD_ScanA_0(), 

    callback_sampled	PTR FTN(enum E2707,)void  size(2) Largest target is 1
		 -> Sensor_DefaultCallback(), 


Critical Paths under _main in COMMON

    _main->___xxtofl
    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _EUSART_Initialize->_EUSART_SetErrorHandler
    _EUSART_Initialize->_EUSART_SetFramingErrorHandler
    _EUSART_Initialize->_EUSART_SetOverrunErrorHandler
    _MTOUCH_Button_Reburst_Request->_Button_Reburst_Request
    _Button_Tick_helper->_MTOUCH_Sensor_Enable
    _Slider_Service->_MTOUCH_Button_isPressed
    _positional_hysteresis->_get_difference
    _moving_average_filter->_get_difference
    _calculate_raw_position->_divide
    _interpolate->_divide
    _calculate_contact_size->_Slider_FindLeft
    _Slider_FindRight->_MTOUCH_Button_Deviation_Get
    _Slider_FindMiddle->_MTOUCH_Button_Deviation_Get
    _Slider_FindLeft->_MTOUCH_Button_Deviation_Get
    _MTOUCH_Button_Deviation_Get->___wmul
    _MTOUCH_Button_isPressed->___wmul
    _Sensor_Acq_ExecutePacket->_Sensor_Acq_ExecuteScan
    _Sensor_Acq_ExecuteScan->___wmul
    _MTOUCH_Initialize->_MTOUCH_Button_InitializeAll
    _MTOUCH_Slider_InitializeAll->_Slider_Initialize
    _MTOUCH_Sensor_Sampled_ResetAll->_Sensor_Sampled_Reset
    _MTOUCH_Sensor_Initialize->_Sensor_Sampled_Reset
    _Sensor_Sampled_Reset->___wmul
    _MTOUCH_Sensor_Enable->___wmul
    _MTOUCH_Button_InitializeAll->_memcpy
    _MTOUCH_Sensor_wasSampled->___wmul
    _Button_State_Suspended->_Button_Baseline_Update
    _MTOUCH_Sensor_Disable->___wmul
    _Button_State_ReleaseDebounce->_Button_Reburst_Request
    _Button_State_Pressed->_Button_Reburst_Request
    _Button_State_PressDebounce->_Button_Reburst_Request
    _Button_State_NotPressed->_Button_Baseline_Update
    _Button_State_NotPressed->_Button_Reburst_Request
    _MTOUCH_Button_Initialize->___wmul
    _Button_Check_AKS_Block->_Button_Unscaled_Deviation_Get
    _MTOUCH_Sensor_isEnabled->___wmul
    _Button_State_Initializing->_Button_Baseline_Update
    _Button_State_Initializing->_Button_Reburst_Request
    _Button_Reburst_Request->___wmul
    _Button_Baseline_Initialize->_MTOUCH_Sensor_RawSample_Get
    _Button_Reading_Update_Helper->_MTOUCH_Sensor_RawSample_Get
    _MTOUCH_Sensor_RawSample_Get->___wmul

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _TMR1_ISR->_TMR1_WriteTimer
    _MTOUCH_ScanScheduler->_TMR1_WriteTimer

Critical Paths under _main in BANK0

    _main->_MTOUCH_Service_Mainloop
    _MTOUCH_Service_Mainloop->_MTOUCH_Slider_ServiceAll
    _MTOUCH_needReburst->_MTOUCH_Slider_Reburst_Service
    _MTOUCH_Slider_Reburst_Service->_MTOUCH_Button_Reburst_Request
    _MTOUCH_Tick->_MTOUCH_Button_Tick
    _MTOUCH_Button_Tick->_Button_Tick_helper
    _Button_Tick_helper->_MTOUCH_Sensor_Enable
    _MTOUCH_Slider_ServiceAll->_Slider_Service
    _Slider_Service->_calculate_position
    _calculate_position->_calculate_raw_position
    _positional_hysteresis->_get_difference
    _moving_average_filter->_get_difference
    _calculate_raw_position->_interpolate
    _calculate_contact_size->_Slider_FindMiddle
    _Slider_FindRight->_MTOUCH_Button_Deviation_Get
    _Slider_FindMiddle->_MTOUCH_Button_Deviation_Get
    _Slider_FindLeft->_MTOUCH_Button_Deviation_Get
    _MTOUCH_Sensor_SampleAll->_Sensor_Service
    _Sensor_Service->_Sensor_Acquisition
    _Sensor_Acquisition->_Sensor_Acq_ExecutePacket
    _Sensor_Acq_ExecutePacket->_Sensor_Acq_ExecuteScan
    _MTOUCH_Initialize->_MTOUCH_Sensor_InitializeAll
    _MTOUCH_Sensor_InitializeAll->_MTOUCH_Sensor_Initialize
    _MTOUCH_Sensor_Initialize->_MTOUCH_Sensor_Enable
    _MTOUCH_Button_InitializeAll->_MTOUCH_Button_Initialize
    _MTOUCH_Button_ServiceAll->_Button_Service
    _Button_Service->_Button_State_Initializing
    _Button_State_PressDebounce->_Button_Check_AKS_Block
    _Button_State_NotPressed->_Button_Check_AKS_Block
    _Button_Check_AKS_Block->_MTOUCH_Sensor_isEnabled
    _Button_Baseline_Initialize->_MTOUCH_Sensor_RawSample_Get
    _Button_Reading_Update->_Button_Reading_Update_Helper
    _Button_Reading_Update_Helper->_MTOUCH_Sensor_RawSample_Get

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                33    33      0  232991
                                             57 BANK0      3     3      0
                                              0 BANK1     14    14      0
                 _DELAY_milliseconds
                       _EUSART_Write
            _MTOUCH_Service_Mainloop
         _MTOUCH_Slider_Position_Get
    _MTOUCH_Slider_isPositionChanged
            _MTOUCH_Slider_isPressed
                  _SYSTEM_Initialize
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     566
                                              2 COMMON     8     4      4
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (1) ___fltol                                             11     7      4     517
                                              2 COMMON     6     2      4
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0   26394
                  _EUSART_Initialize
                  _MTOUCH_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR1_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0     211
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0     363
             _EUSART_SetErrorHandler
      _EUSART_SetFramingErrorHandler
      _EUSART_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetOverrunErrorHandler                        2     0      2     121
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetFramingErrorHandler                        2     0      2     121
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetErrorHandler                               2     0      2     121
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _MTOUCH_Slider_isPressed                              2     2      0      62
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _MTOUCH_Slider_isPositionChanged                      1     1      0      62
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _MTOUCH_Slider_Position_Get                           3     1      2      62
                                              2 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 (1) _MTOUCH_Service_Mainloop                              1     1      0  204523
                                             56 BANK0      1     1      0
           _MTOUCH_Button_ServiceAll
                  _MTOUCH_Initialize
            _MTOUCH_Sensor_SampleAll
     _MTOUCH_Sensor_Sampled_ResetAll
           _MTOUCH_Slider_ServiceAll
                        _MTOUCH_Tick
                 _MTOUCH_needReburst
 ---------------------------------------------------------------------------------
 (2) _MTOUCH_needReburst                                   2     2      0    8799
                                              7 BANK0      2     2      0
      _MTOUCH_Button_Reburst_Service
      _MTOUCH_Slider_Reburst_Service
 ---------------------------------------------------------------------------------
 (3) _MTOUCH_Slider_Reburst_Service                        2     2      0    8759
                                              5 BANK0      2     2      0
      _MTOUCH_Button_Reburst_Request
     _MTOUCH_Slider_isReburstRequest
 ---------------------------------------------------------------------------------
 (4) _MTOUCH_Slider_isReburstRequest                       1     1      0      62
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _MTOUCH_Button_Reburst_Request                        5     5      0    8567
                                              0 BANK0      5     5      0
             _Button_Reburst_Request
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) _MTOUCH_Button_Reburst_Service                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _MTOUCH_Tick                                          0     0      0   16376
                 _MTOUCH_Button_Tick
 ---------------------------------------------------------------------------------
 (3) _MTOUCH_Button_Tick                                   7     7      0   16376
                                              8 BANK0      7     7      0
                 _Button_Tick_helper
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) _Button_Tick_helper                                   4     2      2    8337
                                              4 BANK0      4     2      2
               _MTOUCH_Sensor_Enable
 ---------------------------------------------------------------------------------
 (2) _MTOUCH_Slider_ServiceAll                             2     2      0   43457
                                             54 BANK0      2     2      0
                     _Slider_Service
 ---------------------------------------------------------------------------------
 (3) _Slider_Service                                      13    13      0   43358
                                             41 BANK0     13    13      0
            _MTOUCH_Button_isPressed
             _Slider_DefaultCallback
             _calculate_contact_size
                 _calculate_position
 ---------------------------------------------------------------------------------
 (4) _calculate_position                                  10     8      2    9119
                                             31 BANK0     10     8      2
             _calculate_raw_position
              _moving_average_filter
              _positional_hysteresis
 ---------------------------------------------------------------------------------
 (5) _positional_hysteresis                               13    11      2    1651
                                              6 COMMON     2     2      0
                                             10 BANK0     11     9      2
                     _get_difference
 ---------------------------------------------------------------------------------
 (5) _moving_average_filter                               13    11      2    1505
                                              6 COMMON     2     2      0
                                             10 BANK0     11     9      2
                     _get_difference
 ---------------------------------------------------------------------------------
 (6) _get_difference                                      14    10      4     785
                                              2 COMMON     4     0      4
                                              0 BANK0     10    10      0
 ---------------------------------------------------------------------------------
 (5) _calculate_raw_position                              18    16      2    5605
                                             13 BANK0     18    16      2
                             _divide
                        _interpolate
 ---------------------------------------------------------------------------------
 (6) _interpolate                                         13     6      7    2753
                                              0 BANK0     13     6      7
                             _divide
 ---------------------------------------------------------------------------------
 (7) _divide                                               8     3      5    1823
                                              2 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 (4) _calculate_contact_size                               7     5      2   24946
                                             16 BANK0      7     5      2
                    _Slider_FindLeft
                  _Slider_FindMiddle
                   _Slider_FindRight
 ---------------------------------------------------------------------------------
 (5) _Slider_FindRight                                     8     6      2    8162
                                              4 BANK0      8     6      2
        _MTOUCH_Button_Deviation_Get
 ---------------------------------------------------------------------------------
 (5) _Slider_FindMiddle                                   12    10      2    8360
                                              4 BANK0     12    10      2
        _MTOUCH_Button_Deviation_Get
 ---------------------------------------------------------------------------------
 (5) _Slider_FindLeft                                      5     3      2    8193
                                              9 COMMON     1     1      0
                                              4 BANK0      4     2      2
        _MTOUCH_Button_Deviation_Get
 ---------------------------------------------------------------------------------
 (6) _MTOUCH_Button_Deviation_Get                          5     5      0    7968
                                              8 COMMON     1     1      0
                                              0 BANK0      4     4      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) _Slider_DefaultCallback                               1     0      1     195
                                              2 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (4) _MTOUCH_Button_isPressed                              6     6      0    8036
                                              8 COMMON     2     2      0
                                              0 BANK0      4     4      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) _MTOUCH_Sensor_SampleAll                              2     2      0   18335
                                             23 BANK0      2     2      0
                     _Sensor_Service
 ---------------------------------------------------------------------------------
 (3) _Sensor_Service                                       8     8      0   18236
                                             15 BANK0      8     8      0
                 _Sensor_Acquisition
             _Sensor_DefaultCallback
            _Sensor_RawSample_Update
                   _Sensor_isEnabled
                  _Sensor_setSampled
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) _Sensor_setSampled                                    2     0      2     121
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (4) _Sensor_RawSample_Update                              2     0      2     152
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (4) _Sensor_DefaultCallback                               1     0      1      65
                                              2 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (4) _Sensor_Acquisition                                   4     2      2    9496
                                             11 BANK0      4     2      2
           _Sensor_Acq_ExecutePacket
                   _Sensor_isEnabled
                   _Sensor_setActive
                 _Sensor_setInactive
                                _abs
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     183
                                              2 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (5) _Sensor_setInactive                                   2     0      2     121
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (5) _Sensor_setActive                                     2     0      2     121
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (4) _Sensor_isEnabled                                     2     0      2     242
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (5) _Sensor_Acq_ExecutePacket                             7     5      2    8547
                                              4 BANK0      7     5      2
                       _MTOUCH_Delay
                      _MTOUCH_Random
      _MTOUCH_Sensor_Scan_Initialize
             _Sensor_Acq_ExecuteScan
             _Sensor_setScanFunction
 ---------------------------------------------------------------------------------
 (6) _Sensor_setScanFunction                               2     0      2     152
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (6) _Sensor_Acq_ExecuteScan                               6     6      0    8005
                                              8 COMMON     2     2      0
                                              0 BANK0      4     4      0
                 _MTOUCH_CVD_ScanA_0 *
                 _MTOUCH_CVD_ScanA_1 *
                 _MTOUCH_CVD_ScanA_2 *
                 _MTOUCH_CVD_ScanA_3 *
                 _MTOUCH_CVD_ScanA_4 *
                 _MTOUCH_CVD_ScanA_5 *
                 _MTOUCH_CVD_ScanA_6 *
                 _MTOUCH_CVD_ScanA_7 *
                 _MTOUCH_CVD_ScanA_8 *
                 _MTOUCH_CVD_ScanA_9 *
                 _MTOUCH_CVD_ScanB_0 *
                 _MTOUCH_CVD_ScanB_1 *
                 _MTOUCH_CVD_ScanB_2 *
                 _MTOUCH_CVD_ScanB_3 *
                 _MTOUCH_CVD_ScanB_4 *
                 _MTOUCH_CVD_ScanB_5 *
                 _MTOUCH_CVD_ScanB_6 *
                 _MTOUCH_CVD_ScanB_7 *
                 _MTOUCH_CVD_ScanB_8 *
                 _MTOUCH_CVD_ScanB_9 *
                             ___wmul
 ---------------------------------------------------------------------------------
 (7) _MTOUCH_CVD_ScanB_9                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _MTOUCH_CVD_ScanB_8                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _MTOUCH_CVD_ScanB_7                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _MTOUCH_CVD_ScanB_6                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _MTOUCH_CVD_ScanB_5                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _MTOUCH_CVD_ScanB_4                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _MTOUCH_CVD_ScanB_3                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _MTOUCH_CVD_ScanB_2                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _MTOUCH_CVD_ScanB_1                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _MTOUCH_CVD_ScanB_0                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _MTOUCH_CVD_ScanA_9                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _MTOUCH_CVD_ScanA_8                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _MTOUCH_CVD_ScanA_7                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _MTOUCH_CVD_ScanA_6                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _MTOUCH_CVD_ScanA_5                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _MTOUCH_CVD_ScanA_4                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _MTOUCH_CVD_ScanA_3                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _MTOUCH_CVD_ScanA_2                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _MTOUCH_CVD_ScanA_1                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _MTOUCH_CVD_ScanA_0                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _MTOUCH_Random                                        1     1      0       0
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (6) _MTOUCH_Delay                                         2     2      0      68
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _MTOUCH_Initialize                                    0     0      0   25820
        _MTOUCH_Button_InitializeAll
        _MTOUCH_Sensor_InitializeAll
     _MTOUCH_Sensor_Sampled_ResetAll
      _MTOUCH_Sensor_Scan_Initialize
        _MTOUCH_Slider_InitializeAll
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR1_SetInterruptHandler                             2     0      2     211
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _MTOUCH_Slider_InitializeAll                          2     2      0     381
                                              5 COMMON     2     2      0
                  _Slider_Initialize
 ---------------------------------------------------------------------------------
 (4) _Slider_Initialize                                    3     3      0     282
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (3) _MTOUCH_Sensor_Scan_Initialize                        0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _MTOUCH_Sensor_Sampled_ResetAll                       4     4      0     310
                                              0 BANK0      4     4      0
               _Sensor_Sampled_Reset
 ---------------------------------------------------------------------------------
 (3) _MTOUCH_Sensor_InitializeAll                          2     2      0   16246
                                              9 BANK0      2     2      0
           _MTOUCH_Sensor_Initialize
 ---------------------------------------------------------------------------------
 (4) _MTOUCH_Sensor_Initialize                             5     5      0   16147
                                              4 BANK0      5     5      0
               _MTOUCH_Sensor_Enable
               _Sensor_Sampled_Reset
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) _Sensor_Sampled_Reset                                 2     0      2     211
                                              8 COMMON     2     0      2
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (5) _MTOUCH_Sensor_Enable                                 5     5      0    7968
                                              8 COMMON     1     1      0
                                              0 BANK0      4     4      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) _MTOUCH_Button_InitializeAll                          2     2      0    8672
                                              9 COMMON     1     1      0
                                              7 BANK0      1     1      0
           _MTOUCH_Button_Initialize
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) _memcpy                                              12     6      6     478
                                              2 COMMON     7     1      6
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (2) _MTOUCH_Button_ServiceAll                             2     2      0   91426
                                             28 BANK0      2     2      0
               _Button_Reburst_Clear
                     _Button_Service
 ---------------------------------------------------------------------------------
 (3) _Button_Service                                       7     7      0   91327
                                             21 BANK0      7     7      0
            _Button_Deviation_Update
              _Button_Reading_Update
              _Button_State_Disabled *
          _Button_State_Initializing *
            _Button_State_NotPressed *
         _Button_State_PressDebounce *
               _Button_State_Pressed *
       _Button_State_ReleaseDebounce *
             _Button_State_Suspended *
           _MTOUCH_Button_Initialize
         _MTOUCH_Sensor_isCalibrated
           _MTOUCH_Sensor_wasSampled
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) _MTOUCH_Sensor_wasSampled                             5     5      0    7968
                                              8 COMMON     1     1      0
                                              0 BANK0      4     4      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) _MTOUCH_Sensor_isCalibrated                           1     1      0       0
 ---------------------------------------------------------------------------------
 (4) _Button_State_Suspended                               2     0      2    8579
                                             15 BANK0      2     0      2
             _Button_Baseline_Update
              _MTOUCH_Sensor_Disable
 ---------------------------------------------------------------------------------
 (5) _MTOUCH_Sensor_Disable                                5     5      0    7968
                                              8 COMMON     1     1      0
                                              0 BANK0      4     4      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) _Button_State_ReleaseDebounce                         4     2      2    1318
                                             15 BANK0      4     2      2
             _Button_DefaultCallback
             _Button_Reburst_Request
 ---------------------------------------------------------------------------------
 (4) _Button_State_Pressed                                 4     2      2    9320
                                             15 BANK0      4     2      2
             _Button_DefaultCallback
             _Button_Reburst_Request
           _MTOUCH_Button_Initialize
 ---------------------------------------------------------------------------------
 (4) _Button_State_PressDebounce                           4     2      2   10371
                                             15 BANK0      4     2      2
             _Button_Check_AKS_Block
             _Button_DefaultCallback
             _Button_Reburst_Request
 ---------------------------------------------------------------------------------
 (5) _Button_DefaultCallback                               1     0      1     285
                                              2 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (4) _Button_State_NotPressed                              4     2      2   18947
                                             15 BANK0      4     2      2
             _Button_Baseline_Update
             _Button_Check_AKS_Block
             _Button_Reburst_Request
           _MTOUCH_Button_Initialize
 ---------------------------------------------------------------------------------
 (4) _MTOUCH_Button_Initialize                             7     7      0    8095
                                              0 BANK0      7     7      0
            _MTOUCH_Sensor_Calibrate
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) _MTOUCH_Sensor_Calibrate                              1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _Button_Check_AKS_Block                              11     9      2    9022
                                              4 BANK0     11     9      2
      _Button_Unscaled_Deviation_Get
            _MTOUCH_Sensor_isEnabled
 ---------------------------------------------------------------------------------
 (6) _MTOUCH_Sensor_isEnabled                              5     5      0    7968
                                              8 COMMON     1     1      0
                                              0 BANK0      4     4      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (6) _Button_Unscaled_Deviation_Get                        8     6      2     242
                                              2 COMMON     8     6      2
 ---------------------------------------------------------------------------------
 (4) _Button_State_Initializing                            6     4      2    9609
                                             15 BANK0      6     4      2
         _Button_Baseline_Initialize
             _Button_Baseline_Update
             _Button_Reburst_Request
 ---------------------------------------------------------------------------------
 (5) _Button_Reburst_Request                               2     0      2     630
                                              8 COMMON     2     0      2
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (5) _Button_Baseline_Update                               8     6      2     518
                                              2 COMMON     8     6      2
 ---------------------------------------------------------------------------------
 (5) _Button_Baseline_Initialize                           6     4      2    8151
                                              5 BANK0      6     4      2
        _MTOUCH_Sensor_RawSample_Get
 ---------------------------------------------------------------------------------
 (4) _Button_State_Disabled                                2     0      2      65
                                             15 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) _Button_Reading_Update                                2     0      2    8517
                                              9 BANK0      2     0      2
       _Button_Reading_Update_Helper
 ---------------------------------------------------------------------------------
 (5) _Button_Reading_Update_Helper                         4     2      2    8365
                                              5 BANK0      4     2      2
        _MTOUCH_Sensor_RawSample_Get
 ---------------------------------------------------------------------------------
 (6) _MTOUCH_Sensor_RawSample_Get                          7     5      2    7968
                                              8 COMMON     2     0      2
                                              0 BANK0      5     5      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4    7906
                                              2 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (4) _Button_Deviation_Update                             16    14      2     350
                                              2 COMMON     6     4      2
                                              0 BANK0     10    10      0
 ---------------------------------------------------------------------------------
 (3) _Button_Reburst_Clear                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART_Write                                         1     1      0      31
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _DELAY_milliseconds                                   3     1      2     211
                                              2 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _INTERRUPT_InterruptManager                           0     0      0     610
                           _TMR1_ISR
 ---------------------------------------------------------------------------------
 (9) _TMR1_ISR                                             0     0      0     610
                   Absolute function *
               _MTOUCH_ScanScheduler *
       _TMR1_DefaultInterruptHandler *
                    _TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (10) _TMR1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _MTOUCH_ScanScheduler                                0     0      0     305
                    _TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (10) _TMR1_WriteTimer                                     2     0      2     305
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (10) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DELAY_milliseconds
   _EUSART_Write
   _MTOUCH_Service_Mainloop
     _MTOUCH_Button_ServiceAll
       _Button_Reburst_Clear
       _Button_Service
         _Button_Deviation_Update
         _Button_Reading_Update
           _Button_Reading_Update_Helper
             _MTOUCH_Sensor_RawSample_Get
               ___wmul
         _Button_State_Disabled *
         _Button_State_Initializing *
           _Button_Baseline_Initialize
             _MTOUCH_Sensor_RawSample_Get
           _Button_Baseline_Update
           _Button_Reburst_Request
             ___wmul (ARG)
         _Button_State_NotPressed *
           _Button_Baseline_Update
           _Button_Check_AKS_Block
             _Button_Unscaled_Deviation_Get
             _MTOUCH_Sensor_isEnabled
               ___wmul
           _Button_Reburst_Request
           _MTOUCH_Button_Initialize
             _MTOUCH_Sensor_Calibrate
             ___wmul
         _Button_State_PressDebounce *
           _Button_Check_AKS_Block
           _Button_DefaultCallback
           _Button_Reburst_Request
         _Button_State_Pressed *
           _Button_DefaultCallback
           _Button_Reburst_Request
           _MTOUCH_Button_Initialize
         _Button_State_ReleaseDebounce *
           _Button_DefaultCallback
           _Button_Reburst_Request
         _Button_State_Suspended *
           _Button_Baseline_Update
           _MTOUCH_Sensor_Disable
             ___wmul
         _MTOUCH_Button_Initialize *
         _MTOUCH_Sensor_isCalibrated *
         _MTOUCH_Sensor_wasSampled *
           ___wmul
         ___wmul *
     _MTOUCH_Initialize
       _MTOUCH_Button_InitializeAll
         _MTOUCH_Button_Initialize
         _memcpy
       _MTOUCH_Sensor_InitializeAll
         _MTOUCH_Sensor_Initialize
           _MTOUCH_Sensor_Enable
             ___wmul
           _Sensor_Sampled_Reset
             ___wmul (ARG)
           ___wmul
       _MTOUCH_Sensor_Sampled_ResetAll
         _Sensor_Sampled_Reset
       _MTOUCH_Sensor_Scan_Initialize
       _MTOUCH_Slider_InitializeAll
         _Slider_Initialize
       _TMR1_SetInterruptHandler
     _MTOUCH_Sensor_SampleAll
       _Sensor_Service
         _Sensor_Acquisition
           _Sensor_Acq_ExecutePacket
             _MTOUCH_Delay
             _MTOUCH_Random
             _MTOUCH_Sensor_Scan_Initialize
             _Sensor_Acq_ExecuteScan
               _MTOUCH_CVD_ScanA_0 *
               _MTOUCH_CVD_ScanA_1 *
               _MTOUCH_CVD_ScanA_2 *
               _MTOUCH_CVD_ScanA_3 *
               _MTOUCH_CVD_ScanA_4 *
               _MTOUCH_CVD_ScanA_5 *
               _MTOUCH_CVD_ScanA_6 *
               _MTOUCH_CVD_ScanA_7 *
               _MTOUCH_CVD_ScanA_8 *
               _MTOUCH_CVD_ScanA_9 *
               _MTOUCH_CVD_ScanB_0 *
               _MTOUCH_CVD_ScanB_1 *
               _MTOUCH_CVD_ScanB_2 *
               _MTOUCH_CVD_ScanB_3 *
               _MTOUCH_CVD_ScanB_4 *
               _MTOUCH_CVD_ScanB_5 *
               _MTOUCH_CVD_ScanB_6 *
               _MTOUCH_CVD_ScanB_7 *
               _MTOUCH_CVD_ScanB_8 *
               _MTOUCH_CVD_ScanB_9 *
               ___wmul *
             _Sensor_setScanFunction
           _Sensor_isEnabled
           _Sensor_setActive
           _Sensor_setInactive
           _abs
         _Sensor_DefaultCallback
         _Sensor_RawSample_Update
         _Sensor_isEnabled
         _Sensor_setSampled
         ___wmul
     _MTOUCH_Sensor_Sampled_ResetAll
     _MTOUCH_Slider_ServiceAll
       _Slider_Service
         _MTOUCH_Button_isPressed
           ___wmul
         _Slider_DefaultCallback
         _calculate_contact_size
           _Slider_FindLeft
             _MTOUCH_Button_Deviation_Get
               ___wmul
           _Slider_FindMiddle
             _MTOUCH_Button_Deviation_Get
           _Slider_FindRight
             _MTOUCH_Button_Deviation_Get
         _calculate_position
           _calculate_raw_position
             _divide
             _interpolate
               _divide
           _moving_average_filter
             _get_difference
           _positional_hysteresis
             _get_difference
     _MTOUCH_Tick
       _MTOUCH_Button_Tick
         _Button_Tick_helper
           _MTOUCH_Sensor_Enable
         ___wmul
     _MTOUCH_needReburst
       _MTOUCH_Button_Reburst_Service
       _MTOUCH_Slider_Reburst_Service
         _MTOUCH_Button_Reburst_Request
           _Button_Reburst_Request
           ___wmul
         _MTOUCH_Slider_isReburstRequest
   _MTOUCH_Slider_Position_Get
   _MTOUCH_Slider_isPositionChanged
   _MTOUCH_Slider_isPressed
   _SYSTEM_Initialize
     _EUSART_Initialize
       _EUSART_SetErrorHandler
       _EUSART_SetFramingErrorHandler
       _EUSART_SetOverrunErrorHandler
     _MTOUCH_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
     _WDT_Initialize
   ___fltol
   ___xxtofl

 _INTERRUPT_InterruptManager (ROOT)
   _TMR1_ISR
     Absolute function(Fake) *
     _MTOUCH_ScanScheduler *
       _TMR1_WriteTimer
     _TMR1_DefaultInterruptHandler *
     _TMR1_WriteTimer *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      A       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     3C      44       5       85.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      E      46       7       87.5%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      22       9       42.5%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      B8      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               12      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BANK10               0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BANK11               0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12               0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      B8      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Sun Sep 18 10:52:21 2022

                    __size_of_MTOUCH_Slider_isPressed 0019                        calculate_raw_position@ref_node 0034  
                        ?_MTOUCH_Sensor_RawSample_Get 0078                        MTOUCH_Slider_ServiceAll@slider 0057  
                                    _Slider_FindRight 1706                                _Sensor_setScanFunction 10F9  
                     __size_of_Sensor_Acq_ExecuteScan 0066                            __end_of_Sensor_setInactive 1FEA  
                                 ___wmul@multiplicand 0074                                     _Slider_FindMiddle 094E  
                                                 LATA 010C                                                   LATB 010D  
              positional_hysteresis@filtered_position 002E                                                   l302 0C04  
                                                 l306 0C18                        calculate_raw_position@position 003D  
                                                 l770 0FA8                                                   l758 0949  
                                                 l783 0EE1                                                   l778 0EAE  
                                                 _GIE 005F                            __end_of_DELAY_milliseconds 109C  
                                  ?_Slider_FindMiddle 0024                                       _timer1ReloadVal 00DE  
                                                 _abs 1174                        ?_EUSART_SetFramingErrorHandler 0072  
                                                 wreg 0009                      ??_MTOUCH_Sensor_Sampled_ResetAll 0020  
                     ?_MTOUCH_Sensor_Sampled_ResetAll 0070                      __size_of_MTOUCH_Sensor_SampleAll 0015  
                                        divide@result 0078                     __size_of_MTOUCH_Sensor_Initialize 0020  
                           ?_MTOUCH_Sensor_Initialize 0070                                                  INDF0 0000  
                                                INDF1 0001                                ?_positional_hysteresis 002A  
                                                FSR0H 0005                                                  FSR1H 0007  
                                                FSR0L 0004                                                  FSR1L 0006  
                                  _MTOUCH_CVD_ScanA_0 1385                                    _MTOUCH_CVD_ScanA_1 13A6  
                                  _MTOUCH_CVD_ScanA_2 13C7                                    _MTOUCH_CVD_ScanA_3 13E8  
                                  _MTOUCH_CVD_ScanB_0 14CF                                    _MTOUCH_CVD_ScanA_4 1409  
                                  _MTOUCH_CVD_ScanB_1 14F0                                    _MTOUCH_CVD_ScanA_5 142A  
                                  _MTOUCH_CVD_ScanB_2 1511                                    _MTOUCH_CVD_ScanA_6 144B  
                                  _MTOUCH_CVD_ScanB_3 1532                                    _MTOUCH_CVD_ScanA_7 146C  
                                  _MTOUCH_CVD_ScanB_4 1553                                    _MTOUCH_CVD_ScanA_8 148D  
                                  _MTOUCH_CVD_ScanB_5 1574                                    _MTOUCH_CVD_ScanA_9 1364  
                                  _MTOUCH_CVD_ScanB_6 1595                                    _MTOUCH_CVD_ScanB_7 15B6  
                                  _MTOUCH_CVD_ScanB_8 15D7                                    _MTOUCH_CVD_ScanB_9 14AE  
                      ??_Button_State_ReleaseDebounce 0031                                          ___fltol@exp1 0077  
                                 ??_Slider_FindMiddle 0026                                _calculate_contact_size 09F5  
                                                l1211 0391                                                  ?_abs 0072  
                                                l1219 03FA                                                  l1088 1FF9  
                                                l1373 0808                                                  l1820 068E  
                                                l1574 0D91                                                  l1814 0658  
                                                l6000 05CB                                                  l1827 06A2  
                                                l6012 061E                                                  l1828 06AC  
                                                l6014 0625                                                  l6032 0F5E  
                                                l5312 093E                                                  l6200 12D5  
                                                l5322 0802                                                  l6034 0F65  
                                                l5314 0942                                                  l5306 0934  
                                                l6050 0AC8                                                  l6122 111F  
                                                l5404 163B                                                  l6132 105D  
                                                l5308 0939                                                  l5416 1341  
                                                l5600 0561                                                  l5344 106E  
                                                l6216 0CA1                                                  l6224 0CC2  
                                                l6072 0A26                                                  l6312 02A3  
                                                l6146 121C                                                  l5370 0D0C  
                                                l5362 0CED                                                  l6226 0CDF  
                                                l5450 0A9C                                                  l6252 0C6A  
                                                l5364 0CF4                                                  l5380 0D3F  
                                                l5508 0BF8                                                  l5428 12C0  
                                                l5292 0913                                                  l5284 0907  
                                                l5460 0DE9                                                  l6308 02A1  
                                                l5606 0590                                                  l6158 1031  
                                                l6342 114B                                                  l6078 0A44  
                                                l5446 0A86                                                  l6182 16B1  
                                                l6502 1132                                                  l5608 05A1  
                                                l5376 0D36                                                  l5368 0CFB  
                                                l5720 09EB                                                  l5296 091B  
                                                l5288 090D                                                  l5464 0E0F  
                                                l5640 0FCE                                                  l6088 175A  
                                                l6264 01B8                                                  l5618 08EA  
                                                l5562 0719                                                  l5378 0D3B  
                                                l5482 104A                                                  l5298 091E  
                                                l5650 0FFB                                                  l6514 11BA  
                                                TRISA 008C                                                  l6364 10D7  
                                                l6348 1154                                                  l5724 09F0  
                                                l5716 09DF                                                  l5740 1738  
                                                l5804 0193                                                  l6284 022D  
                                                l6276 0210                                                  l6196 12C3  
                                                l6460 1673                                                  TRISB 008D  
                                                l6526 108A                                                  l5590 056E  
                                                l5718 09E2                                                  l5662 0EA9  
                                                l5638 0FC9                                                  l6278 021C  
                                                l6534 0D51                                                  l5912 07BD  
                                                l6720 0D04                                                  l5840 0872  
                                                l5824 17FE                                                  l5744 173C  
                                                l5736 172C                                                  l5672 0ECF  
                                                l5648 0FF1                                                  l6296 0270  
                                                l6288 024A                                                  l6376 10B2  
                                                l6464 1675                                                  l6456 166A  
                                                l6608 06C7                                                  l6640 03BE  
                                                l6632 03B5                                                  l5914 07C5  
                                                l5906 10A7                                                  l5578 0532  
                                                l5818 17FC                                                  l5738 172F  
                                                l5762 0094                                                  l6298 0278  
                                                l6490 1147                                                  l6554 0D7F  
                                                l6538 0D5A                                                  l5596 0570  
                                                l5924 0E2C                                                  l5852 08A2  
                                                l5836 0870                                                  l6716 0CCF  
                                                l5772 00DE                                                  l5756 007A  
                                                l6564 0D9E                                                  l6556 0D8D  
                                                l6580 0667                                                  l5918 07D9  
                                                l5934 0E7E                                                  l5926 0E33  
                                                l5846 0879                                                  l6718 0CD4  
                                                l5694 0996                                                  l5790 012B  
                                                l5774 00F4                                                  l5758 0082  
                                                l5678 0EF3                                                  l6574 0650  
                                                l6646 0416                                                  l5696 095F  
                                                l6584 066B                                                  l5962 033D  
                                                l5946 02F4                                                  l5882 1362  
                                                l5866 11CB                                                  l5698 099C  
                                                l5794 0136                                                  l5778 00FF  
                                                l6594 06A0                                                  l6586 067B  
                                                l5972 0364                                                  l5956 0327  
                                                l5964 0346                                                  l5948 02FC  
                                                l5796 013C                                                  l5788 011E  
                                                l6596 0693                                                  l5982 0B79  
                                                l5798 015B                                                  l5896 1690  
                       ?_Button_Reading_Update_Helper 0025                                                  _LATA 010C  
                                                _LATB 010D                                                  _LATC 010E  
                                                _LATE 0110                                                  u5005 0181  
                                                u5014 018B                                                  u4215 092A  
                                                u5015 0189                                                  u4225 0935  
                                                u5140 07A4                                                  u4405 164C  
                                                u5135 076C                                                  u5145 07A0  
                                                u5225 0312                                                  u6105 06B4  
                                                u6025 0674                                                  u4275 0809  
                                                u4435 0A79                                                  u4285 080E  
                                                u4525 117D                                                  u4445 0A90  
                                                u6045 0688                                                  u5335 05E2  
                                                u6207 15DD                                                  u4455 0DB3  
                                                u6135 03B3                                                  u4464 0DCF  
                                                u4545 16FB                                                  u6217 15ED  
                                                u5425 0A1C                                                  u4465 0DCD  
                                                u6065 069A                                                  u5354 0F14  
                                                u5195 0E5B                                                  u5355 0F13  
                                                u6307 1538                                                  u6227 15BC  
                                                u5435 0A40                                                  u4565 06E1  
                                                u4645 058E                                                  u5525 1238  
                                                u6317 1548                                                  u6237 15CC  
                                                u4725 0FB7                                                  u6165 03EA  
                                                u5294 0B95                                                  u5470 111D  
                                                u4575 0727                                                  u4655 056C  
                                                u5295 0B94                                                  u6407 1493  
                                                u6327 1517                                                  u6247 159B  
                                                u4904 00A3                                                  u4665 059F  
                                                u4585 0530                                                  u6417 14A3  
                                                u6337 1527                                                  u6257 15AB  
                                                u4825 09D9                                                  u4905 00A1  
                                                u4745 0FDE                                                  u6185 0406  
                                                u5810 1145                                                  u6507 13EE  
                                                u6427 1472                                                  u6347 14F6  
                                                u6267 157A                                                  u6195 0426  
                                                u4685 08BD                                                  u6517 13FE  
                                                u6437 1482                                                  u6357 1506  
                                                u6277 158A                                                  u5725 028F  
                                                u5645 01C0                                                  u5654 01D0  
                                                u6607 1096                                                  u4695 08DA  
                                                u6527 13CD                                                  u6447 1451  
                                                u6367 14D5                                                  u6287 1559  
                                                u5655 01CE                                                  u6537 13DD  
                                                u6457 1461                                                  u6377 14E5  
                                                u6297 1569                                                  u4785 098B  
                                                u5665 01FF                                                  u5905 0D63  
                                                u5850 11B8                                                  u6547 13AC  
                                                u6467 1430                                                  u6387 14B4  
                                                u4795 0977                                                  u6557 13BC  
                                                u6477 1440                                                  u6397 14C4  
                                                u4894 008E                                                  u6567 138B  
                                                u6487 140F                                                  u4975 0131  
                                                u4895 008C                                                  u5695 0248  
                                                u5935 0D80                                                  u4984 0165  
                                                u6577 139B                                                  u6497 141F  
                                                u4985 0163                                                  u4994 0173  
                                                u6587 136A                                                  u4995 0171  
                                                u6597 137A                                                  u5965 0D95  
                          Button_State_Pressed@button 002F                                                  _WPUB 020D  
                                                _WPUE 0210                     __size_of_Sensor_Acq_ExecutePacket 0062  
             __end_of_MTOUCH_Slider_isPositionChanged 1149              __size_of_MTOUCH_Slider_isPositionChanged 0014  
                   ??_MTOUCH_Slider_isPositionChanged 0072                      ?_MTOUCH_Slider_isPositionChanged 0070  
                     _MTOUCH_Slider_isPositionChanged 1135                             ?_Sensor_Acq_ExecutePacket 0024  
                               _Button_State_Disabled 1FAB                                    _MTOUCH_needReburst 107A  
               __end_of_MTOUCH_Button_Reburst_Request 120C                __size_of_MTOUCH_Button_Reburst_Request 001C  
                       _MTOUCH_Button_Reburst_Request 11F0                                                  abs@a 0072  
               __end_of_MTOUCH_Button_Reburst_Service 1FB7                __size_of_MTOUCH_Button_Reburst_Service 0003  
                       _MTOUCH_Button_Reburst_Service 1FB4                                                  _main 038A  
                __size_of_MTOUCH_Button_InitializeAll 001D                                                  fsr0h 0005  
                                                fsr1h 0007                                                  indf0 0000  
                                                fsr0l 0004                                                  indf1 0001  
                                                fsr1l 0006                  __size_of_MTOUCH_Sensor_InitializeAll 000F  
                                                btemp 007E                                   ?_MTOUCH_CVD_ScanA_0 0070  
                                 ?_MTOUCH_CVD_ScanA_1 0070                                   ?_MTOUCH_CVD_ScanA_2 0070  
                                 ?_MTOUCH_CVD_ScanA_3 0070                                   ?_MTOUCH_CVD_ScanA_4 0070  
                                 ?_MTOUCH_CVD_ScanB_0 0070                                   ?_MTOUCH_CVD_ScanA_5 0070  
                                 ?_MTOUCH_CVD_ScanB_1 0070                        get_difference@current_position 0074  
                                 ?_MTOUCH_CVD_ScanA_6 0070                                   ?_MTOUCH_CVD_ScanB_2 0070  
                                 ?_MTOUCH_CVD_ScanA_7 0070                                   ?_MTOUCH_CVD_ScanB_3 0070  
                                 ?_MTOUCH_CVD_ScanA_8 0070                                   ?_MTOUCH_CVD_ScanB_4 0070  
                                 ?_MTOUCH_CVD_ScanA_9 0070                                   ?_MTOUCH_CVD_ScanB_5 0070  
                                 ?_MTOUCH_CVD_ScanB_6 0070                                   ?_MTOUCH_CVD_ScanB_7 0070  
                         moving_average_filter@slider 002E                                   ?_MTOUCH_CVD_ScanB_8 0070  
                                 ?_MTOUCH_CVD_ScanB_9 0070                                                  start 0012  
                          ??_TMR1_SetInterruptHandler 0074                                   ?_MTOUCH_needReburst 0070  
                MTOUCH_Slider_Position_Get@sliderName 0074                      __end_of_MTOUCH_Slider_ServiceAll 10C0  
                                               ADCON0 009D                               __size_of_Slider_Service 011F  
                                get_difference@slider 0025                              ?_MTOUCH_Service_Mainloop 0070  
                    __size_of_MTOUCH_Button_isPressed 0042                         __size_of_Button_State_Pressed 0062  
                             ?_Button_Check_AKS_Block 0024                                                 ??_abs 0074  
                           __end_of_Slider_FindMiddle 09A1                                          main@f_slider 00D2  
                         ?_Button_Baseline_Initialize 0025                         ??_MTOUCH_Sensor_RawSample_Get 0020  
                       Sensor_RawSample_Update@sensor 0072                             __size_of_Sensor_isEnabled 000E  
                                       ?_EUSART_Write 0070                        __size_of_OSCILLATOR_Initialize 0007  
                         ?_Button_State_PressDebounce 002F                         __end_of_OSCILLATOR_Initialize 1FF8  
                                   _Slider_Initialize 177F                                         ___fltol@sign1 0076  
                                               ?_main 0070                                                 _ADRES 009B  
                                ??_MTOUCH_CVD_ScanA_0 0072                                  ??_MTOUCH_CVD_ScanA_1 0072  
                                ??_MTOUCH_CVD_ScanA_2 0072                                  ??_MTOUCH_CVD_ScanA_3 0072  
                                ??_MTOUCH_CVD_ScanA_4 0072                                  ??_MTOUCH_CVD_ScanB_0 0072  
                                ??_MTOUCH_CVD_ScanA_5 0072                                  ??_MTOUCH_CVD_ScanB_1 0072  
                                ??_MTOUCH_CVD_ScanA_6 0072                                  ??_MTOUCH_CVD_ScanB_2 0072  
                                ??_MTOUCH_CVD_ScanA_7 0072                                  ??_MTOUCH_CVD_ScanB_3 0072  
                                ??_MTOUCH_CVD_ScanA_8 0072                                  ??_MTOUCH_CVD_ScanB_4 0072  
                                ??_MTOUCH_CVD_ScanA_9 0072                                  ??_MTOUCH_CVD_ScanB_5 0072  
                                ??_MTOUCH_CVD_ScanB_6 0072                                  ??_MTOUCH_CVD_ScanB_7 0072  
                                ??_MTOUCH_CVD_ScanB_8 0072                                  ??_MTOUCH_CVD_ScanB_9 0072  
                                     __end_of___fltol 0DAD                                                 _T1CON 0018  
                             __size_of_Button_Service 0063                                                 _RCSTA 019D  
                                               _TMR1H 0017                                                 _TMR1L 0016  
                                  ?_Slider_Initialize 0070                                                 _TRISA 008C  
                                               _TRISB 008D                                                 _TRISC 008E  
                                               _TRISE 0090                     MTOUCH_Slider_InitializeAll@slider 0076  
                                               _TXREG 019A                                                 _TXSTA 019E  
                     __size_of_Button_DefaultCallback 0001                           MTOUCH_Sensor_Disable@sensor 0078  
                                ??_MTOUCH_needReburst 0027                                      __end_of_TMR1_ISR 10F9  
                     __size_of_Button_State_Suspended 0018                           __size_of_calculate_position 003E  
                     __size_of_Sensor_DefaultCallback 0001                               __size_of_Sensor_Service 0064  
               __end_of_MTOUCH_Sensor_Scan_Initialize 1FC0                __size_of_MTOUCH_Sensor_Scan_Initialize 0005  
                       _MTOUCH_Sensor_Scan_Initialize 1FBB                                        _WDT_Initialize 1000  
                             Sensor_setSampled@sensor 0072                                  _Button_Reburst_Clear 1FAE  
                                 ??_Slider_Initialize 0072                              __size_of_Slider_FindLeft 0054  
                              _Sensor_Acq_ExecuteScan 0CE1                                                 main@i 00DA  
                    __size_of_Button_State_NotPressed 00D3                               __end_of_TMR1_Initialize 0800  
                            ??_calculate_raw_position 002F                                                 pclath 000A  
                                _Sensor_Sampled_Reset 1FD5                moving_average_filter@filtered_position 002C  
                  __end_of_MTOUCH_Slider_Position_Get 1135                            _MTOUCH_Slider_Position_Get 1121  
                                               status 0003                      __size_of_MTOUCH_Sensor_isEnabled 0021  
                                               wtemp0 007E                             __size_of_Sensor_setActive 0007  
                                      divide@exponent 0076                                       _TMR1_WriteTimer 104C  
                              Sensor_isEnabled@sensor 0072                   MTOUCH_Button_Reburst_Request@button 0024  
                                        ?_interpolate 0020                                       __initialization 0014  
                      __end_of_Button_Check_AKS_Block 05A3                                          __end_of_main 0450  
                               __end_of_MTOUCH_Random 107A                             __end_of_Slider_Initialize 17BE  
                             _MTOUCH_Button_Tick$2906 002C                                        ??_EUSART_Write 0072  
                         ?_INTERRUPT_InterruptManager 0070                          __end_of_MTOUCH_ScanScheduler 100D  
                    __end_of_MTOUCH_Button_Initialize 0862                                                ??_main 0059  
                                    ??_get_difference 0020                               _MTOUCH_Sensor_Calibrate 1FA9  
                             ??_Button_Reading_Update 007A                  MTOUCH_Sensor_Sampled_ResetAll@sensor 0022  
                            ?_Button_Deviation_Update 0072                                __end_of_WDT_Initialize 1004  
                                        ?_MTOUCH_Tick 0070                          Button_Baseline_Update@button 0072  
                               ?_Button_Reburst_Clear 0070                     _EUSART_DefaultFramingErrorHandler 0000  
                                              _ADCON0 009D                                                _ADCON1 009E  
                          _EUSART_OverrunErrorHandler 00E2                  __size_of_MTOUCH_Sensor_RawSample_Get 0024  
                                   interpolate@delta1 0020                                     interpolate@delta2 0022  
                                   interpolate@delta3 0024                                                _APFCON 011D  
                                              _ANSELA 018C                                                _ANSELB 018D  
                                              _BORCON 0116                                                _T1GCON 0019  
                              ?_Button_State_Disabled 002F                           positional_hysteresis@slider 0034  
                             TMR1_WriteTimer@timerVal 0070                                                i1l1186 0010  
                                              i1l4504 1056                                 ?_Sensor_Sampled_Reset 0078  
                                              _OSCCON 0099                   __end_of_MTOUCH_Slider_InitializeAll 103E  
                         _MTOUCH_Slider_InitializeAll 1030                                                _SPBRGH 019C  
                                              _SPBRGL 019B                                                _WDTCON 0097  
                                   interpolate@rtnval 002B                     MTOUCH_Button_InitializeAll@button 0027  
                                    __end_of___xxtofl 06D0                        ??_Button_Reading_Update_Helper 0027  
                              _Button_DefaultCallback 1FAA                       __end_of_MTOUCH_Service_Mainloop 1688  
                             _MTOUCH_Slider_isPressed 11A3                                _Button_State_Suspended 118B  
                      ?_MTOUCH_Button_Reburst_Request 0070                        ?_MTOUCH_Button_Reburst_Service 0070  
                __end_of_TMR1_DefaultInterruptHandler 1FA9                 __size_of_TMR1_DefaultInterruptHandler 0001  
                        _TMR1_DefaultInterruptHandler 1FA8                                _Sensor_DefaultCallback 1FAC  
                      __size_of_MTOUCH_Sensor_Disable 001E                                         _packet_sample 00C4  
                       __end_of_MTOUCH_Sensor_Disable 1264                                                ___wmul 0800  
                        Sensor_DefaultCallback@sensor 0072                        __size_of_moving_average_filter 0073  
                                           ??___fltol 0020                         __end_of_moving_average_filter 0EF8  
                          __size_of_Slider_FindMiddle 0053                                                _divide 08FC  
                            ??_Button_Reburst_Request 007A                                                _memcpy 1688  
                    __end_of_MTOUCH_Button_ServiceAll 10E5                              _MTOUCH_Slider_ServiceAll 10AE  
                                        __pdataBIGRAM 22E2                                         _middle_signal 00C0  
                   MTOUCH_Slider_isPressed@sliderName 0073                               _MTOUCH_Sensor_SampleAll 1149  
                        Button_DefaultCallback@button 0072                                       ?_WDT_Initialize 0070  
                            ?_Sensor_RawSample_Update 0072                            __end_of_Sensor_Acquisition 08AB  
                             ?_Button_Baseline_Update 0072              TMR1_SetInterruptHandler@InterruptHandler 0072  
                  Button_State_ReleaseDebounce@button 002F                               __end_of_TMR1_WriteTimer 105B  
                  calculate_contact_size@contact_size 0034                       MTOUCH_Sensor_RawSample_Get@name 0024  
                            __end_of_Slider_FindRight 1741                                      ?_TMR1_Initialize 0070  
                                        ___xxtofl@arg 0022                                          ___xxtofl@exp 0021  
                                   _SYSTEM_Initialize 10C0                                          ___xxtofl@val 0072  
                     __size_of_calculate_raw_position 0137                               __end_of__initialization 005D  
                 __size_of_Button_Baseline_Initialize 002D                           _MTOUCH_Button_isPressed$955 0078  
                      ?_MTOUCH_Sensor_Scan_Initialize 0070                   __size_of_Button_State_PressDebounce 0098  
                                  ?_SYSTEM_Initialize 0070                                   _Button_StateMachine 00A0  
                                          ___fltol@f1 0072                            __end_of_Button_Tick_helper 0AFC  
                                   ??_Slider_FindLeft 0079                         Slider_FindMiddle@channelDelta 002A  
            calculate_raw_position@interpolation_bits 003A                         MTOUCH_Sensor_Calibrate@sensor 0070  
                             ?_Sensor_setScanFunction 0072                                        __pcstackCOMMON 0070  
                                      _Slider_Service 0198                               _MTOUCH_Button_isPressed 17BE  
                                        __pidataBANK1 1302                                          __pidataBANK2 15F8  
                                     divide@numerator 0072                                   ??_SYSTEM_Initialize 007A  
                      ?_Button_Unscaled_Deviation_Get 0072                                             ?_TMR1_ISR 0070  
                       ?_TMR1_DefaultInterruptHandler 0070                            __end_of_MTOUCH_Button_Tick 16D9  
                    ??_MTOUCH_Slider_isReburstRequest 0072                       ?_MTOUCH_Slider_isReburstRequest 0070  
                          __size_of_Slider_Initialize 003F                      __end_of_MTOUCH_Sensor_Initialize 12A2  
                           ??_MTOUCH_Sensor_Calibrate 0072                                      _Sensor_isEnabled 103E  
                            calculate_position@slider 0048                       __end_of_Button_Deviation_Update 07E7  
                            Sensor_setInactive@sensor 0072                                        _Button_Service 0C1A  
                    __end_of_Sensor_Acq_ExecutePacket 0C1A                            ?_Button_State_Initializing 002F  
                                Button_Service@button 003A                                        _OPTION_REGbits 0095  
                             ??_positional_hysteresis 0076                        __end_of_Button_Baseline_Update 075E  
                             ?_calculate_contact_size 0030                                ??_Button_Reburst_Clear 0072  
                                Sensor_Service@sensor 0035                              _MTOUCH_Button_Initialize 081B  
                            ??_Slider_DefaultCallback 0073                       ??_EUSART_SetOverrunErrorHandler 0074  
                                      _Sensor_Service 0C7D                               _Button_State_NotPressed 02B7  
                       __size_of_MTOUCH_Sensor_Enable 001E                                    _Sensor_setInactive 1FE3  
                           __end_of_SYSTEM_Initialize 10D2                                     _lowpowerActivated 00CA  
                    MTOUCH_Sensor_isCalibrated@sensor 0070                                ??_Sensor_Sampled_Reset 007A  
                                          __pbssBANK0 005C                                            __pbssBANK1 00C0  
                                __end_of_EUSART_Write 2000                               _MTOUCH_Sensor_isEnabled 1322  
                                  _DELAY_milliseconds 108A                                  _MTOUCH_ScanScheduler 1004  
                           ??_MTOUCH_Slider_isPressed 0072                                      _mTouchScanReload 00BE  
            MTOUCH_Slider_isReburstRequest@sliderName 0072                    calculate_raw_position@deadband_set 0035  
                                 ?_Sensor_setInactive 0072                                      _Sensor_setActive 1FDC  
                                  Sensor_Service@name 0033                            __end_of_mtouch_button_init 0504  
                      __end_of_Sensor_setScanFunction 110D                                __end_of_Slider_Service 02B7  
                 calculate_position@filtered_position 0044                                   ?_DELAY_milliseconds 0072  
                                          __pmaintext 038A                                         ?_MTOUCH_Delay 0070  
                                             ?___wmul 0072                                            ??_TMR1_ISR 0072  
                                __size_of_interpolate 0067                        MTOUCH_Sensor_wasSampled@sensor 0078  
                                          __pintentry 0004                                               ?_divide 0072  
                              __end_of_Button_Service 0C7D                                               ?_memcpy 0072  
                                             _BAUDCON 019F                                _calculate_raw_position 0061  
                     __size_of_Button_Reburst_Request 0004                   __end_of_MTOUCH_Button_InitializeAll 1229  
                         _MTOUCH_Button_InitializeAll 120C                   __end_of_MTOUCH_Sensor_InitializeAll 106A  
                         _MTOUCH_Sensor_InitializeAll 105B                             ??_MTOUCH_Sensor_SampleAll 0037  
                        Button_Reburst_Request@button 0078                       __end_of_Sensor_RawSample_Update 11D6  
                                ??_Sensor_setInactive 0074                     __size_of_MTOUCH_Sensor_wasSampled 0021  
                           ?_MTOUCH_Sensor_wasSampled 0070                        __end_of_calculate_contact_size 0A49  
                         Button_State_Disabled@button 002F                     __end_of_Button_State_Initializing 0E85  
                              __end_of_Sensor_Service 0CE1                                             ?___xxtofl 0072  
                            _MTOUCH_Button_ServiceAll 10D2                                  ??_DELAY_milliseconds 0074  
                          calculate_raw_position@size 003B                               ?_Sensor_Acq_ExecuteScan 0070  
                       MTOUCH_Sensor_SampleAll@sensor 0038                                               _OSCTUNE 0098  
                    __size_of_MTOUCH_Service_Mainloop 0026                          __end_of_Button_State_Pressed 0BB8  
                        ?_MTOUCH_Button_Deviation_Get 0070                              ??_EUSART_SetErrorHandler 0074  
                    Button_Baseline_Initialize@button 0025                                      ?_TMR1_WriteTimer 0070  
                                __size_of_MTOUCH_Tick 0003                                 ?_MTOUCH_ScanScheduler 0070  
               positional_hysteresis@current_position 002A                           ?_MTOUCH_Slider_Position_Get 0072  
               __end_of_MTOUCH_Slider_Reburst_Service 12E2                __size_of_MTOUCH_Slider_Reburst_Service 0020  
                       _MTOUCH_Slider_Reburst_Service 12C2                             ??_MTOUCH_Button_isPressed 0020  
                                     ?_Slider_Service 0070                                        ??_MTOUCH_Delay 0072  
                                      _packet_counter 0061                               Sensor_Acquisition@retry 002E  
                                             ___fltol 0D47                        MTOUCH_Button_Initialize@button 0025  
                                     __size_of___wmul 001B               MTOUCH_Slider_Reburst_Service@sliderName 0026  
                                     __size_of_divide 0052                                       ?_Button_Service 0070  
                                     __size_of_memcpy 0028                                               __ptext1 063B  
                                             __ptext2 0D47                                               __ptext3 10C0  
                                             __ptext4 1000                                               __ptext5 07E7  
                                             __ptext6 11D6                                               __ptext7 1FF1  
                                             __ptext8 12E2                                               __ptext9 1FCA  
                         Button_Reading_Update@button 0029                        ??_TMR1_DefaultInterruptHandler 0070  
                         __size_of_MTOUCH_CVD_ScanA_0 0021                           __size_of_MTOUCH_CVD_ScanA_1 0021  
                         __size_of_MTOUCH_CVD_ScanA_2 0021                           __size_of_MTOUCH_CVD_ScanA_3 0021  
                         __size_of_MTOUCH_CVD_ScanA_4 0021                           __size_of_MTOUCH_CVD_ScanB_0 0021  
                         __size_of_MTOUCH_CVD_ScanA_5 0021                           __size_of_MTOUCH_CVD_ScanB_1 0021  
                         __size_of_MTOUCH_CVD_ScanA_6 0021                           __size_of_MTOUCH_CVD_ScanB_2 0021  
                         __size_of_MTOUCH_CVD_ScanA_7 0021                           __size_of_MTOUCH_CVD_ScanB_3 0021  
                         __size_of_MTOUCH_CVD_ScanA_8 0021                           __size_of_MTOUCH_CVD_ScanB_4 0021  
                         __size_of_MTOUCH_CVD_ScanA_9 0021                           __size_of_MTOUCH_CVD_ScanB_5 0021  
                         __size_of_MTOUCH_CVD_ScanB_6 0021                           __size_of_MTOUCH_CVD_ScanB_7 0021  
                         __size_of_MTOUCH_CVD_ScanB_8 0021                           __size_of_MTOUCH_CVD_ScanB_9 0021  
                                           _T1CONbits 0018                              _MTOUCH_Sensor_Initialize 1282  
                      __end_of_Sensor_Acq_ExecuteScan 0D47                                 _OSCILLATOR_Initialize 1FF1  
                                        __size_of_abs 0017                            __end_of_calculate_position 177F  
                                          ??___xxtofl 0076                             ??_Button_State_NotPressed 0031  
                                     ?_Sensor_Service 0070                     __size_of_TMR1_SetInterruptHandler 0005  
                            ??_PIN_MANAGER_Initialize 0072                             ?_TMR1_SetInterruptHandler 0072  
                             ??_Button_State_Disabled 007A                        __size_of_Button_Reading_Update 0012  
                         __size_of_MTOUCH_needReburst 0010                               Slider_Initialize@slider 0074  
                       __end_of_Button_Reading_Update 10AE                     MTOUCH_Sensor_InitializeAll@sensor 002A  
                     __size_of_Slider_DefaultCallback 0001                              _Sensor_Acq_ExecutePacket 0BB8  
                                    _callback_sampled 00BC                             ??_MTOUCH_Sensor_isEnabled 0020  
                          __size_of_SYSTEM_Initialize 0012                                               clrloop0 1019  
                        Button_Check_AKS_Block@button 0024                                      _callback_pressed 00B6  
                      MTOUCH_Sensor_Initialize@sensor 0028                                  end_of_initialization 005D  
                              _Button_Reburst_Request 1FB7                              Slider_Service@sliderName 0054  
                       ??_MTOUCH_Button_Deviation_Get 0020                              Slider_FindRight@ref_node 002A  
                             ?_Button_DefaultCallback 0072                 __end_of_EUSART_SetOverrunErrorHandler 1FCF  
              __size_of_EUSART_SetOverrunErrorHandler 0005                         _EUSART_SetOverrunErrorHandler 1FCA  
                                             memcpy@d 0021                                               memcpy@n 0076  
                                             memcpy@s 0023                                               init_ram 1024  
                                             initloop 1025                               ?_Button_State_Suspended 002F  
                      calculate_position@raw_position 0046                               ?_Sensor_DefaultCallback 0072  
                    __size_of_Button_Deviation_Update 0089                                     _EUSART_Initialize 12E2  
                        calculate_raw_position@slider 003C                         positional_hysteresis@distance 0032  
                        ??_MTOUCH_Sensor_isCalibrated 0072                            ??_MTOUCH_Slider_ServiceAll 0056  
                                  ?_EUSART_Initialize 0070                   __end_of_MTOUCH_Sensor_RawSample_Get 163E  
                         _MTOUCH_Sensor_RawSample_Get 161A                          calculate_contact_size@slider 0036  
                                          _resol_bits 0063                                   _mtouch_request_init 00CD  
                                       MTOUCH_Delay@i 0073                                   ??_EUSART_Initialize 0074  
                                    ??_WDT_Initialize 0072                         positional_hysteresis@polarity 0031  
                              Sensor_setActive@sensor 0072                       ??_MTOUCH_Button_Reburst_Request 0020  
                     ??_MTOUCH_Button_Reburst_Service 0072                                         ___xxtofl@sign 0020  
                       Button_Deviation_Update@button 0072                                 __size_of_EUSART_Write 0008  
                       MTOUCH_Sensor_isEnabled@sensor 0078                            MTOUCH_Sensor_Enable@sensor 0078  
                                     _Slider_FindLeft 09A1                                   _callback_notPressed 00B4  
                 __size_of_MTOUCH_Sensor_isCalibrated 0002                        __end_of_Button_DefaultCallback 1FAB  
                     __size_of_EUSART_SetErrorHandler 0005                                ??_MTOUCH_ScanScheduler 0072  
                              _button_reburst_request 00C9                     Slider_Service@valid_contact_found 004E  
                                  _sensor_globalFlags 0062                        __end_of_Button_State_Suspended 11A3  
                              __size_of_MTOUCH_Random 0010                              __end_of_Sensor_isEnabled 104C  
                                   ?_Slider_FindRight 0024                                    get_difference@diff 0028  
                      __end_of_Sensor_DefaultCallback 1FAD                             __end_of_EUSART_Initialize 1302  
                        Sensor_Acq_ExecuteScan@result 0078                                    ??_Slider_FindRight 0026  
           calculate_raw_position@interpolation_scale 0037                        moving_average_filter@dist_temp 0031  
                    __size_of_Sensor_RawSample_Update 001A                                    _Sensor_Acquisition 0862  
                              _Slider_DefaultCallback 1FAD                                     main@sliderPostion 00CE  
                __size_of_MTOUCH_Button_Deviation_Get 0020                        ?_MTOUCH_Slider_Reburst_Service 0070  
                                _Button_State_Pressed 0B56                            _EUSART_DefaultErrorHandler 0000  
                                 ?_Sensor_Acquisition 002B                                 _MTOUCH_Sensor_Disable 1246  
                                       __pidataBIGRAM 0AFC                                        __end_of___wmul 081B  
                          ??_MTOUCH_Button_Initialize 0020                       ??_MTOUCH_Sensor_Scan_Initialize 0072  
                                        _EUSART_Write 1FF8                                     __size_of_TMR1_ISR 0014  
                                      __end_of_divide 094E                                 _moving_average_filter 0E85  
                       Sensor_Acq_ExecutePacket@error 002A                                    _Button_Tick_helper 0AA2  
                                      __end_of_memcpy 16B0                                ?_OSCILLATOR_Initialize 0070  
                                 MTOUCH_Button_Tick@i 002E                              __end_of_Sensor_setActive 1FE3  
                         ??_Button_State_Initializing 0031                                   start_initialization 0014  
                             _MTOUCH_Service_Mainloop 1662                       __size_of_PIN_MANAGER_Initialize 001A  
                      __size_of_positional_hysteresis 0086                                  __end_of_MTOUCH_Delay 1018  
                                  _MTOUCH_Button_Tick 16B0                       ??_Button_Unscaled_Deviation_Get 0074  
                                 ?_Button_Tick_helper 0024                                           __end_of_abs 118B  
                       __end_of_positional_hysteresis 1000                                  ??_Sensor_Acquisition 002D  
                             __size_of_get_difference 0059                                   ?_MTOUCH_Button_Tick 0070  
                     Button_State_Initializing@button 002F                              ??_Button_Check_AKS_Block 0026  
                    _wheel_sensor_middle_channel_zero 00C7                        ?_EUSART_SetOverrunErrorHandler 0072  
                    __end_of_MTOUCH_Sensor_wasSampled 1364                                  ??_Button_Tick_helper 0026  
                            __size_of_TMR1_Initialize 0019                          __end_of_MTOUCH_Sensor_Enable 1282  
                     get_difference@previous_position 0072                               ?_calculate_raw_position 002D  
                          _EUSART_FramingErrorHandler 00E4                                 ?_Button_State_Pressed 002F  
                                            ??___wmul 0076                                _EUSART_SetErrorHandler 1FC5  
                                            ??_divide 0077                            ??_MTOUCH_Button_ServiceAll 003C  
                                         __pdataBANK1 00A0                                           __pdataBANK2 0120  
                                       _MTOUCH_Random 106A                                              ??_memcpy 0078  
                        ??_Button_Baseline_Initialize 0027                                Slider_FindRight@slider 002B  
                                ??_MTOUCH_Button_Tick 0028                                    _mtouch_button_init 0450  
                          Sensor_Sampled_Reset@sensor 0078                          ??_Button_State_PressDebounce 0031  
                             __end_of_Slider_FindLeft 09F5                                           __pbssBIGRAM 233C  
                                         __pbssCOMMON 007A                                             ___latbits 0003  
                                       __pcstackBANK0 0020                                         __pcstackBANK1 00CE  
                                   __size_of___xxtofl 0095                               Slider_FindLeft@ref_node 0027  
           MTOUCH_Slider_isPositionChanged@sliderName 0072                         __size_of_Button_Reburst_Clear 0003  
                      MTOUCH_Button_ServiceAll@button 003D                                      ??_Slider_Service 0049  
                                 Sensor_Service@error 0034                         __size_of_Sensor_Sampled_Reset 0007  
                          __size_of_EUSART_Initialize 0020                               _Button_Deviation_Update 075E  
                           _Button_State_Initializing 0E14                    __end_of_MTOUCH_Sensor_isCalibrated 0004  
                          _MTOUCH_Sensor_isCalibrated 0002                                             __pnvBANK1 00DC  
                                   _Sensor_setSampled 1FEA                        __end_of_calculate_raw_position 0198  
                               Slider_FindLeft@slider 0026                                         ??_interpolate 0027  
                              _PIN_MANAGER_Initialize 11D6                                      ??_Button_Service 0035  
                            ?_MTOUCH_Sensor_Calibrate 0070                                    ?_Sensor_setSampled 0072  
                       Slider_FindMiddle@maximumDelta 002C                    Button_Reading_Update_Helper@button 0025  
                    __end_of_TMR1_SetInterruptHandler 1FC5                            ??_MTOUCH_Sensor_Initialize 0024  
              positional_hysteresis@previous_position 002C                                ?_MTOUCH_Sensor_Disable 0070  
                                           __ptext100 081B                                             __ptext101 1FA9  
                                           __ptext110 161A                                             __ptext102 0504  
                                           __ptext111 0800                                             __ptext103 1322  
                                           __ptext120 104C                                             __ptext112 075E  
                                           __ptext104 163E                                             __ptext113 1FAE  
                                           __ptext105 1FB7                                             __ptext114 1FF8  
                                           __ptext106 06D0                                             __ptext115 108A  
                                           __ptext107 16D9                                             __ptext108 109C  
                                           __ptext117 10E5                                             __ptext109 08AB  
                                           __ptext118 1004                                             __ptext119 1FA8  
                                            ?___fltol 0072                                        ?_MTOUCH_Random 0070  
                              ?_moving_average_filter 002A                                      ??_Sensor_Service 002F  
                          ??_Sensor_Acq_ExecutePacket 0026                          ??_INTERRUPT_InterruptManager 0072  
                                 ??_Sensor_setSampled 0074                             ??_MTOUCH_Service_Mainloop 0058  
                    get_difference@rollover_threshold 0026                           __size_of_Sensor_setInactive 0007  
                      Sensor_Acq_ExecutePacket@sensor 0024                               ?_Button_Reburst_Request 0078  
                         __size_of_DELAY_milliseconds 0012                                         ??_MTOUCH_Tick 0079  
                      __size_of_Button_State_Disabled 0001                              ?_MTOUCH_Slider_isPressed 0070  
                       __end_of_Button_State_Disabled 1FAC                                     _sliderGroupStatus 00C8  
Button_Check_AKS_Block@surplus_deviation_check_button 002B                                    Slider_FindMiddle@i 002E  
               __end_of_Button_Unscaled_Deviation_Get 1662                __size_of_Button_Unscaled_Deviation_Get 0024  
                       _Button_Unscaled_Deviation_Get 163E                    Button_Check_AKS_Block@check_button 002D  
                           __end_of_Sensor_setSampled 1FF1                                        ___wmul@product 0076  
                                  _calculate_position 1741                          ?_MTOUCH_Slider_InitializeAll 0070  
                     positional_hysteresis@hyst_width 0030                EUSART_SetErrorHandler@interruptHandler 0072  
                                            _LATCbits 010E                                    _currentScannSensor 00CC  
                     __size_of_Button_Check_AKS_Block 009F                               _Sensor_RawSample_Update 11BC  
                                           clear_ram0 1018                                              _PIE1bits 0091  
                                   _eusartRxLastError 00C6                              __size_of_TMR1_WriteTimer 000F  
                 __size_of_INTERRUPT_InterruptManager 000E                                              _PIR1bits 0011  
                     ??_EUSART_SetFramingErrorHandler 0074                                ??_Button_State_Pressed 0031  
                                 ?_calculate_position 003F                        DELAY_milliseconds@milliseconds 0072  
              __end_of_MTOUCH_Sensor_Sampled_ResetAll 1246               __size_of_MTOUCH_Sensor_Sampled_ResetAll 001D  
                      _MTOUCH_Sensor_Sampled_ResetAll 1229                                   interpolate@num_bits 0026  
                            ?_MTOUCH_Sensor_SampleAll 0070                     _EUSART_DefaultOverrunErrorHandler 0000  
                                            _TMR1_ISR 10E5                              _MTOUCH_Sensor_wasSampled 1343  
                                  _mtouch_time_toScan 007B                            __end_of_MTOUCH_CVD_ScanA_0 13A6  
                          __end_of_MTOUCH_CVD_ScanA_1 13C7                            __end_of_MTOUCH_CVD_ScanA_2 13E8  
                          __end_of_MTOUCH_CVD_ScanA_3 1409                            __end_of_MTOUCH_CVD_ScanA_4 142A  
                          __end_of_MTOUCH_CVD_ScanB_0 14F0                            __end_of_MTOUCH_CVD_ScanA_5 144B  
                          __end_of_MTOUCH_CVD_ScanB_1 1511                            __end_of_MTOUCH_CVD_ScanA_6 146C  
                          __end_of_MTOUCH_CVD_ScanB_2 1532                            __end_of_MTOUCH_CVD_ScanA_7 148D  
                          __end_of_MTOUCH_CVD_ScanB_3 1553                            __end_of_MTOUCH_CVD_ScanA_8 14AE  
                          __end_of_MTOUCH_CVD_ScanB_4 1574                            __end_of_MTOUCH_CVD_ScanA_9 1385  
                          __end_of_MTOUCH_CVD_ScanB_5 1595                            __end_of_MTOUCH_CVD_ScanB_6 15B6  
                          __end_of_MTOUCH_CVD_ScanB_7 15D7                            __end_of_MTOUCH_CVD_ScanB_8 15F8  
                          __end_of_MTOUCH_CVD_ScanB_9 14CF                              ??_Button_Baseline_Update 0074  
                                 __end_of_interpolate 0E14                                     ??_TMR1_Initialize 0074  
                                          _ADCON0bits 009D                                 __size_of_MTOUCH_Delay 000B  
                                   ___wmul@multiplier 0072                 Button_Check_AKS_Block@currentAKSGroup 002A  
                                    ?_Slider_FindLeft 0024                            __end_of_MTOUCH_needReburst 108A  
                      __end_of_Button_Reburst_Request 1FBB                                  ??_calculate_position 0041  
              moving_average_filter@previous_position 002F                                  _MTOUCH_Sensor_Enable 1264  
                           _callback_position_changed 00B2                              Button_Tick_helper@button 0024  
                           ??_Button_Deviation_Update 0020                                 _Button_Reading_Update 109C  
                            ??_Sensor_setScanFunction 0074                                        _get_difference 0A49  
                            ?_MTOUCH_Button_isPressed 0070                                     ?_Sensor_isEnabled 0072  
                                 __end_of_MTOUCH_Tick 1FB4                                     _MTOUCH_Initialize 115E  
                     __end_of_MTOUCH_Sensor_Calibrate 1FAA                               ?_Slider_DefaultCallback 0072  
                                  ??_Sensor_isEnabled 0074                                           _left_signal 005E  
                       ??_MTOUCH_Slider_InitializeAll 0075                                    ?_MTOUCH_Initialize 0070  
                                           memcpy@tmp 0020                               Slider_FindMiddle@slider 002F  
                                     ??_MTOUCH_Random 0072                                          _MTOUCH_Delay 100D  
                                        _sample_delay 00CB                            Slider_Service@group_status 004D  
                                         _middle_node 0060                                     divide@denominator 0074  
                            ??_calculate_contact_size 0032                               ??_OSCILLATOR_Initialize 0072  
                  __end_of_Button_Baseline_Initialize 1706                            _Button_Baseline_Initialize 16D9  
                            Sensor_Acquisition@sensor 002B                                   _EUSART_ErrorHandler 00E0  
                                 ??_MTOUCH_Initialize 007A                             __size_of_Slider_FindRight 003B  
                                    __size_of___fltol 0066                    __end_of_Button_State_PressDebounce 063B  
                          _Button_State_PressDebounce 05A3                              ?_Button_State_NotPressed 002F  
                __end_of_Button_State_ReleaseDebounce 0F7A                 __size_of_Button_State_ReleaseDebounce 0082  
                        _Button_State_ReleaseDebounce 0EF8                              _TMR1_SetInterruptHandler 1FC0  
                              _Button_Check_AKS_Block 0504                                    Button_Service@name 0039  
                               _TMR1_InterruptHandler 00DC                              ?_MTOUCH_Sensor_isEnabled 0070  
                                   ?_Sensor_setActive 0072                       __end_of_MTOUCH_Slider_isPressed 11BC  
                                            ___xxtofl 063B                     __size_of_MTOUCH_Slider_ServiceAll 0012  
                           ?_MTOUCH_Slider_ServiceAll 0070                                          _Sensor_scanA 00BA  
                                        _Sensor_scanB 00B8                                    ??_Sensor_setActive 0074  
                 __end_of_MTOUCH_Button_Deviation_Get 12C2                           _MTOUCH_Button_Deviation_Get 12A2  
                     ??_MTOUCH_Slider_Reburst_Service 0025                                __end_of_get_difference 0AA2  
                               ?_MTOUCH_Sensor_Enable 0070                                              __ptext10 1FCF  
                                            __ptext11 1FC5                                              __ptext20 1FB4  
                                            __ptext12 11A3                                              __ptext21 1FB1  
                                            __ptext13 1135                                              __ptext30 0061  
                                            __ptext22 16B0                                              __ptext14 1121  
                                            __ptext31 0DAD                                              __ptext23 0AA2  
                                            __ptext15 1662                                              __ptext40 1149  
                                            __ptext32 08FC                                              __ptext24 10AE  
                                            __ptext16 107A                                              __ptext41 0C7D  
                                            __ptext33 09F5                                              __ptext25 0198  
                                            __ptext17 12C2                                              __ptext50 0BB8  
                                            __ptext42 1FEA                                              __ptext34 1706  
                                            __ptext26 1741                                              __ptext18 110D  
                                            __ptext51 10F9                                              __ptext43 11BC  
                                            __ptext35 094E                                              __ptext27 0F7A  
                                            __ptext19 11F0                                              __ptext60 14F0  
                                            __ptext52 0CE1                                              __ptext44 1FAC  
                                            __ptext36 09A1                                              __ptext28 0E85  
                                            __ptext61 14CF                                              __ptext53 15D7  
                                            __ptext45 0862                                              __ptext37 12A2  
                                            __ptext29 0A49                                              __ptext70 13A6  
                                            __ptext62 14AE                                              __ptext54 15B6  
                                            __ptext46 1174                                              __ptext38 1FAD  
                                            __ptext71 1385                                              __ptext63 148D  
                                            __ptext55 1595                                              __ptext47 1FE3  
                                            __ptext39 17BE                                              __ptext80 1229  
                                            __ptext72 1364                                              __ptext64 146C  
                                            __ptext56 1574                                              __ptext48 1FDC  
                                            __ptext81 105B                                              __ptext73 106A  
                                            __ptext65 144B                                              __ptext57 1553  
                                            __ptext49 103E                                              __ptext90 0002  
                                            __ptext82 1282                                              __ptext74 100D  
                                            __ptext66 142A                                              __ptext58 1532  
                                            __ptext91 1FAB                                              __ptext83 1FD5  
                                            __ptext75 115E                                              __ptext67 1409  
                                            __ptext59 1511                                              __ptext92 0EF8  
                                            __ptext84 1264                                              __ptext76 1FC0  
                                            __ptext68 13E8                                              __ptext93 0B56  
                                            __ptext85 120C                                              __ptext77 1030  
                                            __ptext69 13C7                                              __ptext94 05A3  
                                            __ptext86 1688                                              __ptext78 177F  
                                            __ptext95 02B7                                              __ptext87 10D2  
                                            __ptext79 1FBB                                              __ptext96 0E14  
                                            __ptext88 0C1A                                              __ptext97 118B  
                                            __ptext89 1343                                              __ptext98 1246  
                                            __ptext99 1FAA                          Slider_DefaultCallback@slider 0072  
                                        _right_signal 005C                             __end_of_MTOUCH_Initialize 1174  
                           ??_Sensor_RawSample_Update 0074                   Sensor_Acq_ExecutePacket@ADCON0_temp 0027  
                 Sensor_Acq_ExecutePacket@ADCON1_temp 0028                        __end_of_Slider_DefaultCallback 1FAE  
                       __size_of_MTOUCH_ScanScheduler 0009                            __size_of_Sensor_setSampled 0007  
                                       __size_of_main 00C6                       __end_of_MTOUCH_Sensor_SampleAll 115E  
                        Button_State_Suspended@button 002F                               ?_EUSART_SetErrorHandler 0072  
                       MTOUCH_needReburst@needReburst 0028                                           _interpolate 0DAD  
                              Slider_Service@position 004F         EUSART_SetOverrunErrorHandler@interruptHandler 0072  
                        Sensor_setScanFunction@sensor 0072                                              int$flags 007E  
                                   _callback_released 00AE                              ??_Sensor_Acq_ExecuteScan 0020  
                  __size_of_Button_State_Initializing 0071                    __end_of_INTERRUPT_InterruptManager 0012  
                          _INTERRUPT_InterruptManager 0004                     Sensor_Acq_ExecutePacket@GIE_state 0029  
               __end_of_EUSART_SetFramingErrorHandler 1FD5                __size_of_EUSART_SetFramingErrorHandler 0006  
                       _EUSART_SetFramingErrorHandler 1FCF                                     ??_TMR1_WriteTimer 0072  
                     __size_of_Button_Baseline_Update 008E                          ?_MTOUCH_Button_InitializeAll 0070  
                        ?_MTOUCH_Sensor_InitializeAll 0070                  __size_of_MTOUCH_Slider_InitializeAll 000E  
                       ?_Button_State_ReleaseDebounce 002F   Button_Check_AKS_Block@surplus_deviation_this_button 0028  
                                       _mtouch_button 233C                                            _INTCONbits 000B  
                                       _mtouch_slider 0120                                         _mtouch_sensor 22E2  
                                            memcpy@d1 0072                                              memcpy@s1 0074  
                     __end_of_MTOUCH_Button_isPressed 1800                            calculate_position@position 0042  
                                     ?_get_difference 0072                                           _MTOUCH_Tick 1FB1  
                              ?_Button_Reading_Update 0029                           Slider_Initialize@sliderName 0073  
                    Button_Deviation_Update@deviation 0074                               __size_of_WDT_Initialize 0004  
                        MTOUCH_Button_Initialize@name 0024                     __size_of_MTOUCH_Button_Initialize 0047  
                               _positional_hysteresis 0F7A                                              intlevel1 0000  
                           ?_MTOUCH_Button_Initialize 0070                           __size_of_Sensor_Acquisition 0049  
                     __size_of_Sensor_setScanFunction 0014                               ?_PIN_MANAGER_Initialize 0070  
                      __end_of_EUSART_SetErrorHandler 1FCA                          ??_MTOUCH_Slider_Position_Get 0074  
                 Button_Unscaled_Deviation_Get@button 0072                           ?_MTOUCH_Sensor_isCalibrated 0070  
                _callback_pressed@mtouch_slider$F1195 00B0                                     MTOUCH_Random@seed 007A  
                               Slider_Service@segment 0052                               ??_MTOUCH_Sensor_Disable 0020  
               moving_average_filter@current_position 002A                               ??_moving_average_filter 0076  
                         __size_of_Button_Tick_helper 005A                          __end_of_Button_Reburst_Clear 1FB1  
                     __end_of_Button_State_NotPressed 038A         EUSART_SetFramingErrorHandler@interruptHandler 0072  
                     __size_of_calculate_contact_size 0054                                           _resol_value 00C2  
                        __end_of_Sensor_Sampled_Reset 1FDC                       __end_of_MTOUCH_Sensor_isEnabled 1343  
                         __size_of_MTOUCH_Button_Tick 0029                                         __pstringtext1 0450  
                       ??_MTOUCH_Button_InitializeAll 0079                              ??_Button_DefaultCallback 0073  
                       ??_MTOUCH_Sensor_InitializeAll 0029                      __size_of_MTOUCH_Sensor_Calibrate 0001  
                     MTOUCH_Button_Deviation_Get@name 0078                                ??_MTOUCH_Sensor_Enable 0020  
                            ??_Button_State_Suspended 007A                                  Slider_Service@slider 0055  
                            ??_Sensor_DefaultCallback 0073                         moving_average_filter@distance 0033  
                                Slider_Service@status 0051                  __end_of_Button_Reading_Update_Helper 08FC  
               __size_of_Button_Reading_Update_Helper 0051                          _Button_Reading_Update_Helper 08AB  
                 __size_of_MTOUCH_Slider_Position_Get 0014                        calculate_raw_position@deadband 0038  
                   __size_of_MTOUCH_Button_ServiceAll 0013                             ?_MTOUCH_Button_ServiceAll 0070  
                       Button_State_NotPressed@button 002F                                    EUSART_Write@txData 0072  
                          __size_of_MTOUCH_Initialize 0016                __end_of_MTOUCH_Slider_isReburstRequest 1121  
             __size_of_MTOUCH_Slider_isReburstRequest 0014                        _MTOUCH_Slider_isReburstRequest 110D  
                      __end_of_PIN_MANAGER_Initialize 11F0                                _Button_Baseline_Update 06D0  
                         MTOUCH_Button_isPressed@name 0079                            ??_MTOUCH_Sensor_wasSampled 0020  
                                     _TMR1_Initialize 07E7                      Button_State_PressDebounce@button 002F  



Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Thu Nov 10 20:58:29 2022

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og9 
     1                           	processor	16F1938
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     6                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     7                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	cinit,global,class=CODE,merge=1,delta=2
     9                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    13                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    14                           	psect	inittext,global,class=CODE,delta=2
    15                           	psect	clrtext,global,class=CODE,delta=2
    16                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    18                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    19                           	psect	text1,local,class=CODE,merge=1,delta=2
    20                           	psect	text2,local,class=CODE,merge=1,delta=2
    21                           	psect	text3,local,class=CODE,merge=1,delta=2
    22                           	psect	text4,local,class=CODE,merge=1,delta=2
    23                           	psect	text5,local,class=CODE,merge=1,delta=2
    24                           	psect	text6,local,class=CODE,merge=1,delta=2
    25                           	psect	text7,local,class=CODE,merge=1,delta=2
    26                           	psect	text8,local,class=CODE,merge=1,delta=2
    27                           	psect	text9,local,class=CODE,merge=1,delta=2
    28                           	psect	text10,local,class=CODE,merge=1,delta=2
    29                           	psect	text11,local,class=CODE,merge=1,delta=2
    30                           	psect	text12,local,class=CODE,merge=1,delta=2
    31                           	psect	text13,local,class=CODE,merge=1,delta=2
    32                           	psect	text14,local,class=CODE,merge=1,delta=2
    33                           	psect	text15,local,class=CODE,merge=1,delta=2
    34                           	psect	text16,local,class=CODE,merge=1,delta=2
    35                           	psect	text17,local,class=CODE,merge=1,delta=2
    36                           	psect	text18,local,class=CODE,merge=1,inline,delta=2
    37                           	psect	text19,local,class=CODE,merge=1,delta=2
    38                           	psect	text20,local,class=CODE,merge=1,delta=2
    39                           	psect	text21,local,class=CODE,merge=1,delta=2
    40                           	psect	text22,local,class=CODE,merge=1,delta=2,group=2
    41                           	psect	text23,local,class=CODE,merge=1,inline,delta=2
    42                           	psect	text24,local,class=CODE,merge=1,inline,delta=2
    43                           	psect	text25,local,class=CODE,merge=1,delta=2
    44                           	psect	text26,local,class=CODE,merge=1,delta=2
    45                           	psect	text27,local,class=CODE,merge=1,delta=2
    46                           	psect	text28,local,class=CODE,merge=1,delta=2
    47                           	psect	text29,local,class=CODE,merge=1,delta=2
    48                           	psect	text30,local,class=CODE,merge=1,delta=2
    49                           	psect	text31,local,class=CODE,merge=1,delta=2
    50                           	psect	text32,local,class=CODE,merge=1,delta=2
    51                           	psect	text33,local,class=CODE,merge=1,delta=2
    52                           	psect	text34,local,class=CODE,merge=1,delta=2
    53                           	psect	text35,local,class=CODE,merge=1,delta=2
    54                           	psect	text36,local,class=CODE,merge=1,delta=2
    55                           	psect	text37,local,class=CODE,merge=1,delta=2
    56                           	psect	text38,local,class=CODE,merge=1,delta=2
    57                           	psect	text39,local,class=CODE,merge=1,delta=2
    58                           	psect	text40,local,class=CODE,merge=1,delta=2
    59                           	psect	text41,local,class=CODE,merge=1,delta=2
    60                           	psect	text42,local,class=CODE,merge=1,delta=2
    61                           	psect	text43,local,class=CODE,merge=1,inline,delta=2
    62                           	psect	text44,local,class=CODE,merge=1,delta=2
    63                           	psect	text45,local,class=CODE,merge=1,delta=2
    64                           	psect	text46,local,class=CODE,merge=1,delta=2,group=2
    65                           	psect	text47,local,class=CODE,merge=1,delta=2
    66                           	psect	text48,local,class=CODE,merge=1,delta=2
    67                           	psect	text49,local,class=CODE,merge=1,delta=2
    68                           	psect	text50,local,class=CODE,merge=1,delta=2
    69                           	psect	text51,local,class=CODE,merge=1,delta=2
    70                           	psect	text52,local,class=CODE,merge=1,delta=2
    71                           	psect	text53,local,class=CODE,merge=1,delta=2
    72                           	psect	text54,local,class=CODE,merge=1,delta=2
    73                           	psect	text55,local,class=CODE,merge=1,delta=2
    74                           	psect	text56,local,class=CODE,merge=1,delta=2
    75                           	psect	text57,local,class=CODE,merge=1,delta=2
    76                           	psect	text58,local,class=CODE,merge=1,delta=2
    77                           	psect	text59,local,class=CODE,merge=1,delta=2
    78                           	psect	text60,local,class=CODE,merge=1,delta=2
    79                           	psect	text61,local,class=CODE,merge=1,delta=2
    80                           	psect	text62,local,class=CODE,merge=1,inline,delta=2
    81                           	psect	text63,local,class=CODE,merge=1,delta=2
    82                           	psect	text64,local,class=CODE,merge=1,delta=2
    83                           	psect	text65,local,class=CODE,merge=1,delta=2
    84                           	psect	text66,local,class=CODE,merge=1,delta=2
    85                           	psect	text67,local,class=CODE,merge=1,delta=2
    86                           	psect	text68,local,class=CODE,merge=1,delta=2,group=1
    87                           	psect	text69,local,class=CODE,merge=1,delta=2
    88                           	psect	text70,local,class=CODE,merge=1,inline,delta=2
    89                           	psect	text71,local,class=CODE,merge=1,delta=2
    90                           	psect	text72,local,class=CODE,merge=1,delta=2
    91                           	psect	text73,local,class=CODE,merge=1,delta=2
    92                           	psect	intentry,global,class=CODE,delta=2
    93                           	psect	text75,local,class=CODE,merge=1,delta=2
    94                           	psect	text76,local,class=CODE,merge=1,delta=2
    95                           	psect	text77,local,class=CODE,merge=1,delta=2
    96                           	psect	text78,local,class=CODE,merge=1,delta=2
    97                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    98                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    99                           	dabs	1,0x7E,2
   100  0000                     
   101                           ; Version 2.40
   102                           ; Generated 17/11/2021 GMT
   103                           ; 
   104                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
   105                           ; All rights reserved.
   106                           ; 
   107                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   108                           ; 
   109                           ; Redistribution and use in source and binary forms, with or without modification, are
   110                           ; permitted provided that the following conditions are met:
   111                           ; 
   112                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   113                           ;        conditions and the following disclaimer.
   114                           ; 
   115                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   116                           ;        of conditions and the following disclaimer in the documentation and/or other
   117                           ;        materials provided with the distribution. Publication is not required when
   118                           ;        this file is used in an embedded application.
   119                           ; 
   120                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   121                           ;        software without specific prior written permission.
   122                           ; 
   123                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   124                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   125                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   126                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   127                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   128                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   129                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   130                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   131                           ; 
   132                           ; 
   133                           ; Code-generator required, PIC16F1938 Definitions
   134                           ; 
   135                           ; SFR Addresses
   136  0000                     	;# 
   137  0001                     	;# 
   138  0002                     	;# 
   139  0003                     	;# 
   140  0004                     	;# 
   141  0005                     	;# 
   142  0006                     	;# 
   143  0007                     	;# 
   144  0008                     	;# 
   145  0009                     	;# 
   146  000A                     	;# 
   147  000B                     	;# 
   148  000C                     	;# 
   149  000D                     	;# 
   150  000E                     	;# 
   151  0010                     	;# 
   152  0011                     	;# 
   153  0012                     	;# 
   154  0013                     	;# 
   155  0015                     	;# 
   156  0016                     	;# 
   157  0016                     	;# 
   158  0017                     	;# 
   159  0018                     	;# 
   160  0019                     	;# 
   161  001A                     	;# 
   162  001B                     	;# 
   163  001C                     	;# 
   164  001E                     	;# 
   165  001F                     	;# 
   166  008C                     	;# 
   167  008D                     	;# 
   168  008E                     	;# 
   169  0090                     	;# 
   170  0091                     	;# 
   171  0092                     	;# 
   172  0093                     	;# 
   173  0095                     	;# 
   174  0096                     	;# 
   175  0097                     	;# 
   176  0098                     	;# 
   177  0099                     	;# 
   178  009A                     	;# 
   179  009B                     	;# 
   180  009B                     	;# 
   181  009C                     	;# 
   182  009D                     	;# 
   183  009E                     	;# 
   184  010C                     	;# 
   185  010D                     	;# 
   186  010E                     	;# 
   187  0110                     	;# 
   188  0111                     	;# 
   189  0112                     	;# 
   190  0113                     	;# 
   191  0114                     	;# 
   192  0115                     	;# 
   193  0116                     	;# 
   194  0117                     	;# 
   195  0118                     	;# 
   196  0119                     	;# 
   197  011A                     	;# 
   198  011B                     	;# 
   199  011D                     	;# 
   200  018C                     	;# 
   201  018D                     	;# 
   202  0191                     	;# 
   203  0191                     	;# 
   204  0192                     	;# 
   205  0193                     	;# 
   206  0193                     	;# 
   207  0193                     	;# 
   208  0194                     	;# 
   209  0195                     	;# 
   210  0196                     	;# 
   211  0199                     	;# 
   212  019A                     	;# 
   213  019B                     	;# 
   214  019B                     	;# 
   215  019B                     	;# 
   216  019B                     	;# 
   217  019C                     	;# 
   218  019C                     	;# 
   219  019D                     	;# 
   220  019E                     	;# 
   221  019F                     	;# 
   222  020D                     	;# 
   223  0210                     	;# 
   224  0211                     	;# 
   225  0212                     	;# 
   226  0213                     	;# 
   227  0214                     	;# 
   228  0215                     	;# 
   229  0215                     	;# 
   230  0216                     	;# 
   231  0217                     	;# 
   232  0291                     	;# 
   233  0291                     	;# 
   234  0292                     	;# 
   235  0293                     	;# 
   236  0294                     	;# 
   237  0295                     	;# 
   238  0295                     	;# 
   239  0296                     	;# 
   240  0298                     	;# 
   241  0298                     	;# 
   242  0299                     	;# 
   243  029A                     	;# 
   244  029B                     	;# 
   245  029C                     	;# 
   246  029C                     	;# 
   247  029D                     	;# 
   248  029E                     	;# 
   249  029F                     	;# 
   250  0311                     	;# 
   251  0311                     	;# 
   252  0312                     	;# 
   253  0313                     	;# 
   254  0314                     	;# 
   255  0315                     	;# 
   256  0315                     	;# 
   257  0316                     	;# 
   258  0318                     	;# 
   259  0318                     	;# 
   260  0319                     	;# 
   261  031A                     	;# 
   262  031C                     	;# 
   263  031C                     	;# 
   264  031D                     	;# 
   265  031E                     	;# 
   266  0394                     	;# 
   267  0395                     	;# 
   268  0396                     	;# 
   269  0415                     	;# 
   270  0416                     	;# 
   271  0417                     	;# 
   272  041C                     	;# 
   273  041D                     	;# 
   274  041E                     	;# 
   275  0791                     	;# 
   276  0792                     	;# 
   277  0793                     	;# 
   278  0794                     	;# 
   279  0795                     	;# 
   280  0798                     	;# 
   281  0799                     	;# 
   282  07A0                     	;# 
   283  07A1                     	;# 
   284  07A3                     	;# 
   285  07A4                     	;# 
   286  07A6                     	;# 
   287  07A7                     	;# 
   288  07A9                     	;# 
   289  07AA                     	;# 
   290  0FE4                     	;# 
   291  0FE5                     	;# 
   292  0FE6                     	;# 
   293  0FE7                     	;# 
   294  0FE8                     	;# 
   295  0FE9                     	;# 
   296  0FEA                     	;# 
   297  0FEB                     	;# 
   298  0FED                     	;# 
   299  0FEE                     	;# 
   300  0FEF                     	;# 
   301  0000                     	;# 
   302  0001                     	;# 
   303  0002                     	;# 
   304  0003                     	;# 
   305  0004                     	;# 
   306  0005                     	;# 
   307  0006                     	;# 
   308  0007                     	;# 
   309  0008                     	;# 
   310  0009                     	;# 
   311  000A                     	;# 
   312  000B                     	;# 
   313  000C                     	;# 
   314  000D                     	;# 
   315  000E                     	;# 
   316  0010                     	;# 
   317  0011                     	;# 
   318  0012                     	;# 
   319  0013                     	;# 
   320  0015                     	;# 
   321  0016                     	;# 
   322  0016                     	;# 
   323  0017                     	;# 
   324  0018                     	;# 
   325  0019                     	;# 
   326  001A                     	;# 
   327  001B                     	;# 
   328  001C                     	;# 
   329  001E                     	;# 
   330  001F                     	;# 
   331  008C                     	;# 
   332  008D                     	;# 
   333  008E                     	;# 
   334  0090                     	;# 
   335  0091                     	;# 
   336  0092                     	;# 
   337  0093                     	;# 
   338  0095                     	;# 
   339  0096                     	;# 
   340  0097                     	;# 
   341  0098                     	;# 
   342  0099                     	;# 
   343  009A                     	;# 
   344  009B                     	;# 
   345  009B                     	;# 
   346  009C                     	;# 
   347  009D                     	;# 
   348  009E                     	;# 
   349  010C                     	;# 
   350  010D                     	;# 
   351  010E                     	;# 
   352  0110                     	;# 
   353  0111                     	;# 
   354  0112                     	;# 
   355  0113                     	;# 
   356  0114                     	;# 
   357  0115                     	;# 
   358  0116                     	;# 
   359  0117                     	;# 
   360  0118                     	;# 
   361  0119                     	;# 
   362  011A                     	;# 
   363  011B                     	;# 
   364  011D                     	;# 
   365  018C                     	;# 
   366  018D                     	;# 
   367  0191                     	;# 
   368  0191                     	;# 
   369  0192                     	;# 
   370  0193                     	;# 
   371  0193                     	;# 
   372  0193                     	;# 
   373  0194                     	;# 
   374  0195                     	;# 
   375  0196                     	;# 
   376  0199                     	;# 
   377  019A                     	;# 
   378  019B                     	;# 
   379  019B                     	;# 
   380  019B                     	;# 
   381  019B                     	;# 
   382  019C                     	;# 
   383  019C                     	;# 
   384  019D                     	;# 
   385  019E                     	;# 
   386  019F                     	;# 
   387  020D                     	;# 
   388  0210                     	;# 
   389  0211                     	;# 
   390  0212                     	;# 
   391  0213                     	;# 
   392  0214                     	;# 
   393  0215                     	;# 
   394  0215                     	;# 
   395  0216                     	;# 
   396  0217                     	;# 
   397  0291                     	;# 
   398  0291                     	;# 
   399  0292                     	;# 
   400  0293                     	;# 
   401  0294                     	;# 
   402  0295                     	;# 
   403  0295                     	;# 
   404  0296                     	;# 
   405  0298                     	;# 
   406  0298                     	;# 
   407  0299                     	;# 
   408  029A                     	;# 
   409  029B                     	;# 
   410  029C                     	;# 
   411  029C                     	;# 
   412  029D                     	;# 
   413  029E                     	;# 
   414  029F                     	;# 
   415  0311                     	;# 
   416  0311                     	;# 
   417  0312                     	;# 
   418  0313                     	;# 
   419  0314                     	;# 
   420  0315                     	;# 
   421  0315                     	;# 
   422  0316                     	;# 
   423  0318                     	;# 
   424  0318                     	;# 
   425  0319                     	;# 
   426  031A                     	;# 
   427  031C                     	;# 
   428  031C                     	;# 
   429  031D                     	;# 
   430  031E                     	;# 
   431  0394                     	;# 
   432  0395                     	;# 
   433  0396                     	;# 
   434  0415                     	;# 
   435  0416                     	;# 
   436  0417                     	;# 
   437  041C                     	;# 
   438  041D                     	;# 
   439  041E                     	;# 
   440  0791                     	;# 
   441  0792                     	;# 
   442  0793                     	;# 
   443  0794                     	;# 
   444  0795                     	;# 
   445  0798                     	;# 
   446  0799                     	;# 
   447  07A0                     	;# 
   448  07A1                     	;# 
   449  07A3                     	;# 
   450  07A4                     	;# 
   451  07A6                     	;# 
   452  07A7                     	;# 
   453  07A9                     	;# 
   454  07AA                     	;# 
   455  0FE4                     	;# 
   456  0FE5                     	;# 
   457  0FE6                     	;# 
   458  0FE7                     	;# 
   459  0FE8                     	;# 
   460  0FE9                     	;# 
   461  0FEA                     	;# 
   462  0FEB                     	;# 
   463  0FED                     	;# 
   464  0FEE                     	;# 
   465  0FEF                     	;# 
   466  0000                     	;# 
   467  0001                     	;# 
   468  0002                     	;# 
   469  0003                     	;# 
   470  0004                     	;# 
   471  0005                     	;# 
   472  0006                     	;# 
   473  0007                     	;# 
   474  0008                     	;# 
   475  0009                     	;# 
   476  000A                     	;# 
   477  000B                     	;# 
   478  000C                     	;# 
   479  000D                     	;# 
   480  000E                     	;# 
   481  0010                     	;# 
   482  0011                     	;# 
   483  0012                     	;# 
   484  0013                     	;# 
   485  0015                     	;# 
   486  0016                     	;# 
   487  0016                     	;# 
   488  0017                     	;# 
   489  0018                     	;# 
   490  0019                     	;# 
   491  001A                     	;# 
   492  001B                     	;# 
   493  001C                     	;# 
   494  001E                     	;# 
   495  001F                     	;# 
   496  008C                     	;# 
   497  008D                     	;# 
   498  008E                     	;# 
   499  0090                     	;# 
   500  0091                     	;# 
   501  0092                     	;# 
   502  0093                     	;# 
   503  0095                     	;# 
   504  0096                     	;# 
   505  0097                     	;# 
   506  0098                     	;# 
   507  0099                     	;# 
   508  009A                     	;# 
   509  009B                     	;# 
   510  009B                     	;# 
   511  009C                     	;# 
   512  009D                     	;# 
   513  009E                     	;# 
   514  010C                     	;# 
   515  010D                     	;# 
   516  010E                     	;# 
   517  0110                     	;# 
   518  0111                     	;# 
   519  0112                     	;# 
   520  0113                     	;# 
   521  0114                     	;# 
   522  0115                     	;# 
   523  0116                     	;# 
   524  0117                     	;# 
   525  0118                     	;# 
   526  0119                     	;# 
   527  011A                     	;# 
   528  011B                     	;# 
   529  011D                     	;# 
   530  018C                     	;# 
   531  018D                     	;# 
   532  0191                     	;# 
   533  0191                     	;# 
   534  0192                     	;# 
   535  0193                     	;# 
   536  0193                     	;# 
   537  0193                     	;# 
   538  0194                     	;# 
   539  0195                     	;# 
   540  0196                     	;# 
   541  0199                     	;# 
   542  019A                     	;# 
   543  019B                     	;# 
   544  019B                     	;# 
   545  019B                     	;# 
   546  019B                     	;# 
   547  019C                     	;# 
   548  019C                     	;# 
   549  019D                     	;# 
   550  019E                     	;# 
   551  019F                     	;# 
   552  020D                     	;# 
   553  0210                     	;# 
   554  0211                     	;# 
   555  0212                     	;# 
   556  0213                     	;# 
   557  0214                     	;# 
   558  0215                     	;# 
   559  0215                     	;# 
   560  0216                     	;# 
   561  0217                     	;# 
   562  0291                     	;# 
   563  0291                     	;# 
   564  0292                     	;# 
   565  0293                     	;# 
   566  0294                     	;# 
   567  0295                     	;# 
   568  0295                     	;# 
   569  0296                     	;# 
   570  0298                     	;# 
   571  0298                     	;# 
   572  0299                     	;# 
   573  029A                     	;# 
   574  029B                     	;# 
   575  029C                     	;# 
   576  029C                     	;# 
   577  029D                     	;# 
   578  029E                     	;# 
   579  029F                     	;# 
   580  0311                     	;# 
   581  0311                     	;# 
   582  0312                     	;# 
   583  0313                     	;# 
   584  0314                     	;# 
   585  0315                     	;# 
   586  0315                     	;# 
   587  0316                     	;# 
   588  0318                     	;# 
   589  0318                     	;# 
   590  0319                     	;# 
   591  031A                     	;# 
   592  031C                     	;# 
   593  031C                     	;# 
   594  031D                     	;# 
   595  031E                     	;# 
   596  0394                     	;# 
   597  0395                     	;# 
   598  0396                     	;# 
   599  0415                     	;# 
   600  0416                     	;# 
   601  0417                     	;# 
   602  041C                     	;# 
   603  041D                     	;# 
   604  041E                     	;# 
   605  0791                     	;# 
   606  0792                     	;# 
   607  0793                     	;# 
   608  0794                     	;# 
   609  0795                     	;# 
   610  0798                     	;# 
   611  0799                     	;# 
   612  07A0                     	;# 
   613  07A1                     	;# 
   614  07A3                     	;# 
   615  07A4                     	;# 
   616  07A6                     	;# 
   617  07A7                     	;# 
   618  07A9                     	;# 
   619  07AA                     	;# 
   620  0FE4                     	;# 
   621  0FE5                     	;# 
   622  0FE6                     	;# 
   623  0FE7                     	;# 
   624  0FE8                     	;# 
   625  0FE9                     	;# 
   626  0FEA                     	;# 
   627  0FEB                     	;# 
   628  0FED                     	;# 
   629  0FEE                     	;# 
   630  0FEF                     	;# 
   631  0000                     	;# 
   632  0001                     	;# 
   633  0002                     	;# 
   634  0003                     	;# 
   635  0004                     	;# 
   636  0005                     	;# 
   637  0006                     	;# 
   638  0007                     	;# 
   639  0008                     	;# 
   640  0009                     	;# 
   641  000A                     	;# 
   642  000B                     	;# 
   643  000C                     	;# 
   644  000D                     	;# 
   645  000E                     	;# 
   646  0010                     	;# 
   647  0011                     	;# 
   648  0012                     	;# 
   649  0013                     	;# 
   650  0015                     	;# 
   651  0016                     	;# 
   652  0016                     	;# 
   653  0017                     	;# 
   654  0018                     	;# 
   655  0019                     	;# 
   656  001A                     	;# 
   657  001B                     	;# 
   658  001C                     	;# 
   659  001E                     	;# 
   660  001F                     	;# 
   661  008C                     	;# 
   662  008D                     	;# 
   663  008E                     	;# 
   664  0090                     	;# 
   665  0091                     	;# 
   666  0092                     	;# 
   667  0093                     	;# 
   668  0095                     	;# 
   669  0096                     	;# 
   670  0097                     	;# 
   671  0098                     	;# 
   672  0099                     	;# 
   673  009A                     	;# 
   674  009B                     	;# 
   675  009B                     	;# 
   676  009C                     	;# 
   677  009D                     	;# 
   678  009E                     	;# 
   679  010C                     	;# 
   680  010D                     	;# 
   681  010E                     	;# 
   682  0110                     	;# 
   683  0111                     	;# 
   684  0112                     	;# 
   685  0113                     	;# 
   686  0114                     	;# 
   687  0115                     	;# 
   688  0116                     	;# 
   689  0117                     	;# 
   690  0118                     	;# 
   691  0119                     	;# 
   692  011A                     	;# 
   693  011B                     	;# 
   694  011D                     	;# 
   695  018C                     	;# 
   696  018D                     	;# 
   697  0191                     	;# 
   698  0191                     	;# 
   699  0192                     	;# 
   700  0193                     	;# 
   701  0193                     	;# 
   702  0193                     	;# 
   703  0194                     	;# 
   704  0195                     	;# 
   705  0196                     	;# 
   706  0199                     	;# 
   707  019A                     	;# 
   708  019B                     	;# 
   709  019B                     	;# 
   710  019B                     	;# 
   711  019B                     	;# 
   712  019C                     	;# 
   713  019C                     	;# 
   714  019D                     	;# 
   715  019E                     	;# 
   716  019F                     	;# 
   717  020D                     	;# 
   718  0210                     	;# 
   719  0211                     	;# 
   720  0212                     	;# 
   721  0213                     	;# 
   722  0214                     	;# 
   723  0215                     	;# 
   724  0215                     	;# 
   725  0216                     	;# 
   726  0217                     	;# 
   727  0291                     	;# 
   728  0291                     	;# 
   729  0292                     	;# 
   730  0293                     	;# 
   731  0294                     	;# 
   732  0295                     	;# 
   733  0295                     	;# 
   734  0296                     	;# 
   735  0298                     	;# 
   736  0298                     	;# 
   737  0299                     	;# 
   738  029A                     	;# 
   739  029B                     	;# 
   740  029C                     	;# 
   741  029C                     	;# 
   742  029D                     	;# 
   743  029E                     	;# 
   744  029F                     	;# 
   745  0311                     	;# 
   746  0311                     	;# 
   747  0312                     	;# 
   748  0313                     	;# 
   749  0314                     	;# 
   750  0315                     	;# 
   751  0315                     	;# 
   752  0316                     	;# 
   753  0318                     	;# 
   754  0318                     	;# 
   755  0319                     	;# 
   756  031A                     	;# 
   757  031C                     	;# 
   758  031C                     	;# 
   759  031D                     	;# 
   760  031E                     	;# 
   761  0394                     	;# 
   762  0395                     	;# 
   763  0396                     	;# 
   764  0415                     	;# 
   765  0416                     	;# 
   766  0417                     	;# 
   767  041C                     	;# 
   768  041D                     	;# 
   769  041E                     	;# 
   770  0791                     	;# 
   771  0792                     	;# 
   772  0793                     	;# 
   773  0794                     	;# 
   774  0795                     	;# 
   775  0798                     	;# 
   776  0799                     	;# 
   777  07A0                     	;# 
   778  07A1                     	;# 
   779  07A3                     	;# 
   780  07A4                     	;# 
   781  07A6                     	;# 
   782  07A7                     	;# 
   783  07A9                     	;# 
   784  07AA                     	;# 
   785  0FE4                     	;# 
   786  0FE5                     	;# 
   787  0FE6                     	;# 
   788  0FE7                     	;# 
   789  0FE8                     	;# 
   790  0FE9                     	;# 
   791  0FEA                     	;# 
   792  0FEB                     	;# 
   793  0FED                     	;# 
   794  0FEE                     	;# 
   795  0FEF                     	;# 
   796  0000                     	;# 
   797  0001                     	;# 
   798  0002                     	;# 
   799  0003                     	;# 
   800  0004                     	;# 
   801  0005                     	;# 
   802  0006                     	;# 
   803  0007                     	;# 
   804  0008                     	;# 
   805  0009                     	;# 
   806  000A                     	;# 
   807  000B                     	;# 
   808  000C                     	;# 
   809  000D                     	;# 
   810  000E                     	;# 
   811  0010                     	;# 
   812  0011                     	;# 
   813  0012                     	;# 
   814  0013                     	;# 
   815  0015                     	;# 
   816  0016                     	;# 
   817  0016                     	;# 
   818  0017                     	;# 
   819  0018                     	;# 
   820  0019                     	;# 
   821  001A                     	;# 
   822  001B                     	;# 
   823  001C                     	;# 
   824  001E                     	;# 
   825  001F                     	;# 
   826  008C                     	;# 
   827  008D                     	;# 
   828  008E                     	;# 
   829  0090                     	;# 
   830  0091                     	;# 
   831  0092                     	;# 
   832  0093                     	;# 
   833  0095                     	;# 
   834  0096                     	;# 
   835  0097                     	;# 
   836  0098                     	;# 
   837  0099                     	;# 
   838  009A                     	;# 
   839  009B                     	;# 
   840  009B                     	;# 
   841  009C                     	;# 
   842  009D                     	;# 
   843  009E                     	;# 
   844  010C                     	;# 
   845  010D                     	;# 
   846  010E                     	;# 
   847  0110                     	;# 
   848  0111                     	;# 
   849  0112                     	;# 
   850  0113                     	;# 
   851  0114                     	;# 
   852  0115                     	;# 
   853  0116                     	;# 
   854  0117                     	;# 
   855  0118                     	;# 
   856  0119                     	;# 
   857  011A                     	;# 
   858  011B                     	;# 
   859  011D                     	;# 
   860  018C                     	;# 
   861  018D                     	;# 
   862  0191                     	;# 
   863  0191                     	;# 
   864  0192                     	;# 
   865  0193                     	;# 
   866  0193                     	;# 
   867  0193                     	;# 
   868  0194                     	;# 
   869  0195                     	;# 
   870  0196                     	;# 
   871  0199                     	;# 
   872  019A                     	;# 
   873  019B                     	;# 
   874  019B                     	;# 
   875  019B                     	;# 
   876  019B                     	;# 
   877  019C                     	;# 
   878  019C                     	;# 
   879  019D                     	;# 
   880  019E                     	;# 
   881  019F                     	;# 
   882  020D                     	;# 
   883  0210                     	;# 
   884  0211                     	;# 
   885  0212                     	;# 
   886  0213                     	;# 
   887  0214                     	;# 
   888  0215                     	;# 
   889  0215                     	;# 
   890  0216                     	;# 
   891  0217                     	;# 
   892  0291                     	;# 
   893  0291                     	;# 
   894  0292                     	;# 
   895  0293                     	;# 
   896  0294                     	;# 
   897  0295                     	;# 
   898  0295                     	;# 
   899  0296                     	;# 
   900  0298                     	;# 
   901  0298                     	;# 
   902  0299                     	;# 
   903  029A                     	;# 
   904  029B                     	;# 
   905  029C                     	;# 
   906  029C                     	;# 
   907  029D                     	;# 
   908  029E                     	;# 
   909  029F                     	;# 
   910  0311                     	;# 
   911  0311                     	;# 
   912  0312                     	;# 
   913  0313                     	;# 
   914  0314                     	;# 
   915  0315                     	;# 
   916  0315                     	;# 
   917  0316                     	;# 
   918  0318                     	;# 
   919  0318                     	;# 
   920  0319                     	;# 
   921  031A                     	;# 
   922  031C                     	;# 
   923  031C                     	;# 
   924  031D                     	;# 
   925  031E                     	;# 
   926  0394                     	;# 
   927  0395                     	;# 
   928  0396                     	;# 
   929  0415                     	;# 
   930  0416                     	;# 
   931  0417                     	;# 
   932  041C                     	;# 
   933  041D                     	;# 
   934  041E                     	;# 
   935  0791                     	;# 
   936  0792                     	;# 
   937  0793                     	;# 
   938  0794                     	;# 
   939  0795                     	;# 
   940  0798                     	;# 
   941  0799                     	;# 
   942  07A0                     	;# 
   943  07A1                     	;# 
   944  07A3                     	;# 
   945  07A4                     	;# 
   946  07A6                     	;# 
   947  07A7                     	;# 
   948  07A9                     	;# 
   949  07AA                     	;# 
   950  0FE4                     	;# 
   951  0FE5                     	;# 
   952  0FE6                     	;# 
   953  0FE7                     	;# 
   954  0FE8                     	;# 
   955  0FE9                     	;# 
   956  0FEA                     	;# 
   957  0FEB                     	;# 
   958  0FED                     	;# 
   959  0FEE                     	;# 
   960  0FEF                     	;# 
   961  0000                     	;# 
   962  0001                     	;# 
   963  0002                     	;# 
   964  0003                     	;# 
   965  0004                     	;# 
   966  0005                     	;# 
   967  0006                     	;# 
   968  0007                     	;# 
   969  0008                     	;# 
   970  0009                     	;# 
   971  000A                     	;# 
   972  000B                     	;# 
   973  000C                     	;# 
   974  000D                     	;# 
   975  000E                     	;# 
   976  0010                     	;# 
   977  0011                     	;# 
   978  0012                     	;# 
   979  0013                     	;# 
   980  0015                     	;# 
   981  0016                     	;# 
   982  0016                     	;# 
   983  0017                     	;# 
   984  0018                     	;# 
   985  0019                     	;# 
   986  001A                     	;# 
   987  001B                     	;# 
   988  001C                     	;# 
   989  001E                     	;# 
   990  001F                     	;# 
   991  008C                     	;# 
   992  008D                     	;# 
   993  008E                     	;# 
   994  0090                     	;# 
   995  0091                     	;# 
   996  0092                     	;# 
   997  0093                     	;# 
   998  0095                     	;# 
   999  0096                     	;# 
  1000  0097                     	;# 
  1001  0098                     	;# 
  1002  0099                     	;# 
  1003  009A                     	;# 
  1004  009B                     	;# 
  1005  009B                     	;# 
  1006  009C                     	;# 
  1007  009D                     	;# 
  1008  009E                     	;# 
  1009  010C                     	;# 
  1010  010D                     	;# 
  1011  010E                     	;# 
  1012  0110                     	;# 
  1013  0111                     	;# 
  1014  0112                     	;# 
  1015  0113                     	;# 
  1016  0114                     	;# 
  1017  0115                     	;# 
  1018  0116                     	;# 
  1019  0117                     	;# 
  1020  0118                     	;# 
  1021  0119                     	;# 
  1022  011A                     	;# 
  1023  011B                     	;# 
  1024  011D                     	;# 
  1025  018C                     	;# 
  1026  018D                     	;# 
  1027  0191                     	;# 
  1028  0191                     	;# 
  1029  0192                     	;# 
  1030  0193                     	;# 
  1031  0193                     	;# 
  1032  0193                     	;# 
  1033  0194                     	;# 
  1034  0195                     	;# 
  1035  0196                     	;# 
  1036  0199                     	;# 
  1037  019A                     	;# 
  1038  019B                     	;# 
  1039  019B                     	;# 
  1040  019B                     	;# 
  1041  019B                     	;# 
  1042  019C                     	;# 
  1043  019C                     	;# 
  1044  019D                     	;# 
  1045  019E                     	;# 
  1046  019F                     	;# 
  1047  020D                     	;# 
  1048  0210                     	;# 
  1049  0211                     	;# 
  1050  0212                     	;# 
  1051  0213                     	;# 
  1052  0214                     	;# 
  1053  0215                     	;# 
  1054  0215                     	;# 
  1055  0216                     	;# 
  1056  0217                     	;# 
  1057  0291                     	;# 
  1058  0291                     	;# 
  1059  0292                     	;# 
  1060  0293                     	;# 
  1061  0294                     	;# 
  1062  0295                     	;# 
  1063  0295                     	;# 
  1064  0296                     	;# 
  1065  0298                     	;# 
  1066  0298                     	;# 
  1067  0299                     	;# 
  1068  029A                     	;# 
  1069  029B                     	;# 
  1070  029C                     	;# 
  1071  029C                     	;# 
  1072  029D                     	;# 
  1073  029E                     	;# 
  1074  029F                     	;# 
  1075  0311                     	;# 
  1076  0311                     	;# 
  1077  0312                     	;# 
  1078  0313                     	;# 
  1079  0314                     	;# 
  1080  0315                     	;# 
  1081  0315                     	;# 
  1082  0316                     	;# 
  1083  0318                     	;# 
  1084  0318                     	;# 
  1085  0319                     	;# 
  1086  031A                     	;# 
  1087  031C                     	;# 
  1088  031C                     	;# 
  1089  031D                     	;# 
  1090  031E                     	;# 
  1091  0394                     	;# 
  1092  0395                     	;# 
  1093  0396                     	;# 
  1094  0415                     	;# 
  1095  0416                     	;# 
  1096  0417                     	;# 
  1097  041C                     	;# 
  1098  041D                     	;# 
  1099  041E                     	;# 
  1100  0791                     	;# 
  1101  0792                     	;# 
  1102  0793                     	;# 
  1103  0794                     	;# 
  1104  0795                     	;# 
  1105  0798                     	;# 
  1106  0799                     	;# 
  1107  07A0                     	;# 
  1108  07A1                     	;# 
  1109  07A3                     	;# 
  1110  07A4                     	;# 
  1111  07A6                     	;# 
  1112  07A7                     	;# 
  1113  07A9                     	;# 
  1114  07AA                     	;# 
  1115  0FE4                     	;# 
  1116  0FE5                     	;# 
  1117  0FE6                     	;# 
  1118  0FE7                     	;# 
  1119  0FE8                     	;# 
  1120  0FE9                     	;# 
  1121  0FEA                     	;# 
  1122  0FEB                     	;# 
  1123  0FED                     	;# 
  1124  0FEE                     	;# 
  1125  0FEF                     	;# 
  1126  0000                     	;# 
  1127  0001                     	;# 
  1128  0002                     	;# 
  1129  0003                     	;# 
  1130  0004                     	;# 
  1131  0005                     	;# 
  1132  0006                     	;# 
  1133  0007                     	;# 
  1134  0008                     	;# 
  1135  0009                     	;# 
  1136  000A                     	;# 
  1137  000B                     	;# 
  1138  000C                     	;# 
  1139  000D                     	;# 
  1140  000E                     	;# 
  1141  0010                     	;# 
  1142  0011                     	;# 
  1143  0012                     	;# 
  1144  0013                     	;# 
  1145  0015                     	;# 
  1146  0016                     	;# 
  1147  0016                     	;# 
  1148  0017                     	;# 
  1149  0018                     	;# 
  1150  0019                     	;# 
  1151  001A                     	;# 
  1152  001B                     	;# 
  1153  001C                     	;# 
  1154  001E                     	;# 
  1155  001F                     	;# 
  1156  008C                     	;# 
  1157  008D                     	;# 
  1158  008E                     	;# 
  1159  0090                     	;# 
  1160  0091                     	;# 
  1161  0092                     	;# 
  1162  0093                     	;# 
  1163  0095                     	;# 
  1164  0096                     	;# 
  1165  0097                     	;# 
  1166  0098                     	;# 
  1167  0099                     	;# 
  1168  009A                     	;# 
  1169  009B                     	;# 
  1170  009B                     	;# 
  1171  009C                     	;# 
  1172  009D                     	;# 
  1173  009E                     	;# 
  1174  010C                     	;# 
  1175  010D                     	;# 
  1176  010E                     	;# 
  1177  0110                     	;# 
  1178  0111                     	;# 
  1179  0112                     	;# 
  1180  0113                     	;# 
  1181  0114                     	;# 
  1182  0115                     	;# 
  1183  0116                     	;# 
  1184  0117                     	;# 
  1185  0118                     	;# 
  1186  0119                     	;# 
  1187  011A                     	;# 
  1188  011B                     	;# 
  1189  011D                     	;# 
  1190  018C                     	;# 
  1191  018D                     	;# 
  1192  0191                     	;# 
  1193  0191                     	;# 
  1194  0192                     	;# 
  1195  0193                     	;# 
  1196  0193                     	;# 
  1197  0193                     	;# 
  1198  0194                     	;# 
  1199  0195                     	;# 
  1200  0196                     	;# 
  1201  0199                     	;# 
  1202  019A                     	;# 
  1203  019B                     	;# 
  1204  019B                     	;# 
  1205  019B                     	;# 
  1206  019B                     	;# 
  1207  019C                     	;# 
  1208  019C                     	;# 
  1209  019D                     	;# 
  1210  019E                     	;# 
  1211  019F                     	;# 
  1212  020D                     	;# 
  1213  0210                     	;# 
  1214  0211                     	;# 
  1215  0212                     	;# 
  1216  0213                     	;# 
  1217  0214                     	;# 
  1218  0215                     	;# 
  1219  0215                     	;# 
  1220  0216                     	;# 
  1221  0217                     	;# 
  1222  0291                     	;# 
  1223  0291                     	;# 
  1224  0292                     	;# 
  1225  0293                     	;# 
  1226  0294                     	;# 
  1227  0295                     	;# 
  1228  0295                     	;# 
  1229  0296                     	;# 
  1230  0298                     	;# 
  1231  0298                     	;# 
  1232  0299                     	;# 
  1233  029A                     	;# 
  1234  029B                     	;# 
  1235  029C                     	;# 
  1236  029C                     	;# 
  1237  029D                     	;# 
  1238  029E                     	;# 
  1239  029F                     	;# 
  1240  0311                     	;# 
  1241  0311                     	;# 
  1242  0312                     	;# 
  1243  0313                     	;# 
  1244  0314                     	;# 
  1245  0315                     	;# 
  1246  0315                     	;# 
  1247  0316                     	;# 
  1248  0318                     	;# 
  1249  0318                     	;# 
  1250  0319                     	;# 
  1251  031A                     	;# 
  1252  031C                     	;# 
  1253  031C                     	;# 
  1254  031D                     	;# 
  1255  031E                     	;# 
  1256  0394                     	;# 
  1257  0395                     	;# 
  1258  0396                     	;# 
  1259  0415                     	;# 
  1260  0416                     	;# 
  1261  0417                     	;# 
  1262  041C                     	;# 
  1263  041D                     	;# 
  1264  041E                     	;# 
  1265  0791                     	;# 
  1266  0792                     	;# 
  1267  0793                     	;# 
  1268  0794                     	;# 
  1269  0795                     	;# 
  1270  0798                     	;# 
  1271  0799                     	;# 
  1272  07A0                     	;# 
  1273  07A1                     	;# 
  1274  07A3                     	;# 
  1275  07A4                     	;# 
  1276  07A6                     	;# 
  1277  07A7                     	;# 
  1278  07A9                     	;# 
  1279  07AA                     	;# 
  1280  0FE4                     	;# 
  1281  0FE5                     	;# 
  1282  0FE6                     	;# 
  1283  0FE7                     	;# 
  1284  0FE8                     	;# 
  1285  0FE9                     	;# 
  1286  0FEA                     	;# 
  1287  0FEB                     	;# 
  1288  0FED                     	;# 
  1289  0FEE                     	;# 
  1290  0FEF                     	;# 
  1291  0000                     	;# 
  1292  0001                     	;# 
  1293  0002                     	;# 
  1294  0003                     	;# 
  1295  0004                     	;# 
  1296  0005                     	;# 
  1297  0006                     	;# 
  1298  0007                     	;# 
  1299  0008                     	;# 
  1300  0009                     	;# 
  1301  000A                     	;# 
  1302  000B                     	;# 
  1303  000C                     	;# 
  1304  000D                     	;# 
  1305  000E                     	;# 
  1306  0010                     	;# 
  1307  0011                     	;# 
  1308  0012                     	;# 
  1309  0013                     	;# 
  1310  0015                     	;# 
  1311  0016                     	;# 
  1312  0016                     	;# 
  1313  0017                     	;# 
  1314  0018                     	;# 
  1315  0019                     	;# 
  1316  001A                     	;# 
  1317  001B                     	;# 
  1318  001C                     	;# 
  1319  001E                     	;# 
  1320  001F                     	;# 
  1321  008C                     	;# 
  1322  008D                     	;# 
  1323  008E                     	;# 
  1324  0090                     	;# 
  1325  0091                     	;# 
  1326  0092                     	;# 
  1327  0093                     	;# 
  1328  0095                     	;# 
  1329  0096                     	;# 
  1330  0097                     	;# 
  1331  0098                     	;# 
  1332  0099                     	;# 
  1333  009A                     	;# 
  1334  009B                     	;# 
  1335  009B                     	;# 
  1336  009C                     	;# 
  1337  009D                     	;# 
  1338  009E                     	;# 
  1339  010C                     	;# 
  1340  010D                     	;# 
  1341  010E                     	;# 
  1342  0110                     	;# 
  1343  0111                     	;# 
  1344  0112                     	;# 
  1345  0113                     	;# 
  1346  0114                     	;# 
  1347  0115                     	;# 
  1348  0116                     	;# 
  1349  0117                     	;# 
  1350  0118                     	;# 
  1351  0119                     	;# 
  1352  011A                     	;# 
  1353  011B                     	;# 
  1354  011D                     	;# 
  1355  018C                     	;# 
  1356  018D                     	;# 
  1357  0191                     	;# 
  1358  0191                     	;# 
  1359  0192                     	;# 
  1360  0193                     	;# 
  1361  0193                     	;# 
  1362  0193                     	;# 
  1363  0194                     	;# 
  1364  0195                     	;# 
  1365  0196                     	;# 
  1366  0199                     	;# 
  1367  019A                     	;# 
  1368  019B                     	;# 
  1369  019B                     	;# 
  1370  019B                     	;# 
  1371  019B                     	;# 
  1372  019C                     	;# 
  1373  019C                     	;# 
  1374  019D                     	;# 
  1375  019E                     	;# 
  1376  019F                     	;# 
  1377  020D                     	;# 
  1378  0210                     	;# 
  1379  0211                     	;# 
  1380  0212                     	;# 
  1381  0213                     	;# 
  1382  0214                     	;# 
  1383  0215                     	;# 
  1384  0215                     	;# 
  1385  0216                     	;# 
  1386  0217                     	;# 
  1387  0291                     	;# 
  1388  0291                     	;# 
  1389  0292                     	;# 
  1390  0293                     	;# 
  1391  0294                     	;# 
  1392  0295                     	;# 
  1393  0295                     	;# 
  1394  0296                     	;# 
  1395  0298                     	;# 
  1396  0298                     	;# 
  1397  0299                     	;# 
  1398  029A                     	;# 
  1399  029B                     	;# 
  1400  029C                     	;# 
  1401  029C                     	;# 
  1402  029D                     	;# 
  1403  029E                     	;# 
  1404  029F                     	;# 
  1405  0311                     	;# 
  1406  0311                     	;# 
  1407  0312                     	;# 
  1408  0313                     	;# 
  1409  0314                     	;# 
  1410  0315                     	;# 
  1411  0315                     	;# 
  1412  0316                     	;# 
  1413  0318                     	;# 
  1414  0318                     	;# 
  1415  0319                     	;# 
  1416  031A                     	;# 
  1417  031C                     	;# 
  1418  031C                     	;# 
  1419  031D                     	;# 
  1420  031E                     	;# 
  1421  0394                     	;# 
  1422  0395                     	;# 
  1423  0396                     	;# 
  1424  0415                     	;# 
  1425  0416                     	;# 
  1426  0417                     	;# 
  1427  041C                     	;# 
  1428  041D                     	;# 
  1429  041E                     	;# 
  1430  0791                     	;# 
  1431  0792                     	;# 
  1432  0793                     	;# 
  1433  0794                     	;# 
  1434  0795                     	;# 
  1435  0798                     	;# 
  1436  0799                     	;# 
  1437  07A0                     	;# 
  1438  07A1                     	;# 
  1439  07A3                     	;# 
  1440  07A4                     	;# 
  1441  07A6                     	;# 
  1442  07A7                     	;# 
  1443  07A9                     	;# 
  1444  07AA                     	;# 
  1445  0FE4                     	;# 
  1446  0FE5                     	;# 
  1447  0FE6                     	;# 
  1448  0FE7                     	;# 
  1449  0FE8                     	;# 
  1450  0FE9                     	;# 
  1451  0FEA                     	;# 
  1452  0FEB                     	;# 
  1453  0FED                     	;# 
  1454  0FEE                     	;# 
  1455  0FEF                     	;# 
  1456  0000                     	;# 
  1457  0001                     	;# 
  1458  0002                     	;# 
  1459  0003                     	;# 
  1460  0004                     	;# 
  1461  0005                     	;# 
  1462  0006                     	;# 
  1463  0007                     	;# 
  1464  0008                     	;# 
  1465  0009                     	;# 
  1466  000A                     	;# 
  1467  000B                     	;# 
  1468  000C                     	;# 
  1469  000D                     	;# 
  1470  000E                     	;# 
  1471  0010                     	;# 
  1472  0011                     	;# 
  1473  0012                     	;# 
  1474  0013                     	;# 
  1475  0015                     	;# 
  1476  0016                     	;# 
  1477  0016                     	;# 
  1478  0017                     	;# 
  1479  0018                     	;# 
  1480  0019                     	;# 
  1481  001A                     	;# 
  1482  001B                     	;# 
  1483  001C                     	;# 
  1484  001E                     	;# 
  1485  001F                     	;# 
  1486  008C                     	;# 
  1487  008D                     	;# 
  1488  008E                     	;# 
  1489  0090                     	;# 
  1490  0091                     	;# 
  1491  0092                     	;# 
  1492  0093                     	;# 
  1493  0095                     	;# 
  1494  0096                     	;# 
  1495  0097                     	;# 
  1496  0098                     	;# 
  1497  0099                     	;# 
  1498  009A                     	;# 
  1499  009B                     	;# 
  1500  009B                     	;# 
  1501  009C                     	;# 
  1502  009D                     	;# 
  1503  009E                     	;# 
  1504  010C                     	;# 
  1505  010D                     	;# 
  1506  010E                     	;# 
  1507  0110                     	;# 
  1508  0111                     	;# 
  1509  0112                     	;# 
  1510  0113                     	;# 
  1511  0114                     	;# 
  1512  0115                     	;# 
  1513  0116                     	;# 
  1514  0117                     	;# 
  1515  0118                     	;# 
  1516  0119                     	;# 
  1517  011A                     	;# 
  1518  011B                     	;# 
  1519  011D                     	;# 
  1520  018C                     	;# 
  1521  018D                     	;# 
  1522  0191                     	;# 
  1523  0191                     	;# 
  1524  0192                     	;# 
  1525  0193                     	;# 
  1526  0193                     	;# 
  1527  0193                     	;# 
  1528  0194                     	;# 
  1529  0195                     	;# 
  1530  0196                     	;# 
  1531  0199                     	;# 
  1532  019A                     	;# 
  1533  019B                     	;# 
  1534  019B                     	;# 
  1535  019B                     	;# 
  1536  019B                     	;# 
  1537  019C                     	;# 
  1538  019C                     	;# 
  1539  019D                     	;# 
  1540  019E                     	;# 
  1541  019F                     	;# 
  1542  020D                     	;# 
  1543  0210                     	;# 
  1544  0211                     	;# 
  1545  0212                     	;# 
  1546  0213                     	;# 
  1547  0214                     	;# 
  1548  0215                     	;# 
  1549  0215                     	;# 
  1550  0216                     	;# 
  1551  0217                     	;# 
  1552  0291                     	;# 
  1553  0291                     	;# 
  1554  0292                     	;# 
  1555  0293                     	;# 
  1556  0294                     	;# 
  1557  0295                     	;# 
  1558  0295                     	;# 
  1559  0296                     	;# 
  1560  0298                     	;# 
  1561  0298                     	;# 
  1562  0299                     	;# 
  1563  029A                     	;# 
  1564  029B                     	;# 
  1565  029C                     	;# 
  1566  029C                     	;# 
  1567  029D                     	;# 
  1568  029E                     	;# 
  1569  029F                     	;# 
  1570  0311                     	;# 
  1571  0311                     	;# 
  1572  0312                     	;# 
  1573  0313                     	;# 
  1574  0314                     	;# 
  1575  0315                     	;# 
  1576  0315                     	;# 
  1577  0316                     	;# 
  1578  0318                     	;# 
  1579  0318                     	;# 
  1580  0319                     	;# 
  1581  031A                     	;# 
  1582  031C                     	;# 
  1583  031C                     	;# 
  1584  031D                     	;# 
  1585  031E                     	;# 
  1586  0394                     	;# 
  1587  0395                     	;# 
  1588  0396                     	;# 
  1589  0415                     	;# 
  1590  0416                     	;# 
  1591  0417                     	;# 
  1592  041C                     	;# 
  1593  041D                     	;# 
  1594  041E                     	;# 
  1595  0791                     	;# 
  1596  0792                     	;# 
  1597  0793                     	;# 
  1598  0794                     	;# 
  1599  0795                     	;# 
  1600  0798                     	;# 
  1601  0799                     	;# 
  1602  07A0                     	;# 
  1603  07A1                     	;# 
  1604  07A3                     	;# 
  1605  07A4                     	;# 
  1606  07A6                     	;# 
  1607  07A7                     	;# 
  1608  07A9                     	;# 
  1609  07AA                     	;# 
  1610  0FE4                     	;# 
  1611  0FE5                     	;# 
  1612  0FE6                     	;# 
  1613  0FE7                     	;# 
  1614  0FE8                     	;# 
  1615  0FE9                     	;# 
  1616  0FEA                     	;# 
  1617  0FEB                     	;# 
  1618  0FED                     	;# 
  1619  0FEE                     	;# 
  1620  0FEF                     	;# 
  1621  0000                     	;# 
  1622  0001                     	;# 
  1623  0002                     	;# 
  1624  0003                     	;# 
  1625  0004                     	;# 
  1626  0005                     	;# 
  1627  0006                     	;# 
  1628  0007                     	;# 
  1629  0008                     	;# 
  1630  0009                     	;# 
  1631  000A                     	;# 
  1632  000B                     	;# 
  1633  000C                     	;# 
  1634  000D                     	;# 
  1635  000E                     	;# 
  1636  0010                     	;# 
  1637  0011                     	;# 
  1638  0012                     	;# 
  1639  0013                     	;# 
  1640  0015                     	;# 
  1641  0016                     	;# 
  1642  0016                     	;# 
  1643  0017                     	;# 
  1644  0018                     	;# 
  1645  0019                     	;# 
  1646  001A                     	;# 
  1647  001B                     	;# 
  1648  001C                     	;# 
  1649  001E                     	;# 
  1650  001F                     	;# 
  1651  008C                     	;# 
  1652  008D                     	;# 
  1653  008E                     	;# 
  1654  0090                     	;# 
  1655  0091                     	;# 
  1656  0092                     	;# 
  1657  0093                     	;# 
  1658  0095                     	;# 
  1659  0096                     	;# 
  1660  0097                     	;# 
  1661  0098                     	;# 
  1662  0099                     	;# 
  1663  009A                     	;# 
  1664  009B                     	;# 
  1665  009B                     	;# 
  1666  009C                     	;# 
  1667  009D                     	;# 
  1668  009E                     	;# 
  1669  010C                     	;# 
  1670  010D                     	;# 
  1671  010E                     	;# 
  1672  0110                     	;# 
  1673  0111                     	;# 
  1674  0112                     	;# 
  1675  0113                     	;# 
  1676  0114                     	;# 
  1677  0115                     	;# 
  1678  0116                     	;# 
  1679  0117                     	;# 
  1680  0118                     	;# 
  1681  0119                     	;# 
  1682  011A                     	;# 
  1683  011B                     	;# 
  1684  011D                     	;# 
  1685  018C                     	;# 
  1686  018D                     	;# 
  1687  0191                     	;# 
  1688  0191                     	;# 
  1689  0192                     	;# 
  1690  0193                     	;# 
  1691  0193                     	;# 
  1692  0193                     	;# 
  1693  0194                     	;# 
  1694  0195                     	;# 
  1695  0196                     	;# 
  1696  0199                     	;# 
  1697  019A                     	;# 
  1698  019B                     	;# 
  1699  019B                     	;# 
  1700  019B                     	;# 
  1701  019B                     	;# 
  1702  019C                     	;# 
  1703  019C                     	;# 
  1704  019D                     	;# 
  1705  019E                     	;# 
  1706  019F                     	;# 
  1707  020D                     	;# 
  1708  0210                     	;# 
  1709  0211                     	;# 
  1710  0212                     	;# 
  1711  0213                     	;# 
  1712  0214                     	;# 
  1713  0215                     	;# 
  1714  0215                     	;# 
  1715  0216                     	;# 
  1716  0217                     	;# 
  1717  0291                     	;# 
  1718  0291                     	;# 
  1719  0292                     	;# 
  1720  0293                     	;# 
  1721  0294                     	;# 
  1722  0295                     	;# 
  1723  0295                     	;# 
  1724  0296                     	;# 
  1725  0298                     	;# 
  1726  0298                     	;# 
  1727  0299                     	;# 
  1728  029A                     	;# 
  1729  029B                     	;# 
  1730  029C                     	;# 
  1731  029C                     	;# 
  1732  029D                     	;# 
  1733  029E                     	;# 
  1734  029F                     	;# 
  1735  0311                     	;# 
  1736  0311                     	;# 
  1737  0312                     	;# 
  1738  0313                     	;# 
  1739  0314                     	;# 
  1740  0315                     	;# 
  1741  0315                     	;# 
  1742  0316                     	;# 
  1743  0318                     	;# 
  1744  0318                     	;# 
  1745  0319                     	;# 
  1746  031A                     	;# 
  1747  031C                     	;# 
  1748  031C                     	;# 
  1749  031D                     	;# 
  1750  031E                     	;# 
  1751  0394                     	;# 
  1752  0395                     	;# 
  1753  0396                     	;# 
  1754  0415                     	;# 
  1755  0416                     	;# 
  1756  0417                     	;# 
  1757  041C                     	;# 
  1758  041D                     	;# 
  1759  041E                     	;# 
  1760  0791                     	;# 
  1761  0792                     	;# 
  1762  0793                     	;# 
  1763  0794                     	;# 
  1764  0795                     	;# 
  1765  0798                     	;# 
  1766  0799                     	;# 
  1767  07A0                     	;# 
  1768  07A1                     	;# 
  1769  07A3                     	;# 
  1770  07A4                     	;# 
  1771  07A6                     	;# 
  1772  07A7                     	;# 
  1773  07A9                     	;# 
  1774  07AA                     	;# 
  1775  0FE4                     	;# 
  1776  0FE5                     	;# 
  1777  0FE6                     	;# 
  1778  0FE7                     	;# 
  1779  0FE8                     	;# 
  1780  0FE9                     	;# 
  1781  0FEA                     	;# 
  1782  0FEB                     	;# 
  1783  0FED                     	;# 
  1784  0FEE                     	;# 
  1785  0FEF                     	;# 
  1786  0000                     	;# 
  1787  0001                     	;# 
  1788  0002                     	;# 
  1789  0003                     	;# 
  1790  0004                     	;# 
  1791  0005                     	;# 
  1792  0006                     	;# 
  1793  0007                     	;# 
  1794  0008                     	;# 
  1795  0009                     	;# 
  1796  000A                     	;# 
  1797  000B                     	;# 
  1798  000C                     	;# 
  1799  000D                     	;# 
  1800  000E                     	;# 
  1801  0010                     	;# 
  1802  0011                     	;# 
  1803  0012                     	;# 
  1804  0013                     	;# 
  1805  0015                     	;# 
  1806  0016                     	;# 
  1807  0016                     	;# 
  1808  0017                     	;# 
  1809  0018                     	;# 
  1810  0019                     	;# 
  1811  001A                     	;# 
  1812  001B                     	;# 
  1813  001C                     	;# 
  1814  001E                     	;# 
  1815  001F                     	;# 
  1816  008C                     	;# 
  1817  008D                     	;# 
  1818  008E                     	;# 
  1819  0090                     	;# 
  1820  0091                     	;# 
  1821  0092                     	;# 
  1822  0093                     	;# 
  1823  0095                     	;# 
  1824  0096                     	;# 
  1825  0097                     	;# 
  1826  0098                     	;# 
  1827  0099                     	;# 
  1828  009A                     	;# 
  1829  009B                     	;# 
  1830  009B                     	;# 
  1831  009C                     	;# 
  1832  009D                     	;# 
  1833  009E                     	;# 
  1834  010C                     	;# 
  1835  010D                     	;# 
  1836  010E                     	;# 
  1837  0110                     	;# 
  1838  0111                     	;# 
  1839  0112                     	;# 
  1840  0113                     	;# 
  1841  0114                     	;# 
  1842  0115                     	;# 
  1843  0116                     	;# 
  1844  0117                     	;# 
  1845  0118                     	;# 
  1846  0119                     	;# 
  1847  011A                     	;# 
  1848  011B                     	;# 
  1849  011D                     	;# 
  1850  018C                     	;# 
  1851  018D                     	;# 
  1852  0191                     	;# 
  1853  0191                     	;# 
  1854  0192                     	;# 
  1855  0193                     	;# 
  1856  0193                     	;# 
  1857  0193                     	;# 
  1858  0194                     	;# 
  1859  0195                     	;# 
  1860  0196                     	;# 
  1861  0199                     	;# 
  1862  019A                     	;# 
  1863  019B                     	;# 
  1864  019B                     	;# 
  1865  019B                     	;# 
  1866  019B                     	;# 
  1867  019C                     	;# 
  1868  019C                     	;# 
  1869  019D                     	;# 
  1870  019E                     	;# 
  1871  019F                     	;# 
  1872  020D                     	;# 
  1873  0210                     	;# 
  1874  0211                     	;# 
  1875  0212                     	;# 
  1876  0213                     	;# 
  1877  0214                     	;# 
  1878  0215                     	;# 
  1879  0215                     	;# 
  1880  0216                     	;# 
  1881  0217                     	;# 
  1882  0291                     	;# 
  1883  0291                     	;# 
  1884  0292                     	;# 
  1885  0293                     	;# 
  1886  0294                     	;# 
  1887  0295                     	;# 
  1888  0295                     	;# 
  1889  0296                     	;# 
  1890  0298                     	;# 
  1891  0298                     	;# 
  1892  0299                     	;# 
  1893  029A                     	;# 
  1894  029B                     	;# 
  1895  029C                     	;# 
  1896  029C                     	;# 
  1897  029D                     	;# 
  1898  029E                     	;# 
  1899  029F                     	;# 
  1900  0311                     	;# 
  1901  0311                     	;# 
  1902  0312                     	;# 
  1903  0313                     	;# 
  1904  0314                     	;# 
  1905  0315                     	;# 
  1906  0315                     	;# 
  1907  0316                     	;# 
  1908  0318                     	;# 
  1909  0318                     	;# 
  1910  0319                     	;# 
  1911  031A                     	;# 
  1912  031C                     	;# 
  1913  031C                     	;# 
  1914  031D                     	;# 
  1915  031E                     	;# 
  1916  0394                     	;# 
  1917  0395                     	;# 
  1918  0396                     	;# 
  1919  0415                     	;# 
  1920  0416                     	;# 
  1921  0417                     	;# 
  1922  041C                     	;# 
  1923  041D                     	;# 
  1924  041E                     	;# 
  1925  0791                     	;# 
  1926  0792                     	;# 
  1927  0793                     	;# 
  1928  0794                     	;# 
  1929  0795                     	;# 
  1930  0798                     	;# 
  1931  0799                     	;# 
  1932  07A0                     	;# 
  1933  07A1                     	;# 
  1934  07A3                     	;# 
  1935  07A4                     	;# 
  1936  07A6                     	;# 
  1937  07A7                     	;# 
  1938  07A9                     	;# 
  1939  07AA                     	;# 
  1940  0FE4                     	;# 
  1941  0FE5                     	;# 
  1942  0FE6                     	;# 
  1943  0FE7                     	;# 
  1944  0FE8                     	;# 
  1945  0FE9                     	;# 
  1946  0FEA                     	;# 
  1947  0FEB                     	;# 
  1948  0FED                     	;# 
  1949  0FEE                     	;# 
  1950  0FEF                     	;# 
  1951  0000                     	;# 
  1952  0001                     	;# 
  1953  0002                     	;# 
  1954  0003                     	;# 
  1955  0004                     	;# 
  1956  0005                     	;# 
  1957  0006                     	;# 
  1958  0007                     	;# 
  1959  0008                     	;# 
  1960  0009                     	;# 
  1961  000A                     	;# 
  1962  000B                     	;# 
  1963  000C                     	;# 
  1964  000D                     	;# 
  1965  000E                     	;# 
  1966  0010                     	;# 
  1967  0011                     	;# 
  1968  0012                     	;# 
  1969  0013                     	;# 
  1970  0015                     	;# 
  1971  0016                     	;# 
  1972  0016                     	;# 
  1973  0017                     	;# 
  1974  0018                     	;# 
  1975  0019                     	;# 
  1976  001A                     	;# 
  1977  001B                     	;# 
  1978  001C                     	;# 
  1979  001E                     	;# 
  1980  001F                     	;# 
  1981  008C                     	;# 
  1982  008D                     	;# 
  1983  008E                     	;# 
  1984  0090                     	;# 
  1985  0091                     	;# 
  1986  0092                     	;# 
  1987  0093                     	;# 
  1988  0095                     	;# 
  1989  0096                     	;# 
  1990  0097                     	;# 
  1991  0098                     	;# 
  1992  0099                     	;# 
  1993  009A                     	;# 
  1994  009B                     	;# 
  1995  009B                     	;# 
  1996  009C                     	;# 
  1997  009D                     	;# 
  1998  009E                     	;# 
  1999  010C                     	;# 
  2000  010D                     	;# 
  2001  010E                     	;# 
  2002  0110                     	;# 
  2003  0111                     	;# 
  2004  0112                     	;# 
  2005  0113                     	;# 
  2006  0114                     	;# 
  2007  0115                     	;# 
  2008  0116                     	;# 
  2009  0117                     	;# 
  2010  0118                     	;# 
  2011  0119                     	;# 
  2012  011A                     	;# 
  2013  011B                     	;# 
  2014  011D                     	;# 
  2015  018C                     	;# 
  2016  018D                     	;# 
  2017  0191                     	;# 
  2018  0191                     	;# 
  2019  0192                     	;# 
  2020  0193                     	;# 
  2021  0193                     	;# 
  2022  0193                     	;# 
  2023  0194                     	;# 
  2024  0195                     	;# 
  2025  0196                     	;# 
  2026  0199                     	;# 
  2027  019A                     	;# 
  2028  019B                     	;# 
  2029  019B                     	;# 
  2030  019B                     	;# 
  2031  019B                     	;# 
  2032  019C                     	;# 
  2033  019C                     	;# 
  2034  019D                     	;# 
  2035  019E                     	;# 
  2036  019F                     	;# 
  2037  020D                     	;# 
  2038  0210                     	;# 
  2039  0211                     	;# 
  2040  0212                     	;# 
  2041  0213                     	;# 
  2042  0214                     	;# 
  2043  0215                     	;# 
  2044  0215                     	;# 
  2045  0216                     	;# 
  2046  0217                     	;# 
  2047  0291                     	;# 
  2048  0291                     	;# 
  2049  0292                     	;# 
  2050  0293                     	;# 
  2051  0294                     	;# 
  2052  0295                     	;# 
  2053  0295                     	;# 
  2054  0296                     	;# 
  2055  0298                     	;# 
  2056  0298                     	;# 
  2057  0299                     	;# 
  2058  029A                     	;# 
  2059  029B                     	;# 
  2060  029C                     	;# 
  2061  029C                     	;# 
  2062  029D                     	;# 
  2063  029E                     	;# 
  2064  029F                     	;# 
  2065  0311                     	;# 
  2066  0311                     	;# 
  2067  0312                     	;# 
  2068  0313                     	;# 
  2069  0314                     	;# 
  2070  0315                     	;# 
  2071  0315                     	;# 
  2072  0316                     	;# 
  2073  0318                     	;# 
  2074  0318                     	;# 
  2075  0319                     	;# 
  2076  031A                     	;# 
  2077  031C                     	;# 
  2078  031C                     	;# 
  2079  031D                     	;# 
  2080  031E                     	;# 
  2081  0394                     	;# 
  2082  0395                     	;# 
  2083  0396                     	;# 
  2084  0415                     	;# 
  2085  0416                     	;# 
  2086  0417                     	;# 
  2087  041C                     	;# 
  2088  041D                     	;# 
  2089  041E                     	;# 
  2090  0791                     	;# 
  2091  0792                     	;# 
  2092  0793                     	;# 
  2093  0794                     	;# 
  2094  0795                     	;# 
  2095  0798                     	;# 
  2096  0799                     	;# 
  2097  07A0                     	;# 
  2098  07A1                     	;# 
  2099  07A3                     	;# 
  2100  07A4                     	;# 
  2101  07A6                     	;# 
  2102  07A7                     	;# 
  2103  07A9                     	;# 
  2104  07AA                     	;# 
  2105  0FE4                     	;# 
  2106  0FE5                     	;# 
  2107  0FE6                     	;# 
  2108  0FE7                     	;# 
  2109  0FE8                     	;# 
  2110  0FE9                     	;# 
  2111  0FEA                     	;# 
  2112  0FEB                     	;# 
  2113  0FED                     	;# 
  2114  0FEE                     	;# 
  2115  0FEF                     	;# 
  2116  0000                     	;# 
  2117  0001                     	;# 
  2118  0002                     	;# 
  2119  0003                     	;# 
  2120  0004                     	;# 
  2121  0005                     	;# 
  2122  0006                     	;# 
  2123  0007                     	;# 
  2124  0008                     	;# 
  2125  0009                     	;# 
  2126  000A                     	;# 
  2127  000B                     	;# 
  2128  000C                     	;# 
  2129  000D                     	;# 
  2130  000E                     	;# 
  2131  0010                     	;# 
  2132  0011                     	;# 
  2133  0012                     	;# 
  2134  0013                     	;# 
  2135  0015                     	;# 
  2136  0016                     	;# 
  2137  0016                     	;# 
  2138  0017                     	;# 
  2139  0018                     	;# 
  2140  0019                     	;# 
  2141  001A                     	;# 
  2142  001B                     	;# 
  2143  001C                     	;# 
  2144  001E                     	;# 
  2145  001F                     	;# 
  2146  008C                     	;# 
  2147  008D                     	;# 
  2148  008E                     	;# 
  2149  0090                     	;# 
  2150  0091                     	;# 
  2151  0092                     	;# 
  2152  0093                     	;# 
  2153  0095                     	;# 
  2154  0096                     	;# 
  2155  0097                     	;# 
  2156  0098                     	;# 
  2157  0099                     	;# 
  2158  009A                     	;# 
  2159  009B                     	;# 
  2160  009B                     	;# 
  2161  009C                     	;# 
  2162  009D                     	;# 
  2163  009E                     	;# 
  2164  010C                     	;# 
  2165  010D                     	;# 
  2166  010E                     	;# 
  2167  0110                     	;# 
  2168  0111                     	;# 
  2169  0112                     	;# 
  2170  0113                     	;# 
  2171  0114                     	;# 
  2172  0115                     	;# 
  2173  0116                     	;# 
  2174  0117                     	;# 
  2175  0118                     	;# 
  2176  0119                     	;# 
  2177  011A                     	;# 
  2178  011B                     	;# 
  2179  011D                     	;# 
  2180  018C                     	;# 
  2181  018D                     	;# 
  2182  0191                     	;# 
  2183  0191                     	;# 
  2184  0192                     	;# 
  2185  0193                     	;# 
  2186  0193                     	;# 
  2187  0193                     	;# 
  2188  0194                     	;# 
  2189  0195                     	;# 
  2190  0196                     	;# 
  2191  0199                     	;# 
  2192  019A                     	;# 
  2193  019B                     	;# 
  2194  019B                     	;# 
  2195  019B                     	;# 
  2196  019B                     	;# 
  2197  019C                     	;# 
  2198  019C                     	;# 
  2199  019D                     	;# 
  2200  019E                     	;# 
  2201  019F                     	;# 
  2202  020D                     	;# 
  2203  0210                     	;# 
  2204  0211                     	;# 
  2205  0212                     	;# 
  2206  0213                     	;# 
  2207  0214                     	;# 
  2208  0215                     	;# 
  2209  0215                     	;# 
  2210  0216                     	;# 
  2211  0217                     	;# 
  2212  0291                     	;# 
  2213  0291                     	;# 
  2214  0292                     	;# 
  2215  0293                     	;# 
  2216  0294                     	;# 
  2217  0295                     	;# 
  2218  0295                     	;# 
  2219  0296                     	;# 
  2220  0298                     	;# 
  2221  0298                     	;# 
  2222  0299                     	;# 
  2223  029A                     	;# 
  2224  029B                     	;# 
  2225  029C                     	;# 
  2226  029C                     	;# 
  2227  029D                     	;# 
  2228  029E                     	;# 
  2229  029F                     	;# 
  2230  0311                     	;# 
  2231  0311                     	;# 
  2232  0312                     	;# 
  2233  0313                     	;# 
  2234  0314                     	;# 
  2235  0315                     	;# 
  2236  0315                     	;# 
  2237  0316                     	;# 
  2238  0318                     	;# 
  2239  0318                     	;# 
  2240  0319                     	;# 
  2241  031A                     	;# 
  2242  031C                     	;# 
  2243  031C                     	;# 
  2244  031D                     	;# 
  2245  031E                     	;# 
  2246  0394                     	;# 
  2247  0395                     	;# 
  2248  0396                     	;# 
  2249  0415                     	;# 
  2250  0416                     	;# 
  2251  0417                     	;# 
  2252  041C                     	;# 
  2253  041D                     	;# 
  2254  041E                     	;# 
  2255  0791                     	;# 
  2256  0792                     	;# 
  2257  0793                     	;# 
  2258  0794                     	;# 
  2259  0795                     	;# 
  2260  0798                     	;# 
  2261  0799                     	;# 
  2262  07A0                     	;# 
  2263  07A1                     	;# 
  2264  07A3                     	;# 
  2265  07A4                     	;# 
  2266  07A6                     	;# 
  2267  07A7                     	;# 
  2268  07A9                     	;# 
  2269  07AA                     	;# 
  2270  0FE4                     	;# 
  2271  0FE5                     	;# 
  2272  0FE6                     	;# 
  2273  0FE7                     	;# 
  2274  0FE8                     	;# 
  2275  0FE9                     	;# 
  2276  0FEA                     	;# 
  2277  0FEB                     	;# 
  2278  0FED                     	;# 
  2279  0FEE                     	;# 
  2280  0FEF                     	;# 
  2281                           
  2282 ;; Function _EUSART_DefaultFramingErrorHandler is unused but had its address taken
  2283  0000                     
  2284 ;; Function _EUSART_DefaultOverrunErrorHandler is unused but had its address taken
  2285  0000                     
  2286 ;; Function _EUSART_DefaultErrorHandler is unused but had its address taken
  2287  0000                     
  2288                           	psect	idataBANK0
  2289  0FE6                     __pidataBANK0:
  2290                           
  2291                           ;initializer for _Button_StateMachine
  2292  0FE6  34D6               	retlw	low _Button_State_Initializing
  2293  0FE7  3402               	retlw	high _Button_State_Initializing
  2294  0FE8  34D2               	retlw	low _Button_State_NotPressed
  2295  0FE9  3400               	retlw	high _Button_State_NotPressed
  2296  0FEA  3432               	retlw	low _Button_State_PressDebounce
  2297  0FEB  3403               	retlw	high _Button_State_PressDebounce
  2298  0FEC  34E2               	retlw	low _Button_State_Pressed
  2299  0FED  3403               	retlw	high _Button_State_Pressed
  2300  0FEE  346B               	retlw	low _Button_State_ReleaseDebounce
  2301  0FEF  3402               	retlw	high _Button_State_ReleaseDebounce
  2302  0FF0  34D4               	retlw	low _Button_State_Suspended
  2303  0FF1  340E               	retlw	high _Button_State_Suspended
  2304  0FF2  3499               	retlw	low _Button_State_Disabled
  2305  0FF3  340D               	retlw	high _Button_State_Disabled
  2306                           
  2307                           ;initializer for _callback_notPressed
  2308  0FF4  3498               	retlw	low _Button_DefaultCallback
  2309  0FF5  340D               	retlw	high _Button_DefaultCallback
  2310                           
  2311                           ;initializer for _callback_pressed
  2312  0FF6  3498               	retlw	low _Button_DefaultCallback
  2313  0FF7  340D               	retlw	high _Button_DefaultCallback
  2314                           
  2315                           ;initializer for _Sensor_scanB
  2316  0FF8  34EC               	retlw	low _MTOUCH_CVD_ScanB_0
  2317  0FF9  3406               	retlw	high _MTOUCH_CVD_ScanB_0
  2318                           
  2319                           ;initializer for _Sensor_scanA
  2320  0FFA  344F               	retlw	low _MTOUCH_CVD_ScanA_0
  2321  0FFB  3407               	retlw	high _MTOUCH_CVD_ScanA_0
  2322                           
  2323                           ;initializer for _callback_sampled
  2324  0FFC  34FF               	retlw	low _Sensor_DefaultCallback
  2325  0FFD  3407               	retlw	high _Sensor_DefaultCallback
  2326                           
  2327                           ;initializer for _mTouchScanReload
  2328  0FFE  34BF               	retlw	191
  2329  0FFF  3463               	retlw	99
  2330                           
  2331                           	psect	idataBANK1
  2332  07D0                     __pidataBANK1:
  2333                           
  2334                           ;initializer for _mtouch_sensor
  2335  07D0  3400               	retlw	0
  2336  07D1  344F               	retlw	low _MTOUCH_CVD_ScanA_0
  2337  07D2  3407               	retlw	high _MTOUCH_CVD_ScanA_0
  2338  07D3  34EC               	retlw	low _MTOUCH_CVD_ScanB_0
  2339  07D4  3406               	retlw	high _MTOUCH_CVD_ScanB_0
  2340  07D5  3420               	retlw	32
  2341  07D6  3400               	retlw	0
  2342  07D7  3400               	retlw	0
  2343  07D8  3400               	retlw	0
  2344  07D9  3401               	retlw	1
  2345  07DA  342E               	retlw	low _MTOUCH_CVD_ScanA_1
  2346  07DB  3407               	retlw	high _MTOUCH_CVD_ScanA_1
  2347  07DC  34CB               	retlw	low _MTOUCH_CVD_ScanB_1
  2348  07DD  3406               	retlw	high _MTOUCH_CVD_ScanB_1
  2349  07DE  3420               	retlw	32
  2350  07DF  3400               	retlw	0
  2351  07E0  3400               	retlw	0
  2352  07E1  3400               	retlw	0
  2353  07E2  3402               	retlw	2
  2354  07E3  3470               	retlw	low _MTOUCH_CVD_ScanA_2
  2355  07E4  3407               	retlw	high _MTOUCH_CVD_ScanA_2
  2356  07E5  340D               	retlw	low _MTOUCH_CVD_ScanB_2
  2357  07E6  3407               	retlw	high _MTOUCH_CVD_ScanB_2
  2358  07E7  3420               	retlw	32
  2359  07E8  3400               	retlw	0
  2360  07E9  3400               	retlw	0
  2361  07EA  3400               	retlw	0
  2362                           
  2363                           	psect	stringtext1
  2364  05F4                     __pstringtext1:
  2365  05F4                     _mtouch_button_init:
  2366  05F4  3400               	retlw	0
  2367  05F5  3400               	retlw	0
  2368  05F6  3400               	retlw	0
  2369  05F7  3400               	retlw	0
  2370  05F8  3400               	retlw	0
  2371  05F9  3400               	retlw	0
  2372  05FA  3400               	retlw	0
  2373  05FB  3400               	retlw	0
  2374  05FC  3400               	retlw	0
  2375  05FD  3400               	retlw	0
  2376  05FE  3400               	retlw	0
  2377  05FF  3400               	retlw	0
  2378  0600  3400               	retlw	0
  2379  0601  3400               	retlw	0
  2380  0602  3464               	retlw	100
  2381  0603  3401               	retlw	1
  2382  0604  3404               	retlw	4
  2383  0605  3401               	retlw	1
  2384  0606  3401               	retlw	1
  2385  0607  3400               	retlw	0
  2386  0608  3400               	retlw	0
  2387  0609  3400               	retlw	0
  2388  060A  3400               	retlw	0
  2389  060B  3400               	retlw	0
  2390  060C  3400               	retlw	0
  2391  060D  3400               	retlw	0
  2392  060E  3400               	retlw	0
  2393  060F  3400               	retlw	0
  2394  0610  3400               	retlw	0
  2395  0611  3400               	retlw	0
  2396  0612  3400               	retlw	0
  2397  0613  3432               	retlw	50
  2398  0614  3401               	retlw	1
  2399  0615  3404               	retlw	4
  2400  0616  3402               	retlw	2
  2401  0617  3402               	retlw	2
  2402  0618  3400               	retlw	0
  2403  0619  3400               	retlw	0
  2404  061A  3400               	retlw	0
  2405  061B  3400               	retlw	0
  2406  061C  3400               	retlw	0
  2407  061D  3400               	retlw	0
  2408  061E  3400               	retlw	0
  2409  061F  3400               	retlw	0
  2410  0620  3400               	retlw	0
  2411  0621  3400               	retlw	0
  2412  0622  3400               	retlw	0
  2413  0623  3400               	retlw	0
  2414  0624  343C               	retlw	60
  2415  0625  3401               	retlw	1
  2416  0626  3404               	retlw	4
  2417  0627                     __end_of_mtouch_button_init:
  2418                           
  2419                           	psect	nvBANK0
  2420  005B                     __pnvBANK0:
  2421  005B                     _TMR1_InterruptHandler:
  2422  005B                     	ds	2
  2423  005D                     _timer1ReloadVal:
  2424  005D                     	ds	2
  2425  005F                     _EUSART_ErrorHandler:
  2426  005F                     	ds	2
  2427  0061                     _EUSART_OverrunErrorHandler:
  2428  0061                     	ds	2
  2429  0063                     _EUSART_FramingErrorHandler:
  2430  0063                     	ds	2
  2431  0018                     _T1CONbits	set	24
  2432  0018                     _T1CON	set	24
  2433  0016                     _TMR1L	set	22
  2434  0017                     _TMR1H	set	23
  2435  0019                     _T1GCON	set	25
  2436  0011                     _PIR1bits	set	17
  2437  000B                     _INTCONbits	set	11
  2438  005F                     _GIE	set	95
  2439  009B                     _ADRES	set	155
  2440  0091                     _PIE1bits	set	145
  2441  0095                     _OPTION_REGbits	set	149
  2442  008E                     _TRISC	set	142
  2443  008D                     _TRISB	set	141
  2444  008C                     _TRISA	set	140
  2445  0090                     _TRISE	set	144
  2446  0097                     _WDTCON	set	151
  2447  0098                     _OSCTUNE	set	152
  2448  0099                     _OSCCON	set	153
  2449  009D                     _ADCON0bits	set	157
  2450  009E                     _ADCON1	set	158
  2451  009D                     _ADCON0	set	157
  2452  010E                     _LATCbits	set	270
  2453  011D                     _APFCON	set	285
  2454  010E                     _LATC	set	270
  2455  010D                     _LATB	set	269
  2456  010C                     _LATA	set	268
  2457  0110                     _LATE	set	272
  2458  0116                     _BORCON	set	278
  2459  019A                     _TXREG	set	410
  2460  019C                     _SPBRGH	set	412
  2461  019B                     _SPBRGL	set	411
  2462  019E                     _TXSTA	set	414
  2463  019D                     _RCSTA	set	413
  2464  019F                     _BAUDCON	set	415
  2465  018C                     _ANSELA	set	396
  2466  018D                     _ANSELB	set	397
  2467  020D                     _WPUB	set	525
  2468  0210                     _WPUE	set	528
  2469                           
  2470                           	psect	cinit
  2471  0014                     start_initialization:	
  2472                           ; #config settings
  2473                           
  2474  0014                     __initialization:
  2475                           
  2476                           ; Initialize objects allocated to BANK0
  2477  0014  30E6               	movlw	low __pidataBANK0
  2478  0015  0084               	movwf	4
  2479  0016  308F               	movlw	(high __pidataBANK0)| (0+128)
  2480  0017  0085               	movwf	5
  2481  0018  3041               	movlw	low __pdataBANK0
  2482  0019  0086               	movwf	6
  2483  001A  3000               	movlw	high __pdataBANK0
  2484  001B  0087               	movwf	7
  2485  001C  301A               	movlw	26
  2486  001D  318D  25C9  3180   	fcall	init_ram
  2487                           
  2488                           ; Initialize objects allocated to BANK1
  2489  0020  30D0               	movlw	low __pidataBANK1
  2490  0021  0084               	movwf	4
  2491  0022  3087               	movlw	(high __pidataBANK1)| (0+128)
  2492  0023  0085               	movwf	5
  2493  0024  30D3               	movlw	low __pdataBANK1
  2494  0025  0086               	movwf	6
  2495  0026  3000               	movlw	high __pdataBANK1
  2496  0027  0087               	movwf	7
  2497  0028  301B               	movlw	27
  2498  0029  318D  25C9  3180   	fcall	init_ram
  2499                           
  2500                           ; Clear objects allocated to COMMON
  2501  002C  01FA               	clrf	__pbssCOMMON& (0+127)
  2502  002D  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
  2503                           
  2504                           ; Clear objects allocated to BANK0
  2505  002E  3065               	movlw	low __pbssBANK0
  2506  002F  0084               	movwf	4
  2507  0030  3000               	movlw	high __pbssBANK0
  2508  0031  0085               	movwf	5
  2509  0032  300A               	movlw	10
  2510  0033  318D  25C3  3180   	fcall	clear_ram0
  2511                           
  2512                           ; Clear objects allocated to BANK1
  2513  0036  30A0               	movlw	low __pbssBANK1
  2514  0037  0084               	movwf	4
  2515  0038  3000               	movlw	high __pbssBANK1
  2516  0039  0085               	movwf	5
  2517  003A  3033               	movlw	51
  2518  003B  318D  25C3         	fcall	clear_ram0
  2519  003D                     end_of_initialization:	
  2520                           ;End of C runtime variable initialization code
  2521                           
  2522  003D                     __end_of__initialization:
  2523  003D  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  2524  003E  0020               	movlb	0
  2525  003F  3180  2841         	ljmp	_main	;jump to C main() function
  2526                           
  2527                           	psect	bssCOMMON
  2528  007A                     __pbssCOMMON:
  2529  007A                     MTOUCH_Random@seed:
  2530  007A                     	ds	1
  2531  007B                     _packet_counter:
  2532  007B                     	ds	1
  2533                           
  2534                           	psect	bssBANK0
  2535  0065                     __pbssBANK0:
  2536  0065                     _packet_sample:
  2537  0065                     	ds	2
  2538  0067                     _button_reburst_request:
  2539  0067                     	ds	1
  2540  0068                     _eusartRxLastError:
  2541  0068                     	ds	1
  2542  0069                     _lowpowerActivated:
  2543  0069                     	ds	1
  2544  006A                     _sample_delay:
  2545  006A                     	ds	1
  2546  006B                     _currentScannSensor:
  2547  006B                     	ds	1
  2548  006C                     _sensor_globalFlags:
  2549  006C                     	ds	1
  2550  006D                     _mtouch_request_init:
  2551  006D                     	ds	1
  2552  006E                     _mtouch_time_toScan:
  2553  006E                     	ds	1
  2554                           
  2555                           	psect	dataBANK0
  2556  0041                     __pdataBANK0:
  2557  0041                     _Button_StateMachine:
  2558  0041                     	ds	14
  2559  004F                     _callback_notPressed:
  2560  004F                     	ds	2
  2561  0051                     _callback_pressed:
  2562  0051                     	ds	2
  2563  0053                     _Sensor_scanB:
  2564  0053                     	ds	2
  2565  0055                     _Sensor_scanA:
  2566  0055                     	ds	2
  2567  0057                     _callback_sampled:
  2568  0057                     	ds	2
  2569  0059                     _mTouchScanReload:
  2570  0059                     	ds	2
  2571                           
  2572                           	psect	bssBANK1
  2573  00A0                     __pbssBANK1:
  2574  00A0                     _mtouch_button:
  2575  00A0                     	ds	51
  2576                           
  2577                           	psect	dataBANK1
  2578  00D3                     __pdataBANK1:
  2579  00D3                     _mtouch_sensor:
  2580  00D3                     	ds	27
  2581                           
  2582                           	psect	inittext
  2583  0DC9                     init_ram:
  2584  0DC9  00FE               	movwf	126
  2585  0DCA                     initloop:
  2586  0DCA  0012               	moviw fsr0++
  2587  0DCB  001E               	movwi fsr1++
  2588  0DCC  0BFE               	decfsz	126,f
  2589  0DCD  2DCA               	goto	initloop
  2590  0DCE  3400               	retlw	0
  2591                           
  2592                           	psect	clrtext
  2593  0DC3                     clear_ram0:	
  2594                           ;	Called with FSR0 containing the base address, and
  2595                           ;	WREG with the size to clear
  2596                           
  2597  0DC3  0064               	clrwdt	;clear the watchdog before getting into this loop
  2598  0DC4                     clrloop0:
  2599  0DC4  0180               	clrf	0	;clear RAM location pointed to by FSR
  2600  0DC5  3101               	addfsr 0,1
  2601  0DC6  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  2602  0DC7  2DC4               	goto	clrloop0	;have we reached the end yet?
  2603  0DC8  3400               	retlw	0	;all done for this memory range, return
  2604                           
  2605                           	psect	cstackCOMMON
  2606  0070                     __pcstackCOMMON:
  2607  0070                     ?_TMR1_WriteTimer:
  2608  0070                     ?_MTOUCH_Sensor_InitializeAll:	
  2609                           ; 1 bytes @ 0x0
  2610                           
  2611  0070                     ?_MTOUCH_Button_InitializeAll:	
  2612                           ; 1 bytes @ 0x0
  2613                           
  2614  0070                     ?_MTOUCH_Sensor_Sampled_ResetAll:	
  2615                           ; 1 bytes @ 0x0
  2616                           
  2617  0070                     ?_MTOUCH_Sensor_Scan_Initialize:	
  2618                           ; 1 bytes @ 0x0
  2619                           
  2620  0070                     ?_MTOUCH_Sensor_SampleAll:	
  2621                           ; 1 bytes @ 0x0
  2622                           
  2623  0070                     ?_MTOUCH_Button_ServiceAll:	
  2624                           ; 1 bytes @ 0x0
  2625                           
  2626  0070                     ?_MTOUCH_needReburst:	
  2627                           ; 1 bytes @ 0x0
  2628                           
  2629  0070                     ?_MTOUCH_Tick:	
  2630                           ; 1 bytes @ 0x0
  2631                           
  2632  0070                     ?_MTOUCH_Button_Tick:	
  2633                           ; 1 bytes @ 0x0
  2634                           
  2635  0070                     ?_MTOUCH_Button_Reburst_Service:	
  2636                           ; 1 bytes @ 0x0
  2637                           
  2638  0070                     ?_MTOUCH_Button_isPressed:	
  2639                           ; 1 bytes @ 0x0
  2640                           
  2641  0070                     ?_MTOUCH_Sensor_Enable:	
  2642                           ; 1 bytes @ 0x0
  2643                           
  2644  0070                     ?_Sensor_Sampled_Reset:	
  2645                           ; 1 bytes @ 0x0
  2646                           
  2647  0070                     ?_Sensor_Service:	
  2648                           ; 1 bytes @ 0x0
  2649                           
  2650  0070                     ?_Sensor_Acquisition:	
  2651                           ; 1 bytes @ 0x0
  2652                           
  2653  0070                     ?_Sensor_isEnabled:	
  2654                           ; 1 bytes @ 0x0
  2655                           
  2656  0070                     ?_Sensor_RawSample_Update:	
  2657                           ; 1 bytes @ 0x0
  2658                           
  2659  0070                     ?_Sensor_setSampled:	
  2660                           ; 1 bytes @ 0x0
  2661                           
  2662  0070                     ?_Sensor_Acq_ExecutePacket:	
  2663                           ; 1 bytes @ 0x0
  2664                           
  2665  0070                     ?_Sensor_setActive:	
  2666                           ; 1 bytes @ 0x0
  2667                           
  2668  0070                     ?_Sensor_setInactive:	
  2669                           ; 1 bytes @ 0x0
  2670                           
  2671  0070                     ?_Sensor_setScanFunction:	
  2672                           ; 1 bytes @ 0x0
  2673                           
  2674  0070                     ?_MTOUCH_Random:	
  2675                           ; 1 bytes @ 0x0
  2676                           
  2677  0070                     ?_Sensor_Acq_ExecuteScan:	
  2678                           ; 1 bytes @ 0x0
  2679                           
  2680  0070                     ?_MTOUCH_Delay:	
  2681                           ; 1 bytes @ 0x0
  2682                           
  2683  0070                     ?_PIN_MANAGER_Initialize:	
  2684                           ; 1 bytes @ 0x0
  2685                           
  2686  0070                     ?_OSCILLATOR_Initialize:	
  2687                           ; 1 bytes @ 0x0
  2688                           
  2689  0070                     ?_WDT_Initialize:	
  2690                           ; 1 bytes @ 0x0
  2691                           
  2692  0070                     ?_TMR1_Initialize:	
  2693                           ; 1 bytes @ 0x0
  2694                           
  2695  0070                     ?_EUSART_Initialize:	
  2696                           ; 1 bytes @ 0x0
  2697                           
  2698  0070                     ?_TMR1_DefaultInterruptHandler:	
  2699                           ; 1 bytes @ 0x0
  2700                           
  2701  0070                     ??_TMR1_DefaultInterruptHandler:	
  2702                           ; 1 bytes @ 0x0
  2703                           
  2704  0070                     ?_Button_Reburst_Clear:	
  2705                           ; 1 bytes @ 0x0
  2706                           
  2707  0070                     ?_Button_Service:	
  2708                           ; 1 bytes @ 0x0
  2709                           
  2710  0070                     ?_Button_Reading_Update:	
  2711                           ; 1 bytes @ 0x0
  2712                           
  2713  0070                     ?_Button_Deviation_Update:	
  2714                           ; 1 bytes @ 0x0
  2715                           
  2716  0070                     ?_Button_Baseline_Initialize:	
  2717                           ; 1 bytes @ 0x0
  2718                           
  2719  0070                     ?_Button_Baseline_Update:	
  2720                           ; 1 bytes @ 0x0
  2721                           
  2722  0070                     ?_Button_Reburst_Request:	
  2723                           ; 1 bytes @ 0x0
  2724                           
  2725  0070                     ?_Button_Tick_helper:	
  2726                           ; 1 bytes @ 0x0
  2727                           
  2728  0070                     ?_Button_Reading_Update_Helper:	
  2729                           ; 1 bytes @ 0x0
  2730                           
  2731  0070                     ?_MTOUCH_ScanScheduler:	
  2732                           ; 1 bytes @ 0x0
  2733                           
  2734  0070                     ?_MTOUCH_Initialize:	
  2735                           ; 1 bytes @ 0x0
  2736                           
  2737  0070                     ?_MTOUCH_Service_Mainloop:	
  2738                           ; 1 bytes @ 0x0
  2739                           
  2740  0070                     ?_MTOUCH_CVD_ScanA_0:	
  2741                           ; 1 bytes @ 0x0
  2742                           
  2743  0070                     ?_MTOUCH_CVD_ScanB_0:	
  2744                           ; 1 bytes @ 0x0
  2745                           
  2746  0070                     ?_MTOUCH_CVD_ScanA_1:	
  2747                           ; 1 bytes @ 0x0
  2748                           
  2749  0070                     ?_MTOUCH_CVD_ScanB_1:	
  2750                           ; 1 bytes @ 0x0
  2751                           
  2752  0070                     ?_MTOUCH_CVD_ScanA_2:	
  2753                           ; 1 bytes @ 0x0
  2754                           
  2755  0070                     ?_MTOUCH_CVD_ScanB_2:	
  2756                           ; 1 bytes @ 0x0
  2757                           
  2758  0070                     ?_MTOUCH_Sensor_Initialize:	
  2759                           ; 1 bytes @ 0x0
  2760                           
  2761  0070                     ?_MTOUCH_Sensor_Disable:	
  2762                           ; 1 bytes @ 0x0
  2763                           
  2764  0070                     ?_MTOUCH_Sensor_isCalibrated:	
  2765                           ; 1 bytes @ 0x0
  2766                           
  2767  0070                     ?_MTOUCH_Sensor_Calibrate:	
  2768                           ; 1 bytes @ 0x0
  2769                           
  2770  0070                     ?_MTOUCH_Sensor_wasSampled:	
  2771                           ; 1 bytes @ 0x0
  2772                           
  2773  0070                     ?_SYSTEM_Initialize:	
  2774                           ; 1 bytes @ 0x0
  2775                           
  2776  0070                     ?_EUSART_Write:	
  2777                           ; 1 bytes @ 0x0
  2778                           
  2779  0070                     ?_TMR1_ISR:	
  2780                           ; 1 bytes @ 0x0
  2781                           
  2782  0070                     ?_INTERRUPT_InterruptManager:	
  2783                           ; 1 bytes @ 0x0
  2784                           
  2785  0070                     ?_main:	
  2786                           ; 1 bytes @ 0x0
  2787                           
  2788  0070                     ?_MTOUCH_Button_Initialize:	
  2789                           ; 1 bytes @ 0x0
  2790                           
  2791  0070                     MTOUCH_Sensor_isCalibrated@sensor:	
  2792                           ; 1 bytes @ 0x0
  2793                           
  2794  0070                     MTOUCH_Sensor_Calibrate@sensor:	
  2795                           ; 1 bytes @ 0x0
  2796                           
  2797  0070                     TMR1_WriteTimer@timerVal:	
  2798                           ; 1 bytes @ 0x0
  2799                           
  2800                           
  2801                           ; 2 bytes @ 0x0
  2802  0070                     	ds	2
  2803  0072                     ??_TMR1_WriteTimer:
  2804  0072                     ??_MTOUCH_Sensor_Scan_Initialize:	
  2805                           ; 1 bytes @ 0x2
  2806                           
  2807  0072                     ?_TMR1_SetInterruptHandler:	
  2808                           ; 1 bytes @ 0x2
  2809                           
  2810  0072                     ??_MTOUCH_needReburst:	
  2811                           ; 1 bytes @ 0x2
  2812                           
  2813  0072                     ??_MTOUCH_Button_Reburst_Service:	
  2814                           ; 1 bytes @ 0x2
  2815                           
  2816  0072                     ??_MTOUCH_Button_isPressed:	
  2817                           ; 1 bytes @ 0x2
  2818                           
  2819  0072                     ?_Sensor_DefaultCallback:	
  2820                           ; 1 bytes @ 0x2
  2821                           
  2822  0072                     ??_Sensor_Sampled_Reset:	
  2823                           ; 1 bytes @ 0x2
  2824                           
  2825  0072                     ??_Sensor_isEnabled:	
  2826                           ; 1 bytes @ 0x2
  2827                           
  2828  0072                     ??_Sensor_RawSample_Update:	
  2829                           ; 1 bytes @ 0x2
  2830                           
  2831  0072                     ??_Sensor_setSampled:	
  2832                           ; 1 bytes @ 0x2
  2833                           
  2834  0072                     ??_Sensor_setActive:	
  2835                           ; 1 bytes @ 0x2
  2836                           
  2837  0072                     ??_Sensor_setInactive:	
  2838                           ; 1 bytes @ 0x2
  2839                           
  2840  0072                     ??_Sensor_setScanFunction:	
  2841                           ; 1 bytes @ 0x2
  2842                           
  2843  0072                     ??_MTOUCH_Random:	
  2844                           ; 1 bytes @ 0x2
  2845                           
  2846  0072                     ??_MTOUCH_Delay:	
  2847                           ; 1 bytes @ 0x2
  2848                           
  2849  0072                     ??_PIN_MANAGER_Initialize:	
  2850                           ; 1 bytes @ 0x2
  2851                           
  2852  0072                     ??_OSCILLATOR_Initialize:	
  2853                           ; 1 bytes @ 0x2
  2854                           
  2855  0072                     ??_WDT_Initialize:	
  2856                           ; 1 bytes @ 0x2
  2857                           
  2858  0072                     ?_EUSART_SetFramingErrorHandler:	
  2859                           ; 1 bytes @ 0x2
  2860                           
  2861  0072                     ?_EUSART_SetOverrunErrorHandler:	
  2862                           ; 1 bytes @ 0x2
  2863                           
  2864  0072                     ?_EUSART_SetErrorHandler:	
  2865                           ; 1 bytes @ 0x2
  2866                           
  2867  0072                     ?_Button_DefaultCallback:	
  2868                           ; 1 bytes @ 0x2
  2869                           
  2870  0072                     ?_memcpy:	
  2871                           ; 1 bytes @ 0x2
  2872                           
  2873  0072                     ??_Button_Reburst_Clear:	
  2874                           ; 1 bytes @ 0x2
  2875                           
  2876  0072                     ??_Button_Baseline_Update:	
  2877                           ; 1 bytes @ 0x2
  2878                           
  2879  0072                     ??_Button_Reburst_Request:	
  2880                           ; 1 bytes @ 0x2
  2881                           
  2882  0072                     ??_MTOUCH_ScanScheduler:	
  2883                           ; 1 bytes @ 0x2
  2884                           
  2885  0072                     ??_MTOUCH_CVD_ScanA_0:	
  2886                           ; 1 bytes @ 0x2
  2887                           
  2888  0072                     ??_MTOUCH_CVD_ScanB_0:	
  2889                           ; 1 bytes @ 0x2
  2890                           
  2891  0072                     ??_MTOUCH_CVD_ScanA_1:	
  2892                           ; 1 bytes @ 0x2
  2893                           
  2894  0072                     ??_MTOUCH_CVD_ScanB_1:	
  2895                           ; 1 bytes @ 0x2
  2896                           
  2897  0072                     ??_MTOUCH_CVD_ScanA_2:	
  2898                           ; 1 bytes @ 0x2
  2899                           
  2900  0072                     ??_MTOUCH_CVD_ScanB_2:	
  2901                           ; 1 bytes @ 0x2
  2902                           
  2903  0072                     ??_MTOUCH_Sensor_isCalibrated:	
  2904                           ; 1 bytes @ 0x2
  2905                           
  2906  0072                     ??_MTOUCH_Sensor_Calibrate:	
  2907                           ; 1 bytes @ 0x2
  2908                           
  2909  0072                     ?_DELAY_milliseconds:	
  2910                           ; 1 bytes @ 0x2
  2911                           
  2912  0072                     ??_EUSART_Write:	
  2913                           ; 1 bytes @ 0x2
  2914                           
  2915  0072                     ??_TMR1_ISR:	
  2916                           ; 1 bytes @ 0x2
  2917                           
  2918  0072                     ??_INTERRUPT_InterruptManager:	
  2919                           ; 1 bytes @ 0x2
  2920                           
  2921  0072                     ??_MTOUCH_Button_Initialize:	
  2922                           ; 1 bytes @ 0x2
  2923                           
  2924  0072                     ?___bmul:	
  2925                           ; 1 bytes @ 0x2
  2926                           
  2927  0072                     ?_abs:	
  2928                           ; 1 bytes @ 0x2
  2929                           
  2930  0072                     Sensor_RawSample_Update@sensor:	
  2931                           ; 2 bytes @ 0x2
  2932                           
  2933  0072                     Sensor_DefaultCallback@sensor:	
  2934                           ; 1 bytes @ 0x2
  2935                           
  2936  0072                     Sensor_setScanFunction@sensor:	
  2937                           ; 1 bytes @ 0x2
  2938                           
  2939  0072                     Sensor_isEnabled@sensor:	
  2940                           ; 1 bytes @ 0x2
  2941                           
  2942  0072                     Sensor_setActive@sensor:	
  2943                           ; 1 bytes @ 0x2
  2944                           
  2945  0072                     Sensor_setInactive@sensor:	
  2946                           ; 1 bytes @ 0x2
  2947                           
  2948  0072                     Sensor_Sampled_Reset@sensor:	
  2949                           ; 1 bytes @ 0x2
  2950                           
  2951  0072                     Sensor_setSampled@sensor:	
  2952                           ; 1 bytes @ 0x2
  2953                           
  2954  0072                     EUSART_Write@txData:	
  2955                           ; 1 bytes @ 0x2
  2956                           
  2957  0072                     _MTOUCH_Button_isPressed$1382:	
  2958                           ; 1 bytes @ 0x2
  2959                           
  2960  0072                     Button_Deviation_Update@button:	
  2961                           ; 1 bytes @ 0x2
  2962                           
  2963  0072                     Button_Reburst_Request@button:	
  2964                           ; 1 bytes @ 0x2
  2965                           
  2966  0072                     Button_DefaultCallback@button:	
  2967                           ; 1 bytes @ 0x2
  2968                           
  2969  0072                     ___bmul@multiplicand:	
  2970                           ; 1 bytes @ 0x2
  2971                           
  2972  0072                     DELAY_milliseconds@milliseconds:	
  2973                           ; 1 bytes @ 0x2
  2974                           
  2975  0072                     EUSART_SetFramingErrorHandler@interruptHandler:	
  2976                           ; 2 bytes @ 0x2
  2977                           
  2978  0072                     EUSART_SetOverrunErrorHandler@interruptHandler:	
  2979                           ; 2 bytes @ 0x2
  2980                           
  2981  0072                     EUSART_SetErrorHandler@interruptHandler:	
  2982                           ; 2 bytes @ 0x2
  2983                           
  2984  0072                     TMR1_SetInterruptHandler@InterruptHandler:	
  2985                           ; 2 bytes @ 0x2
  2986                           
  2987  0072                     abs@a:	
  2988                           ; 2 bytes @ 0x2
  2989                           
  2990  0072                     memcpy@s1:	
  2991                           ; 2 bytes @ 0x2
  2992                           
  2993                           
  2994                           ; 2 bytes @ 0x2
  2995  0072                     	ds	1
  2996  0073                     ??_MTOUCH_Sensor_Sampled_ResetAll:
  2997  0073                     ??_Sensor_DefaultCallback:	
  2998                           ; 1 bytes @ 0x3
  2999                           
  3000  0073                     ??_Button_DefaultCallback:	
  3001                           ; 1 bytes @ 0x3
  3002                           
  3003  0073                     ??___bmul:	
  3004                           ; 1 bytes @ 0x3
  3005                           
  3006  0073                     MTOUCH_needReburst@needReburst:	
  3007                           ; 1 bytes @ 0x3
  3008                           
  3009  0073                     MTOUCH_Delay@i:	
  3010                           ; 1 bytes @ 0x3
  3011                           
  3012  0073                     MTOUCH_Button_Initialize@name:	
  3013                           ; 1 bytes @ 0x3
  3014                           
  3015  0073                     MTOUCH_Button_isPressed@name:	
  3016                           ; 1 bytes @ 0x3
  3017                           
  3018  0073                     Button_Deviation_Update@deviation:	
  3019                           ; 1 bytes @ 0x3
  3020                           
  3021                           
  3022                           ; 4 bytes @ 0x3
  3023  0073                     	ds	1
  3024  0074                     ??_TMR1_SetInterruptHandler:
  3025  0074                     ??_abs:	
  3026                           ; 1 bytes @ 0x4
  3027                           
  3028  0074                     ??_TMR1_Initialize:	
  3029                           ; 1 bytes @ 0x4
  3030                           
  3031  0074                     ??_EUSART_Initialize:	
  3032                           ; 1 bytes @ 0x4
  3033                           
  3034  0074                     ??_EUSART_SetFramingErrorHandler:	
  3035                           ; 1 bytes @ 0x4
  3036                           
  3037  0074                     ??_EUSART_SetOverrunErrorHandler:	
  3038                           ; 1 bytes @ 0x4
  3039                           
  3040  0074                     ??_EUSART_SetErrorHandler:	
  3041                           ; 1 bytes @ 0x4
  3042                           
  3043  0074                     ??_DELAY_milliseconds:	
  3044                           ; 1 bytes @ 0x4
  3045                           
  3046  0074                     MTOUCH_Sensor_Sampled_ResetAll@sensor:	
  3047                           ; 1 bytes @ 0x4
  3048                           
  3049  0074                     MTOUCH_Button_Initialize@button:	
  3050                           ; 1 bytes @ 0x4
  3051                           
  3052  0074                     ___bmul@product:	
  3053                           ; 1 bytes @ 0x4
  3054                           
  3055  0074                     memcpy@n:	
  3056                           ; 1 bytes @ 0x4
  3057                           
  3058                           
  3059                           ; 2 bytes @ 0x4
  3060  0074                     	ds	1
  3061  0075                     ___bmul@multiplier:
  3062                           
  3063                           ; 1 bytes @ 0x5
  3064  0075                     	ds	1
  3065  0076                     ??_MTOUCH_Sensor_Enable:
  3066  0076                     ??_Sensor_Acq_ExecuteScan:	
  3067                           ; 1 bytes @ 0x6
  3068                           
  3069  0076                     ??_memcpy:	
  3070                           ; 1 bytes @ 0x6
  3071                           
  3072  0076                     ??_MTOUCH_Sensor_Disable:	
  3073                           ; 1 bytes @ 0x6
  3074                           
  3075  0076                     ??_MTOUCH_Sensor_wasSampled:	
  3076                           ; 1 bytes @ 0x6
  3077                           
  3078  0076                     ?_MTOUCH_Sensor_RawSample_Get:	
  3079                           ; 1 bytes @ 0x6
  3080                           
  3081                           
  3082                           ; 2 bytes @ 0x6
  3083  0076                     	ds	1
  3084  0077                     ??_MTOUCH_Button_InitializeAll:
  3085  0077                     MTOUCH_Sensor_Disable@sensor:	
  3086                           ; 1 bytes @ 0x7
  3087                           
  3088  0077                     MTOUCH_Sensor_Enable@sensor:	
  3089                           ; 1 bytes @ 0x7
  3090                           
  3091  0077                     MTOUCH_Sensor_wasSampled@sensor:	
  3092                           ; 1 bytes @ 0x7
  3093                           
  3094                           
  3095                           ; 1 bytes @ 0x7
  3096  0077                     	ds	1
  3097  0078                     ??_Button_Tick_helper:
  3098  0078                     ??_MTOUCH_Sensor_Initialize:	
  3099                           ; 1 bytes @ 0x8
  3100                           
  3101  0078                     ??_MTOUCH_Sensor_RawSample_Get:	
  3102                           ; 1 bytes @ 0x8
  3103                           
  3104  0078                     MTOUCH_Button_InitializeAll@button:	
  3105                           ; 1 bytes @ 0x8
  3106                           
  3107  0078                     Button_Baseline_Update@button:	
  3108                           ; 1 bytes @ 0x8
  3109                           
  3110  0078                     Sensor_Acq_ExecuteScan@result:	
  3111                           ; 1 bytes @ 0x8
  3112                           
  3113                           
  3114                           ; 2 bytes @ 0x8
  3115  0078                     	ds	1
  3116  0079                     MTOUCH_Sensor_Initialize@sensor:
  3117  0079                     MTOUCH_Sensor_RawSample_Get@name:	
  3118                           ; 1 bytes @ 0x9
  3119                           
  3120                           
  3121                           ; 1 bytes @ 0x9
  3122  0079                     	ds	1
  3123  007A                     ??_MTOUCH_Tick:
  3124  007A                     ??_Button_State_Suspended:	
  3125                           ; 1 bytes @ 0xA
  3126                           
  3127  007A                     ??_Button_State_Disabled:	
  3128                           ; 1 bytes @ 0xA
  3129                           
  3130  007A                     ??_Button_Reading_Update:	
  3131                           ; 1 bytes @ 0xA
  3132                           
  3133  007A                     ??_MTOUCH_Initialize:	
  3134                           ; 1 bytes @ 0xA
  3135                           
  3136  007A                     ??_SYSTEM_Initialize:	
  3137                           ; 1 bytes @ 0xA
  3138                           
  3139                           
  3140                           	psect	cstackBANK0
  3141  0020                     __pcstackBANK0:	
  3142                           ; 1 bytes @ 0xA
  3143                           
  3144  0020                     ??_MTOUCH_Sensor_InitializeAll:
  3145  0020                     ??_Sensor_Acq_ExecutePacket:	
  3146                           ; 1 bytes @ 0x0
  3147                           
  3148  0020                     ??_Button_Deviation_Update:	
  3149                           ; 1 bytes @ 0x0
  3150                           
  3151  0020                     ??_Button_Baseline_Initialize:	
  3152                           ; 1 bytes @ 0x0
  3153                           
  3154  0020                     ??_Button_Reading_Update_Helper:	
  3155                           ; 1 bytes @ 0x0
  3156                           
  3157  0020                     Button_Tick_helper@button:	
  3158                           ; 1 bytes @ 0x0
  3159                           
  3160  0020                     memcpy@tmp:	
  3161                           ; 1 bytes @ 0x0
  3162                           
  3163                           
  3164                           ; 1 bytes @ 0x0
  3165  0020                     	ds	1
  3166  0021                     ??_MTOUCH_Button_Tick:
  3167  0021                     MTOUCH_Sensor_InitializeAll@sensor:	
  3168                           ; 1 bytes @ 0x1
  3169                           
  3170  0021                     Sensor_Acq_ExecutePacket@ADCON0_temp:	
  3171                           ; 1 bytes @ 0x1
  3172                           
  3173  0021                     memcpy@s:	
  3174                           ; 1 bytes @ 0x1
  3175                           
  3176                           
  3177                           ; 2 bytes @ 0x1
  3178  0021                     	ds	1
  3179  0022                     Sensor_Acq_ExecutePacket@ADCON1_temp:
  3180  0022                     MTOUCH_Button_Tick@i:	
  3181                           ; 1 bytes @ 0x2
  3182                           
  3183  0022                     Button_Reading_Update_Helper@button:	
  3184                           ; 1 bytes @ 0x2
  3185                           
  3186                           
  3187                           ; 1 bytes @ 0x2
  3188  0022                     	ds	1
  3189  0023                     Sensor_Acq_ExecutePacket@GIE_state:
  3190  0023                     Button_Reading_Update@button:	
  3191                           ; 1 bytes @ 0x3
  3192                           
  3193  0023                     memcpy@d1:	
  3194                           ; 1 bytes @ 0x3
  3195                           
  3196                           
  3197                           ; 1 bytes @ 0x3
  3198  0023                     	ds	1
  3199  0024                     Sensor_Acq_ExecutePacket@error:
  3200  0024                     Button_Baseline_Initialize@button:	
  3201                           ; 1 bytes @ 0x4
  3202                           
  3203  0024                     memcpy@d:	
  3204                           ; 1 bytes @ 0x4
  3205                           
  3206                           
  3207                           ; 1 bytes @ 0x4
  3208  0024                     	ds	1
  3209  0025                     ?_Button_State_Initializing:
  3210  0025                     ?_Button_State_NotPressed:	
  3211                           ; 1 bytes @ 0x5
  3212                           
  3213  0025                     ?_Button_State_PressDebounce:	
  3214                           ; 1 bytes @ 0x5
  3215                           
  3216  0025                     ?_Button_State_Pressed:	
  3217                           ; 1 bytes @ 0x5
  3218                           
  3219  0025                     ?_Button_State_ReleaseDebounce:	
  3220                           ; 1 bytes @ 0x5
  3221                           
  3222  0025                     ?_Button_State_Suspended:	
  3223                           ; 1 bytes @ 0x5
  3224                           
  3225  0025                     ?_Button_State_Disabled:	
  3226                           ; 1 bytes @ 0x5
  3227                           
  3228  0025                     Sensor_Acq_ExecutePacket@sensor:	
  3229                           ; 1 bytes @ 0x5
  3230                           
  3231  0025                     Button_State_Initializing@button:	
  3232                           ; 1 bytes @ 0x5
  3233                           
  3234  0025                     Button_State_NotPressed@button:	
  3235                           ; 1 bytes @ 0x5
  3236                           
  3237  0025                     Button_State_Pressed@button:	
  3238                           ; 1 bytes @ 0x5
  3239                           
  3240  0025                     Button_State_PressDebounce@button:	
  3241                           ; 1 bytes @ 0x5
  3242                           
  3243  0025                     Button_State_ReleaseDebounce@button:	
  3244                           ; 1 bytes @ 0x5
  3245                           
  3246  0025                     Button_State_Suspended@button:	
  3247                           ; 1 bytes @ 0x5
  3248                           
  3249  0025                     Button_State_Disabled@button:	
  3250                           ; 1 bytes @ 0x5
  3251                           
  3252                           
  3253                           ; 1 bytes @ 0x5
  3254  0025                     	ds	1
  3255  0026                     ??_Sensor_Acquisition:
  3256  0026                     ??_Button_State_Initializing:	
  3257                           ; 1 bytes @ 0x6
  3258                           
  3259  0026                     ??_Button_State_NotPressed:	
  3260                           ; 1 bytes @ 0x6
  3261                           
  3262  0026                     ??_Button_State_PressDebounce:	
  3263                           ; 1 bytes @ 0x6
  3264                           
  3265  0026                     ??_Button_State_Pressed:	
  3266                           ; 1 bytes @ 0x6
  3267                           
  3268  0026                     ??_Button_State_ReleaseDebounce:	
  3269                           ; 1 bytes @ 0x6
  3270                           
  3271                           
  3272                           ; 1 bytes @ 0x6
  3273  0026                     	ds	1
  3274  0027                     Sensor_Acquisition@retry:
  3275                           
  3276                           ; 1 bytes @ 0x7
  3277  0027                     	ds	1
  3278  0028                     Sensor_Acquisition@sensor:
  3279                           
  3280                           ; 1 bytes @ 0x8
  3281  0028                     	ds	1
  3282  0029                     ??_Sensor_Service:
  3283                           
  3284                           ; 1 bytes @ 0x9
  3285  0029                     	ds	1
  3286  002A                     ??_Button_Service:
  3287                           
  3288                           ; 1 bytes @ 0xA
  3289  002A                     	ds	1
  3290  002B                     Sensor_Service@name:
  3291  002B                     Button_Service@name:	
  3292                           ; 1 bytes @ 0xB
  3293                           
  3294                           
  3295                           ; 1 bytes @ 0xB
  3296  002B                     	ds	1
  3297  002C                     Sensor_Service@error:
  3298  002C                     Button_Service@button:	
  3299                           ; 1 bytes @ 0xC
  3300                           
  3301                           
  3302                           ; 1 bytes @ 0xC
  3303  002C                     	ds	1
  3304  002D                     ??_MTOUCH_Button_ServiceAll:
  3305  002D                     Sensor_Service@sensor:	
  3306                           ; 1 bytes @ 0xD
  3307                           
  3308                           
  3309                           ; 1 bytes @ 0xD
  3310  002D                     	ds	1
  3311  002E                     ??_MTOUCH_Sensor_SampleAll:
  3312  002E                     MTOUCH_Button_ServiceAll@button:	
  3313                           ; 1 bytes @ 0xE
  3314                           
  3315                           
  3316                           ; 1 bytes @ 0xE
  3317  002E                     	ds	1
  3318  002F                     MTOUCH_Sensor_SampleAll@sensor:
  3319                           
  3320                           ; 1 bytes @ 0xF
  3321  002F                     	ds	1
  3322  0030                     ??_MTOUCH_Service_Mainloop:
  3323                           
  3324                           ; 1 bytes @ 0x10
  3325  0030                     	ds	1
  3326  0031                     ??_main:
  3327                           
  3328                           ; 1 bytes @ 0x11
  3329  0031                     	ds	2
  3330  0033                     main@touch:
  3331                           
  3332                           ; 6 bytes @ 0x13
  3333  0033                     	ds	6
  3334  0039                     main@raw:
  3335                           
  3336                           ; 6 bytes @ 0x19
  3337  0039                     	ds	6
  3338  003F                     main@i:
  3339                           
  3340                           ; 2 bytes @ 0x1F
  3341  003F                     	ds	2
  3342                           
  3343                           	psect	maintext
  3344  0041                     __pmaintext:	
  3345 ;;
  3346 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  3347 ;;
  3348 ;; *************** function _main *****************
  3349 ;; Defined at:
  3350 ;;		line 54 in file "main.c"
  3351 ;; Parameters:    Size  Location     Type
  3352 ;;		None
  3353 ;; Auto vars:     Size  Location     Type
  3354 ;;  raw             6   25[BANK0 ] unsigned short [3]
  3355 ;;  touch           6   19[BANK0 ] unsigned short [3]
  3356 ;;  i               2   31[BANK0 ] int 
  3357 ;; Return value:  Size  Location     Type
  3358 ;;                  1    wreg      void 
  3359 ;; Registers used:
  3360 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3361 ;; Tracked objects:
  3362 ;;		On entry : B1F/0
  3363 ;;		On exit  : 0/0
  3364 ;;		Unchanged: 0/0
  3365 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3366 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3367 ;;      Locals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3368 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3369 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3370 ;;Total ram usage:       16 bytes
  3371 ;; Hardware stack levels required when called: 11
  3372 ;; This function calls:
  3373 ;;		_DELAY_milliseconds
  3374 ;;		_EUSART_Write
  3375 ;;		_MTOUCH_Button_isPressed
  3376 ;;		_MTOUCH_Sensor_RawSample_Get
  3377 ;;		_MTOUCH_Service_Mainloop
  3378 ;;		_SYSTEM_Initialize
  3379 ;; This function is called by:
  3380 ;;		Startup code after reset
  3381 ;; This function uses a non-reentrant model
  3382 ;;
  3383                           
  3384                           
  3385                           ;psect for function _main
  3386  0041                     _main:
  3387                           
  3388                           ;main.c: 55:     int i;;main.c: 56:     uint16_t touch[3];;main.c: 57:     uint16_t raw[
      +                          3];;main.c: 59:     SYSTEM_Initialize();
  3389                           
  3390                           ;incstack = 0
  3391                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3392  0041  318E  26F8  3180   	fcall	_SYSTEM_Initialize
  3393                           
  3394                           ;main.c: 65:     (INTCONbits.GIE = 1);
  3395  0044  178B               	bsf	11,7	;volatile
  3396                           
  3397                           ;main.c: 68:     (INTCONbits.PEIE = 1);
  3398  0045  170B               	bsf	11,6	;volatile
  3399                           
  3400                           ;main.c: 76:     for (i = 0; i < 10; i++) {
  3401  0046  01BF               	clrf	main@i
  3402  0047  01C0               	clrf	main@i+1
  3403  0048                     l597:	
  3404                           ;main.c: 77:         do { LATCbits.LATC0 = 1; } while(0);
  3405                           
  3406  0048  0022               	movlb	2	; select bank2
  3407  0049  140E               	bsf	14,0	;volatile
  3408                           
  3409                           ;main.c: 78:         DELAY_milliseconds(50);
  3410  004A  3032               	movlw	50
  3411  004B  00F2               	movwf	DELAY_milliseconds@milliseconds
  3412  004C  3000               	movlw	0
  3413  004D  00F3               	movwf	DELAY_milliseconds@milliseconds+1
  3414  004E  318E  26C2  3180   	fcall	_DELAY_milliseconds
  3415  0051  0022               	movlb	2	; select bank2
  3416  0052  100E               	bcf	14,0	;volatile
  3417                           
  3418                           ;main.c: 80:         DELAY_milliseconds(50);
  3419  0053  3032               	movlw	50
  3420  0054  00F2               	movwf	DELAY_milliseconds@milliseconds
  3421  0055  3000               	movlw	0
  3422  0056  00F3               	movwf	DELAY_milliseconds@milliseconds+1
  3423  0057  318E  26C2  3180   	fcall	_DELAY_milliseconds
  3424                           
  3425                           ;main.c: 81:     }
  3426  005A  3001               	movlw	1
  3427  005B  0020               	movlb	0	; select bank0
  3428  005C  07BF               	addwf	main@i,f
  3429  005D  3000               	movlw	0
  3430  005E  3DC0               	addwfc	main@i+1,f
  3431  005F  0840               	movf	main@i+1,w
  3432  0060  3A80               	xorlw	128
  3433  0061  00B1               	movwf	??_main
  3434  0062  3080               	movlw	128
  3435  0063  0231               	subwf	??_main,w
  3436  0064  1D03               	skipz
  3437  0065  2868               	goto	u2285
  3438  0066  300A               	movlw	10
  3439  0067  023F               	subwf	main@i,w
  3440  0068                     u2285:
  3441  0068  1C03               	skipc
  3442  0069  2848               	goto	l597
  3443  006A                     l3644:
  3444                           
  3445                           ;main.c: 87:         if (MTOUCH_Service_Mainloop()) {
  3446  006A  3186  26A8  3180   	fcall	_MTOUCH_Service_Mainloop
  3447  006D  3A00               	xorlw	0
  3448  006E  1903               	skipnz
  3449  006F  286A               	goto	l3644
  3450                           
  3451                           ;main.c: 90:             for (i = 0; i < 3; i++) {
  3452  0070  01BF               	clrf	main@i
  3453  0071  01C0               	clrf	main@i+1
  3454  0072                     l3652:
  3455                           
  3456                           ;main.c: 91:                 raw[i] = MTOUCH_Sensor_RawSample_Get(i);
  3457  0072  0020               	movlb	0	; select bank0
  3458  0073  083F               	movf	main@i,w
  3459  0074  318F  276D  3180   	fcall	_MTOUCH_Sensor_RawSample_Get
  3460  0077  0020               	movlb	0	; select bank0
  3461  0078  353F               	lslf	main@i,w
  3462  0079  3E39               	addlw	(low (main@raw| 0))& (0+255)
  3463  007A  0086               	movwf	6
  3464  007B  0187               	clrf	7
  3465  007C  0876               	movf	?_MTOUCH_Sensor_RawSample_Get,w
  3466  007D  3FC0               	movwi [0]fsr1
  3467  007E  0877               	movf	?_MTOUCH_Sensor_RawSample_Get+1,w
  3468  007F  3FC1               	movwi [1]fsr1
  3469                           
  3470                           ;main.c: 92:                 touch[i] = MTOUCH_Button_isPressed(i);
  3471  0080  083F               	movf	main@i,w
  3472  0081  3187  27B1  3180   	fcall	_MTOUCH_Button_isPressed
  3473  0084  00B1               	movwf	??_main
  3474  0085  01B2               	clrf	??_main+1
  3475  0086  353F               	lslf	main@i,w
  3476  0087  3E33               	addlw	(low (main@touch| 0))& (0+255)
  3477  0088  0086               	movwf	6
  3478  0089  0187               	clrf	7
  3479  008A  0831               	movf	??_main,w
  3480  008B  3FC0               	movwi [0]fsr1
  3481  008C  0832               	movf	??_main+1,w
  3482  008D  3FC1               	movwi [1]fsr1
  3483                           
  3484                           ;main.c: 93:             }
  3485  008E  3001               	movlw	1
  3486  008F  07BF               	addwf	main@i,f
  3487  0090  3000               	movlw	0
  3488  0091  3DC0               	addwfc	main@i+1,f
  3489  0092  0840               	movf	main@i+1,w
  3490  0093  3A80               	xorlw	128
  3491  0094  00B1               	movwf	??_main
  3492  0095  3080               	movlw	128
  3493  0096  0231               	subwf	??_main,w
  3494  0097  1D03               	skipz
  3495  0098  289B               	goto	u2305
  3496  0099  3003               	movlw	3
  3497  009A  023F               	subwf	main@i,w
  3498  009B                     u2305:
  3499  009B  1C03               	skipc
  3500  009C  2872               	goto	l3652
  3501                           
  3502                           ;main.c: 94:             EUSART_Write((raw[0]>>8)&0xFF);
  3503  009D  0020               	movlb	0	; select bank0
  3504  009E  083A               	movf	main@raw+1,w
  3505  009F  318D  25CF  3180   	fcall	_EUSART_Write
  3506                           
  3507                           ;main.c: 95:             EUSART_Write(raw[0]&0xFF);
  3508  00A2  0020               	movlb	0	; select bank0
  3509  00A3  0839               	movf	main@raw,w
  3510  00A4  318D  25CF  3180   	fcall	_EUSART_Write
  3511                           
  3512                           ;main.c: 96:             EUSART_Write((raw[1]>>8)&0xFF);
  3513  00A7  0020               	movlb	0	; select bank0
  3514  00A8  083C               	movf	main@raw+3,w
  3515  00A9  318D  25CF  3180   	fcall	_EUSART_Write
  3516                           
  3517                           ;main.c: 97:             EUSART_Write(raw[1]&0xFF);
  3518  00AC  0020               	movlb	0	; select bank0
  3519  00AD  083B               	movf	main@raw+2,w
  3520  00AE  318D  25CF  3180   	fcall	_EUSART_Write
  3521                           
  3522                           ;main.c: 98:             EUSART_Write((raw[2]>>8)&0xFF);
  3523  00B1  0020               	movlb	0	; select bank0
  3524  00B2  083E               	movf	main@raw+5,w
  3525  00B3  318D  25CF  3180   	fcall	_EUSART_Write
  3526                           
  3527                           ;main.c: 99:             EUSART_Write(raw[2]&0xFF);
  3528  00B6  0020               	movlb	0	; select bank0
  3529  00B7  083D               	movf	main@raw+4,w
  3530  00B8  318D  25CF  3180   	fcall	_EUSART_Write
  3531                           
  3532                           ;main.c: 100:             EUSART_Write(touch[0]);
  3533  00BB  0020               	movlb	0	; select bank0
  3534  00BC  0833               	movf	main@touch,w
  3535  00BD  318D  25CF  3180   	fcall	_EUSART_Write
  3536                           
  3537                           ;main.c: 101:             EUSART_Write(touch[1]);
  3538  00C0  0020               	movlb	0	; select bank0
  3539  00C1  0835               	movf	main@touch+2,w
  3540  00C2  318D  25CF  3180   	fcall	_EUSART_Write
  3541                           
  3542                           ;main.c: 102:             EUSART_Write(touch[2]);
  3543  00C5  0020               	movlb	0	; select bank0
  3544  00C6  0837               	movf	main@touch+4,w
  3545  00C7  318D  25CF  3180   	fcall	_EUSART_Write
  3546                           
  3547                           ;main.c: 104:             DELAY_milliseconds(5);
  3548  00CA  3005               	movlw	5
  3549  00CB  00F2               	movwf	DELAY_milliseconds@milliseconds
  3550  00CC  3000               	movlw	0
  3551  00CD  00F3               	movwf	DELAY_milliseconds@milliseconds+1
  3552  00CE  318E  26C2  3180   	fcall	_DELAY_milliseconds
  3553  00D1  286A               	goto	l3644
  3554  00D2                     __end_of_main:
  3555                           
  3556                           	psect	text1
  3557  0EF8                     __ptext1:	
  3558 ;; *************** function _SYSTEM_Initialize *****************
  3559 ;; Defined at:
  3560 ;;		line 50 in file "mcc_generated_files/mcc.c"
  3561 ;; Parameters:    Size  Location     Type
  3562 ;;		None
  3563 ;; Auto vars:     Size  Location     Type
  3564 ;;		None
  3565 ;; Return value:  Size  Location     Type
  3566 ;;                  1    wreg      void 
  3567 ;; Registers used:
  3568 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3569 ;; Tracked objects:
  3570 ;;		On entry : B1F/0
  3571 ;;		On exit  : 1F/0
  3572 ;;		Unchanged: 0/0
  3573 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3574 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3575 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3576 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3577 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3578 ;;Total ram usage:        0 bytes
  3579 ;; Hardware stack levels used: 1
  3580 ;; Hardware stack levels required when called: 9
  3581 ;; This function calls:
  3582 ;;		_EUSART_Initialize
  3583 ;;		_MTOUCH_Initialize
  3584 ;;		_OSCILLATOR_Initialize
  3585 ;;		_PIN_MANAGER_Initialize
  3586 ;;		_TMR1_Initialize
  3587 ;;		_WDT_Initialize
  3588 ;; This function is called by:
  3589 ;;		_main
  3590 ;; This function uses a non-reentrant model
  3591 ;;
  3592                           
  3593                           
  3594                           ;psect for function _SYSTEM_Initialize
  3595  0EF8                     _SYSTEM_Initialize:
  3596                           
  3597                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
  3598                           
  3599                           ;incstack = 0
  3600                           ; Regs used in _SYSTEM_Initialize: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3601  0EF8  318F  27CC  318E   	fcall	_PIN_MANAGER_Initialize
  3602                           
  3603                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
  3604  0EFB  318D  25F2  318E   	fcall	_OSCILLATOR_Initialize
  3605                           
  3606                           ;mcc_generated_files/mcc.c: 55:     WDT_Initialize();
  3607  0EFE  318D  25A4  318E   	fcall	_WDT_Initialize
  3608                           
  3609                           ;mcc_generated_files/mcc.c: 56:     TMR1_Initialize();
  3610  0F01  318F  2757  318E   	fcall	_TMR1_Initialize
  3611                           
  3612                           ;mcc_generated_files/mcc.c: 57:     EUSART_Initialize();
  3613  0F04  3187  2791  318E   	fcall	_EUSART_Initialize
  3614                           
  3615                           ;mcc_generated_files/mcc.c: 58:     MTOUCH_Initialize();
  3616  0F07  318F  271D         	fcall	_MTOUCH_Initialize
  3617  0F09  0008               	return
  3618  0F0A                     __end_of_SYSTEM_Initialize:
  3619                           
  3620                           	psect	text2
  3621  0DA4                     __ptext2:	
  3622 ;; *************** function _WDT_Initialize *****************
  3623 ;; Defined at:
  3624 ;;		line 71 in file "mcc_generated_files/mcc.c"
  3625 ;; Parameters:    Size  Location     Type
  3626 ;;		None
  3627 ;; Auto vars:     Size  Location     Type
  3628 ;;		None
  3629 ;; Return value:  Size  Location     Type
  3630 ;;                  1    wreg      void 
  3631 ;; Registers used:
  3632 ;;		wreg
  3633 ;; Tracked objects:
  3634 ;;		On entry : B1F/2
  3635 ;;		On exit  : B1F/1
  3636 ;;		Unchanged: B00/0
  3637 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3638 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3639 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3640 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3641 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3642 ;;Total ram usage:        0 bytes
  3643 ;; Hardware stack levels used: 1
  3644 ;; Hardware stack levels required when called: 4
  3645 ;; This function calls:
  3646 ;;		Nothing
  3647 ;; This function is called by:
  3648 ;;		_SYSTEM_Initialize
  3649 ;; This function uses a non-reentrant model
  3650 ;;
  3651                           
  3652                           
  3653                           ;psect for function _WDT_Initialize
  3654  0DA4                     _WDT_Initialize:
  3655                           
  3656                           ;mcc_generated_files/mcc.c: 74:     WDTCON = 0x16;
  3657                           
  3658                           ;incstack = 0
  3659                           ; Regs used in _WDT_Initialize: [wreg]
  3660  0DA4  3016               	movlw	22
  3661  0DA5  0021               	movlb	1	; select bank1
  3662  0DA6  0097               	movwf	23	;volatile
  3663  0DA7  0008               	return
  3664  0DA8                     __end_of_WDT_Initialize:
  3665                           
  3666                           	psect	text3
  3667  0F57                     __ptext3:	
  3668 ;; *************** function _TMR1_Initialize *****************
  3669 ;; Defined at:
  3670 ;;		line 64 in file "mcc_generated_files/tmr1.c"
  3671 ;; Parameters:    Size  Location     Type
  3672 ;;		None
  3673 ;; Auto vars:     Size  Location     Type
  3674 ;;		None
  3675 ;; Return value:  Size  Location     Type
  3676 ;;                  1    wreg      void 
  3677 ;; Registers used:
  3678 ;;		wreg, status,2, status,0, pclath, cstack
  3679 ;; Tracked objects:
  3680 ;;		On entry : B1F/1
  3681 ;;		On exit  : 1F/0
  3682 ;;		Unchanged: 0/0
  3683 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3684 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3685 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3686 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3687 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3688 ;;Total ram usage:        0 bytes
  3689 ;; Hardware stack levels used: 1
  3690 ;; Hardware stack levels required when called: 5
  3691 ;; This function calls:
  3692 ;;		_TMR1_SetInterruptHandler
  3693 ;; This function is called by:
  3694 ;;		_SYSTEM_Initialize
  3695 ;; This function uses a non-reentrant model
  3696 ;;
  3697                           
  3698                           
  3699                           ;psect for function _TMR1_Initialize
  3700  0F57                     _TMR1_Initialize:
  3701                           
  3702                           ;mcc_generated_files/tmr1.c: 69:     T1GCON = 0x00;
  3703                           
  3704                           ;incstack = 0
  3705                           ; Regs used in _TMR1_Initialize: [wreg+status,2+status,0+pclath+cstack]
  3706  0F57  0020               	movlb	0	; select bank0
  3707  0F58  0199               	clrf	25	;volatile
  3708                           
  3709                           ;mcc_generated_files/tmr1.c: 72:     TMR1H = 0x63;
  3710  0F59  3063               	movlw	99
  3711  0F5A  0097               	movwf	23	;volatile
  3712                           
  3713                           ;mcc_generated_files/tmr1.c: 75:     TMR1L = 0xC0;
  3714  0F5B  30C0               	movlw	192
  3715  0F5C  0096               	movwf	22	;volatile
  3716                           
  3717                           ;mcc_generated_files/tmr1.c: 78:     PIR1bits.TMR1IF = 0;
  3718  0F5D  1011               	bcf	17,0	;volatile
  3719                           
  3720                           ;mcc_generated_files/tmr1.c: 81:     timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
  3721  0F5E  0817               	movf	23,w	;volatile
  3722  0F5F  00DE               	movwf	_timer1ReloadVal+1	;volatile
  3723  0F60  0816               	movf	22,w	;volatile
  3724  0F61  00DD               	movwf	_timer1ReloadVal	;volatile
  3725                           
  3726                           ;mcc_generated_files/tmr1.c: 84:     PIE1bits.TMR1IE = 1;
  3727  0F62  0021               	movlb	1	; select bank1
  3728  0F63  1411               	bsf	17,0	;volatile
  3729                           
  3730                           ;mcc_generated_files/tmr1.c: 87:     TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandl
      +                          er);
  3731  0F64  3096               	movlw	low _TMR1_DefaultInterruptHandler
  3732  0F65  00F2               	movwf	TMR1_SetInterruptHandler@InterruptHandler
  3733  0F66  300D               	movlw	high _TMR1_DefaultInterruptHandler
  3734  0F67  00F3               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1
  3735  0F68  318D  25B7         	fcall	_TMR1_SetInterruptHandler
  3736                           
  3737                           ;mcc_generated_files/tmr1.c: 90:     T1CON = 0x05;
  3738  0F6A  3005               	movlw	5
  3739  0F6B  0098               	movwf	24	;volatile
  3740  0F6C  0008               	return
  3741  0F6D                     __end_of_TMR1_Initialize:
  3742                           
  3743                           	psect	text4
  3744  0FCC                     __ptext4:	
  3745 ;; *************** function _PIN_MANAGER_Initialize *****************
  3746 ;; Defined at:
  3747 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  3748 ;; Parameters:    Size  Location     Type
  3749 ;;		None
  3750 ;; Auto vars:     Size  Location     Type
  3751 ;;		None
  3752 ;; Return value:  Size  Location     Type
  3753 ;;                  1    wreg      void 
  3754 ;; Registers used:
  3755 ;;		wreg, status,2
  3756 ;; Tracked objects:
  3757 ;;		On entry : B1F/0
  3758 ;;		On exit  : B1F/2
  3759 ;;		Unchanged: B00/0
  3760 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3761 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3762 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3763 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3764 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3765 ;;Total ram usage:        0 bytes
  3766 ;; Hardware stack levels used: 1
  3767 ;; Hardware stack levels required when called: 4
  3768 ;; This function calls:
  3769 ;;		Nothing
  3770 ;; This function is called by:
  3771 ;;		_SYSTEM_Initialize
  3772 ;; This function uses a non-reentrant model
  3773 ;;
  3774                           
  3775                           
  3776                           ;psect for function _PIN_MANAGER_Initialize
  3777  0FCC                     _PIN_MANAGER_Initialize:
  3778                           
  3779                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
  3780                           
  3781                           ;incstack = 0
  3782                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  3783  0FCC  0022               	movlb	2	; select bank2
  3784  0FCD  0190               	clrf	16	;volatile
  3785                           
  3786                           ;mcc_generated_files/pin_manager.c: 61:     LATA = 0x00;
  3787  0FCE  018C               	clrf	12	;volatile
  3788                           
  3789                           ;mcc_generated_files/pin_manager.c: 62:     LATB = 0x00;
  3790  0FCF  018D               	clrf	13	;volatile
  3791                           
  3792                           ;mcc_generated_files/pin_manager.c: 63:     LATC = 0x00;
  3793  0FD0  018E               	clrf	14	;volatile
  3794                           
  3795                           ;mcc_generated_files/pin_manager.c: 68:     TRISE = 0x08;
  3796  0FD1  3008               	movlw	8
  3797  0FD2  0021               	movlb	1	; select bank1
  3798  0FD3  0090               	movwf	16	;volatile
  3799                           
  3800                           ;mcc_generated_files/pin_manager.c: 69:     TRISA = 0xDC;
  3801  0FD4  30DC               	movlw	220
  3802  0FD5  008C               	movwf	12	;volatile
  3803                           
  3804                           ;mcc_generated_files/pin_manager.c: 70:     TRISB = 0xC0;
  3805  0FD6  30C0               	movlw	192
  3806  0FD7  008D               	movwf	13	;volatile
  3807                           
  3808                           ;mcc_generated_files/pin_manager.c: 71:     TRISC = 0xBE;
  3809  0FD8  30BE               	movlw	190
  3810  0FD9  008E               	movwf	14	;volatile
  3811                           
  3812                           ;mcc_generated_files/pin_manager.c: 76:     ANSELB = 0x00;
  3813  0FDA  0023               	movlb	3	; select bank3
  3814  0FDB  018D               	clrf	13	;volatile
  3815                           
  3816                           ;mcc_generated_files/pin_manager.c: 77:     ANSELA = 0x1C;
  3817  0FDC  301C               	movlw	28
  3818  0FDD  008C               	movwf	12	;volatile
  3819                           
  3820                           ;mcc_generated_files/pin_manager.c: 82:     WPUE = 0x00;
  3821  0FDE  0024               	movlb	4	; select bank4
  3822  0FDF  0190               	clrf	16	;volatile
  3823                           
  3824                           ;mcc_generated_files/pin_manager.c: 83:     WPUB = 0x00;
  3825  0FE0  018D               	clrf	13	;volatile
  3826                           
  3827                           ;mcc_generated_files/pin_manager.c: 84:     OPTION_REGbits.nWPUEN = 1;
  3828  0FE1  0021               	movlb	1	; select bank1
  3829  0FE2  1795               	bsf	21,7	;volatile
  3830                           
  3831                           ;mcc_generated_files/pin_manager.c: 90:     APFCON = 0x00;
  3832  0FE3  0022               	movlb	2	; select bank2
  3833  0FE4  019D               	clrf	29	;volatile
  3834  0FE5  0008               	return
  3835  0FE6                     __end_of_PIN_MANAGER_Initialize:
  3836                           
  3837                           	psect	text5
  3838  0DF2                     __ptext5:	
  3839 ;; *************** function _OSCILLATOR_Initialize *****************
  3840 ;; Defined at:
  3841 ;;		line 61 in file "mcc_generated_files/mcc.c"
  3842 ;; Parameters:    Size  Location     Type
  3843 ;;		None
  3844 ;; Auto vars:     Size  Location     Type
  3845 ;;		None
  3846 ;; Return value:  Size  Location     Type
  3847 ;;                  1    wreg      void 
  3848 ;; Registers used:
  3849 ;;		wreg, status,2
  3850 ;; Tracked objects:
  3851 ;;		On entry : B1F/2
  3852 ;;		On exit  : B1F/2
  3853 ;;		Unchanged: B00/0
  3854 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3855 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3856 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3857 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3858 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3859 ;;Total ram usage:        0 bytes
  3860 ;; Hardware stack levels used: 1
  3861 ;; Hardware stack levels required when called: 4
  3862 ;; This function calls:
  3863 ;;		Nothing
  3864 ;; This function is called by:
  3865 ;;		_SYSTEM_Initialize
  3866 ;; This function uses a non-reentrant model
  3867 ;;
  3868                           
  3869                           
  3870                           ;psect for function _OSCILLATOR_Initialize
  3871  0DF2                     _OSCILLATOR_Initialize:
  3872                           
  3873                           ;mcc_generated_files/mcc.c: 64:     OSCCON = 0x70;
  3874                           
  3875                           ;incstack = 0
  3876                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  3877  0DF2  3070               	movlw	112
  3878  0DF3  0021               	movlb	1	; select bank1
  3879  0DF4  0099               	movwf	25	;volatile
  3880                           
  3881                           ;mcc_generated_files/mcc.c: 66:     OSCTUNE = 0x00;
  3882  0DF5  0198               	clrf	24	;volatile
  3883                           
  3884                           ;mcc_generated_files/mcc.c: 68:     BORCON = 0x00;
  3885  0DF6  0022               	movlb	2	; select bank2
  3886  0DF7  0196               	clrf	22	;volatile
  3887  0DF8  0008               	return
  3888  0DF9                     __end_of_OSCILLATOR_Initialize:
  3889                           
  3890                           	psect	text6
  3891  0791                     __ptext6:	
  3892 ;; *************** function _EUSART_Initialize *****************
  3893 ;; Defined at:
  3894 ;;		line 66 in file "mcc_generated_files/eusart.c"
  3895 ;; Parameters:    Size  Location     Type
  3896 ;;		None
  3897 ;; Auto vars:     Size  Location     Type
  3898 ;;		None
  3899 ;; Return value:  Size  Location     Type
  3900 ;;                  1    wreg      void 
  3901 ;; Registers used:
  3902 ;;		wreg, status,2, status,0, pclath, cstack
  3903 ;; Tracked objects:
  3904 ;;		On entry : 1F/0
  3905 ;;		On exit  : 1F/0
  3906 ;;		Unchanged: 0/0
  3907 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3908 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3909 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3910 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3911 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3912 ;;Total ram usage:        0 bytes
  3913 ;; Hardware stack levels used: 1
  3914 ;; Hardware stack levels required when called: 5
  3915 ;; This function calls:
  3916 ;;		_EUSART_SetErrorHandler
  3917 ;;		_EUSART_SetFramingErrorHandler
  3918 ;;		_EUSART_SetOverrunErrorHandler
  3919 ;; This function is called by:
  3920 ;;		_SYSTEM_Initialize
  3921 ;; This function uses a non-reentrant model
  3922 ;;
  3923                           
  3924                           
  3925                           ;psect for function _EUSART_Initialize
  3926  0791                     _EUSART_Initialize:
  3927                           
  3928                           ;mcc_generated_files/eusart.c: 71:     BAUDCON = 0x08;
  3929                           
  3930                           ;incstack = 0
  3931                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
  3932  0791  3008               	movlw	8
  3933  0792  0023               	movlb	3	; select bank3
  3934  0793  009F               	movwf	31	;volatile
  3935                           
  3936                           ;mcc_generated_files/eusart.c: 74:     RCSTA = 0x80;
  3937  0794  3080               	movlw	128
  3938  0795  009D               	movwf	29	;volatile
  3939                           
  3940                           ;mcc_generated_files/eusart.c: 77:     TXSTA = 0x24;
  3941  0796  3024               	movlw	36
  3942  0797  009E               	movwf	30	;volatile
  3943                           
  3944                           ;mcc_generated_files/eusart.c: 80:     SPBRGL = 0x44;
  3945  0798  3044               	movlw	68
  3946  0799  009B               	movwf	27	;volatile
  3947                           
  3948                           ;mcc_generated_files/eusart.c: 83:     SPBRGH = 0x00;
  3949  079A  019C               	clrf	28	;volatile
  3950                           
  3951                           ;mcc_generated_files/eusart.c: 86:     EUSART_SetFramingErrorHandler(EUSART_DefaultFrami
      +                          ngErrorHandler);
  3952  079B  3000               	movlw	0
  3953  079C  00F2               	movwf	EUSART_SetFramingErrorHandler@interruptHandler
  3954  079D  3000               	movlw	0
  3955  079E  00F3               	movwf	EUSART_SetFramingErrorHandler@interruptHandler+1
  3956  079F  318D  25BD  3187   	fcall	_EUSART_SetFramingErrorHandler
  3957                           
  3958                           ;mcc_generated_files/eusart.c: 87:     EUSART_SetOverrunErrorHandler(EUSART_DefaultOverr
      +                          unErrorHandler);
  3959  07A2  3000               	movlw	0
  3960  07A3  00F2               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler
  3961  07A4  3000               	movlw	0
  3962  07A5  00F3               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler+1
  3963  07A6  318D  25B2  3187   	fcall	_EUSART_SetOverrunErrorHandler
  3964                           
  3965                           ;mcc_generated_files/eusart.c: 88:     EUSART_SetErrorHandler(EUSART_DefaultErrorHandler
      +                          );
  3966  07A9  3000               	movlw	0
  3967  07AA  00F2               	movwf	EUSART_SetErrorHandler@interruptHandler
  3968  07AB  3000               	movlw	0
  3969  07AC  00F3               	movwf	EUSART_SetErrorHandler@interruptHandler+1
  3970  07AD  318D  25AD         	fcall	_EUSART_SetErrorHandler
  3971                           
  3972                           ;mcc_generated_files/eusart.c: 90:     eusartRxLastError.status = 0;
  3973  07AF  01E8               	clrf	_eusartRxLastError	;volatile
  3974  07B0  0008               	return
  3975  07B1                     __end_of_EUSART_Initialize:
  3976                           
  3977                           	psect	text7
  3978  0DB2                     __ptext7:	
  3979 ;; *************** function _EUSART_SetOverrunErrorHandler *****************
  3980 ;; Defined at:
  3981 ;;		line 161 in file "mcc_generated_files/eusart.c"
  3982 ;; Parameters:    Size  Location     Type
  3983 ;;  interruptHan    2    2[COMMON] PTR FTN()void 
  3984 ;;		 -> EUSART_DefaultOverrunErrorHandler(1), 
  3985 ;; Auto vars:     Size  Location     Type
  3986 ;;		None
  3987 ;; Return value:  Size  Location     Type
  3988 ;;                  1    wreg      void 
  3989 ;; Registers used:
  3990 ;;		wreg
  3991 ;; Tracked objects:
  3992 ;;		On entry : 1F/0
  3993 ;;		On exit  : 1F/0
  3994 ;;		Unchanged: 0/0
  3995 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3996 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3997 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3998 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3999 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4000 ;;Total ram usage:        2 bytes
  4001 ;; Hardware stack levels used: 1
  4002 ;; Hardware stack levels required when called: 4
  4003 ;; This function calls:
  4004 ;;		Nothing
  4005 ;; This function is called by:
  4006 ;;		_EUSART_Initialize
  4007 ;; This function uses a non-reentrant model
  4008 ;;
  4009                           
  4010                           
  4011                           ;psect for function _EUSART_SetOverrunErrorHandler
  4012  0DB2                     _EUSART_SetOverrunErrorHandler:
  4013                           
  4014                           ;mcc_generated_files/eusart.c: 162:     EUSART_OverrunErrorHandler = interruptHandler;
  4015                           
  4016                           ;incstack = 0
  4017                           ; Regs used in _EUSART_SetOverrunErrorHandler: [wreg]
  4018  0DB2  0873               	movf	EUSART_SetOverrunErrorHandler@interruptHandler+1,w
  4019  0DB3  00E2               	movwf	_EUSART_OverrunErrorHandler+1
  4020  0DB4  0872               	movf	EUSART_SetOverrunErrorHandler@interruptHandler,w
  4021  0DB5  00E1               	movwf	_EUSART_OverrunErrorHandler
  4022  0DB6  0008               	return
  4023  0DB7                     __end_of_EUSART_SetOverrunErrorHandler:
  4024                           
  4025                           	psect	text8
  4026  0DBD                     __ptext8:	
  4027 ;; *************** function _EUSART_SetFramingErrorHandler *****************
  4028 ;; Defined at:
  4029 ;;		line 157 in file "mcc_generated_files/eusart.c"
  4030 ;; Parameters:    Size  Location     Type
  4031 ;;  interruptHan    2    2[COMMON] PTR FTN()void 
  4032 ;;		 -> EUSART_DefaultFramingErrorHandler(1), 
  4033 ;; Auto vars:     Size  Location     Type
  4034 ;;		None
  4035 ;; Return value:  Size  Location     Type
  4036 ;;                  1    wreg      void 
  4037 ;; Registers used:
  4038 ;;		wreg
  4039 ;; Tracked objects:
  4040 ;;		On entry : 1F/3
  4041 ;;		On exit  : 1F/0
  4042 ;;		Unchanged: 0/0
  4043 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4044 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4045 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4046 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4047 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4048 ;;Total ram usage:        2 bytes
  4049 ;; Hardware stack levels used: 1
  4050 ;; Hardware stack levels required when called: 4
  4051 ;; This function calls:
  4052 ;;		Nothing
  4053 ;; This function is called by:
  4054 ;;		_EUSART_Initialize
  4055 ;; This function uses a non-reentrant model
  4056 ;;
  4057                           
  4058                           
  4059                           ;psect for function _EUSART_SetFramingErrorHandler
  4060  0DBD                     _EUSART_SetFramingErrorHandler:
  4061                           
  4062                           ;mcc_generated_files/eusart.c: 158:     EUSART_FramingErrorHandler = interruptHandler;
  4063                           
  4064                           ;incstack = 0
  4065                           ; Regs used in _EUSART_SetFramingErrorHandler: [wreg]
  4066  0DBD  0873               	movf	EUSART_SetFramingErrorHandler@interruptHandler+1,w
  4067  0DBE  0020               	movlb	0	; select bank0
  4068  0DBF  00E4               	movwf	_EUSART_FramingErrorHandler+1
  4069  0DC0  0872               	movf	EUSART_SetFramingErrorHandler@interruptHandler,w
  4070  0DC1  00E3               	movwf	_EUSART_FramingErrorHandler
  4071  0DC2  0008               	return
  4072  0DC3                     __end_of_EUSART_SetFramingErrorHandler:
  4073                           
  4074                           	psect	text9
  4075  0DAD                     __ptext9:	
  4076 ;; *************** function _EUSART_SetErrorHandler *****************
  4077 ;; Defined at:
  4078 ;;		line 165 in file "mcc_generated_files/eusart.c"
  4079 ;; Parameters:    Size  Location     Type
  4080 ;;  interruptHan    2    2[COMMON] PTR FTN()void 
  4081 ;;		 -> EUSART_DefaultErrorHandler(1), 
  4082 ;; Auto vars:     Size  Location     Type
  4083 ;;		None
  4084 ;; Return value:  Size  Location     Type
  4085 ;;                  1    wreg      void 
  4086 ;; Registers used:
  4087 ;;		wreg
  4088 ;; Tracked objects:
  4089 ;;		On entry : 1F/0
  4090 ;;		On exit  : 1F/0
  4091 ;;		Unchanged: 0/0
  4092 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4093 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4094 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4095 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4096 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4097 ;;Total ram usage:        2 bytes
  4098 ;; Hardware stack levels used: 1
  4099 ;; Hardware stack levels required when called: 4
  4100 ;; This function calls:
  4101 ;;		Nothing
  4102 ;; This function is called by:
  4103 ;;		_EUSART_Initialize
  4104 ;; This function uses a non-reentrant model
  4105 ;;
  4106                           
  4107                           
  4108                           ;psect for function _EUSART_SetErrorHandler
  4109  0DAD                     _EUSART_SetErrorHandler:
  4110                           
  4111                           ;mcc_generated_files/eusart.c: 166:     EUSART_ErrorHandler = interruptHandler;
  4112                           
  4113                           ;incstack = 0
  4114                           ; Regs used in _EUSART_SetErrorHandler: [wreg]
  4115  0DAD  0873               	movf	EUSART_SetErrorHandler@interruptHandler+1,w
  4116  0DAE  00E0               	movwf	_EUSART_ErrorHandler+1
  4117  0DAF  0872               	movf	EUSART_SetErrorHandler@interruptHandler,w
  4118  0DB0  00DF               	movwf	_EUSART_ErrorHandler
  4119  0DB1  0008               	return
  4120  0DB2                     __end_of_EUSART_SetErrorHandler:
  4121                           
  4122                           	psect	text10
  4123  06A8                     __ptext10:	
  4124 ;; *************** function _MTOUCH_Service_Mainloop *****************
  4125 ;; Defined at:
  4126 ;;		line 117 in file "mcc_generated_files/mtouch/mtouch.c"
  4127 ;; Parameters:    Size  Location     Type
  4128 ;;		None
  4129 ;; Auto vars:     Size  Location     Type
  4130 ;;		None
  4131 ;; Return value:  Size  Location     Type
  4132 ;;                  1    wreg      _Bool 
  4133 ;; Registers used:
  4134 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4135 ;; Tracked objects:
  4136 ;;		On entry : 0/0
  4137 ;;		On exit  : 1F/0
  4138 ;;		Unchanged: 0/0
  4139 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4140 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4141 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4142 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4143 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4144 ;;Total ram usage:        1 bytes
  4145 ;; Hardware stack levels used: 1
  4146 ;; Hardware stack levels required when called: 10
  4147 ;; This function calls:
  4148 ;;		_MTOUCH_Button_ServiceAll
  4149 ;;		_MTOUCH_Initialize
  4150 ;;		_MTOUCH_Sensor_SampleAll
  4151 ;;		_MTOUCH_Sensor_Sampled_ResetAll
  4152 ;;		_MTOUCH_Tick
  4153 ;;		_MTOUCH_needReburst
  4154 ;; This function is called by:
  4155 ;;		_main
  4156 ;; This function uses a non-reentrant model
  4157 ;;
  4158                           
  4159                           
  4160                           ;psect for function _MTOUCH_Service_Mainloop
  4161  06A8                     _MTOUCH_Service_Mainloop:
  4162                           
  4163                           ;mcc_generated_files/mtouch/mtouch.c: 120:     if(mtouch_request_init)
  4164                           
  4165                           ;incstack = 0
  4166                           ; Regs used in _MTOUCH_Service_Mainloop: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4167  06A8  0020               	movlb	0	; select bank0
  4168  06A9  086D               	movf	_mtouch_request_init,w
  4169  06AA  1903               	btfsc	3,2
  4170  06AB  2EB0               	goto	l3594
  4171                           
  4172                           ;mcc_generated_files/mtouch/mtouch.c: 121:     {;mcc_generated_files/mtouch/mtouch.c: 12
      +                          2:         MTOUCH_Initialize();
  4173  06AC  318F  271D  3186   	fcall	_MTOUCH_Initialize
  4174                           
  4175                           ;mcc_generated_files/mtouch/mtouch.c: 123:         mtouch_request_init = 0;
  4176  06AF  01ED               	clrf	_mtouch_request_init
  4177  06B0                     l3594:
  4178                           
  4179                           ;mcc_generated_files/mtouch/mtouch.c: 127:     if(mtouch_time_toScan)
  4180  06B0  086E               	movf	_mtouch_time_toScan,w
  4181  06B1  1903               	btfsc	3,2
  4182  06B2  2EB9               	goto	l3598
  4183                           
  4184                           ;mcc_generated_files/mtouch/mtouch.c: 128:     {;mcc_generated_files/mtouch/mtouch.c: 12
      +                          9:         if(MTOUCH_Sensor_SampleAll() == 0)
  4185  06B3  3187  27EB  3186   	fcall	_MTOUCH_Sensor_SampleAll
  4186  06B6  3A00               	xorlw	0
  4187  06B7  1D03               	skipz
  4188  06B8  2EBB               	goto	l3602
  4189  06B9                     l3598:
  4190                           
  4191                           ;mcc_generated_files/mtouch/mtouch.c: 130:             return 0;
  4192  06B9  3000               	movlw	0
  4193  06BA  0008               	return
  4194  06BB                     l3602:
  4195                           
  4196                           ;mcc_generated_files/mtouch/mtouch.c: 132:             MTOUCH_Button_ServiceAll();
  4197  06BB  318E  26E6  3186   	fcall	_MTOUCH_Button_ServiceAll
  4198                           
  4199                           ;mcc_generated_files/mtouch/mtouch.c: 133:             mtouch_time_toScan = MTOUCH_needR
      +                          eburst();
  4200  06BE  318D  25F9  3186   	fcall	_MTOUCH_needReburst
  4201  06C1  00B0               	movwf	??_MTOUCH_Service_Mainloop
  4202  06C2  0830               	movf	??_MTOUCH_Service_Mainloop,w
  4203  06C3  00EE               	movwf	_mtouch_time_toScan
  4204                           
  4205                           ;mcc_generated_files/mtouch/mtouch.c: 134:             MTOUCH_Sensor_Sampled_ResetAll();
  4206  06C4  318F  270A  3186   	fcall	_MTOUCH_Sensor_Sampled_ResetAll
  4207                           
  4208                           ;mcc_generated_files/mtouch/mtouch.c: 135:             MTOUCH_Tick();
  4209  06C7  318D  25A1         	fcall	_MTOUCH_Tick
  4210                           
  4211                           ;mcc_generated_files/mtouch/mtouch.c: 136:             return 1;
  4212  06C9  3001               	movlw	1
  4213  06CA  0008               	return
  4214  06CB                     __end_of_MTOUCH_Service_Mainloop:
  4215                           
  4216                           	psect	text11
  4217  0DF9                     __ptext11:	
  4218 ;; *************** function _MTOUCH_needReburst *****************
  4219 ;; Defined at:
  4220 ;;		line 159 in file "mcc_generated_files/mtouch/mtouch.c"
  4221 ;; Parameters:    Size  Location     Type
  4222 ;;		None
  4223 ;; Auto vars:     Size  Location     Type
  4224 ;;  needReburst     1    3[COMMON] _Bool 
  4225 ;; Return value:  Size  Location     Type
  4226 ;;                  1    wreg      _Bool 
  4227 ;; Registers used:
  4228 ;;		wreg, status,2, status,0, pclath, cstack
  4229 ;; Tracked objects:
  4230 ;;		On entry : 1F/0
  4231 ;;		On exit  : 1F/0
  4232 ;;		Unchanged: 0/0
  4233 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4234 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4235 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4236 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4237 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4238 ;;Total ram usage:        2 bytes
  4239 ;; Hardware stack levels used: 1
  4240 ;; Hardware stack levels required when called: 5
  4241 ;; This function calls:
  4242 ;;		_MTOUCH_Button_Reburst_Service
  4243 ;; This function is called by:
  4244 ;;		_MTOUCH_Service_Mainloop
  4245 ;; This function uses a non-reentrant model
  4246 ;;
  4247                           
  4248                           
  4249                           ;psect for function _MTOUCH_needReburst
  4250  0DF9                     _MTOUCH_needReburst:
  4251                           
  4252                           ;mcc_generated_files/mtouch/mtouch.c: 161:     _Bool needReburst = 0;
  4253                           
  4254                           ;incstack = 0
  4255                           ; Regs used in _MTOUCH_needReburst: [wreg+status,2+status,0+pclath+cstack]
  4256  0DF9  01F3               	clrf	MTOUCH_needReburst@needReburst
  4257                           
  4258                           ;mcc_generated_files/mtouch/mtouch.c: 162:     needReburst |= MTOUCH_Button_Reburst_Serv
      +                          ice();
  4259  0DFA  3180  2002         	fcall	_MTOUCH_Button_Reburst_Service
  4260  0DFC  00F2               	movwf	??_MTOUCH_needReburst
  4261  0DFD  0872               	movf	??_MTOUCH_needReburst,w
  4262  0DFE  04F3               	iorwf	MTOUCH_needReburst@needReburst,f
  4263                           
  4264                           ;mcc_generated_files/mtouch/mtouch.c: 164:     return needReburst;
  4265  0DFF  0873               	movf	MTOUCH_needReburst@needReburst,w
  4266  0E00  0008               	return
  4267  0E01                     __end_of_MTOUCH_needReburst:
  4268                           
  4269                           	psect	text12
  4270  0002                     __ptext12:	
  4271 ;; *************** function _MTOUCH_Button_Reburst_Service *****************
  4272 ;; Defined at:
  4273 ;;		line 677 in file "mcc_generated_files/mtouch/mtouch_button.c"
  4274 ;; Parameters:    Size  Location     Type
  4275 ;;		None
  4276 ;; Auto vars:     Size  Location     Type
  4277 ;;		None
  4278 ;; Return value:  Size  Location     Type
  4279 ;;                  1    wreg      _Bool 
  4280 ;; Registers used:
  4281 ;;		wreg
  4282 ;; Tracked objects:
  4283 ;;		On entry : 1F/0
  4284 ;;		On exit  : 1F/0
  4285 ;;		Unchanged: 0/0
  4286 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4287 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4288 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4289 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4290 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4291 ;;Total ram usage:        0 bytes
  4292 ;; Hardware stack levels used: 1
  4293 ;; Hardware stack levels required when called: 4
  4294 ;; This function calls:
  4295 ;;		Nothing
  4296 ;; This function is called by:
  4297 ;;		_MTOUCH_needReburst
  4298 ;; This function uses a non-reentrant model
  4299 ;;
  4300                           
  4301                           
  4302                           ;psect for function _MTOUCH_Button_Reburst_Service
  4303  0002                     _MTOUCH_Button_Reburst_Service:
  4304                           
  4305                           ;mcc_generated_files/mtouch/mtouch_button.c: 679:     return button_reburst_request;
  4306                           
  4307                           ;incstack = 0
  4308                           ; Regs used in _MTOUCH_Button_Reburst_Service: [wreg]
  4309  0002  0867               	movf	_button_reburst_request,w
  4310  0003  0008               	return
  4311  0004                     __end_of_MTOUCH_Button_Reburst_Service:
  4312                           
  4313                           	psect	text13
  4314  0DA1                     __ptext13:	
  4315 ;; *************** function _MTOUCH_Tick *****************
  4316 ;; Defined at:
  4317 ;;		line 149 in file "mcc_generated_files/mtouch/mtouch.c"
  4318 ;; Parameters:    Size  Location     Type
  4319 ;;		None
  4320 ;; Auto vars:     Size  Location     Type
  4321 ;;		None
  4322 ;; Return value:  Size  Location     Type
  4323 ;;                  1    wreg      void 
  4324 ;; Registers used:
  4325 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4326 ;; Tracked objects:
  4327 ;;		On entry : 0/0
  4328 ;;		On exit  : 1F/0
  4329 ;;		Unchanged: 0/0
  4330 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4331 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4332 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4333 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4334 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4335 ;;Total ram usage:        0 bytes
  4336 ;; Hardware stack levels used: 1
  4337 ;; Hardware stack levels required when called: 8
  4338 ;; This function calls:
  4339 ;;		_MTOUCH_Button_Tick
  4340 ;; This function is called by:
  4341 ;;		_MTOUCH_Service_Mainloop
  4342 ;; This function uses a non-reentrant model
  4343 ;;
  4344                           
  4345                           
  4346                           ;psect for function _MTOUCH_Tick
  4347  0DA1                     _MTOUCH_Tick:
  4348                           
  4349                           ;mcc_generated_files/mtouch/mtouch.c: 151:     MTOUCH_Button_Tick();
  4350                           
  4351                           ;incstack = 0
  4352                           ; Regs used in _MTOUCH_Tick: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4353  0DA1  318F  2730         	fcall	_MTOUCH_Button_Tick
  4354  0DA3  0008               	return
  4355  0DA4                     __end_of_MTOUCH_Tick:
  4356                           
  4357                           	psect	text14
  4358  0F30                     __ptext14:	
  4359 ;; *************** function _MTOUCH_Button_Tick *****************
  4360 ;; Defined at:
  4361 ;;		line 375 in file "mcc_generated_files/mtouch/mtouch_button.c"
  4362 ;; Parameters:    Size  Location     Type
  4363 ;;		None
  4364 ;; Auto vars:     Size  Location     Type
  4365 ;;  i               1    2[BANK0 ] unsigned char 
  4366 ;; Return value:  Size  Location     Type
  4367 ;;                  1    wreg      void 
  4368 ;; Registers used:
  4369 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4370 ;; Tracked objects:
  4371 ;;		On entry : 0/0
  4372 ;;		On exit  : 1F/0
  4373 ;;		Unchanged: 0/0
  4374 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4375 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4376 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4377 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4378 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4379 ;;Total ram usage:        2 bytes
  4380 ;; Hardware stack levels used: 1
  4381 ;; Hardware stack levels required when called: 7
  4382 ;; This function calls:
  4383 ;;		_Button_Tick_helper
  4384 ;; This function is called by:
  4385 ;;		_MTOUCH_Tick
  4386 ;; This function uses a non-reentrant model
  4387 ;;
  4388                           
  4389                           
  4390                           ;psect for function _MTOUCH_Button_Tick
  4391  0F30                     _MTOUCH_Button_Tick:
  4392                           
  4393                           ;mcc_generated_files/mtouch/mtouch_button.c: 377:     uint8_t i;;mcc_generated_files/mto
      +                          uch/mtouch_button.c: 378:     for (i = 0; i < 3u; i++)
  4394                           
  4395                           ;incstack = 0
  4396                           ; Regs used in _MTOUCH_Button_Tick: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4397  0F30  0020               	movlb	0	; select bank0
  4398  0F31  01A2               	clrf	MTOUCH_Button_Tick@i
  4399  0F32                     l3496:
  4400                           
  4401                           ;mcc_generated_files/mtouch/mtouch_button.c: 379:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 380:         Button_Tick_helper(&mtouch_button[i]);
  4402  0F32  0E22               	swapf	MTOUCH_Button_Tick@i,w
  4403  0F33  39F0               	andlw	240
  4404  0F34  0722               	addwf	MTOUCH_Button_Tick@i,w
  4405  0F35  3EA0               	addlw	(low (_mtouch_button| 0))& (0+255)
  4406  0F36  3184  2489  318F   	fcall	_Button_Tick_helper
  4407                           
  4408                           ;mcc_generated_files/mtouch/mtouch_button.c: 381:     }
  4409  0F39  3001               	movlw	1
  4410  0F3A  0020               	movlb	0	; select bank0
  4411  0F3B  00A1               	movwf	??_MTOUCH_Button_Tick
  4412  0F3C  0821               	movf	??_MTOUCH_Button_Tick,w
  4413  0F3D  07A2               	addwf	MTOUCH_Button_Tick@i,f
  4414  0F3E  3003               	movlw	3
  4415  0F3F  0222               	subwf	MTOUCH_Button_Tick@i,w
  4416  0F40  1803               	btfsc	3,0
  4417  0F41  0008               	return
  4418  0F42  2F32               	goto	l3496
  4419  0F43                     __end_of_MTOUCH_Button_Tick:
  4420                           
  4421                           	psect	text15
  4422  0489                     __ptext15:	
  4423 ;; *************** function _Button_Tick_helper *****************
  4424 ;; Defined at:
  4425 ;;		line 383 in file "mcc_generated_files/mtouch/mtouch_button.c"
  4426 ;; Parameters:    Size  Location     Type
  4427 ;;  button          1    wreg     PTR struct .
  4428 ;;		 -> mtouch_button(51), 
  4429 ;; Auto vars:     Size  Location     Type
  4430 ;;  button          1    0[BANK0 ] PTR struct .
  4431 ;;		 -> mtouch_button(51), 
  4432 ;; Return value:  Size  Location     Type
  4433 ;;                  1    wreg      void 
  4434 ;; Registers used:
  4435 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4436 ;; Tracked objects:
  4437 ;;		On entry : 1F/0
  4438 ;;		On exit  : 0/0
  4439 ;;		Unchanged: 0/0
  4440 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4441 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4442 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4443 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4444 ;;      Totals:         2       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4445 ;;Total ram usage:        3 bytes
  4446 ;; Hardware stack levels used: 1
  4447 ;; Hardware stack levels required when called: 6
  4448 ;; This function calls:
  4449 ;;		_MTOUCH_Sensor_Enable
  4450 ;; This function is called by:
  4451 ;;		_MTOUCH_Button_Tick
  4452 ;; This function uses a non-reentrant model
  4453 ;;
  4454                           
  4455                           
  4456                           ;psect for function _Button_Tick_helper
  4457  0489                     _Button_Tick_helper:
  4458                           
  4459                           ;incstack = 0
  4460                           ; Regs used in _Button_Tick_helper: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4461                           ;Button_Tick_helper@button stored from wreg
  4462  0489  00A0               	movwf	Button_Tick_helper@button
  4463                           
  4464                           ;mcc_generated_files/mtouch/mtouch_button.c: 383: static void Button_Tick_helper(mtouch_
      +                          button_t* button);mcc_generated_files/mtouch/mtouch_button.c: 384: {;mcc_generated_files
      +                          /mtouch/mtouch_button.c: 386:     if ((button->state) == MTOUCH_BUTTON_STATE_pressed)
  4465  048A  0820               	movf	Button_Tick_helper@button,w
  4466  048B  3E02               	addlw	2
  4467  048C  0086               	movwf	6
  4468  048D  0187               	clrf	7
  4469  048E  3003               	movlw	3
  4470  048F  0601               	xorwf	1,w
  4471  0490  1D03               	btfss	3,2
  4472  0491  2CAC               	goto	l3446
  4473                           
  4474                           ;mcc_generated_files/mtouch/mtouch_button.c: 387:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 388:         (button->counter)++;
  4475  0492  0820               	movf	Button_Tick_helper@button,w
  4476  0493  3E0A               	addlw	10
  4477  0494  0086               	movwf	6
  4478  0495  0187               	clrf	7
  4479  0496  3001               	movlw	1
  4480  0497  0781               	addwf	1,f
  4481  0498  3141               	addfsr 1,1
  4482  0499  1803               	skipnc
  4483  049A  0A81               	incf	1,f
  4484                           
  4485                           ;mcc_generated_files/mtouch/mtouch_button.c: 389:         if (button->counter == (mtouch
      +                          _button_statecounter_t)0)
  4486  049B  0820               	movf	Button_Tick_helper@button,w
  4487  049C  3E0A               	addlw	10
  4488  049D  0086               	movwf	6
  4489  049E  0187               	clrf	7
  4490  049F  0016               	moviw fsr1++
  4491  04A0  0401               	iorwf	1,w
  4492  04A1  1D03               	btfss	3,2
  4493  04A2  0008               	return
  4494                           
  4495                           ;mcc_generated_files/mtouch/mtouch_button.c: 390:         {;mcc_generated_files/mtouch/m
      +                          touch_button.c: 391:             button->counter = (mtouch_button_statecounter_t)0xFFFF;
  4496  04A3  0820               	movf	Button_Tick_helper@button,w
  4497  04A4  3E0A               	addlw	10
  4498  04A5  0086               	movwf	6
  4499  04A6  0187               	clrf	7
  4500  04A7  30FF               	movlw	255
  4501  04A8  3FC0               	movwi [0]fsr1
  4502  04A9  30FF               	movlw	255
  4503  04AA  3FC1               	movwi [1]fsr1
  4504  04AB  0008               	return
  4505  04AC                     l3446:
  4506  04AC  0820               	movf	Button_Tick_helper@button,w
  4507  04AD  3E02               	addlw	2
  4508  04AE  0086               	movwf	6
  4509  04AF  0187               	clrf	7
  4510  04B0  3005               	movlw	5
  4511  04B1  0601               	xorwf	1,w
  4512  04B2  1D03               	btfss	3,2
  4513  04B3  0008               	return
  4514                           
  4515                           ;mcc_generated_files/mtouch/mtouch_button.c: 396:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 397:         (button->counter)++;
  4516  04B4  0820               	movf	Button_Tick_helper@button,w
  4517  04B5  3E0A               	addlw	10
  4518  04B6  0086               	movwf	6
  4519  04B7  0187               	clrf	7
  4520  04B8  3001               	movlw	1
  4521  04B9  0781               	addwf	1,f
  4522  04BA  3141               	addfsr 1,1
  4523  04BB  1803               	skipnc
  4524  04BC  0A81               	incf	1,f
  4525                           
  4526                           ;mcc_generated_files/mtouch/mtouch_button.c: 398:         if(button->counter >= ((mtouch
      +                          _button_baselinecounter_t)64u))
  4527  04BD  0820               	movf	Button_Tick_helper@button,w
  4528  04BE  3E0A               	addlw	10
  4529  04BF  0086               	movwf	6
  4530  04C0  0187               	clrf	7
  4531  04C1  3F40               	moviw [0]fsr1
  4532  04C2  00F8               	movwf	??_Button_Tick_helper
  4533  04C3  3F41               	moviw [1]fsr1
  4534  04C4  00F9               	movwf	??_Button_Tick_helper+1
  4535  04C5  3000               	movlw	0
  4536  04C6  0279               	subwf	??_Button_Tick_helper+1,w
  4537  04C7  3040               	movlw	64
  4538  04C8  1903               	skipnz
  4539  04C9  0278               	subwf	??_Button_Tick_helper,w
  4540  04CA  1C03               	skipc
  4541  04CB  0008               	return
  4542                           
  4543                           ;mcc_generated_files/mtouch/mtouch_button.c: 399:         {;mcc_generated_files/mtouch/m
      +                          touch_button.c: 400:             button->counter = (mtouch_button_statecounter_t)0;
  4544  04CC  0820               	movf	Button_Tick_helper@button,w
  4545  04CD  3E0A               	addlw	10
  4546  04CE  0086               	movwf	6
  4547  04CF  0187               	clrf	7
  4548  04D0  3000               	movlw	0
  4549  04D1  3FC0               	movwi [0]fsr1
  4550  04D2  3FC1               	movwi [1]fsr1
  4551                           
  4552                           ;mcc_generated_files/mtouch/mtouch_button.c: 401:             MTOUCH_Sensor_Enable(butto
      +                          n->sensor);
  4553  04D3  0A20               	incf	Button_Tick_helper@button,w
  4554  04D4  0086               	movwf	6
  4555  04D5  0187               	clrf	7
  4556  04D6  0801               	movf	1,w
  4557  04D7  318E  267D         	fcall	_MTOUCH_Sensor_Enable
  4558  04D9  0008               	return
  4559  04DA                     __end_of_Button_Tick_helper:
  4560                           
  4561                           	psect	text16
  4562  07EB                     __ptext16:	
  4563 ;; *************** function _MTOUCH_Sensor_SampleAll *****************
  4564 ;; Defined at:
  4565 ;;		line 188 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  4566 ;; Parameters:    Size  Location     Type
  4567 ;;		None
  4568 ;; Auto vars:     Size  Location     Type
  4569 ;;  sensor          1   15[BANK0 ] enum E2707
  4570 ;; Return value:  Size  Location     Type
  4571 ;;                  1    wreg      _Bool 
  4572 ;; Registers used:
  4573 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4574 ;; Tracked objects:
  4575 ;;		On entry : 1F/0
  4576 ;;		On exit  : 1F/0
  4577 ;;		Unchanged: 0/0
  4578 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4579 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4580 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4581 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4582 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4583 ;;Total ram usage:        2 bytes
  4584 ;; Hardware stack levels used: 1
  4585 ;; Hardware stack levels required when called: 9
  4586 ;; This function calls:
  4587 ;;		_Sensor_Service
  4588 ;; This function is called by:
  4589 ;;		_MTOUCH_Service_Mainloop
  4590 ;; This function uses a non-reentrant model
  4591 ;;
  4592                           
  4593                           
  4594                           ;psect for function _MTOUCH_Sensor_SampleAll
  4595  07EB                     _MTOUCH_Sensor_SampleAll:
  4596                           
  4597                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 190:     enum mtouch_sensor_names sensor;;m
      +                          cc_generated_files/mtouch/mtouch_sensor.c: 191:     for (sensor = 0; sensor < 3u; sensor
      +                          ++)
  4598                           
  4599                           ;incstack = 0
  4600                           ; Regs used in _MTOUCH_Sensor_SampleAll: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4601  07EB  01AF               	clrf	MTOUCH_Sensor_SampleAll@sensor
  4602  07EC                     l3558:
  4603                           
  4604                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 192:     {;mcc_generated_files/mtouch/mtouc
      +                          h_sensor.c: 193:         if(Sensor_Service(sensor)!= MTOUCH_SENSOR_ERROR_none)
  4605  07EC  082F               	movf	MTOUCH_Sensor_SampleAll@sensor,w
  4606  07ED  3184  24DA  3187   	fcall	_Sensor_Service
  4607  07F0  3A00               	xorlw	0
  4608  07F1  1903               	skipnz
  4609  07F2  2FF5               	goto	l3564
  4610                           
  4611                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 194:             return 0;
  4612  07F3  3000               	movlw	0
  4613  07F4  0008               	return
  4614  07F5                     l3564:
  4615                           
  4616                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 195:     }
  4617  07F5  3001               	movlw	1
  4618  07F6  00AE               	movwf	??_MTOUCH_Sensor_SampleAll
  4619  07F7  082E               	movf	??_MTOUCH_Sensor_SampleAll,w
  4620  07F8  07AF               	addwf	MTOUCH_Sensor_SampleAll@sensor,f
  4621  07F9  3003               	movlw	3
  4622  07FA  022F               	subwf	MTOUCH_Sensor_SampleAll@sensor,w
  4623  07FB  1C03               	skipc
  4624  07FC  2FEC               	goto	l3558
  4625                           
  4626                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 196:     return 1;
  4627  07FD  3001               	movlw	1
  4628  07FE  0008               	return
  4629  07FF                     __end_of_MTOUCH_Sensor_SampleAll:
  4630                           
  4631                           	psect	text17
  4632  04DA                     __ptext17:	
  4633 ;; *************** function _Sensor_Service *****************
  4634 ;; Defined at:
  4635 ;;		line 234 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  4636 ;; Parameters:    Size  Location     Type
  4637 ;;  name            1    wreg     enum E2707
  4638 ;; Auto vars:     Size  Location     Type
  4639 ;;  name            1   11[BANK0 ] enum E2707
  4640 ;;  sensor          1   13[BANK0 ] PTR struct .
  4641 ;;		 -> mtouch_sensor(27), 
  4642 ;;  error           1   12[BANK0 ] enum E2711
  4643 ;; Return value:  Size  Location     Type
  4644 ;;                  1    wreg      enum E2711
  4645 ;; Registers used:
  4646 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4647 ;; Tracked objects:
  4648 ;;		On entry : 1F/0
  4649 ;;		On exit  : 1F/0
  4650 ;;		Unchanged: 0/0
  4651 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4652 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4653 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4654 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4655 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4656 ;;Total ram usage:        5 bytes
  4657 ;; Hardware stack levels used: 1
  4658 ;; Hardware stack levels required when called: 8
  4659 ;; This function calls:
  4660 ;;		_Sensor_Acquisition
  4661 ;;		_Sensor_DefaultCallback
  4662 ;;		_Sensor_RawSample_Update
  4663 ;;		_Sensor_isEnabled
  4664 ;;		_Sensor_setSampled
  4665 ;;		___bmul
  4666 ;; This function is called by:
  4667 ;;		_MTOUCH_Sensor_SampleAll
  4668 ;; This function uses a non-reentrant model
  4669 ;;
  4670                           
  4671                           
  4672                           ;psect for function _Sensor_Service
  4673  04DA                     _Sensor_Service:
  4674                           
  4675                           ;incstack = 0
  4676                           ; Regs used in _Sensor_Service: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4677                           ;Sensor_Service@name stored from wreg
  4678  04DA  00AB               	movwf	Sensor_Service@name
  4679                           
  4680                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 234: static enum mtouch_sensor_error Sensor
      +                          _Service(enum mtouch_sensor_names name);mcc_generated_files/mtouch/mtouch_sensor.c: 235:
      +                           {;mcc_generated_files/mtouch/mtouch_sensor.c: 236:     mtouch_sensor_t* sensor = &mtouc
      +                          h_sensor[name];
  4681  04DB  3009               	movlw	9
  4682  04DC  00A9               	movwf	??_Sensor_Service
  4683  04DD  0829               	movf	??_Sensor_Service,w
  4684  04DE  00F2               	movwf	___bmul@multiplicand
  4685  04DF  082B               	movf	Sensor_Service@name,w
  4686  04E0  318E  265B  3184   	fcall	___bmul
  4687  04E3  3ED3               	addlw	(low (_mtouch_sensor| 0))& (0+255)
  4688  04E4  0020               	movlb	0	; select bank0
  4689  04E5  00AA               	movwf	??_Sensor_Service+1
  4690  04E6  082A               	movf	??_Sensor_Service+1,w
  4691  04E7  00AD               	movwf	Sensor_Service@sensor
  4692                           
  4693                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 237:     enum mtouch_sensor_error error = S
      +                          ensor_Acquisition(sensor);
  4694  04E8  082D               	movf	Sensor_Service@sensor,w
  4695  04E9  3185  25B8  3184   	fcall	_Sensor_Acquisition
  4696  04EC  00A9               	movwf	??_Sensor_Service
  4697  04ED  0829               	movf	??_Sensor_Service,w
  4698  04EE  00AC               	movwf	Sensor_Service@error
  4699                           
  4700                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 240:     switch(error)
  4701  04EF  2D07               	goto	l3514
  4702  04F0                     l3506:
  4703                           
  4704                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 245:             {;mcc_generated_files/mtou
      +                          ch/mtouch_sensor.c: 250:                 if(!lowpowerActivated)
  4705  04F0  082D               	movf	Sensor_Service@sensor,w
  4706  04F1  318E  2621  3184   	fcall	_Sensor_isEnabled
  4707  04F4  3A00               	xorlw	0
  4708  04F5  1903               	skipnz
  4709  04F6  2D24               	goto	l3516
  4710                           
  4711                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 251:                 {;mcc_generated_files/
      +                          mtouch/mtouch_sensor.c: 252:                     Sensor_RawSample_Update(sensor);
  4712  04F7  082D               	movf	Sensor_Service@sensor,w
  4713  04F8  318F  279B  3184   	fcall	_Sensor_RawSample_Update
  4714                           
  4715                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 254:                 Sensor_setSampled(sens
      +                          or);
  4716                           
  4717                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 253:                 }
  4718  04FB  082D               	movf	Sensor_Service@sensor,w
  4719  04FC  318D  25EB  3184   	fcall	_Sensor_setSampled
  4720                           
  4721                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 255:                 callback_sampled(name)
      +                          ;
  4722  04FF  082B               	movf	Sensor_Service@name,w
  4723  0500  00A9               	movwf	??_Sensor_Service
  4724  0501  0829               	movf	??_Sensor_Service,w
  4725  0502  00F2               	movwf	Sensor_DefaultCallback@sensor
  4726  0503  3187  27FF  3184   	fcall	_Sensor_DefaultCallback
  4727  0506  2D24               	goto	l3516
  4728  0507                     l3514:
  4729  0507  082C               	movf	Sensor_Service@error,w
  4730  0508  00A9               	movwf	??_Sensor_Service
  4731  0509  01AA               	clrf	??_Sensor_Service+1
  4732  050A  1BA9               	btfsc	??_Sensor_Service,7
  4733  050B  03AA               	decf	??_Sensor_Service+1,f
  4734                           
  4735                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
  4736                           ; Switch size 1, requested type "simple"
  4737                           ; Number of cases is 2, Range of values is 0 to 255
  4738                           ; switch strategies available:
  4739                           ; Name         Instructions Cycles
  4740                           ; simple_byte            7     4 (average)
  4741                           ; jumptable            260     6 (fixed)
  4742                           ;	Chosen strategy is simple_byte
  4743  050C  082A               	movf	??_Sensor_Service+1,w
  4744  050D  3A00               	xorlw	0	; case 0
  4745  050E  1903               	skipnz
  4746  050F  2D14               	goto	l3720
  4747  0510  3AFF               	xorlw	255	; case 255
  4748  0511  1903               	skipnz
  4749  0512  2D19               	goto	l3722
  4750  0513  2D24               	goto	l3516
  4751  0514                     l3720:
  4752                           
  4753                           ; Switch size 1, requested type "simple"
  4754                           ; Number of cases is 1, Range of values is 0 to 0
  4755                           ; switch strategies available:
  4756                           ; Name         Instructions Cycles
  4757                           ; simple_byte            4     3 (average)
  4758                           ; direct_byte            8     6 (fixed)
  4759                           ; jumptable            260     6 (fixed)
  4760                           ;	Chosen strategy is simple_byte
  4761  0514  0829               	movf	??_Sensor_Service,w
  4762  0515  3A00               	xorlw	0	; case 0
  4763  0516  1903               	skipnz
  4764  0517  2CF0               	goto	l3506
  4765  0518  2D24               	goto	l3516
  4766  0519                     l3722:
  4767                           
  4768                           ; Switch size 1, requested type "simple"
  4769                           ; Number of cases is 3, Range of values is 253 to 255
  4770                           ; switch strategies available:
  4771                           ; Name         Instructions Cycles
  4772                           ; simple_byte           10     6 (average)
  4773                           ; direct_byte           11     5 (fixed)
  4774                           ; jumptable            263     9 (fixed)
  4775                           ;	Chosen strategy is simple_byte
  4776  0519  0829               	movf	??_Sensor_Service,w
  4777  051A  3AFD               	xorlw	253	; case 253
  4778  051B  1903               	skipnz
  4779  051C  2D24               	goto	l3516
  4780  051D  3A03               	xorlw	3	; case 254
  4781  051E  1903               	skipnz
  4782  051F  2D24               	goto	l3516
  4783  0520  3A01               	xorlw	1	; case 255
  4784  0521  1903               	skipnz
  4785  0522  2D24               	goto	l3516
  4786  0523  2D24               	goto	l3516
  4787  0524                     l3516:
  4788                           
  4789                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 267:     return error;
  4790  0524  082C               	movf	Sensor_Service@error,w
  4791  0525  0008               	return
  4792  0526                     __end_of_Sensor_Service:
  4793                           
  4794                           	psect	text18
  4795  0DEB                     __ptext18:	
  4796 ;; *************** function _Sensor_setSampled *****************
  4797 ;; Defined at:
  4798 ;;		line 570 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  4799 ;; Parameters:    Size  Location     Type
  4800 ;;  sensor          1    wreg     PTR struct .
  4801 ;;		 -> mtouch_sensor(27), 
  4802 ;; Auto vars:     Size  Location     Type
  4803 ;;  sensor          1    2[COMMON] PTR struct .
  4804 ;;		 -> mtouch_sensor(27), 
  4805 ;; Return value:  Size  Location     Type
  4806 ;;                  1    wreg      void 
  4807 ;; Registers used:
  4808 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4809 ;; Tracked objects:
  4810 ;;		On entry : 1F/0
  4811 ;;		On exit  : 1F/0
  4812 ;;		Unchanged: 1F/0
  4813 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4814 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4815 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4816 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4817 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4818 ;;Total ram usage:        1 bytes
  4819 ;; Hardware stack levels used: 1
  4820 ;; Hardware stack levels required when called: 4
  4821 ;; This function calls:
  4822 ;;		Nothing
  4823 ;; This function is called by:
  4824 ;;		_Sensor_Service
  4825 ;; This function uses a non-reentrant model
  4826 ;;
  4827                           
  4828                           
  4829                           ;psect for function _Sensor_setSampled
  4830  0DEB                     _Sensor_setSampled:
  4831                           
  4832                           ;incstack = 0
  4833                           ; Regs used in _Sensor_setSampled: [wreg+fsr1l+fsr1h+status,2+status,0]
  4834                           ;Sensor_setSampled@sensor stored from wreg
  4835  0DEB  00F2               	movwf	Sensor_setSampled@sensor
  4836                           
  4837                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 570: static __attribute__((inline)) void Se
      +                          nsor_setSampled(mtouch_sensor_t* sensor);mcc_generated_files/mtouch/mtouch_sensor.c: 571
      +                          : {;mcc_generated_files/mtouch/mtouch_sensor.c: 572:     sensor->sampled = 1;
  4838  0DEC  0872               	movf	Sensor_setSampled@sensor,w
  4839  0DED  3E08               	addlw	8
  4840  0DEE  0086               	movwf	6
  4841  0DEF  0187               	clrf	7
  4842  0DF0  1481               	bsf	1,1
  4843  0DF1  0008               	return
  4844  0DF2                     __end_of_Sensor_setSampled:
  4845                           
  4846                           	psect	text19
  4847  0F9B                     __ptext19:	
  4848 ;; *************** function _Sensor_RawSample_Update *****************
  4849 ;; Defined at:
  4850 ;;		line 431 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  4851 ;; Parameters:    Size  Location     Type
  4852 ;;  sensor          1    wreg     PTR struct .
  4853 ;;		 -> mtouch_sensor(27), 
  4854 ;; Auto vars:     Size  Location     Type
  4855 ;;  sensor          1    2[COMMON] PTR struct .
  4856 ;;		 -> mtouch_sensor(27), 
  4857 ;; Return value:  Size  Location     Type
  4858 ;;                  1    wreg      void 
  4859 ;; Registers used:
  4860 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4861 ;; Tracked objects:
  4862 ;;		On entry : 1F/0
  4863 ;;		On exit  : 1F/0
  4864 ;;		Unchanged: 0/0
  4865 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4866 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4867 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4868 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4869 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4870 ;;Total ram usage:        1 bytes
  4871 ;; Hardware stack levels used: 1
  4872 ;; Hardware stack levels required when called: 4
  4873 ;; This function calls:
  4874 ;;		Nothing
  4875 ;; This function is called by:
  4876 ;;		_Sensor_Service
  4877 ;; This function uses a non-reentrant model
  4878 ;;
  4879                           
  4880                           
  4881                           ;psect for function _Sensor_RawSample_Update
  4882  0F9B                     _Sensor_RawSample_Update:
  4883                           
  4884                           ;incstack = 0
  4885                           ; Regs used in _Sensor_RawSample_Update: [wreg+fsr1l+fsr1h+status,2+status,0]
  4886                           ;Sensor_RawSample_Update@sensor stored from wreg
  4887  0F9B  00F2               	movwf	Sensor_RawSample_Update@sensor
  4888  0F9C  1F8B               	btfss	11,7	;volatile
  4889  0F9D  2FA9               	goto	l2606
  4890  0F9E  138B               	bcf	11,7	;volatile
  4891  0F9F  0872               	movf	Sensor_RawSample_Update@sensor,w
  4892  0FA0  3E06               	addlw	6
  4893  0FA1  0086               	movwf	6
  4894  0FA2  0187               	clrf	7
  4895  0FA3  0865               	movf	_packet_sample,w
  4896  0FA4  3FC0               	movwi [0]fsr1
  4897  0FA5  0866               	movf	_packet_sample+1,w
  4898  0FA6  3FC1               	movwi [1]fsr1
  4899  0FA7  178B               	bsf	11,7	;volatile
  4900  0FA8  0008               	return
  4901  0FA9                     l2606:
  4902  0FA9  0872               	movf	Sensor_RawSample_Update@sensor,w
  4903  0FAA  3E06               	addlw	6
  4904  0FAB  0086               	movwf	6
  4905  0FAC  0187               	clrf	7
  4906  0FAD  0865               	movf	_packet_sample,w
  4907  0FAE  3FC0               	movwi [0]fsr1
  4908  0FAF  0866               	movf	_packet_sample+1,w
  4909  0FB0  3FC1               	movwi [1]fsr1
  4910  0FB1  0008               	return
  4911  0FB2                     __end_of_Sensor_RawSample_Update:
  4912                           
  4913                           	psect	text20
  4914  07FF                     __ptext20:	
  4915 ;; *************** function _Sensor_DefaultCallback *****************
  4916 ;; Defined at:
  4917 ;;		line 451 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  4918 ;; Parameters:    Size  Location     Type
  4919 ;;  sensor          1    2[COMMON] enum E2707
  4920 ;; Auto vars:     Size  Location     Type
  4921 ;;		None
  4922 ;; Return value:  Size  Location     Type
  4923 ;;                  1    wreg      void 
  4924 ;; Registers used:
  4925 ;;		None
  4926 ;; Tracked objects:
  4927 ;;		On entry : 1F/0
  4928 ;;		On exit  : 1F/0
  4929 ;;		Unchanged: 1F/0
  4930 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4931 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4932 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4933 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4934 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4935 ;;Total ram usage:        1 bytes
  4936 ;; Hardware stack levels used: 1
  4937 ;; Hardware stack levels required when called: 4
  4938 ;; This function calls:
  4939 ;;		Nothing
  4940 ;; This function is called by:
  4941 ;;		_Sensor_Service
  4942 ;; This function uses a non-reentrant model
  4943 ;;
  4944                           
  4945                           
  4946                           ;psect for function _Sensor_DefaultCallback
  4947  07FF                     _Sensor_DefaultCallback:
  4948                           
  4949                           ;incstack = 0
  4950                           ; Regs used in _Sensor_DefaultCallback: []
  4951  07FF  0008               	return
  4952  0800                     __end_of_Sensor_DefaultCallback:
  4953                           
  4954                           	psect	text21
  4955  05B8                     __ptext21:	
  4956 ;; *************** function _Sensor_Acquisition *****************
  4957 ;; Defined at:
  4958 ;;		line 281 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  4959 ;; Parameters:    Size  Location     Type
  4960 ;;  sensor          1    wreg     PTR struct .
  4961 ;;		 -> mtouch_sensor(27), 
  4962 ;; Auto vars:     Size  Location     Type
  4963 ;;  sensor          1    8[BANK0 ] PTR struct .
  4964 ;;		 -> mtouch_sensor(27), 
  4965 ;;  retry           1    7[BANK0 ] unsigned char 
  4966 ;; Return value:  Size  Location     Type
  4967 ;;                  1    wreg      enum E2711
  4968 ;; Registers used:
  4969 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4970 ;; Tracked objects:
  4971 ;;		On entry : 1F/0
  4972 ;;		On exit  : 1F/0
  4973 ;;		Unchanged: 0/0
  4974 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4975 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4976 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4977 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4978 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4979 ;;Total ram usage:        3 bytes
  4980 ;; Hardware stack levels used: 1
  4981 ;; Hardware stack levels required when called: 7
  4982 ;; This function calls:
  4983 ;;		_Sensor_Acq_ExecutePacket
  4984 ;;		_Sensor_isEnabled
  4985 ;;		_Sensor_setActive
  4986 ;;		_Sensor_setInactive
  4987 ;;		_abs
  4988 ;; This function is called by:
  4989 ;;		_Sensor_Service
  4990 ;; This function uses a non-reentrant model
  4991 ;;
  4992                           
  4993                           
  4994                           ;psect for function _Sensor_Acquisition
  4995  05B8                     _Sensor_Acquisition:
  4996                           
  4997                           ;incstack = 0
  4998                           ; Regs used in _Sensor_Acquisition: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4999                           ;Sensor_Acquisition@sensor stored from wreg
  5000  05B8  00A8               	movwf	Sensor_Acquisition@sensor
  5001                           
  5002                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 281: static enum mtouch_sensor_error Sensor
      +                          _Acquisition(mtouch_sensor_t* sensor);mcc_generated_files/mtouch/mtouch_sensor.c: 282: {
      +                          ;mcc_generated_files/mtouch/mtouch_sensor.c: 284:     uint8_t retry = (uint8_t)5u;
  5003  05B9  3005               	movlw	5
  5004  05BA  00A6               	movwf	??_Sensor_Acquisition
  5005  05BB  0826               	movf	??_Sensor_Acquisition,w
  5006  05BC  00A7               	movwf	Sensor_Acquisition@retry
  5007                           
  5008                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 286:     if(!Sensor_isEnabled(sensor))
  5009  05BD  0828               	movf	Sensor_Acquisition@sensor,w
  5010  05BE  318E  2621  3185   	fcall	_Sensor_isEnabled
  5011  05C1  3A00               	xorlw	0
  5012  05C2  1D03               	skipz
  5013  05C3  2DCD               	goto	l3306
  5014  05C4                     l3296:
  5015                           
  5016                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 287:         return MTOUCH_SENSOR_ERROR_non
      +                          e;
  5017  05C4  3000               	movlw	0
  5018  05C5  0008               	return
  5019  05C6                     l3300:
  5020                           
  5021                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 290:     {;mcc_generated_files/mtouch/mtouc
      +                          h_sensor.c: 291:         retry--;
  5022  05C6  3001               	movlw	1
  5023  05C7  02A7               	subwf	Sensor_Acquisition@retry,f
  5024                           
  5025                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 292:         if(retry == 0)
  5026  05C8  0827               	movf	Sensor_Acquisition@retry,w
  5027  05C9  1D03               	btfss	3,2
  5028  05CA  2DCD               	goto	l3306
  5029                           
  5030                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 293:         {;mcc_generated_files/mtouch/m
      +                          touch_sensor.c: 294:             return MTOUCH_SENSOR_ERROR_tooManyRetries;
  5031  05CB  30FC               	movlw	252
  5032  05CC  0008               	return
  5033  05CD                     l3306:
  5034                           
  5035                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 289:     while(Sensor_Acq_ExecutePacket(sen
      +                          sor))
  5036  05CD  0828               	movf	Sensor_Acquisition@sensor,w
  5037  05CE  3183  238D  3185   	fcall	_Sensor_Acq_ExecutePacket
  5038  05D1  3A00               	xorlw	0
  5039  05D2  1D03               	skipz
  5040  05D3  2DC6               	goto	l3300
  5041                           
  5042                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 298:     if((mtouch_sensor_packetsample_t)a
      +                          bs(packet_sample - sensor->rawSample) > 100u)
  5043  05D4  0828               	movf	Sensor_Acquisition@sensor,w
  5044  05D5  3E06               	addlw	6
  5045  05D6  0086               	movwf	6
  5046  05D7  0187               	clrf	7
  5047  05D8  3F40               	moviw [0]fsr1
  5048  05D9  0265               	subwf	_packet_sample,w
  5049  05DA  00F2               	movwf	abs@a
  5050  05DB  3F41               	moviw [1]fsr1
  5051  05DC  3B66               	subwfb	_packet_sample+1,w
  5052  05DD  00F3               	movwf	abs@a+1
  5053  05DE  318F  2784  3185   	fcall	_abs
  5054  05E1  3000               	movlw	0
  5055  05E2  0273               	subwf	?_abs+1,w
  5056  05E3  3065               	movlw	101
  5057  05E4  1903               	skipnz
  5058  05E5  0272               	subwf	?_abs,w
  5059  05E6  1C03               	skipc
  5060  05E7  2DEE               	goto	l3312
  5061                           
  5062                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 299:     {;mcc_generated_files/mtouch/mtouc
      +                          h_sensor.c: 300:         Sensor_setActive(sensor);
  5063  05E8  0020               	movlb	0	; select bank0
  5064  05E9  0828               	movf	Sensor_Acquisition@sensor,w
  5065  05EA  318D  25DD  3185   	fcall	_Sensor_setActive
  5066                           
  5067                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 301:     }
  5068  05ED  2DC4               	goto	l3296
  5069  05EE                     l3312:
  5070                           
  5071                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 303:     {;mcc_generated_files/mtouch/mtouc
      +                          h_sensor.c: 304:         Sensor_setInactive(sensor);
  5072  05EE  0020               	movlb	0	; select bank0
  5073  05EF  0828               	movf	Sensor_Acquisition@sensor,w
  5074  05F0  318D  25E4  3185   	fcall	_Sensor_setInactive
  5075  05F3  2DC4               	goto	l3296
  5076  05F4                     __end_of_Sensor_Acquisition:
  5077                           
  5078                           	psect	text22
  5079  0F84                     __ptext22:	
  5080 ;; *************** function _abs *****************
  5081 ;; Defined at:
  5082 ;;		line 1 in file "/Applications/microchip/xc8/v2.32/pic/sources/c99/common/abs.c"
  5083 ;; Parameters:    Size  Location     Type
  5084 ;;  a               2    2[COMMON] int 
  5085 ;; Auto vars:     Size  Location     Type
  5086 ;;		None
  5087 ;; Return value:  Size  Location     Type
  5088 ;;                  2    2[COMMON] int 
  5089 ;; Registers used:
  5090 ;;		wreg, status,2, status,0
  5091 ;; Tracked objects:
  5092 ;;		On entry : 1F/0
  5093 ;;		On exit  : 0/0
  5094 ;;		Unchanged: 0/0
  5095 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5096 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5097 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5098 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5099 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5100 ;;Total ram usage:        4 bytes
  5101 ;; Hardware stack levels used: 1
  5102 ;; Hardware stack levels required when called: 4
  5103 ;; This function calls:
  5104 ;;		Nothing
  5105 ;; This function is called by:
  5106 ;;		_Sensor_Acquisition
  5107 ;; This function uses a non-reentrant model
  5108 ;;
  5109                           
  5110                           
  5111                           ;psect for function _abs
  5112  0F84                     _abs:
  5113                           
  5114                           ;incstack = 0
  5115                           ; Regs used in _abs: [wreg+status,2+status,0]
  5116  0F84  0873               	movf	abs@a+1,w
  5117  0F85  3A80               	xorlw	128
  5118  0F86  00F4               	movwf	??_abs
  5119  0F87  3080               	movlw	128
  5120  0F88  0274               	subwf	??_abs,w
  5121  0F89  1D03               	skipz
  5122  0F8A  2F8D               	goto	u995
  5123  0F8B  3001               	movlw	1
  5124  0F8C  0272               	subwf	abs@a,w
  5125  0F8D                     u995:
  5126  0F8D  1803               	skipnc
  5127  0F8E  0008               	return
  5128  0F8F  0972               	comf	abs@a,w
  5129  0F90  00F4               	movwf	??_abs
  5130  0F91  0973               	comf	abs@a+1,w
  5131  0F92  00F5               	movwf	??_abs+1
  5132  0F93  0AF4               	incf	??_abs,f
  5133  0F94  1903               	skipnz
  5134  0F95  0AF5               	incf	??_abs+1,f
  5135  0F96  0874               	movf	??_abs,w
  5136  0F97  00F2               	movwf	?_abs
  5137  0F98  0875               	movf	??_abs+1,w
  5138  0F99  00F3               	movwf	?_abs+1
  5139  0F9A  0008               	return
  5140  0F9B                     __end_of_abs:
  5141                           
  5142                           	psect	text23
  5143  0DE4                     __ptext23:	
  5144 ;; *************** function _Sensor_setInactive *****************
  5145 ;; Defined at:
  5146 ;;		line 516 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  5147 ;; Parameters:    Size  Location     Type
  5148 ;;  sensor          1    wreg     PTR struct .
  5149 ;;		 -> mtouch_sensor(27), 
  5150 ;; Auto vars:     Size  Location     Type
  5151 ;;  sensor          1    2[COMMON] PTR struct .
  5152 ;;		 -> mtouch_sensor(27), 
  5153 ;; Return value:  Size  Location     Type
  5154 ;;                  1    wreg      void 
  5155 ;; Registers used:
  5156 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5157 ;; Tracked objects:
  5158 ;;		On entry : 1F/0
  5159 ;;		On exit  : 1F/0
  5160 ;;		Unchanged: 1F/0
  5161 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5162 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5163 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5164 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5165 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5166 ;;Total ram usage:        1 bytes
  5167 ;; Hardware stack levels used: 1
  5168 ;; Hardware stack levels required when called: 4
  5169 ;; This function calls:
  5170 ;;		Nothing
  5171 ;; This function is called by:
  5172 ;;		_Sensor_Acquisition
  5173 ;; This function uses a non-reentrant model
  5174 ;;
  5175                           
  5176                           
  5177                           ;psect for function _Sensor_setInactive
  5178  0DE4                     _Sensor_setInactive:
  5179                           
  5180                           ;incstack = 0
  5181                           ; Regs used in _Sensor_setInactive: [wreg+fsr1l+fsr1h+status,2+status,0]
  5182                           ;Sensor_setInactive@sensor stored from wreg
  5183  0DE4  00F2               	movwf	Sensor_setInactive@sensor
  5184                           
  5185                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 516: static __attribute__((inline)) void Se
      +                          nsor_setInactive(mtouch_sensor_t* sensor);mcc_generated_files/mtouch/mtouch_sensor.c: 51
      +                          7: {;mcc_generated_files/mtouch/mtouch_sensor.c: 518:     sensor->active = 0;
  5186  0DE5  0872               	movf	Sensor_setInactive@sensor,w
  5187  0DE6  3E08               	addlw	8
  5188  0DE7  0086               	movwf	6
  5189  0DE8  0187               	clrf	7
  5190  0DE9  1101               	bcf	1,2
  5191  0DEA  0008               	return
  5192  0DEB                     __end_of_Sensor_setInactive:
  5193                           
  5194                           	psect	text24
  5195  0DDD                     __ptext24:	
  5196 ;; *************** function _Sensor_setActive *****************
  5197 ;; Defined at:
  5198 ;;		line 511 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  5199 ;; Parameters:    Size  Location     Type
  5200 ;;  sensor          1    wreg     PTR struct .
  5201 ;;		 -> mtouch_sensor(27), 
  5202 ;; Auto vars:     Size  Location     Type
  5203 ;;  sensor          1    2[COMMON] PTR struct .
  5204 ;;		 -> mtouch_sensor(27), 
  5205 ;; Return value:  Size  Location     Type
  5206 ;;                  1    wreg      void 
  5207 ;; Registers used:
  5208 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5209 ;; Tracked objects:
  5210 ;;		On entry : 1F/0
  5211 ;;		On exit  : 1F/0
  5212 ;;		Unchanged: 1F/0
  5213 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5214 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5215 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5216 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5217 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5218 ;;Total ram usage:        1 bytes
  5219 ;; Hardware stack levels used: 1
  5220 ;; Hardware stack levels required when called: 4
  5221 ;; This function calls:
  5222 ;;		Nothing
  5223 ;; This function is called by:
  5224 ;;		_Sensor_Acquisition
  5225 ;; This function uses a non-reentrant model
  5226 ;;
  5227                           
  5228                           
  5229                           ;psect for function _Sensor_setActive
  5230  0DDD                     _Sensor_setActive:
  5231                           
  5232                           ;incstack = 0
  5233                           ; Regs used in _Sensor_setActive: [wreg+fsr1l+fsr1h+status,2+status,0]
  5234                           ;Sensor_setActive@sensor stored from wreg
  5235  0DDD  00F2               	movwf	Sensor_setActive@sensor
  5236                           
  5237                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 511: static __attribute__((inline)) void Se
      +                          nsor_setActive(mtouch_sensor_t* sensor);mcc_generated_files/mtouch/mtouch_sensor.c: 512:
      +                           {;mcc_generated_files/mtouch/mtouch_sensor.c: 513:     sensor->active = 1;
  5238  0DDE  0872               	movf	Sensor_setActive@sensor,w
  5239  0DDF  3E08               	addlw	8
  5240  0DE0  0086               	movwf	6
  5241  0DE1  0187               	clrf	7
  5242  0DE2  1501               	bsf	1,2
  5243  0DE3  0008               	return
  5244  0DE4                     __end_of_Sensor_setActive:
  5245                           
  5246                           	psect	text25
  5247  0E21                     __ptext25:	
  5248 ;; *************** function _Sensor_isEnabled *****************
  5249 ;; Defined at:
  5250 ;;		line 496 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  5251 ;; Parameters:    Size  Location     Type
  5252 ;;  sensor          1    wreg     PTR struct .
  5253 ;;		 -> mtouch_sensor(27), 
  5254 ;; Auto vars:     Size  Location     Type
  5255 ;;  sensor          1    2[COMMON] PTR struct .
  5256 ;;		 -> mtouch_sensor(27), 
  5257 ;; Return value:  Size  Location     Type
  5258 ;;                  1    wreg      _Bool 
  5259 ;; Registers used:
  5260 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5261 ;; Tracked objects:
  5262 ;;		On entry : 1F/0
  5263 ;;		On exit  : 1F/0
  5264 ;;		Unchanged: 1F/0
  5265 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5266 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5267 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5268 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5269 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5270 ;;Total ram usage:        1 bytes
  5271 ;; Hardware stack levels used: 1
  5272 ;; Hardware stack levels required when called: 4
  5273 ;; This function calls:
  5274 ;;		Nothing
  5275 ;; This function is called by:
  5276 ;;		_Sensor_Service
  5277 ;;		_Sensor_Acquisition
  5278 ;; This function uses a non-reentrant model
  5279 ;;
  5280                           
  5281                           
  5282                           ;psect for function _Sensor_isEnabled
  5283  0E21                     _Sensor_isEnabled:
  5284                           
  5285                           ;incstack = 0
  5286                           ; Regs used in _Sensor_isEnabled: [wreg+fsr1l+fsr1h+status,2+status,0]
  5287                           ;Sensor_isEnabled@sensor stored from wreg
  5288  0E21  00F2               	movwf	Sensor_isEnabled@sensor
  5289                           
  5290                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 496: static _Bool Sensor_isEnabled(mtouch_s
      +                          ensor_t* sensor);mcc_generated_files/mtouch/mtouch_sensor.c: 497: {;mcc_generated_files/
      +                          mtouch/mtouch_sensor.c: 498:     if(sensor!=((void*)0))
  5291  0E22  0872               	movf	Sensor_isEnabled@sensor,w
  5292  0E23  1903               	btfsc	3,2
  5293  0E24  2E2C               	goto	l2478
  5294                           
  5295                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 499:         return (_Bool)sensor->enabled;
  5296  0E25  0872               	movf	Sensor_isEnabled@sensor,w
  5297  0E26  3E08               	addlw	8
  5298  0E27  0086               	movwf	6
  5299  0E28  0187               	clrf	7
  5300  0E29  0801               	movf	1,w
  5301  0E2A  3901               	andlw	1
  5302  0E2B  0008               	return
  5303  0E2C                     l2478:
  5304                           
  5305                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 501:         return 0;
  5306  0E2C  3000               	movlw	0
  5307  0E2D  0008               	return
  5308  0E2E                     __end_of_Sensor_isEnabled:
  5309                           
  5310                           	psect	text26
  5311  038D                     __ptext26:	
  5312 ;; *************** function _Sensor_Acq_ExecutePacket *****************
  5313 ;; Defined at:
  5314 ;;		line 316 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  5315 ;; Parameters:    Size  Location     Type
  5316 ;;  sensor          1    wreg     PTR struct .
  5317 ;;		 -> mtouch_sensor(27), 
  5318 ;; Auto vars:     Size  Location     Type
  5319 ;;  sensor          1    5[BANK0 ] PTR struct .
  5320 ;;		 -> mtouch_sensor(27), 
  5321 ;;  error           1    4[BANK0 ] enum E2711
  5322 ;;  GIE_state       1    3[BANK0 ] unsigned char 
  5323 ;;  ADCON1_temp     1    2[BANK0 ] unsigned char 
  5324 ;;  ADCON0_temp     1    1[BANK0 ] unsigned char 
  5325 ;; Return value:  Size  Location     Type
  5326 ;;                  1    wreg      enum E2711
  5327 ;; Registers used:
  5328 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5329 ;; Tracked objects:
  5330 ;;		On entry : 1F/0
  5331 ;;		On exit  : 1F/0
  5332 ;;		Unchanged: 0/0
  5333 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5334 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5335 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5336 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5337 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5338 ;;Total ram usage:        6 bytes
  5339 ;; Hardware stack levels used: 1
  5340 ;; Hardware stack levels required when called: 6
  5341 ;; This function calls:
  5342 ;;		_MTOUCH_Delay
  5343 ;;		_MTOUCH_Random
  5344 ;;		_MTOUCH_Sensor_Scan_Initialize
  5345 ;;		_Sensor_Acq_ExecuteScan
  5346 ;;		_Sensor_setScanFunction
  5347 ;; This function is called by:
  5348 ;;		_Sensor_Acquisition
  5349 ;; This function uses a non-reentrant model
  5350 ;;
  5351                           
  5352                           
  5353                           ;psect for function _Sensor_Acq_ExecutePacket
  5354  038D                     _Sensor_Acq_ExecutePacket:
  5355                           
  5356                           ;incstack = 0
  5357                           ; Regs used in _Sensor_Acq_ExecutePacket: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5358                           ;Sensor_Acq_ExecutePacket@sensor stored from wreg
  5359  038D  00A5               	movwf	Sensor_Acq_ExecutePacket@sensor
  5360                           
  5361                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 316: static enum mtouch_sensor_error Sensor
      +                          _Acq_ExecutePacket(mtouch_sensor_t* sensor);mcc_generated_files/mtouch/mtouch_sensor.c: 
      +                          317: {;mcc_generated_files/mtouch/mtouch_sensor.c: 319:     enum mtouch_sensor_error err
      +                          or = MTOUCH_SENSOR_ERROR_none;
  5362  038E  01A4               	clrf	Sensor_Acq_ExecutePacket@error
  5363                           
  5364                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 320:     uint8_t ADCON0_temp;;mcc_generated
      +                          _files/mtouch/mtouch_sensor.c: 321:     uint8_t ADCON1_temp;;mcc_generated_files/mtouch/
      +                          mtouch_sensor.c: 323:     uint8_t GIE_state;;mcc_generated_files/mtouch/mtouch_sensor.c:
      +                           325:     ADCON0_temp = ADCON0;
  5365  038F  0021               	movlb	1	; select bank1
  5366  0390  081D               	movf	29,w	;volatile
  5367  0391  0020               	movlb	0	; select bank0
  5368  0392  00A0               	movwf	??_Sensor_Acq_ExecutePacket
  5369  0393  0820               	movf	??_Sensor_Acq_ExecutePacket,w
  5370  0394  00A1               	movwf	Sensor_Acq_ExecutePacket@ADCON0_temp
  5371                           
  5372                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 326:     ADCON1_temp = ADCON1;
  5373  0395  0021               	movlb	1	; select bank1
  5374  0396  081E               	movf	30,w	;volatile
  5375  0397  0020               	movlb	0	; select bank0
  5376  0398  00A0               	movwf	??_Sensor_Acq_ExecutePacket
  5377  0399  0820               	movf	??_Sensor_Acq_ExecutePacket,w
  5378  039A  00A2               	movwf	Sensor_Acq_ExecutePacket@ADCON1_temp
  5379                           
  5380                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 327:     MTOUCH_Sensor_Scan_Initialize();
  5381  039B  318D  25A8  3183   	fcall	_MTOUCH_Sensor_Scan_Initialize
  5382                           
  5383                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 329:     GIE_state = INTCONbits.GIE;
  5384  039E  3000               	movlw	0
  5385  039F  1B8B               	btfsc	11,7	;volatile
  5386  03A0  3001               	movlw	1
  5387  03A1  0020               	movlb	0	; select bank0
  5388  03A2  00A3               	movwf	Sensor_Acq_ExecutePacket@GIE_state
  5389                           
  5390                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 331:     Sensor_setScanFunction(sensor);
  5391  03A3  0825               	movf	Sensor_Acq_ExecutePacket@sensor,w
  5392  03A4  318E  269F  3183   	fcall	_Sensor_setScanFunction
  5393                           
  5394                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 333:     currentScannSensor = sensor->senso
      +                          r_name;
  5395  03A7  0825               	movf	Sensor_Acq_ExecutePacket@sensor,w
  5396  03A8  0086               	movwf	6
  5397  03A9  0187               	clrf	7
  5398  03AA  0801               	movf	1,w
  5399  03AB  00A0               	movwf	??_Sensor_Acq_ExecutePacket
  5400  03AC  0820               	movf	??_Sensor_Acq_ExecutePacket,w
  5401  03AD  00EB               	movwf	_currentScannSensor
  5402                           
  5403                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 334:     packet_counter = sensor->oversampl
      +                          ing;
  5404  03AE  0825               	movf	Sensor_Acq_ExecutePacket@sensor,w
  5405  03AF  0086               	movwf	6
  5406  03B0  0187               	clrf	7
  5407  03B1  3F45               	moviw [5]fsr1
  5408  03B2  00FB               	movwf	_packet_counter
  5409                           
  5410                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 335:     packet_sample = 0;
  5411  03B3  01E5               	clrf	_packet_sample
  5412  03B4  01E6               	clrf	_packet_sample+1
  5413                           
  5414                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 336:     sensor_globalFlags.packet_done = 0
      +                          ;
  5415  03B5  106C               	bcf	_sensor_globalFlags,0	;volatile
  5416                           
  5417                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 337:     sample_delay = MTOUCH_Random();
  5418  03B6  318E  264B  3183   	fcall	_MTOUCH_Random
  5419  03B9  00A0               	movwf	??_Sensor_Acq_ExecutePacket
  5420  03BA  0820               	movf	??_Sensor_Acq_ExecutePacket,w
  5421  03BB  00EA               	movwf	_sample_delay
  5422                           
  5423                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 338:     packet_sample = 0;
  5424  03BC  01E5               	clrf	_packet_sample
  5425  03BD  01E6               	clrf	_packet_sample+1
  5426                           
  5427                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 340:     sensor_globalFlags.interrupted = 0
      +                          ;
  5428  03BE  10EC               	bcf	_sensor_globalFlags,1	;volatile
  5429  03BF                     l3244:
  5430                           
  5431                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 344:     {;mcc_generated_files/mtouch/mtouc
      +                          h_sensor.c: 345:         INTCONbits.GIE = (uint8_t)0;
  5432  03BF  138B               	bcf	11,7	;volatile
  5433                           
  5434                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 346:         Sensor_Acq_ExecuteScan();
  5435  03C0  3184  2436  3183   	fcall	_Sensor_Acq_ExecuteScan
  5436                           
  5437                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 347:         INTCONbits.GIE = GIE_state;
  5438  03C3  0020               	movlb	0	; select bank0
  5439  03C4  0C23               	rrf	Sensor_Acq_ExecutePacket@GIE_state,w
  5440  03C5  1C03               	skipc
  5441  03C6  138B               	bcf	11,7	;volatile
  5442  03C7  1803               	skipnc
  5443  03C8  178B               	bsf	11,7	;volatile
  5444                           
  5445                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 348:         MTOUCH_Delay();
  5446  03C9  318E  260A  3183   	fcall	_MTOUCH_Delay
  5447  03CC                     l221:	
  5448                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 349:         while(ADCON0bits.GO_nDONE == 1
      +                          );
  5449                           
  5450  03CC  0021               	movlb	1	; select bank1
  5451  03CD  189D               	btfsc	29,1	;volatile
  5452  03CE  2BCC               	goto	l221
  5453                           
  5454                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 350:     } while(sensor_globalFlags.packet_
      +                          done == 0);
  5455  03CF  0020               	movlb	0	; select bank0
  5456  03D0  1C6C               	btfss	_sensor_globalFlags,0	;volatile
  5457  03D1  2BBF               	goto	l3244
  5458                           
  5459                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 353:     ADCON0 = ADCON0_temp;
  5460  03D2  0821               	movf	Sensor_Acq_ExecutePacket@ADCON0_temp,w
  5461  03D3  0021               	movlb	1	; select bank1
  5462  03D4  009D               	movwf	29	;volatile
  5463                           
  5464                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 354:     ADCON1 = ADCON1_temp;
  5465  03D5  0020               	movlb	0	; select bank0
  5466  03D6  0822               	movf	Sensor_Acq_ExecutePacket@ADCON1_temp,w
  5467  03D7  0021               	movlb	1	; select bank1
  5468  03D8  009E               	movwf	30	;volatile
  5469                           
  5470                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 356:     if(sensor_globalFlags.interrupted)
  5471  03D9  0020               	movlb	0	; select bank0
  5472  03DA  1CEC               	btfss	_sensor_globalFlags,1	;volatile
  5473  03DB  2BE0               	goto	l225
  5474                           
  5475                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 357:     {;mcc_generated_files/mtouch/mtouc
      +                          h_sensor.c: 358:         error = MTOUCH_SENSOR_ERROR_interruptedScan;
  5476  03DC  30FA               	movlw	250
  5477  03DD  00A0               	movwf	??_Sensor_Acq_ExecutePacket
  5478  03DE  0820               	movf	??_Sensor_Acq_ExecutePacket,w
  5479  03DF  00A4               	movwf	Sensor_Acq_ExecutePacket@error
  5480  03E0                     l225:	
  5481                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 359:     }
  5482                           
  5483                           
  5484                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 361:     return error;
  5485  03E0  0824               	movf	Sensor_Acq_ExecutePacket@error,w
  5486  03E1  0008               	return
  5487  03E2                     __end_of_Sensor_Acq_ExecutePacket:
  5488                           
  5489                           	psect	text27
  5490  0E9F                     __ptext27:	
  5491 ;; *************** function _Sensor_setScanFunction *****************
  5492 ;; Defined at:
  5493 ;;		line 463 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  5494 ;; Parameters:    Size  Location     Type
  5495 ;;  sensor          1    wreg     PTR struct .
  5496 ;;		 -> mtouch_sensor(27), 
  5497 ;; Auto vars:     Size  Location     Type
  5498 ;;  sensor          1    2[COMMON] PTR struct .
  5499 ;;		 -> mtouch_sensor(27), 
  5500 ;; Return value:  Size  Location     Type
  5501 ;;                  1    wreg      void 
  5502 ;; Registers used:
  5503 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5504 ;; Tracked objects:
  5505 ;;		On entry : 1F/0
  5506 ;;		On exit  : 1F/0
  5507 ;;		Unchanged: 0/0
  5508 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5509 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5510 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5511 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5512 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5513 ;;Total ram usage:        1 bytes
  5514 ;; Hardware stack levels used: 1
  5515 ;; Hardware stack levels required when called: 4
  5516 ;; This function calls:
  5517 ;;		Nothing
  5518 ;; This function is called by:
  5519 ;;		_Sensor_Acq_ExecutePacket
  5520 ;; This function uses a non-reentrant model
  5521 ;;
  5522                           
  5523                           
  5524                           ;psect for function _Sensor_setScanFunction
  5525  0E9F                     _Sensor_setScanFunction:
  5526                           
  5527                           ;incstack = 0
  5528                           ; Regs used in _Sensor_setScanFunction: [wreg+fsr1l+fsr1h+status,2+status,0]
  5529                           ;Sensor_setScanFunction@sensor stored from wreg
  5530  0E9F  00F2               	movwf	Sensor_setScanFunction@sensor
  5531  0EA0  0A72               	incf	Sensor_setScanFunction@sensor,w
  5532  0EA1  0086               	movwf	6
  5533  0EA2  0187               	clrf	7
  5534  0EA3  3F40               	moviw [0]fsr1
  5535  0EA4  00D5               	movwf	_Sensor_scanA
  5536  0EA5  3F41               	moviw [1]fsr1
  5537  0EA6  00D6               	movwf	_Sensor_scanA+1
  5538  0EA7  0872               	movf	Sensor_setScanFunction@sensor,w
  5539  0EA8  3E03               	addlw	3
  5540  0EA9  0086               	movwf	6
  5541  0EAA  0187               	clrf	7
  5542  0EAB  3F40               	moviw [0]fsr1
  5543  0EAC  00D3               	movwf	_Sensor_scanB
  5544  0EAD  3F41               	moviw [1]fsr1
  5545  0EAE  00D4               	movwf	_Sensor_scanB+1
  5546  0EAF  0008               	return
  5547  0EB0                     __end_of_Sensor_setScanFunction:
  5548                           
  5549                           	psect	text28
  5550  0436                     __ptext28:	
  5551 ;; *************** function _Sensor_Acq_ExecuteScan *****************
  5552 ;; Defined at:
  5553 ;;		line 380 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  5554 ;; Parameters:    Size  Location     Type
  5555 ;;		None
  5556 ;; Auto vars:     Size  Location     Type
  5557 ;;  result          2    8[COMMON] unsigned short 
  5558 ;; Return value:  Size  Location     Type
  5559 ;;                  1    wreg      void 
  5560 ;; Registers used:
  5561 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5562 ;; Tracked objects:
  5563 ;;		On entry : 1F/0
  5564 ;;		On exit  : 0/0
  5565 ;;		Unchanged: 0/0
  5566 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5567 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5568 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5569 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5570 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5571 ;;Total ram usage:        4 bytes
  5572 ;; Hardware stack levels used: 1
  5573 ;; Hardware stack levels required when called: 5
  5574 ;; This function calls:
  5575 ;;		_MTOUCH_CVD_ScanA_0
  5576 ;;		_MTOUCH_CVD_ScanA_1
  5577 ;;		_MTOUCH_CVD_ScanA_2
  5578 ;;		_MTOUCH_CVD_ScanB_0
  5579 ;;		_MTOUCH_CVD_ScanB_1
  5580 ;;		_MTOUCH_CVD_ScanB_2
  5581 ;;		___bmul
  5582 ;; This function is called by:
  5583 ;;		_Sensor_Acq_ExecutePacket
  5584 ;; This function uses a non-reentrant model
  5585 ;;
  5586                           
  5587                           
  5588                           ;psect for function _Sensor_Acq_ExecuteScan
  5589  0436                     _Sensor_Acq_ExecuteScan:
  5590                           
  5591                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 383:     mtouch_sensor_adcsample_t result =
      +                           ADRES;
  5592                           
  5593                           ;incstack = 0
  5594                           ; Regs used in _Sensor_Acq_ExecuteScan: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5595  0436  0021               	movlb	1	; select bank1
  5596  0437  081C               	movf	28,w	;volatile
  5597  0438  00F9               	movwf	Sensor_Acq_ExecuteScan@result+1
  5598  0439  081B               	movf	27,w	;volatile
  5599  043A  00F8               	movwf	Sensor_Acq_ExecuteScan@result
  5600                           
  5601                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 385:     if(sensor_globalFlags.packet_done)
  5602  043B  0020               	movlb	0	; select bank0
  5603  043C  186C               	btfsc	_sensor_globalFlags,0	;volatile
  5604  043D  0008               	return
  5605                           
  5606                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 388:     if (packet_counter != (uint8_t)0)
  5607  043E  087B               	movf	_packet_counter,w
  5608  043F  1D03               	btfss	3,2
  5609  0440  2C4E               	goto	l3184
  5610  0441  2C83               	goto	l3196
  5611  0442                     l3178:
  5612  0442  0856               	movf	_Sensor_scanA+1,w
  5613  0443  008A               	movwf	10
  5614  0444  0855               	movf	_Sensor_scanA,w
  5615  0445  000A               	callw
  5616  0446  3184               	pagesel	$
  5617  0447  2C5F               	goto	l3186
  5618  0448                     l3180:
  5619  0448  0854               	movf	_Sensor_scanB+1,w
  5620  0449  008A               	movwf	10
  5621  044A  0853               	movf	_Sensor_scanB,w
  5622  044B  000A               	callw
  5623  044C  3184               	pagesel	$
  5624  044D  2C5F               	goto	l3186
  5625  044E                     l3184:
  5626  044E  087B               	movf	_packet_counter,w
  5627  044F  3901               	andlw	1
  5628  0450  00F6               	movwf	??_Sensor_Acq_ExecuteScan
  5629  0451  01F7               	clrf	??_Sensor_Acq_ExecuteScan+1
  5630                           
  5631                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5632                           ; Switch size 1, requested type "simple"
  5633                           ; Number of cases is 1, Range of values is 0 to 0
  5634                           ; switch strategies available:
  5635                           ; Name         Instructions Cycles
  5636                           ; simple_byte            4     3 (average)
  5637                           ; direct_byte            8     6 (fixed)
  5638                           ; jumptable            260     6 (fixed)
  5639                           ;	Chosen strategy is simple_byte
  5640  0452  0877               	movf	??_Sensor_Acq_ExecuteScan+1,w
  5641  0453  3A00               	xorlw	0	; case 0
  5642  0454  1903               	skipnz
  5643  0455  2C57               	goto	l3724
  5644  0456  2C5F               	goto	l3186
  5645  0457                     l3724:
  5646                           
  5647                           ; Switch size 1, requested type "simple"
  5648                           ; Number of cases is 2, Range of values is 0 to 1
  5649                           ; switch strategies available:
  5650                           ; Name         Instructions Cycles
  5651                           ; simple_byte            7     4 (average)
  5652                           ; direct_byte           10     6 (fixed)
  5653                           ; jumptable            260     6 (fixed)
  5654                           ;	Chosen strategy is simple_byte
  5655  0457  0876               	movf	??_Sensor_Acq_ExecuteScan,w
  5656  0458  3A00               	xorlw	0	; case 0
  5657  0459  1903               	skipnz
  5658  045A  2C42               	goto	l3178
  5659  045B  3A01               	xorlw	1	; case 1
  5660  045C  1903               	skipnz
  5661  045D  2C48               	goto	l3180
  5662  045E  2C5F               	goto	l3186
  5663  045F                     l3186:
  5664  045F  3009               	movlw	9
  5665  0460  00F6               	movwf	??_Sensor_Acq_ExecuteScan
  5666  0461  0876               	movf	??_Sensor_Acq_ExecuteScan,w
  5667  0462  00F2               	movwf	___bmul@multiplicand
  5668  0463  0020               	movlb	0	; select bank0
  5669  0464  086B               	movf	_currentScannSensor,w
  5670  0465  318E  265B  3184   	fcall	___bmul
  5671  0468  3ED8               	addlw	(low ((_mtouch_sensor| 0+5)))& (0+255)
  5672  0469  0086               	movwf	6
  5673  046A  0187               	clrf	7
  5674  046B  0801               	movf	1,w
  5675  046C  067B               	xorwf	_packet_counter,w
  5676  046D  1903               	skipnz
  5677  046E  2C80               	goto	l3194
  5678  046F  1C7B               	btfss	_packet_counter,0
  5679  0470  2C7B               	goto	l3192
  5680  0471  3000               	movlw	0
  5681  0472  00F6               	movwf	??_Sensor_Acq_ExecuteScan
  5682  0473  3004               	movlw	4
  5683  0474  00F7               	movwf	??_Sensor_Acq_ExecuteScan+1
  5684  0475  0878               	movf	Sensor_Acq_ExecuteScan@result,w
  5685  0476  0276               	subwf	??_Sensor_Acq_ExecuteScan,w
  5686  0477  00F8               	movwf	Sensor_Acq_ExecuteScan@result
  5687  0478  0879               	movf	Sensor_Acq_ExecuteScan@result+1,w
  5688  0479  3B77               	subwfb	??_Sensor_Acq_ExecuteScan+1,w
  5689  047A  00F9               	movwf	Sensor_Acq_ExecuteScan@result+1
  5690  047B                     l3192:
  5691  047B  0878               	movf	Sensor_Acq_ExecuteScan@result,w
  5692  047C  0020               	movlb	0	; select bank0
  5693  047D  07E5               	addwf	_packet_sample,f
  5694  047E  0879               	movf	Sensor_Acq_ExecuteScan@result+1,w
  5695  047F  3DE6               	addwfc	_packet_sample+1,f
  5696  0480                     l3194:
  5697  0480  3001               	movlw	1
  5698  0481  02FB               	subwf	_packet_counter,f
  5699  0482  0008               	return
  5700  0483                     l3196:
  5701  0483  0878               	movf	Sensor_Acq_ExecuteScan@result,w
  5702  0484  07E5               	addwf	_packet_sample,f
  5703  0485  0879               	movf	Sensor_Acq_ExecuteScan@result+1,w
  5704  0486  3DE6               	addwfc	_packet_sample+1,f
  5705  0487  146C               	bsf	_sensor_globalFlags,0	;volatile
  5706  0488  0008               	return
  5707  0489                     __end_of_Sensor_Acq_ExecuteScan:
  5708                           
  5709                           	psect	text29
  5710  06CB                     __ptext29:	
  5711 ;; *************** function _MTOUCH_CVD_ScanB_1 *****************
  5712 ;; Defined at:
  5713 ;;		line 240 in file "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
  5714 ;; Parameters:    Size  Location     Type
  5715 ;;		None
  5716 ;; Auto vars:     Size  Location     Type
  5717 ;;		None
  5718 ;; Return value:  Size  Location     Type
  5719 ;;                  1    wreg      void 
  5720 ;; Registers used:
  5721 ;;		wreg
  5722 ;; Tracked objects:
  5723 ;;		On entry : 1F/0
  5724 ;;		On exit  : 0/0
  5725 ;;		Unchanged: 0/0
  5726 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5727 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5728 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5729 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5730 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5731 ;;Total ram usage:        0 bytes
  5732 ;; Hardware stack levels used: 1
  5733 ;; Hardware stack levels required when called: 4
  5734 ;; This function calls:
  5735 ;;		Nothing
  5736 ;; This function is called by:
  5737 ;;		_Sensor_Acq_ExecuteScan
  5738 ;; This function uses a non-reentrant model
  5739 ;;
  5740                           
  5741                           
  5742                           ;psect for function _MTOUCH_CVD_ScanB_1
  5743  06CB                     _MTOUCH_CVD_ScanB_1:
  5744                           
  5745                           ;incstack = 0
  5746                           ; Regs used in _MTOUCH_CVD_ScanB_1: [wreg]
  5747  06CB  0022               	banksel	269	;# 
  5748  06CC  128D               	bcf	13,5	;# 
  5749  06CD  0021               	banksel	157	;# 
  5750  06CE  3035               	movlw	53	;# 
  5751  06CF  009D               	movwf	29	;# 
  5752                           
  5753                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 252:     _delay(32u);
  5754  06D0  300A               	movlw	10
  5755  06D1                     u2317:
  5756  06D1  0B89               	decfsz	9,f
  5757  06D2  2ED1               	goto	u2317
  5758  06D3  3200               	nop2
  5759  06D4  308C               	movlw	140	;# 
  5760  06D5  0084               	movwf	4	;# 
  5761  06D6  3000               	movlw	0	;# 
  5762  06D7  0085               	movwf	5	;# 
  5763  06D8  300C               	movlw	12	;# 
  5764  06D9  0086               	movwf	6	;# 
  5765  06DA  3001               	movlw	1	;# 
  5766  06DB  0087               	movwf	7	;# 
  5767  06DC  3005               	movlw	5	;# 
  5768  06DD  1480               	bsf	0,1	;# 
  5769                           
  5770                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 270:     _delay(0u);
  5771  06DE  009D               	movwf	29	;# 
  5772  06DF  1281               	bcf	1,5	;# 
  5773                           
  5774                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 277:     _delay(16u);
  5775  06E0  3005               	movlw	5
  5776  06E1                     u2327:
  5777  06E1  0B89               	decfsz	9,f
  5778  06E2  2EE1               	goto	u2327
  5779  06E3  0000               	nop
  5780  06E4  0021               	banksel	157	;# 
  5781  06E5  149D               	bsf	29,1	;# 
  5782                           
  5783                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 284:     _delay(3u);
  5784  06E6  3200               	nop2	;2 cycle nop
  5785  06E7  0000               	nop
  5786  06E8  0022               	banksel	268	;# 
  5787  06E9  108C               	bcf	12,1	;# 
  5788  06EA  1080               	bcf	0,1	;# 
  5789  06EB  0008               	return
  5790  06EC                     __end_of_MTOUCH_CVD_ScanB_1:
  5791                           
  5792                           	psect	text30
  5793  06EC                     __ptext30:	
  5794 ;; *************** function _MTOUCH_CVD_ScanB_0 *****************
  5795 ;; Defined at:
  5796 ;;		line 113 in file "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
  5797 ;; Parameters:    Size  Location     Type
  5798 ;;		None
  5799 ;; Auto vars:     Size  Location     Type
  5800 ;;		None
  5801 ;; Return value:  Size  Location     Type
  5802 ;;                  1    wreg      void 
  5803 ;; Registers used:
  5804 ;;		wreg
  5805 ;; Tracked objects:
  5806 ;;		On entry : 1F/0
  5807 ;;		On exit  : 0/0
  5808 ;;		Unchanged: 0/0
  5809 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5810 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5811 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5812 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5813 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5814 ;;Total ram usage:        0 bytes
  5815 ;; Hardware stack levels used: 1
  5816 ;; Hardware stack levels required when called: 4
  5817 ;; This function calls:
  5818 ;;		Nothing
  5819 ;; This function is called by:
  5820 ;;		_Sensor_Acq_ExecuteScan
  5821 ;; This function uses a non-reentrant model
  5822 ;;
  5823                           
  5824                           
  5825                           ;psect for function _MTOUCH_CVD_ScanB_0
  5826  06EC                     _MTOUCH_CVD_ScanB_0:
  5827                           
  5828                           ;incstack = 0
  5829                           ; Regs used in _MTOUCH_CVD_ScanB_0: [wreg]
  5830  06EC  0022               	banksel	268	;# 
  5831  06ED  100C               	bcf	12,0	;# 
  5832  06EE  0021               	banksel	157	;# 
  5833  06EF  3001               	movlw	1	;# 
  5834  06F0  009D               	movwf	29	;# 
  5835                           
  5836                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 125:     _delay(32u);
  5837  06F1  300A               	movlw	10
  5838  06F2                     u2337:
  5839  06F2  0B89               	decfsz	9,f
  5840  06F3  2EF2               	goto	u2337
  5841  06F4  3200               	nop2
  5842  06F5  308D               	movlw	141	;# 
  5843  06F6  0084               	movwf	4	;# 
  5844  06F7  3000               	movlw	0	;# 
  5845  06F8  0085               	movwf	5	;# 
  5846  06F9  300C               	movlw	12	;# 
  5847  06FA  0086               	movwf	6	;# 
  5848  06FB  3001               	movlw	1	;# 
  5849  06FC  0087               	movwf	7	;# 
  5850  06FD  3035               	movlw	53	;# 
  5851  06FE  1680               	bsf	0,5	;# 
  5852                           
  5853                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 143:     _delay(0u);
  5854  06FF  009D               	movwf	29	;# 
  5855  0700  1281               	bcf	1,5	;# 
  5856                           
  5857                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 150:     _delay(16u);
  5858  0701  3005               	movlw	5
  5859  0702                     u2347:
  5860  0702  0B89               	decfsz	9,f
  5861  0703  2F02               	goto	u2347
  5862  0704  0000               	nop
  5863  0705  0021               	banksel	157	;# 
  5864  0706  149D               	bsf	29,1	;# 
  5865                           
  5866                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 157:     _delay(3u);
  5867  0707  3200               	nop2	;2 cycle nop
  5868  0708  0000               	nop
  5869  0709  0022               	banksel	269	;# 
  5870  070A  128D               	bcf	13,5	;# 
  5871  070B  1280               	bcf	0,5	;# 
  5872  070C  0008               	return
  5873  070D                     __end_of_MTOUCH_CVD_ScanB_0:
  5874                           
  5875                           	psect	text31
  5876  070D                     __ptext31:	
  5877 ;; *************** function _MTOUCH_CVD_ScanB_2 *****************
  5878 ;; Defined at:
  5879 ;;		line 367 in file "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
  5880 ;; Parameters:    Size  Location     Type
  5881 ;;		None
  5882 ;; Auto vars:     Size  Location     Type
  5883 ;;		None
  5884 ;; Return value:  Size  Location     Type
  5885 ;;                  1    wreg      void 
  5886 ;; Registers used:
  5887 ;;		wreg
  5888 ;; Tracked objects:
  5889 ;;		On entry : 1F/0
  5890 ;;		On exit  : 0/0
  5891 ;;		Unchanged: 0/0
  5892 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5893 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5894 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5895 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5896 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5897 ;;Total ram usage:        0 bytes
  5898 ;; Hardware stack levels used: 1
  5899 ;; Hardware stack levels required when called: 4
  5900 ;; This function calls:
  5901 ;;		Nothing
  5902 ;; This function is called by:
  5903 ;;		_Sensor_Acq_ExecuteScan
  5904 ;; This function uses a non-reentrant model
  5905 ;;
  5906                           
  5907                           
  5908                           ;psect for function _MTOUCH_CVD_ScanB_2
  5909  070D                     _MTOUCH_CVD_ScanB_2:
  5910                           
  5911                           ;incstack = 0
  5912                           ; Regs used in _MTOUCH_CVD_ScanB_2: [wreg]
  5913  070D  0022               	banksel	268	;# 
  5914  070E  108C               	bcf	12,1	;# 
  5915  070F  0021               	banksel	157	;# 
  5916  0710  3005               	movlw	5	;# 
  5917  0711  009D               	movwf	29	;# 
  5918                           
  5919                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 379:     _delay(32u);
  5920  0712  300A               	movlw	10
  5921  0713                     u2357:
  5922  0713  0B89               	decfsz	9,f
  5923  0714  2F13               	goto	u2357
  5924  0715  3200               	nop2
  5925  0716  308C               	movlw	140	;# 
  5926  0717  0084               	movwf	4	;# 
  5927  0718  3000               	movlw	0	;# 
  5928  0719  0085               	movwf	5	;# 
  5929  071A  300C               	movlw	12	;# 
  5930  071B  0086               	movwf	6	;# 
  5931  071C  3001               	movlw	1	;# 
  5932  071D  0087               	movwf	7	;# 
  5933  071E  3001               	movlw	1	;# 
  5934  071F  1400               	bsf	0,0	;# 
  5935                           
  5936                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 397:     _delay(0u);
  5937  0720  009D               	movwf	29	;# 
  5938  0721  1281               	bcf	1,5	;# 
  5939                           
  5940                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 404:     _delay(16u);
  5941  0722  3005               	movlw	5
  5942  0723                     u2367:
  5943  0723  0B89               	decfsz	9,f
  5944  0724  2F23               	goto	u2367
  5945  0725  0000               	nop
  5946  0726  0021               	banksel	157	;# 
  5947  0727  149D               	bsf	29,1	;# 
  5948                           
  5949                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 411:     _delay(3u);
  5950  0728  3200               	nop2	;2 cycle nop
  5951  0729  0000               	nop
  5952  072A  0022               	banksel	268	;# 
  5953  072B  100C               	bcf	12,0	;# 
  5954  072C  1000               	bcf	0,0	;# 
  5955  072D  0008               	return
  5956  072E                     __end_of_MTOUCH_CVD_ScanB_2:
  5957                           
  5958                           	psect	text32
  5959  072E                     __ptext32:	
  5960 ;; *************** function _MTOUCH_CVD_ScanA_1 *****************
  5961 ;; Defined at:
  5962 ;;		line 177 in file "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
  5963 ;; Parameters:    Size  Location     Type
  5964 ;;		None
  5965 ;; Auto vars:     Size  Location     Type
  5966 ;;		None
  5967 ;; Return value:  Size  Location     Type
  5968 ;;                  1    wreg      void 
  5969 ;; Registers used:
  5970 ;;		wreg
  5971 ;; Tracked objects:
  5972 ;;		On entry : 1F/0
  5973 ;;		On exit  : 0/0
  5974 ;;		Unchanged: 0/0
  5975 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5976 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5977 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5978 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5979 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5980 ;;Total ram usage:        0 bytes
  5981 ;; Hardware stack levels used: 1
  5982 ;; Hardware stack levels required when called: 4
  5983 ;; This function calls:
  5984 ;;		Nothing
  5985 ;; This function is called by:
  5986 ;;		_Sensor_Acq_ExecuteScan
  5987 ;; This function uses a non-reentrant model
  5988 ;;
  5989                           
  5990                           
  5991                           ;psect for function _MTOUCH_CVD_ScanA_1
  5992  072E                     _MTOUCH_CVD_ScanA_1:
  5993                           
  5994                           ;incstack = 0
  5995                           ; Regs used in _MTOUCH_CVD_ScanA_1: [wreg]
  5996  072E  0022               	banksel	269	;# 
  5997  072F  168D               	bsf	13,5	;# 
  5998  0730  0021               	banksel	157	;# 
  5999  0731  3035               	movlw	53	;# 
  6000  0732  009D               	movwf	29	;# 
  6001                           
  6002                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 189:     _delay(32u);
  6003  0733  300A               	movlw	10
  6004  0734                     u2377:
  6005  0734  0B89               	decfsz	9,f
  6006  0735  2F34               	goto	u2377
  6007  0736  3200               	nop2
  6008  0737  308C               	movlw	140	;# 
  6009  0738  0084               	movwf	4	;# 
  6010  0739  3000               	movlw	0	;# 
  6011  073A  0085               	movwf	5	;# 
  6012  073B  300C               	movlw	12	;# 
  6013  073C  0086               	movwf	6	;# 
  6014  073D  3001               	movlw	1	;# 
  6015  073E  0087               	movwf	7	;# 
  6016  073F  3005               	movlw	5	;# 
  6017  0740  1480               	bsf	0,1	;# 
  6018                           
  6019                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 207:     _delay(0u);
  6020  0741  009D               	movwf	29	;# 
  6021  0742  1681               	bsf	1,5	;# 
  6022                           
  6023                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 213:     _delay(16u);
  6024  0743  3005               	movlw	5
  6025  0744                     u2387:
  6026  0744  0B89               	decfsz	9,f
  6027  0745  2F44               	goto	u2387
  6028  0746  0000               	nop
  6029  0747  0021               	banksel	157	;# 
  6030  0748  149D               	bsf	29,1	;# 
  6031                           
  6032                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 220:     _delay(3u);
  6033  0749  3200               	nop2	;2 cycle nop
  6034  074A  0000               	nop
  6035  074B  0022               	banksel	268	;# 
  6036  074C  148C               	bsf	12,1	;# 
  6037  074D  1080               	bcf	0,1	;# 
  6038  074E  0008               	return
  6039  074F                     __end_of_MTOUCH_CVD_ScanA_1:
  6040                           
  6041                           	psect	text33
  6042  074F                     __ptext33:	
  6043 ;; *************** function _MTOUCH_CVD_ScanA_0 *****************
  6044 ;; Defined at:
  6045 ;;		line 50 in file "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
  6046 ;; Parameters:    Size  Location     Type
  6047 ;;		None
  6048 ;; Auto vars:     Size  Location     Type
  6049 ;;		None
  6050 ;; Return value:  Size  Location     Type
  6051 ;;                  1    wreg      void 
  6052 ;; Registers used:
  6053 ;;		wreg
  6054 ;; Tracked objects:
  6055 ;;		On entry : 1F/0
  6056 ;;		On exit  : 0/0
  6057 ;;		Unchanged: 0/0
  6058 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6059 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6060 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6061 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6062 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6063 ;;Total ram usage:        0 bytes
  6064 ;; Hardware stack levels used: 1
  6065 ;; Hardware stack levels required when called: 4
  6066 ;; This function calls:
  6067 ;;		Nothing
  6068 ;; This function is called by:
  6069 ;;		_Sensor_Acq_ExecuteScan
  6070 ;; This function uses a non-reentrant model
  6071 ;;
  6072                           
  6073                           
  6074                           ;psect for function _MTOUCH_CVD_ScanA_0
  6075  074F                     _MTOUCH_CVD_ScanA_0:
  6076                           
  6077                           ;incstack = 0
  6078                           ; Regs used in _MTOUCH_CVD_ScanA_0: [wreg]
  6079  074F  0022               	banksel	268	;# 
  6080  0750  140C               	bsf	12,0	;# 
  6081  0751  0021               	banksel	157	;# 
  6082  0752  3001               	movlw	1	;# 
  6083  0753  009D               	movwf	29	;# 
  6084                           
  6085                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 62:     _delay(32u);
  6086  0754  300A               	movlw	10
  6087  0755                     u2397:
  6088  0755  0B89               	decfsz	9,f
  6089  0756  2F55               	goto	u2397
  6090  0757  3200               	nop2
  6091  0758  308D               	movlw	141	;# 
  6092  0759  0084               	movwf	4	;# 
  6093  075A  3000               	movlw	0	;# 
  6094  075B  0085               	movwf	5	;# 
  6095  075C  300C               	movlw	12	;# 
  6096  075D  0086               	movwf	6	;# 
  6097  075E  3001               	movlw	1	;# 
  6098  075F  0087               	movwf	7	;# 
  6099  0760  3035               	movlw	53	;# 
  6100  0761  1680               	bsf	0,5	;# 
  6101                           
  6102                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 80:     _delay(0u);
  6103  0762  009D               	movwf	29	;# 
  6104  0763  1681               	bsf	1,5	;# 
  6105                           
  6106                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 86:     _delay(16u);
  6107  0764  3005               	movlw	5
  6108  0765                     u2407:
  6109  0765  0B89               	decfsz	9,f
  6110  0766  2F65               	goto	u2407
  6111  0767  0000               	nop
  6112  0768  0021               	banksel	157	;# 
  6113  0769  149D               	bsf	29,1	;# 
  6114                           
  6115                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 93:     _delay(3u);
  6116  076A  3200               	nop2	;2 cycle nop
  6117  076B  0000               	nop
  6118  076C  0022               	banksel	269	;# 
  6119  076D  168D               	bsf	13,5	;# 
  6120  076E  1280               	bcf	0,5	;# 
  6121  076F  0008               	return
  6122  0770                     __end_of_MTOUCH_CVD_ScanA_0:
  6123                           
  6124                           	psect	text34
  6125  0770                     __ptext34:	
  6126 ;; *************** function _MTOUCH_CVD_ScanA_2 *****************
  6127 ;; Defined at:
  6128 ;;		line 304 in file "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
  6129 ;; Parameters:    Size  Location     Type
  6130 ;;		None
  6131 ;; Auto vars:     Size  Location     Type
  6132 ;;		None
  6133 ;; Return value:  Size  Location     Type
  6134 ;;                  1    wreg      void 
  6135 ;; Registers used:
  6136 ;;		wreg
  6137 ;; Tracked objects:
  6138 ;;		On entry : 1F/0
  6139 ;;		On exit  : 0/0
  6140 ;;		Unchanged: 0/0
  6141 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6142 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6143 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6144 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6145 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6146 ;;Total ram usage:        0 bytes
  6147 ;; Hardware stack levels used: 1
  6148 ;; Hardware stack levels required when called: 4
  6149 ;; This function calls:
  6150 ;;		Nothing
  6151 ;; This function is called by:
  6152 ;;		_Sensor_Acq_ExecuteScan
  6153 ;; This function uses a non-reentrant model
  6154 ;;
  6155                           
  6156                           
  6157                           ;psect for function _MTOUCH_CVD_ScanA_2
  6158  0770                     _MTOUCH_CVD_ScanA_2:
  6159                           
  6160                           ;incstack = 0
  6161                           ; Regs used in _MTOUCH_CVD_ScanA_2: [wreg]
  6162  0770  0022               	banksel	268	;# 
  6163  0771  148C               	bsf	12,1	;# 
  6164  0772  0021               	banksel	157	;# 
  6165  0773  3005               	movlw	5	;# 
  6166  0774  009D               	movwf	29	;# 
  6167                           
  6168                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 316:     _delay(32u);
  6169  0775  300A               	movlw	10
  6170  0776                     u2417:
  6171  0776  0B89               	decfsz	9,f
  6172  0777  2F76               	goto	u2417
  6173  0778  3200               	nop2
  6174  0779  308C               	movlw	140	;# 
  6175  077A  0084               	movwf	4	;# 
  6176  077B  3000               	movlw	0	;# 
  6177  077C  0085               	movwf	5	;# 
  6178  077D  300C               	movlw	12	;# 
  6179  077E  0086               	movwf	6	;# 
  6180  077F  3001               	movlw	1	;# 
  6181  0780  0087               	movwf	7	;# 
  6182  0781  3001               	movlw	1	;# 
  6183  0782  1400               	bsf	0,0	;# 
  6184                           
  6185                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 334:     _delay(0u);
  6186  0783  009D               	movwf	29	;# 
  6187  0784  1681               	bsf	1,5	;# 
  6188                           
  6189                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 340:     _delay(16u);
  6190  0785  3005               	movlw	5
  6191  0786                     u2427:
  6192  0786  0B89               	decfsz	9,f
  6193  0787  2F86               	goto	u2427
  6194  0788  0000               	nop
  6195  0789  0021               	banksel	157	;# 
  6196  078A  149D               	bsf	29,1	;# 
  6197                           
  6198                           ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 347:     _delay(3u);
  6199  078B  3200               	nop2	;2 cycle nop
  6200  078C  0000               	nop
  6201  078D  0022               	banksel	268	;# 
  6202  078E  140C               	bsf	12,0	;# 
  6203  078F  1000               	bcf	0,0	;# 
  6204  0790  0008               	return
  6205  0791                     __end_of_MTOUCH_CVD_ScanA_2:
  6206                           
  6207                           	psect	text35
  6208  0E4B                     __ptext35:	
  6209 ;; *************** function _MTOUCH_Random *****************
  6210 ;; Defined at:
  6211 ;;		line 66 in file "mcc_generated_files/mtouch/mtouch_random.c"
  6212 ;; Parameters:    Size  Location     Type
  6213 ;;		None
  6214 ;; Auto vars:     Size  Location     Type
  6215 ;;		None
  6216 ;; Return value:  Size  Location     Type
  6217 ;;                  1    wreg      unsigned char 
  6218 ;; Registers used:
  6219 ;;		wreg, status,2, status,0
  6220 ;; Tracked objects:
  6221 ;;		On entry : 1F/0
  6222 ;;		On exit  : 1F/0
  6223 ;;		Unchanged: 1F/0
  6224 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6225 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6226 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6227 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6228 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6229 ;;Total ram usage:        1 bytes
  6230 ;; Hardware stack levels used: 1
  6231 ;; Hardware stack levels required when called: 4
  6232 ;; This function calls:
  6233 ;;		Nothing
  6234 ;; This function is called by:
  6235 ;;		_Sensor_Acq_ExecutePacket
  6236 ;; This function uses a non-reentrant model
  6237 ;;
  6238                           
  6239                           
  6240                           ;psect for function _MTOUCH_Random
  6241  0E4B                     _MTOUCH_Random:
  6242                           
  6243                           ;mcc_generated_files/mtouch/mtouch_random.c: 68:     static MTOUCH_RANDOM_t seed = (MTOU
      +                          CH_RANDOM_t)0;;mcc_generated_files/mtouch/mtouch_random.c: 70:     if ((seed & (MTOUCH_R
      +                          ANDOM_t)1) != (MTOUCH_RANDOM_t)0)
  6244                           
  6245                           ;incstack = 0
  6246                           ; Regs used in _MTOUCH_Random: [wreg+status,2+status,0]
  6247  0E4B  1C7A               	btfss	MTOUCH_Random@seed,0
  6248  0E4C  2E4F               	goto	l2398
  6249                           
  6250                           ;mcc_generated_files/mtouch/mtouch_random.c: 71:     {;mcc_generated_files/mtouch/mtouch
      +                          _random.c: 73:         seed = seed >> (uint8_t)1;
  6251  0E4D  367A               	lsrf	MTOUCH_Random@seed,w
  6252  0E4E  2E55               	goto	L1
  6253  0E4F                     l2398:	
  6254                           ;mcc_generated_files/mtouch/mtouch_random.c: 74:     }
  6255                           
  6256                           
  6257                           ;mcc_generated_files/mtouch/mtouch_random.c: 76:     {;mcc_generated_files/mtouch/mtouch
      +                          _random.c: 81:         seed = seed >> (uint8_t)1;
  6258  0E4F  367A               	lsrf	MTOUCH_Random@seed,w
  6259  0E50  00F2               	movwf	??_MTOUCH_Random
  6260  0E51  0872               	movf	??_MTOUCH_Random,w
  6261  0E52  00FA               	movwf	MTOUCH_Random@seed
  6262                           
  6263                           ;mcc_generated_files/mtouch/mtouch_random.c: 82:         seed = seed ^ (MTOUCH_RANDOM_t)
      +                          0xB4;
  6264  0E53  087A               	movf	MTOUCH_Random@seed,w
  6265  0E54  3AB4               	xorlw	180
  6266  0E55                     L1:
  6267  0E55  00F2               	movwf	??_MTOUCH_Random
  6268  0E56  0872               	movf	??_MTOUCH_Random,w
  6269  0E57  00FA               	movwf	MTOUCH_Random@seed
  6270                           
  6271                           ;mcc_generated_files/mtouch/mtouch_random.c: 85:     return (uint8_t)seed & 0x0F;
  6272  0E58  087A               	movf	MTOUCH_Random@seed,w
  6273  0E59  390F               	andlw	15
  6274  0E5A  0008               	return
  6275  0E5B                     __end_of_MTOUCH_Random:
  6276                           
  6277                           	psect	text36
  6278  0E0A                     __ptext36:	
  6279 ;; *************** function _MTOUCH_Delay *****************
  6280 ;; Defined at:
  6281 ;;		line 364 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  6282 ;; Parameters:    Size  Location     Type
  6283 ;;		None
  6284 ;; Auto vars:     Size  Location     Type
  6285 ;;  i               1    3[COMMON] unsigned char 
  6286 ;; Return value:  Size  Location     Type
  6287 ;;                  1    wreg      void 
  6288 ;; Registers used:
  6289 ;;		wreg, status,2, status,0
  6290 ;; Tracked objects:
  6291 ;;		On entry : 1F/0
  6292 ;;		On exit  : 1F/0
  6293 ;;		Unchanged: 0/0
  6294 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6295 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6296 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6297 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6298 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6299 ;;Total ram usage:        2 bytes
  6300 ;; Hardware stack levels used: 1
  6301 ;; Hardware stack levels required when called: 4
  6302 ;; This function calls:
  6303 ;;		Nothing
  6304 ;; This function is called by:
  6305 ;;		_Sensor_Acq_ExecutePacket
  6306 ;; This function uses a non-reentrant model
  6307 ;;
  6308                           
  6309                           
  6310                           ;psect for function _MTOUCH_Delay
  6311  0E0A                     _MTOUCH_Delay:
  6312                           
  6313                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 366:     for(uint8_t i = sample_delay;i>0;i
      +                          --)
  6314                           
  6315                           ;incstack = 0
  6316                           ; Regs used in _MTOUCH_Delay: [wreg+status,2+status,0]
  6317  0E0A  086A               	movf	_sample_delay,w
  6318  0E0B  00F2               	movwf	??_MTOUCH_Delay
  6319  0E0C  0872               	movf	??_MTOUCH_Delay,w
  6320  0E0D  00F3               	movwf	MTOUCH_Delay@i
  6321  0E0E                     L2:
  6322  0E0E  0873               	movf	MTOUCH_Delay@i,w
  6323  0E0F  1903               	btfsc	3,2
  6324  0E10  0008               	return
  6325                           
  6326                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 367:     { }
  6327  0E11  3001               	movlw	1
  6328  0E12  02F3               	subwf	MTOUCH_Delay@i,f
  6329  0E13  2E0E               	goto	L2
  6330  0E14                     __end_of_MTOUCH_Delay:
  6331                           
  6332                           	psect	text37
  6333  0F1D                     __ptext37:	
  6334 ;; *************** function _MTOUCH_Initialize *****************
  6335 ;; Defined at:
  6336 ;;		line 101 in file "mcc_generated_files/mtouch/mtouch.c"
  6337 ;; Parameters:    Size  Location     Type
  6338 ;;		None
  6339 ;; Auto vars:     Size  Location     Type
  6340 ;;		None
  6341 ;; Return value:  Size  Location     Type
  6342 ;;                  1    wreg      void 
  6343 ;; Registers used:
  6344 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6345 ;; Tracked objects:
  6346 ;;		On entry : 1F/0
  6347 ;;		On exit  : 1F/0
  6348 ;;		Unchanged: 0/0
  6349 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6350 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6351 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6352 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6353 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6354 ;;Total ram usage:        0 bytes
  6355 ;; Hardware stack levels used: 1
  6356 ;; Hardware stack levels required when called: 8
  6357 ;; This function calls:
  6358 ;;		_MTOUCH_Button_InitializeAll
  6359 ;;		_MTOUCH_Sensor_InitializeAll
  6360 ;;		_MTOUCH_Sensor_Sampled_ResetAll
  6361 ;;		_MTOUCH_Sensor_Scan_Initialize
  6362 ;;		_TMR1_SetInterruptHandler
  6363 ;; This function is called by:
  6364 ;;		_MTOUCH_Service_Mainloop
  6365 ;;		_SYSTEM_Initialize
  6366 ;; This function uses a non-reentrant model
  6367 ;;
  6368                           
  6369                           
  6370                           ;psect for function _MTOUCH_Initialize
  6371  0F1D                     _MTOUCH_Initialize:
  6372                           
  6373                           ;mcc_generated_files/mtouch/mtouch.c: 103:     MTOUCH_Sensor_InitializeAll();
  6374                           
  6375                           ;incstack = 0
  6376                           ; Regs used in _MTOUCH_Initialize: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6377  0F1D  318E  263C  318F   	fcall	_MTOUCH_Sensor_InitializeAll
  6378                           
  6379                           ;mcc_generated_files/mtouch/mtouch.c: 104:     MTOUCH_Button_InitializeAll();
  6380  0F20  318F  27B2  318F   	fcall	_MTOUCH_Button_InitializeAll
  6381                           
  6382                           ;mcc_generated_files/mtouch/mtouch.c: 105:     MTOUCH_Sensor_Sampled_ResetAll();
  6383  0F23  318F  270A  318F   	fcall	_MTOUCH_Sensor_Sampled_ResetAll
  6384                           
  6385                           ;mcc_generated_files/mtouch/mtouch.c: 106:     MTOUCH_Sensor_Scan_Initialize();
  6386  0F26  318D  25A8  318F   	fcall	_MTOUCH_Sensor_Scan_Initialize
  6387                           
  6388                           ;mcc_generated_files/mtouch/mtouch.c: 107:     TMR1_SetInterruptHandler(MTOUCH_ScanSched
      +                          uler);
  6389  0F29  3001               	movlw	low _MTOUCH_ScanScheduler
  6390  0F2A  00F2               	movwf	TMR1_SetInterruptHandler@InterruptHandler
  6391  0F2B  300E               	movlw	high _MTOUCH_ScanScheduler
  6392  0F2C  00F3               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1
  6393  0F2D  318D  25B7         	fcall	_TMR1_SetInterruptHandler
  6394  0F2F  0008               	return
  6395  0F30                     __end_of_MTOUCH_Initialize:
  6396                           
  6397                           	psect	text38
  6398  0DB7                     __ptext38:	
  6399 ;; *************** function _TMR1_SetInterruptHandler *****************
  6400 ;; Defined at:
  6401 ;;		line 171 in file "mcc_generated_files/tmr1.c"
  6402 ;; Parameters:    Size  Location     Type
  6403 ;;  InterruptHan    2    2[COMMON] PTR FTN()void 
  6404 ;;		 -> TMR1_DefaultInterruptHandler(1), MTOUCH_ScanScheduler(1), 
  6405 ;; Auto vars:     Size  Location     Type
  6406 ;;		None
  6407 ;; Return value:  Size  Location     Type
  6408 ;;                  1    wreg      void 
  6409 ;; Registers used:
  6410 ;;		wreg
  6411 ;; Tracked objects:
  6412 ;;		On entry : 1F/1
  6413 ;;		On exit  : 1F/0
  6414 ;;		Unchanged: 0/0
  6415 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6416 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6417 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6418 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6419 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6420 ;;Total ram usage:        2 bytes
  6421 ;; Hardware stack levels used: 1
  6422 ;; Hardware stack levels required when called: 4
  6423 ;; This function calls:
  6424 ;;		Nothing
  6425 ;; This function is called by:
  6426 ;;		_MTOUCH_Initialize
  6427 ;;		_TMR1_Initialize
  6428 ;; This function uses a non-reentrant model
  6429 ;;
  6430                           
  6431                           
  6432                           ;psect for function _TMR1_SetInterruptHandler
  6433  0DB7                     _TMR1_SetInterruptHandler:
  6434                           
  6435                           ;mcc_generated_files/tmr1.c: 172:     TMR1_InterruptHandler = InterruptHandler;
  6436                           
  6437                           ;incstack = 0
  6438                           ; Regs used in _TMR1_SetInterruptHandler: [wreg]
  6439  0DB7  0873               	movf	TMR1_SetInterruptHandler@InterruptHandler+1,w
  6440  0DB8  0020               	movlb	0	; select bank0
  6441  0DB9  00DC               	movwf	_TMR1_InterruptHandler+1
  6442  0DBA  0872               	movf	TMR1_SetInterruptHandler@InterruptHandler,w
  6443  0DBB  00DB               	movwf	_TMR1_InterruptHandler
  6444  0DBC  0008               	return
  6445  0DBD                     __end_of_TMR1_SetInterruptHandler:
  6446                           
  6447                           	psect	text39
  6448  0DA8                     __ptext39:	
  6449 ;; *************** function _MTOUCH_Sensor_Scan_Initialize *****************
  6450 ;; Defined at:
  6451 ;;		line 173 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  6452 ;; Parameters:    Size  Location     Type
  6453 ;;		None
  6454 ;; Auto vars:     Size  Location     Type
  6455 ;;		None
  6456 ;; Return value:  Size  Location     Type
  6457 ;;                  1    wreg      void 
  6458 ;; Registers used:
  6459 ;;		wreg, status,2
  6460 ;; Tracked objects:
  6461 ;;		On entry : 0/0
  6462 ;;		On exit  : 1F/1
  6463 ;;		Unchanged: 0/0
  6464 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6465 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6466 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6467 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6468 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6469 ;;Total ram usage:        0 bytes
  6470 ;; Hardware stack levels used: 1
  6471 ;; Hardware stack levels required when called: 4
  6472 ;; This function calls:
  6473 ;;		Nothing
  6474 ;; This function is called by:
  6475 ;;		_MTOUCH_Initialize
  6476 ;;		_Sensor_Acq_ExecutePacket
  6477 ;; This function uses a non-reentrant model
  6478 ;;
  6479                           
  6480                           
  6481                           ;psect for function _MTOUCH_Sensor_Scan_Initialize
  6482  0DA8                     _MTOUCH_Sensor_Scan_Initialize:
  6483                           
  6484                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 176:     ADCON0 = (uint8_t)0;
  6485                           
  6486                           ;incstack = 0
  6487                           ; Regs used in _MTOUCH_Sensor_Scan_Initialize: [wreg+status,2]
  6488  0DA8  0021               	movlb	1	; select bank1
  6489  0DA9  019D               	clrf	29	;volatile
  6490                           
  6491                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 177:     ADCON1 = (uint8_t)( 0x1<<7 | 0x2<<
      +                          4 | 0x0 );
  6492  0DAA  30A0               	movlw	160
  6493  0DAB  009E               	movwf	30	;volatile
  6494  0DAC  0008               	return
  6495  0DAD                     __end_of_MTOUCH_Sensor_Scan_Initialize:
  6496                           
  6497                           	psect	text40
  6498  0F0A                     __ptext40:	
  6499 ;; *************** function _MTOUCH_Sensor_Sampled_ResetAll *****************
  6500 ;; Defined at:
  6501 ;;		line 548 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  6502 ;; Parameters:    Size  Location     Type
  6503 ;;		None
  6504 ;; Auto vars:     Size  Location     Type
  6505 ;;  sensor          1    4[COMMON] PTR struct .
  6506 ;;		 -> mtouch_sensor(27), 
  6507 ;; Return value:  Size  Location     Type
  6508 ;;                  1    wreg      void 
  6509 ;; Registers used:
  6510 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6511 ;; Tracked objects:
  6512 ;;		On entry : 0/0
  6513 ;;		On exit  : 0/0
  6514 ;;		Unchanged: 0/0
  6515 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6516 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6517 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6518 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6519 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6520 ;;Total ram usage:        2 bytes
  6521 ;; Hardware stack levels used: 1
  6522 ;; Hardware stack levels required when called: 5
  6523 ;; This function calls:
  6524 ;;		_Sensor_Sampled_Reset
  6525 ;; This function is called by:
  6526 ;;		_MTOUCH_Initialize
  6527 ;;		_MTOUCH_Service_Mainloop
  6528 ;; This function uses a non-reentrant model
  6529 ;;
  6530                           
  6531                           
  6532                           ;psect for function _MTOUCH_Sensor_Sampled_ResetAll
  6533  0F0A                     _MTOUCH_Sensor_Sampled_ResetAll:
  6534                           
  6535                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 550:     mtouch_sensor_t* sensor;;mcc_gener
      +                          ated_files/mtouch/mtouch_sensor.c: 551:     for(sensor = &mtouch_sensor[0];sensor<= &mto
      +                          uch_sensor[3u -1];sensor++)
  6536                           
  6537                           ;incstack = 0
  6538                           ; Regs used in _MTOUCH_Sensor_Sampled_ResetAll: [wreg+fsr1l+fsr1h+status,2+status,0+pcla
      +                          th+cstack]
  6539  0F0A  30D3               	movlw	(low (_mtouch_sensor| 0))& (0+255)
  6540  0F0B  00F3               	movwf	??_MTOUCH_Sensor_Sampled_ResetAll
  6541  0F0C  0873               	movf	??_MTOUCH_Sensor_Sampled_ResetAll,w
  6542  0F0D  00F4               	movwf	MTOUCH_Sensor_Sampled_ResetAll@sensor
  6543  0F0E                     L3:
  6544  0F0E  30E5               	movlw	(low ((_mtouch_sensor| 0+18)))& (0+255)
  6545  0F0F  00F3               	movwf	??_MTOUCH_Sensor_Sampled_ResetAll
  6546  0F10  0874               	movf	MTOUCH_Sensor_Sampled_ResetAll@sensor,w
  6547  0F11  0273               	subwf	??_MTOUCH_Sensor_Sampled_ResetAll,w
  6548  0F12  1C03               	btfss	3,0
  6549  0F13  0008               	return
  6550                           
  6551                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 552:     {;mcc_generated_files/mtouch/mtouc
      +                          h_sensor.c: 553:         Sensor_Sampled_Reset(sensor);
  6552  0F14  0874               	movf	MTOUCH_Sensor_Sampled_ResetAll@sensor,w
  6553  0F15  318D  25D6  318F   	fcall	_Sensor_Sampled_Reset
  6554                           
  6555                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 554:     }
  6556  0F18  3009               	movlw	9
  6557  0F19  00F3               	movwf	??_MTOUCH_Sensor_Sampled_ResetAll
  6558  0F1A  0873               	movf	??_MTOUCH_Sensor_Sampled_ResetAll,w
  6559  0F1B  07F4               	addwf	MTOUCH_Sensor_Sampled_ResetAll@sensor,f
  6560  0F1C  2F0E               	goto	L3
  6561  0F1D                     __end_of_MTOUCH_Sensor_Sampled_ResetAll:
  6562                           
  6563                           	psect	text41
  6564  0E3C                     __ptext41:	
  6565 ;; *************** function _MTOUCH_Sensor_InitializeAll *****************
  6566 ;; Defined at:
  6567 ;;		line 158 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  6568 ;; Parameters:    Size  Location     Type
  6569 ;;		None
  6570 ;; Auto vars:     Size  Location     Type
  6571 ;;  sensor          1    1[BANK0 ] enum E2707
  6572 ;; Return value:  Size  Location     Type
  6573 ;;                  1    wreg      void 
  6574 ;; Registers used:
  6575 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6576 ;; Tracked objects:
  6577 ;;		On entry : 1F/0
  6578 ;;		On exit  : 1F/0
  6579 ;;		Unchanged: 0/0
  6580 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6581 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6582 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6583 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6584 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6585 ;;Total ram usage:        2 bytes
  6586 ;; Hardware stack levels used: 1
  6587 ;; Hardware stack levels required when called: 7
  6588 ;; This function calls:
  6589 ;;		_MTOUCH_Sensor_Initialize
  6590 ;; This function is called by:
  6591 ;;		_MTOUCH_Initialize
  6592 ;; This function uses a non-reentrant model
  6593 ;;
  6594                           
  6595                           
  6596                           ;psect for function _MTOUCH_Sensor_InitializeAll
  6597  0E3C                     _MTOUCH_Sensor_InitializeAll:
  6598                           
  6599                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 160:     enum mtouch_sensor_names sensor;;m
      +                          cc_generated_files/mtouch/mtouch_sensor.c: 161:     for (sensor = 0; sensor < 3u; sensor
      +                          ++)
  6600                           
  6601                           ;incstack = 0
  6602                           ; Regs used in _MTOUCH_Sensor_InitializeAll: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
  6603  0E3C  01A1               	clrf	MTOUCH_Sensor_InitializeAll@sensor
  6604  0E3D                     l3460:
  6605                           
  6606                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 162:     {;mcc_generated_files/mtouch/mtouc
      +                          h_sensor.c: 163:         MTOUCH_Sensor_Initialize(sensor);
  6607  0E3D  0821               	movf	MTOUCH_Sensor_InitializeAll@sensor,w
  6608  0E3E  318E  268E  318E   	fcall	_MTOUCH_Sensor_Initialize
  6609                           
  6610                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 164:     }
  6611  0E41  3001               	movlw	1
  6612  0E42  0020               	movlb	0	; select bank0
  6613  0E43  00A0               	movwf	??_MTOUCH_Sensor_InitializeAll
  6614  0E44  0820               	movf	??_MTOUCH_Sensor_InitializeAll,w
  6615  0E45  07A1               	addwf	MTOUCH_Sensor_InitializeAll@sensor,f
  6616  0E46  3003               	movlw	3
  6617  0E47  0221               	subwf	MTOUCH_Sensor_InitializeAll@sensor,w
  6618  0E48  1803               	btfsc	3,0
  6619  0E49  0008               	return
  6620  0E4A  2E3D               	goto	l3460
  6621  0E4B                     __end_of_MTOUCH_Sensor_InitializeAll:
  6622                           
  6623                           	psect	text42
  6624  0E8E                     __ptext42:	
  6625 ;; *************** function _MTOUCH_Sensor_Initialize *****************
  6626 ;; Defined at:
  6627 ;;		line 144 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  6628 ;; Parameters:    Size  Location     Type
  6629 ;;  sensor          1    wreg     enum E2707
  6630 ;; Auto vars:     Size  Location     Type
  6631 ;;  sensor          1    9[COMMON] enum E2707
  6632 ;; Return value:  Size  Location     Type
  6633 ;;                  1    wreg      enum E2711
  6634 ;; Registers used:
  6635 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6636 ;; Tracked objects:
  6637 ;;		On entry : 1F/0
  6638 ;;		On exit  : 0/0
  6639 ;;		Unchanged: 0/0
  6640 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6641 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6642 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6643 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6644 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6645 ;;Total ram usage:        2 bytes
  6646 ;; Hardware stack levels used: 1
  6647 ;; Hardware stack levels required when called: 6
  6648 ;; This function calls:
  6649 ;;		_MTOUCH_Sensor_Enable
  6650 ;;		_Sensor_Sampled_Reset
  6651 ;;		___bmul
  6652 ;; This function is called by:
  6653 ;;		_MTOUCH_Sensor_InitializeAll
  6654 ;; This function uses a non-reentrant model
  6655 ;;
  6656                           
  6657                           
  6658                           ;psect for function _MTOUCH_Sensor_Initialize
  6659  0E8E                     _MTOUCH_Sensor_Initialize:
  6660                           
  6661                           ;incstack = 0
  6662                           ; Regs used in _MTOUCH_Sensor_Initialize: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cst
      +                          ack]
  6663                           ;MTOUCH_Sensor_Initialize@sensor stored from wreg
  6664  0E8E  00F9               	movwf	MTOUCH_Sensor_Initialize@sensor
  6665                           
  6666                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 144: enum mtouch_sensor_error MTOUCH_Sensor
      +                          _Initialize(enum mtouch_sensor_names sensor);mcc_generated_files/mtouch/mtouch_sensor.c:
      +                           145: {;mcc_generated_files/mtouch/mtouch_sensor.c: 146:     MTOUCH_Sensor_Enable(sensor
      +                          );
  6667  0E8F  0879               	movf	MTOUCH_Sensor_Initialize@sensor,w
  6668  0E90  318E  267D  318E   	fcall	_MTOUCH_Sensor_Enable
  6669                           
  6670                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 147:     Sensor_Sampled_Reset(&mtouch_senso
      +                          r[sensor]);
  6671  0E93  3009               	movlw	9
  6672  0E94  00F8               	movwf	??_MTOUCH_Sensor_Initialize
  6673  0E95  0878               	movf	??_MTOUCH_Sensor_Initialize,w
  6674  0E96  00F2               	movwf	___bmul@multiplicand
  6675  0E97  0879               	movf	MTOUCH_Sensor_Initialize@sensor,w
  6676  0E98  318E  265B  318E   	fcall	___bmul
  6677  0E9B  3ED3               	addlw	(low (_mtouch_sensor| 0))& (0+255)
  6678  0E9C  318D  25D6         	fcall	_Sensor_Sampled_Reset
  6679  0E9E  0008               	return
  6680  0E9F                     __end_of_MTOUCH_Sensor_Initialize:
  6681                           
  6682                           	psect	text43
  6683  0DD6                     __ptext43:	
  6684 ;; *************** function _Sensor_Sampled_Reset *****************
  6685 ;; Defined at:
  6686 ;;		line 565 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  6687 ;; Parameters:    Size  Location     Type
  6688 ;;  sensor          1    wreg     PTR struct .
  6689 ;;		 -> mtouch_sensor(27), 
  6690 ;; Auto vars:     Size  Location     Type
  6691 ;;  sensor          1    2[COMMON] PTR struct .
  6692 ;;		 -> mtouch_sensor(27), 
  6693 ;; Return value:  Size  Location     Type
  6694 ;;                  1    wreg      void 
  6695 ;; Registers used:
  6696 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6697 ;; Tracked objects:
  6698 ;;		On entry : 0/0
  6699 ;;		On exit  : 0/0
  6700 ;;		Unchanged: 0/0
  6701 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6702 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6703 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6704 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6705 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6706 ;;Total ram usage:        1 bytes
  6707 ;; Hardware stack levels used: 1
  6708 ;; Hardware stack levels required when called: 4
  6709 ;; This function calls:
  6710 ;;		Nothing
  6711 ;; This function is called by:
  6712 ;;		_MTOUCH_Sensor_Initialize
  6713 ;;		_MTOUCH_Sensor_Sampled_ResetAll
  6714 ;; This function uses a non-reentrant model
  6715 ;;
  6716                           
  6717                           
  6718                           ;psect for function _Sensor_Sampled_Reset
  6719  0DD6                     _Sensor_Sampled_Reset:
  6720                           
  6721                           ;incstack = 0
  6722                           ; Regs used in _Sensor_Sampled_Reset: [wreg+fsr1l+fsr1h+status,2+status,0]
  6723                           ;Sensor_Sampled_Reset@sensor stored from wreg
  6724  0DD6  00F2               	movwf	Sensor_Sampled_Reset@sensor
  6725                           
  6726                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 565: static __attribute__((inline)) void Se
      +                          nsor_Sampled_Reset(mtouch_sensor_t* sensor);mcc_generated_files/mtouch/mtouch_sensor.c: 
      +                          566: {;mcc_generated_files/mtouch/mtouch_sensor.c: 567:     sensor->sampled = 0;
  6727  0DD7  0872               	movf	Sensor_Sampled_Reset@sensor,w
  6728  0DD8  3E08               	addlw	8
  6729  0DD9  0086               	movwf	6
  6730  0DDA  0187               	clrf	7
  6731  0DDB  1081               	bcf	1,1
  6732  0DDC  0008               	return
  6733  0DDD                     __end_of_Sensor_Sampled_Reset:
  6734                           
  6735                           	psect	text44
  6736  0E7D                     __ptext44:	
  6737 ;; *************** function _MTOUCH_Sensor_Enable *****************
  6738 ;; Defined at:
  6739 ;;		line 482 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  6740 ;; Parameters:    Size  Location     Type
  6741 ;;  sensor          1    wreg     enum E2707
  6742 ;; Auto vars:     Size  Location     Type
  6743 ;;  sensor          1    7[COMMON] enum E2707
  6744 ;; Return value:  Size  Location     Type
  6745 ;;                  1    wreg      void 
  6746 ;; Registers used:
  6747 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6748 ;; Tracked objects:
  6749 ;;		On entry : 1F/0
  6750 ;;		On exit  : 0/0
  6751 ;;		Unchanged: 0/0
  6752 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6753 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6754 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6755 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6756 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6757 ;;Total ram usage:        2 bytes
  6758 ;; Hardware stack levels used: 1
  6759 ;; Hardware stack levels required when called: 5
  6760 ;; This function calls:
  6761 ;;		___bmul
  6762 ;; This function is called by:
  6763 ;;		_MTOUCH_Sensor_Initialize
  6764 ;;		_Button_Tick_helper
  6765 ;; This function uses a non-reentrant model
  6766 ;;
  6767                           
  6768                           
  6769                           ;psect for function _MTOUCH_Sensor_Enable
  6770  0E7D                     _MTOUCH_Sensor_Enable:
  6771                           
  6772                           ;incstack = 0
  6773                           ; Regs used in _MTOUCH_Sensor_Enable: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6774                           ;MTOUCH_Sensor_Enable@sensor stored from wreg
  6775  0E7D  00F7               	movwf	MTOUCH_Sensor_Enable@sensor
  6776                           
  6777                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 482: void MTOUCH_Sensor_Enable(enum mtouch_
      +                          sensor_names sensor);mcc_generated_files/mtouch/mtouch_sensor.c: 483: {;mcc_generated_fi
      +                          les/mtouch/mtouch_sensor.c: 484:     if(sensor < 3u)
  6778  0E7E  3003               	movlw	3
  6779  0E7F  0277               	subwf	MTOUCH_Sensor_Enable@sensor,w
  6780  0E80  1803               	skipnc
  6781  0E81  0008               	return
  6782                           
  6783                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 485:         mtouch_sensor[sensor].enabled 
      +                          = 1;
  6784  0E82  3009               	movlw	9
  6785  0E83  00F6               	movwf	??_MTOUCH_Sensor_Enable
  6786  0E84  0876               	movf	??_MTOUCH_Sensor_Enable,w
  6787  0E85  00F2               	movwf	___bmul@multiplicand
  6788  0E86  0877               	movf	MTOUCH_Sensor_Enable@sensor,w
  6789  0E87  318E  265B         	fcall	___bmul
  6790  0E89  3EDB               	addlw	(low ((_mtouch_sensor| 0+8)))& (0+255)
  6791  0E8A  0086               	movwf	6
  6792  0E8B  0187               	clrf	7
  6793  0E8C  1401               	bsf	1,0
  6794  0E8D  0008               	return
  6795  0E8E                     __end_of_MTOUCH_Sensor_Enable:
  6796                           
  6797                           	psect	text45
  6798  0FB2                     __ptext45:	
  6799 ;; *************** function _MTOUCH_Button_InitializeAll *****************
  6800 ;; Defined at:
  6801 ;;		line 195 in file "mcc_generated_files/mtouch/mtouch_button.c"
  6802 ;; Parameters:    Size  Location     Type
  6803 ;;		None
  6804 ;; Auto vars:     Size  Location     Type
  6805 ;;  button          1    8[COMMON] enum E2928
  6806 ;; Return value:  Size  Location     Type
  6807 ;;                  1    wreg      void 
  6808 ;; Registers used:
  6809 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6810 ;; Tracked objects:
  6811 ;;		On entry : 1F/0
  6812 ;;		On exit  : 0/0
  6813 ;;		Unchanged: 0/0
  6814 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6815 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6816 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6817 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6818 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6819 ;;Total ram usage:        2 bytes
  6820 ;; Hardware stack levels used: 1
  6821 ;; Hardware stack levels required when called: 6
  6822 ;; This function calls:
  6823 ;;		_MTOUCH_Button_Initialize
  6824 ;;		_memcpy
  6825 ;; This function is called by:
  6826 ;;		_MTOUCH_Initialize
  6827 ;; This function uses a non-reentrant model
  6828 ;;
  6829                           
  6830                           
  6831                           ;psect for function _MTOUCH_Button_InitializeAll
  6832  0FB2                     _MTOUCH_Button_InitializeAll:
  6833                           
  6834                           ;mcc_generated_files/mtouch/mtouch_button.c: 197:     enum mtouch_button_names button;;m
      +                          cc_generated_files/mtouch/mtouch_button.c: 199:     memcpy(mtouch_button,mtouch_button_i
      +                          nit,sizeof(mtouch_button_init));
  6835                           
  6836                           ;incstack = 0
  6837                           ; Regs used in _MTOUCH_Button_InitializeAll: [wreg-fsr1h+status,2+status,0+pclath+cstack
      +                          ]
  6838  0FB2  30F4               	movlw	low (_mtouch_button_init| (0+32768))
  6839  0FB3  00F2               	movwf	memcpy@s1
  6840  0FB4  3085               	movlw	high (_mtouch_button_init| (0+32768))
  6841  0FB5  00F3               	movwf	memcpy@s1+1
  6842  0FB6  3033               	movlw	51
  6843  0FB7  00F4               	movwf	memcpy@n
  6844  0FB8  3000               	movlw	0
  6845  0FB9  00F5               	movwf	memcpy@n+1
  6846  0FBA  30A0               	movlw	(low (_mtouch_button| 0))& (0+255)
  6847  0FBB  3186  267E  318F   	fcall	_memcpy
  6848                           
  6849                           ;mcc_generated_files/mtouch/mtouch_button.c: 201:     for (button = 0; button < 3u; butt
      +                          on++)
  6850  0FBE  01F8               	clrf	MTOUCH_Button_InitializeAll@button
  6851  0FBF                     l3474:
  6852                           
  6853                           ;mcc_generated_files/mtouch/mtouch_button.c: 202:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 203:         MTOUCH_Button_Initialize(button);
  6854  0FBF  0878               	movf	MTOUCH_Button_InitializeAll@button,w
  6855  0FC0  3186  2627  318F   	fcall	_MTOUCH_Button_Initialize
  6856                           
  6857                           ;mcc_generated_files/mtouch/mtouch_button.c: 204:     }
  6858  0FC3  3001               	movlw	1
  6859  0FC4  00F7               	movwf	??_MTOUCH_Button_InitializeAll
  6860  0FC5  0877               	movf	??_MTOUCH_Button_InitializeAll,w
  6861  0FC6  07F8               	addwf	MTOUCH_Button_InitializeAll@button,f
  6862  0FC7  3003               	movlw	3
  6863  0FC8  0278               	subwf	MTOUCH_Button_InitializeAll@button,w
  6864  0FC9  1803               	btfsc	3,0
  6865  0FCA  0008               	return
  6866  0FCB  2FBF               	goto	l3474
  6867  0FCC                     __end_of_MTOUCH_Button_InitializeAll:
  6868                           
  6869                           	psect	text46
  6870  067E                     __ptext46:	
  6871 ;; *************** function _memcpy *****************
  6872 ;; Defined at:
  6873 ;;		line 4 in file "/Applications/microchip/xc8/v2.32/pic/sources/c99/common/memcpy.c"
  6874 ;; Parameters:    Size  Location     Type
  6875 ;;  d1              1    wreg     PTR void 
  6876 ;;		 -> mtouch_button(51), 
  6877 ;;  s1              2    2[COMMON] PTR const void 
  6878 ;;		 -> mtouch_button_init(51), 
  6879 ;;  n               2    4[COMMON] unsigned int 
  6880 ;; Auto vars:     Size  Location     Type
  6881 ;;  d1              1    3[BANK0 ] PTR void 
  6882 ;;		 -> mtouch_button(51), 
  6883 ;;  s               2    1[BANK0 ] PTR const unsigned char 
  6884 ;;		 -> mtouch_button_init(51), 
  6885 ;;  d               1    4[BANK0 ] PTR unsigned char 
  6886 ;;		 -> mtouch_button(51), 
  6887 ;;  tmp             1    0[BANK0 ] unsigned char 
  6888 ;; Return value:  Size  Location     Type
  6889 ;;                  1    wreg      PTR void 
  6890 ;; Registers used:
  6891 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
  6892 ;; Tracked objects:
  6893 ;;		On entry : 1F/0
  6894 ;;		On exit  : 1F/0
  6895 ;;		Unchanged: 0/0
  6896 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6897 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6898 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6899 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6900 ;;      Totals:         5       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6901 ;;Total ram usage:       10 bytes
  6902 ;; Hardware stack levels used: 1
  6903 ;; Hardware stack levels required when called: 4
  6904 ;; This function calls:
  6905 ;;		Nothing
  6906 ;; This function is called by:
  6907 ;;		_MTOUCH_Button_InitializeAll
  6908 ;; This function uses a non-reentrant model
  6909 ;;
  6910                           
  6911                           
  6912                           ;psect for function _memcpy
  6913  067E                     _memcpy:
  6914                           
  6915                           ;incstack = 0
  6916                           ; Regs used in _memcpy: [wreg-fsr1h+status,2+status,0+pclath]
  6917                           ;memcpy@d1 stored from wreg
  6918  067E  00A3               	movwf	memcpy@d1
  6919  067F  0873               	movf	memcpy@s1+1,w
  6920  0680  00A2               	movwf	memcpy@s+1
  6921  0681  0872               	movf	memcpy@s1,w
  6922  0682  00A1               	movwf	memcpy@s
  6923  0683  0823               	movf	memcpy@d1,w
  6924  0684  00F6               	movwf	??_memcpy
  6925  0685  0876               	movf	??_memcpy,w
  6926  0686  00A4               	movwf	memcpy@d
  6927  0687                     l3340:
  6928  0687  3001               	movlw	1
  6929  0688  02F4               	subwf	memcpy@n,f
  6930  0689  3000               	movlw	0
  6931  068A  3BF5               	subwfb	memcpy@n+1,f
  6932  068B  0A74               	incf	memcpy@n,w
  6933  068C  1903               	btfsc	3,2
  6934  068D  0A75               	incf	memcpy@n+1,w
  6935  068E  1903               	btfsc	3,2
  6936  068F  0008               	return
  6937  0690  0821               	movf	memcpy@s,w
  6938  0691  0084               	movwf	4
  6939  0692  0822               	movf	memcpy@s+1,w
  6940  0693  0085               	movwf	5
  6941  0694  0800               	movf	0,w	;code access
  6942  0695  00F6               	movwf	??_memcpy
  6943  0696  0876               	movf	??_memcpy,w
  6944  0697  00A0               	movwf	memcpy@tmp
  6945  0698  3001               	movlw	1
  6946  0699  07A1               	addwf	memcpy@s,f
  6947  069A  3000               	movlw	0
  6948  069B  3DA2               	addwfc	memcpy@s+1,f
  6949  069C  0820               	movf	memcpy@tmp,w
  6950  069D  00F6               	movwf	??_memcpy
  6951  069E  0824               	movf	memcpy@d,w
  6952  069F  0086               	movwf	6
  6953  06A0  0187               	clrf	7
  6954  06A1  0876               	movf	??_memcpy,w
  6955  06A2  0081               	movwf	1
  6956  06A3  3001               	movlw	1
  6957  06A4  00F6               	movwf	??_memcpy
  6958  06A5  0876               	movf	??_memcpy,w
  6959  06A6  07A4               	addwf	memcpy@d,f
  6960  06A7  2E87               	goto	l3340
  6961  06A8                     __end_of_memcpy:
  6962                           
  6963                           	psect	text47
  6964  0EE6                     __ptext47:	
  6965 ;; *************** function _MTOUCH_Button_ServiceAll *****************
  6966 ;; Defined at:
  6967 ;;		line 213 in file "mcc_generated_files/mtouch/mtouch_button.c"
  6968 ;; Parameters:    Size  Location     Type
  6969 ;;		None
  6970 ;; Auto vars:     Size  Location     Type
  6971 ;;  button          1   14[BANK0 ] enum E2928
  6972 ;; Return value:  Size  Location     Type
  6973 ;;                  1    wreg      void 
  6974 ;; Registers used:
  6975 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6976 ;; Tracked objects:
  6977 ;;		On entry : 1F/0
  6978 ;;		On exit  : 1F/0
  6979 ;;		Unchanged: 0/0
  6980 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6981 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6982 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6983 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6984 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6985 ;;Total ram usage:        2 bytes
  6986 ;; Hardware stack levels used: 1
  6987 ;; Hardware stack levels required when called: 9
  6988 ;; This function calls:
  6989 ;;		_Button_Reburst_Clear
  6990 ;;		_Button_Service
  6991 ;; This function is called by:
  6992 ;;		_MTOUCH_Service_Mainloop
  6993 ;; This function uses a non-reentrant model
  6994 ;;
  6995                           
  6996                           
  6997                           ;psect for function _MTOUCH_Button_ServiceAll
  6998  0EE6                     _MTOUCH_Button_ServiceAll:
  6999                           
  7000                           ;mcc_generated_files/mtouch/mtouch_button.c: 215:     enum mtouch_button_names button;;m
      +                          cc_generated_files/mtouch/mtouch_button.c: 217:     Button_Reburst_Clear();
  7001                           
  7002                           ;incstack = 0
  7003                           ; Regs used in _MTOUCH_Button_ServiceAll: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7004  0EE6  318D  259A  318E   	fcall	_Button_Reburst_Clear
  7005                           
  7006                           ;mcc_generated_files/mtouch/mtouch_button.c: 219:     for (button = 0; button < 3u; butt
      +                          on++)
  7007  0EE9  01AE               	clrf	MTOUCH_Button_ServiceAll@button
  7008  0EEA                     l3580:
  7009                           
  7010                           ;mcc_generated_files/mtouch/mtouch_button.c: 220:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 221:         Button_Service(button);
  7011  0EEA  082E               	movf	MTOUCH_Button_ServiceAll@button,w
  7012  0EEB  3185  2571  318E   	fcall	_Button_Service
  7013                           
  7014                           ;mcc_generated_files/mtouch/mtouch_button.c: 222:     }
  7015  0EEE  3001               	movlw	1
  7016  0EEF  0020               	movlb	0	; select bank0
  7017  0EF0  00AD               	movwf	??_MTOUCH_Button_ServiceAll
  7018  0EF1  082D               	movf	??_MTOUCH_Button_ServiceAll,w
  7019  0EF2  07AE               	addwf	MTOUCH_Button_ServiceAll@button,f
  7020  0EF3  3003               	movlw	3
  7021  0EF4  022E               	subwf	MTOUCH_Button_ServiceAll@button,w
  7022  0EF5  1803               	btfsc	3,0
  7023  0EF6  0008               	return
  7024  0EF7  2EEA               	goto	l3580
  7025  0EF8                     __end_of_MTOUCH_Button_ServiceAll:
  7026                           
  7027                           	psect	text48
  7028  0571                     __ptext48:	
  7029 ;; *************** function _Button_Service *****************
  7030 ;; Defined at:
  7031 ;;		line 225 in file "mcc_generated_files/mtouch/mtouch_button.c"
  7032 ;; Parameters:    Size  Location     Type
  7033 ;;  name            1    wreg     enum E2928
  7034 ;; Auto vars:     Size  Location     Type
  7035 ;;  name            1   11[BANK0 ] enum E2928
  7036 ;;  button          1   12[BANK0 ] PTR struct .
  7037 ;;		 -> mtouch_button(51), 
  7038 ;; Return value:  Size  Location     Type
  7039 ;;                  1    wreg      void 
  7040 ;; Registers used:
  7041 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7042 ;; Tracked objects:
  7043 ;;		On entry : 1F/0
  7044 ;;		On exit  : 0/0
  7045 ;;		Unchanged: 0/0
  7046 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7047 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7048 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7049 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7050 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7051 ;;Total ram usage:        3 bytes
  7052 ;; Hardware stack levels used: 1
  7053 ;; Hardware stack levels required when called: 8
  7054 ;; This function calls:
  7055 ;;		_Button_Deviation_Update
  7056 ;;		_Button_Reading_Update
  7057 ;;		_Button_State_Disabled
  7058 ;;		_Button_State_Initializing
  7059 ;;		_Button_State_NotPressed
  7060 ;;		_Button_State_PressDebounce
  7061 ;;		_Button_State_Pressed
  7062 ;;		_Button_State_ReleaseDebounce
  7063 ;;		_Button_State_Suspended
  7064 ;;		_MTOUCH_Button_Initialize
  7065 ;;		_MTOUCH_Sensor_isCalibrated
  7066 ;;		_MTOUCH_Sensor_wasSampled
  7067 ;; This function is called by:
  7068 ;;		_MTOUCH_Button_ServiceAll
  7069 ;; This function uses a non-reentrant model
  7070 ;;
  7071                           
  7072                           
  7073                           ;psect for function _Button_Service
  7074  0571                     _Button_Service:
  7075                           
  7076                           ;incstack = 0
  7077                           ; Regs used in _Button_Service: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7078                           ;Button_Service@name stored from wreg
  7079  0571  00AB               	movwf	Button_Service@name
  7080                           
  7081                           ;mcc_generated_files/mtouch/mtouch_button.c: 225: static void Button_Service(enum mtouch
      +                          _button_names name);mcc_generated_files/mtouch/mtouch_button.c: 226: {;mcc_generated_fil
      +                          es/mtouch/mtouch_button.c: 227:     mtouch_button_t* button = &mtouch_button[name];
  7082  0572  0E2B               	swapf	Button_Service@name,w
  7083  0573  39F0               	andlw	240
  7084  0574  072B               	addwf	Button_Service@name,w
  7085  0575  3EA0               	addlw	(low (_mtouch_button| 0))& (0+255)
  7086  0576  00AA               	movwf	??_Button_Service
  7087  0577  082A               	movf	??_Button_Service,w
  7088  0578  00AC               	movwf	Button_Service@button
  7089                           
  7090                           ;mcc_generated_files/mtouch/mtouch_button.c: 229:     if (MTOUCH_Sensor_wasSampled(butto
      +                          n->sensor) && MTOUCH_Sensor_isCalibrated(button->sensor))
  7091  0579  0A2C               	incf	Button_Service@button,w
  7092  057A  0086               	movwf	6
  7093  057B  0187               	clrf	7
  7094  057C  0801               	movf	1,w
  7095  057D  318F  2743  3185   	fcall	_MTOUCH_Sensor_wasSampled
  7096  0580  3A00               	xorlw	0
  7097  0581  1903               	skipnz
  7098  0582  0008               	return
  7099  0583  0020               	movlb	0	; select bank0
  7100  0584  0A2C               	incf	Button_Service@button,w
  7101  0585  0086               	movwf	6
  7102  0586  0187               	clrf	7
  7103  0587  0801               	movf	1,w
  7104  0588  318D  259C  3185   	fcall	_MTOUCH_Sensor_isCalibrated
  7105  058B  3A00               	xorlw	0
  7106  058C  1903               	skipnz
  7107  058D  0008               	return
  7108                           
  7109                           ;mcc_generated_files/mtouch/mtouch_button.c: 230:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 231:         Button_Reading_Update(button);
  7110  058E  082C               	movf	Button_Service@button,w
  7111  058F  318E  2614  3185   	fcall	_Button_Reading_Update
  7112                           
  7113                           ;mcc_generated_files/mtouch/mtouch_button.c: 232:         Button_Deviation_Update(button
      +                          );
  7114  0592  082C               	movf	Button_Service@button,w
  7115  0593  3181  21E8  3185   	fcall	_Button_Deviation_Update
  7116                           
  7117                           ;mcc_generated_files/mtouch/mtouch_button.c: 234:         if (button->state >= (uint8_t)
      +                          (sizeof(Button_StateMachine)/sizeof(button_statemachine_state_t)))
  7118  0596  082C               	movf	Button_Service@button,w
  7119  0597  3E02               	addlw	2
  7120  0598  0086               	movwf	6
  7121  0599  0187               	clrf	7
  7122  059A  3007               	movlw	7
  7123  059B  0201               	subwf	1,w
  7124  059C  1C03               	skipc
  7125  059D  2DA5               	goto	l3540
  7126                           
  7127                           ;mcc_generated_files/mtouch/mtouch_button.c: 235:         {;mcc_generated_files/mtouch/m
      +                          touch_button.c: 236:             MTOUCH_Button_Initialize(button->name);
  7128  059E  082C               	movf	Button_Service@button,w
  7129  059F  0086               	movwf	6
  7130  05A0  0187               	clrf	7
  7131  05A1  0801               	movf	1,w
  7132  05A2  3186  2627  3185   	fcall	_MTOUCH_Button_Initialize
  7133  05A5                     l3540:
  7134                           
  7135                           ;mcc_generated_files/mtouch/mtouch_button.c: 238:         Button_StateMachine[(uint8_t)b
      +                          utton->state](button);
  7136  05A5  0020               	movlb	0	; select bank0
  7137  05A6  082C               	movf	Button_Service@button,w
  7138  05A7  00AA               	movwf	??_Button_Service
  7139  05A8  082A               	movf	??_Button_Service,w
  7140  05A9  00A5               	movwf	Button_State_Disabled@button
  7141  05AA  082C               	movf	Button_Service@button,w
  7142  05AB  3E02               	addlw	2
  7143  05AC  0086               	movwf	6
  7144  05AD  0187               	clrf	7
  7145  05AE  3501               	lslf	1,w
  7146  05AF  3E41               	addlw	(low (_Button_StateMachine| 0))& (0+255)
  7147  05B0  0086               	movwf	6
  7148  05B1  0187               	clrf	7
  7149  05B2  3F41               	moviw [1]fsr1
  7150  05B3  008A               	movwf	10
  7151  05B4  3F40               	moviw [0]fsr1
  7152  05B5  000A               	callw
  7153  05B6  3185               	pagesel	$
  7154  05B7  0008               	return
  7155  05B8                     __end_of_Button_Service:
  7156                           
  7157                           	psect	text49
  7158  0F43                     __ptext49:	
  7159 ;; *************** function _MTOUCH_Sensor_wasSampled *****************
  7160 ;; Defined at:
  7161 ;;		line 557 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  7162 ;; Parameters:    Size  Location     Type
  7163 ;;  sensor          1    wreg     enum E2707
  7164 ;; Auto vars:     Size  Location     Type
  7165 ;;  sensor          1    7[COMMON] enum E2707
  7166 ;; Return value:  Size  Location     Type
  7167 ;;                  1    wreg      _Bool 
  7168 ;; Registers used:
  7169 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7170 ;; Tracked objects:
  7171 ;;		On entry : 1F/0
  7172 ;;		On exit  : 0/0
  7173 ;;		Unchanged: 0/0
  7174 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7175 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7176 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7177 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7178 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7179 ;;Total ram usage:        2 bytes
  7180 ;; Hardware stack levels used: 1
  7181 ;; Hardware stack levels required when called: 5
  7182 ;; This function calls:
  7183 ;;		___bmul
  7184 ;; This function is called by:
  7185 ;;		_Button_Service
  7186 ;; This function uses a non-reentrant model
  7187 ;;
  7188                           
  7189                           
  7190                           ;psect for function _MTOUCH_Sensor_wasSampled
  7191  0F43                     _MTOUCH_Sensor_wasSampled:
  7192                           
  7193                           ;incstack = 0
  7194                           ; Regs used in _MTOUCH_Sensor_wasSampled: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cst
      +                          ack]
  7195                           ;MTOUCH_Sensor_wasSampled@sensor stored from wreg
  7196  0F43  00F7               	movwf	MTOUCH_Sensor_wasSampled@sensor
  7197                           
  7198                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 557: _Bool MTOUCH_Sensor_wasSampled(enum mt
      +                          ouch_sensor_names sensor);mcc_generated_files/mtouch/mtouch_sensor.c: 558: {;mcc_generat
      +                          ed_files/mtouch/mtouch_sensor.c: 559:     if(sensor < 3u)
  7199  0F44  3003               	movlw	3
  7200  0F45  0277               	subwf	MTOUCH_Sensor_wasSampled@sensor,w
  7201  0F46  1803               	skipnc
  7202  0F47  2F55               	goto	l3326
  7203                           
  7204                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 560:         return (_Bool)mtouch_sensor[se
      +                          nsor].sampled;
  7205  0F48  3009               	movlw	9
  7206  0F49  00F6               	movwf	??_MTOUCH_Sensor_wasSampled
  7207  0F4A  0876               	movf	??_MTOUCH_Sensor_wasSampled,w
  7208  0F4B  00F2               	movwf	___bmul@multiplicand
  7209  0F4C  0877               	movf	MTOUCH_Sensor_wasSampled@sensor,w
  7210  0F4D  318E  265B         	fcall	___bmul
  7211  0F4F  3EDB               	addlw	(low ((_mtouch_sensor| 0+8)))& (0+255)
  7212  0F50  0086               	movwf	6
  7213  0F51  0187               	clrf	7
  7214  0F52  0C01               	rrf	1,w
  7215  0F53  3901               	andlw	1
  7216  0F54  0008               	return
  7217  0F55                     l3326:
  7218                           
  7219                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 562:         return 0;
  7220  0F55  3000               	movlw	0
  7221  0F56  0008               	return
  7222  0F57                     __end_of_MTOUCH_Sensor_wasSampled:
  7223                           
  7224                           	psect	text50
  7225  0D9C                     __ptext50:	
  7226 ;; *************** function _MTOUCH_Sensor_isCalibrated *****************
  7227 ;; Defined at:
  7228 ;;		line 530 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  7229 ;; Parameters:    Size  Location     Type
  7230 ;;  sensor          1    wreg     enum E2707
  7231 ;; Auto vars:     Size  Location     Type
  7232 ;;  sensor          1    0[COMMON] enum E2707
  7233 ;; Return value:  Size  Location     Type
  7234 ;;                  1    wreg      _Bool 
  7235 ;; Registers used:
  7236 ;;		wreg
  7237 ;; Tracked objects:
  7238 ;;		On entry : 1F/0
  7239 ;;		On exit  : 1F/0
  7240 ;;		Unchanged: 1F/0
  7241 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7242 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7243 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7244 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7245 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7246 ;;Total ram usage:        0 bytes
  7247 ;; Hardware stack levels used: 1
  7248 ;; Hardware stack levels required when called: 4
  7249 ;; This function calls:
  7250 ;;		Nothing
  7251 ;; This function is called by:
  7252 ;;		_Button_Service
  7253 ;; This function uses a non-reentrant model
  7254 ;;
  7255                           
  7256                           
  7257                           ;psect for function _MTOUCH_Sensor_isCalibrated
  7258  0D9C                     _MTOUCH_Sensor_isCalibrated:
  7259                           
  7260                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 530: _Bool MTOUCH_Sensor_isCalibrated(enum 
      +                          mtouch_sensor_names sensor);mcc_generated_files/mtouch/mtouch_sensor.c: 531: {;mcc_gener
      +                          ated_files/mtouch/mtouch_sensor.c: 533:     return 1;
  7261                           
  7262                           ;incstack = 0
  7263                           ; Regs used in _MTOUCH_Sensor_isCalibrated: [wreg]
  7264  0D9C  3001               	movlw	1
  7265  0D9D  0008               	return
  7266  0D9E                     __end_of_MTOUCH_Sensor_isCalibrated:
  7267                           
  7268                           	psect	text51
  7269  0D99                     __ptext51:	
  7270 ;; *************** function _Button_State_Disabled *****************
  7271 ;; Defined at:
  7272 ;;		line 368 in file "mcc_generated_files/mtouch/mtouch_button.c"
  7273 ;; Parameters:    Size  Location     Type
  7274 ;;  button          1    5[BANK0 ] PTR struct .
  7275 ;;		 -> mtouch_button(51), 
  7276 ;; Auto vars:     Size  Location     Type
  7277 ;;		None
  7278 ;; Return value:  Size  Location     Type
  7279 ;;                  1    wreg      void 
  7280 ;; Registers used:
  7281 ;;		None
  7282 ;; Tracked objects:
  7283 ;;		On entry : 1F/0
  7284 ;;		On exit  : 1F/0
  7285 ;;		Unchanged: 1F/0
  7286 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7287 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7288 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7289 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7290 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7291 ;;Total ram usage:        1 bytes
  7292 ;; Hardware stack levels used: 1
  7293 ;; Hardware stack levels required when called: 4
  7294 ;; This function calls:
  7295 ;;		Nothing
  7296 ;; This function is called by:
  7297 ;;		_Button_Service
  7298 ;; This function uses a non-reentrant model
  7299 ;;
  7300                           
  7301                           
  7302                           ;psect for function _Button_State_Disabled
  7303  0D99                     _Button_State_Disabled:
  7304                           
  7305                           ;incstack = 0
  7306                           ; Regs used in _Button_State_Disabled: []
  7307  0D99  0008               	return
  7308  0D9A                     __end_of_Button_State_Disabled:
  7309                           
  7310                           	psect	text52
  7311  026B                     __ptext52:	
  7312 ;; *************** function _Button_State_ReleaseDebounce *****************
  7313 ;; Defined at:
  7314 ;;		line 339 in file "mcc_generated_files/mtouch/mtouch_button.c"
  7315 ;; Parameters:    Size  Location     Type
  7316 ;;  button          1    5[BANK0 ] PTR struct .
  7317 ;;		 -> mtouch_button(51), 
  7318 ;; Auto vars:     Size  Location     Type
  7319 ;;		None
  7320 ;; Return value:  Size  Location     Type
  7321 ;;                  1    wreg      void 
  7322 ;; Registers used:
  7323 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7324 ;; Tracked objects:
  7325 ;;		On entry : 1F/0
  7326 ;;		On exit  : 1F/0
  7327 ;;		Unchanged: 0/0
  7328 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7329 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7330 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7331 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7332 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7333 ;;Total ram usage:        3 bytes
  7334 ;; Hardware stack levels used: 1
  7335 ;; Hardware stack levels required when called: 5
  7336 ;; This function calls:
  7337 ;;		_Button_DefaultCallback
  7338 ;;		_Button_Reburst_Request
  7339 ;; This function is called by:
  7340 ;;		_Button_Service
  7341 ;; This function uses a non-reentrant model
  7342 ;;
  7343                           
  7344                           
  7345                           ;psect for function _Button_State_ReleaseDebounce
  7346  026B                     _Button_State_ReleaseDebounce:
  7347                           
  7348                           ;mcc_generated_files/mtouch/mtouch_button.c: 339: static void Button_State_ReleaseDeboun
      +                          ce(mtouch_button_t* button);mcc_generated_files/mtouch/mtouch_button.c: 340: {;mcc_gener
      +                          ated_files/mtouch/mtouch_button.c: 341:     if ((button->deviation) < (mtouch_button_dev
      +                          iation_t)((button->threshold)-((button->threshold) >> button->hysteresis)))
  7349                           
  7350                           ;incstack = 0
  7351                           ; Regs used in _Button_State_ReleaseDebounce: [wreg-fsr1h+status,2+status,0+pclath+cstac
      +                          k]
  7352  026B  0825               	movf	Button_State_ReleaseDebounce@button,w
  7353  026C  3E09               	addlw	9
  7354  026D  0086               	movwf	6
  7355  026E  0187               	clrf	7
  7356  026F  0801               	movf	1,w
  7357  0270  3A80               	xorlw	128
  7358  0271  00A6               	movwf	??_Button_State_ReleaseDebounce
  7359  0272  0825               	movf	Button_State_ReleaseDebounce@button,w
  7360  0273  3E0E               	addlw	14
  7361  0274  0086               	movwf	6
  7362  0275  0187               	clrf	7
  7363  0276  0825               	movf	Button_State_ReleaseDebounce@button,w
  7364  0277  3E0E               	addlw	14
  7365  0278  0084               	movwf	4
  7366  0279  0185               	clrf	5
  7367  027A  0800               	movf	0,w
  7368  027B  00A7               	movwf	??_Button_State_ReleaseDebounce+1
  7369  027C  0825               	movf	Button_State_ReleaseDebounce@button,w
  7370  027D  3E10               	addlw	16
  7371  027E  0084               	movwf	4
  7372  027F  0185               	clrf	5
  7373  0280  0A00               	incf	0,w
  7374  0281  2A83               	goto	u2064
  7375  0282                     u2065:
  7376  0282  36A7               	lsrf	??_Button_State_ReleaseDebounce+1,f
  7377  0283                     u2064:
  7378  0283  0B89               	decfsz	9,f
  7379  0284  2A82               	goto	u2065
  7380  0285  0827               	movf	??_Button_State_ReleaseDebounce+1,w
  7381  0286  0201               	subwf	1,w
  7382  0287  3A80               	xorlw	128
  7383  0288  02A6               	subwf	??_Button_State_ReleaseDebounce,f
  7384  0289  1803               	skipnc
  7385  028A  2AC6               	goto	l3432
  7386                           
  7387                           ;mcc_generated_files/mtouch/mtouch_button.c: 342:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 343:         (button->counter)++;
  7388  028B  0825               	movf	Button_State_ReleaseDebounce@button,w
  7389  028C  3E0A               	addlw	10
  7390  028D  0086               	movwf	6
  7391  028E  0187               	clrf	7
  7392  028F  3001               	movlw	1
  7393  0290  0781               	addwf	1,f
  7394  0291  3141               	addfsr 1,1
  7395  0292  1803               	skipnc
  7396  0293  0A81               	incf	1,f
  7397                           
  7398                           ;mcc_generated_files/mtouch/mtouch_button.c: 344:         if ((button->counter) >= (4u))
  7399  0294  0825               	movf	Button_State_ReleaseDebounce@button,w
  7400  0295  3E0A               	addlw	10
  7401  0296  0086               	movwf	6
  7402  0297  0187               	clrf	7
  7403  0298  3F40               	moviw [0]fsr1
  7404  0299  00A6               	movwf	??_Button_State_ReleaseDebounce
  7405  029A  3F41               	moviw [1]fsr1
  7406  029B  00A7               	movwf	??_Button_State_ReleaseDebounce+1
  7407  029C  3000               	movlw	0
  7408  029D  0227               	subwf	??_Button_State_ReleaseDebounce+1,w
  7409  029E  3004               	movlw	4
  7410  029F  1903               	skipnz
  7411  02A0  0226               	subwf	??_Button_State_ReleaseDebounce,w
  7412  02A1  1C03               	skipc
  7413  02A2  2AC2               	goto	l3430
  7414                           
  7415                           ;mcc_generated_files/mtouch/mtouch_button.c: 345:         {;mcc_generated_files/mtouch/m
      +                          touch_button.c: 346:             button->state = MTOUCH_BUTTON_STATE_notPressed;
  7416  02A3  0825               	movf	Button_State_ReleaseDebounce@button,w
  7417  02A4  3E02               	addlw	2
  7418  02A5  0086               	movwf	6
  7419  02A6  0187               	clrf	7
  7420  02A7  0181               	clrf	1
  7421  02A8  0A81               	incf	1,f
  7422                           
  7423                           ;mcc_generated_files/mtouch/mtouch_button.c: 347:             button->counter = 0;
  7424  02A9  0825               	movf	Button_State_ReleaseDebounce@button,w
  7425  02AA  3E0A               	addlw	10
  7426  02AB  0086               	movwf	6
  7427  02AC  0187               	clrf	7
  7428  02AD  3000               	movlw	0
  7429  02AE  3FC0               	movwi [0]fsr1
  7430  02AF  3FC1               	movwi [1]fsr1
  7431                           
  7432                           ;mcc_generated_files/mtouch/mtouch_button.c: 348:             button->baseline_count = (
      +                          mtouch_button_baselinecounter_t)((0xffff))-((mtouch_button_baselinecounter_t)1024u);
  7433  02B0  0825               	movf	Button_State_ReleaseDebounce@button,w
  7434  02B1  3E0C               	addlw	12
  7435  02B2  0086               	movwf	6
  7436  02B3  0187               	clrf	7
  7437  02B4  30FF               	movlw	255
  7438  02B5  3FC0               	movwi [0]fsr1
  7439  02B6  30FB               	movlw	251
  7440  02B7  3FC1               	movwi [1]fsr1
  7441                           
  7442                           ;mcc_generated_files/mtouch/mtouch_button.c: 349:             callback_notPressed(button
      +                          ->name);
  7443  02B8  0825               	movf	Button_State_ReleaseDebounce@button,w
  7444  02B9  0086               	movwf	6
  7445  02BA  0187               	clrf	7
  7446  02BB  0801               	movf	1,w
  7447  02BC  00A6               	movwf	??_Button_State_ReleaseDebounce
  7448  02BD  0826               	movf	??_Button_State_ReleaseDebounce,w
  7449  02BE  00F2               	movwf	Button_DefaultCallback@button
  7450  02BF  318D  2598  3182   	fcall	_Button_DefaultCallback
  7451  02C2                     l3430:
  7452                           
  7453                           ;mcc_generated_files/mtouch/mtouch_button.c: 351:         Button_Reburst_Request(button)
      +                          ;
  7454  02C2  0825               	movf	Button_State_ReleaseDebounce@button,w
  7455  02C3  318D  259E         	fcall	_Button_Reburst_Request
  7456                           
  7457                           ;mcc_generated_files/mtouch/mtouch_button.c: 352:     }
  7458  02C5  0008               	return
  7459  02C6                     l3432:
  7460                           
  7461                           ;mcc_generated_files/mtouch/mtouch_button.c: 354:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 355:         button->state = MTOUCH_BUTTON_STATE_pressed;
  7462  02C6  3003               	movlw	3
  7463  02C7  00A6               	movwf	??_Button_State_ReleaseDebounce
  7464  02C8  0825               	movf	Button_State_ReleaseDebounce@button,w
  7465  02C9  3E02               	addlw	2
  7466  02CA  0086               	movwf	6
  7467  02CB  0187               	clrf	7
  7468  02CC  0826               	movf	??_Button_State_ReleaseDebounce,w
  7469  02CD  0081               	movwf	1
  7470                           
  7471                           ;mcc_generated_files/mtouch/mtouch_button.c: 356:         button->counter = (mtouch_butt
      +                          on_statecounter_t)0;
  7472  02CE  0825               	movf	Button_State_ReleaseDebounce@button,w
  7473  02CF  3E0A               	addlw	10
  7474  02D0  0086               	movwf	6
  7475  02D1  0187               	clrf	7
  7476  02D2  3000               	movlw	0
  7477  02D3  3FC0               	movwi [0]fsr1
  7478  02D4  3FC1               	movwi [1]fsr1
  7479  02D5  0008               	return
  7480  02D6                     __end_of_Button_State_ReleaseDebounce:
  7481                           
  7482                           	psect	text53
  7483  03E2                     __ptext53:	
  7484 ;; *************** function _Button_State_Pressed *****************
  7485 ;; Defined at:
  7486 ;;		line 300 in file "mcc_generated_files/mtouch/mtouch_button.c"
  7487 ;; Parameters:    Size  Location     Type
  7488 ;;  button          1    5[BANK0 ] PTR struct .
  7489 ;;		 -> mtouch_button(51), 
  7490 ;; Auto vars:     Size  Location     Type
  7491 ;;		None
  7492 ;; Return value:  Size  Location     Type
  7493 ;;                  1    wreg      void 
  7494 ;; Registers used:
  7495 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7496 ;; Tracked objects:
  7497 ;;		On entry : 1F/0
  7498 ;;		On exit  : 1F/0
  7499 ;;		Unchanged: 0/0
  7500 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7501 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7502 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7503 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7504 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7505 ;;Total ram usage:        3 bytes
  7506 ;; Hardware stack levels used: 1
  7507 ;; Hardware stack levels required when called: 6
  7508 ;; This function calls:
  7509 ;;		_Button_DefaultCallback
  7510 ;;		_Button_Reburst_Request
  7511 ;;		_MTOUCH_Button_Initialize
  7512 ;; This function is called by:
  7513 ;;		_Button_Service
  7514 ;; This function uses a non-reentrant model
  7515 ;;
  7516                           
  7517                           
  7518                           ;psect for function _Button_State_Pressed
  7519  03E2                     _Button_State_Pressed:
  7520                           
  7521                           ;mcc_generated_files/mtouch/mtouch_button.c: 300: static void Button_State_Pressed(mtouc
      +                          h_button_t* button);mcc_generated_files/mtouch/mtouch_button.c: 301: {;mcc_generated_fil
      +                          es/mtouch/mtouch_button.c: 303:     if ((button->counter) >= ((mtouch_button_statecounte
      +                          r_t)500u))
  7522                           
  7523                           ;incstack = 0
  7524                           ; Regs used in _Button_State_Pressed: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7525  03E2  0825               	movf	Button_State_Pressed@button,w
  7526  03E3  3E0A               	addlw	10
  7527  03E4  0086               	movwf	6
  7528  03E5  0187               	clrf	7
  7529  03E6  3F40               	moviw [0]fsr1
  7530  03E7  00A6               	movwf	??_Button_State_Pressed
  7531  03E8  3F41               	moviw [1]fsr1
  7532  03E9  00A7               	movwf	??_Button_State_Pressed+1
  7533  03EA  3001               	movlw	1
  7534  03EB  0227               	subwf	??_Button_State_Pressed+1,w
  7535  03EC  30F4               	movlw	244
  7536  03ED  1903               	skipnz
  7537  03EE  0226               	subwf	??_Button_State_Pressed,w
  7538  03EF  1C03               	skipc
  7539  03F0  2C03               	goto	l3404
  7540                           
  7541                           ;mcc_generated_files/mtouch/mtouch_button.c: 304:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 305:         MTOUCH_Button_Initialize(button->name);
  7542  03F1  0825               	movf	Button_State_Pressed@button,w
  7543  03F2  0086               	movwf	6
  7544  03F3  0187               	clrf	7
  7545  03F4  0801               	movf	1,w
  7546  03F5  3186  2627  3183   	fcall	_MTOUCH_Button_Initialize
  7547                           
  7548                           ;mcc_generated_files/mtouch/mtouch_button.c: 306:         callback_notPressed(button->na
      +                          me);
  7549  03F8  0020               	movlb	0	; select bank0
  7550  03F9  0825               	movf	Button_State_Pressed@button,w
  7551  03FA  0086               	movwf	6
  7552  03FB  0187               	clrf	7
  7553  03FC  0801               	movf	1,w
  7554  03FD  00A6               	movwf	??_Button_State_Pressed
  7555  03FE  0826               	movf	??_Button_State_Pressed,w
  7556  03FF  00F2               	movwf	Button_DefaultCallback@button
  7557  0400  318D  2598         	fcall	_Button_DefaultCallback
  7558                           
  7559                           ;mcc_generated_files/mtouch/mtouch_button.c: 307:     }
  7560  0402  0008               	return
  7561  0403                     l3404:
  7562  0403  0825               	movf	Button_State_Pressed@button,w
  7563  0404  3E09               	addlw	9
  7564  0405  0086               	movwf	6
  7565  0406  0187               	clrf	7
  7566  0407  0801               	movf	1,w
  7567  0408  3A80               	xorlw	128
  7568  0409  00A6               	movwf	??_Button_State_Pressed
  7569  040A  0825               	movf	Button_State_Pressed@button,w
  7570  040B  3E0E               	addlw	14
  7571  040C  0086               	movwf	6
  7572  040D  0187               	clrf	7
  7573  040E  0825               	movf	Button_State_Pressed@button,w
  7574  040F  3E0E               	addlw	14
  7575  0410  0084               	movwf	4
  7576  0411  0185               	clrf	5
  7577  0412  0800               	movf	0,w
  7578  0413  00A7               	movwf	??_Button_State_Pressed+1
  7579  0414  0825               	movf	Button_State_Pressed@button,w
  7580  0415  3E10               	addlw	16
  7581  0416  0084               	movwf	4
  7582  0417  0185               	clrf	5
  7583  0418  0A00               	incf	0,w
  7584  0419  2C1B               	goto	u2024
  7585  041A                     u2025:
  7586  041A  36A7               	lsrf	??_Button_State_Pressed+1,f
  7587  041B                     u2024:
  7588  041B  0B89               	decfsz	9,f
  7589  041C  2C1A               	goto	u2025
  7590  041D  0827               	movf	??_Button_State_Pressed+1,w
  7591  041E  0201               	subwf	1,w
  7592  041F  3A80               	xorlw	128
  7593  0420  02A6               	subwf	??_Button_State_Pressed,f
  7594  0421  1803               	skipnc
  7595  0422  0008               	return
  7596                           
  7597                           ;mcc_generated_files/mtouch/mtouch_button.c: 311:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 312:         button->state = MTOUCH_BUTTON_STATE_releaseDebounce;
  7598  0423  3004               	movlw	4
  7599  0424  00A6               	movwf	??_Button_State_Pressed
  7600  0425  0825               	movf	Button_State_Pressed@button,w
  7601  0426  3E02               	addlw	2
  7602  0427  0086               	movwf	6
  7603  0428  0187               	clrf	7
  7604  0429  0826               	movf	??_Button_State_Pressed,w
  7605  042A  0081               	movwf	1
  7606                           
  7607                           ;mcc_generated_files/mtouch/mtouch_button.c: 313:         button->counter = (mtouch_butt
      +                          on_statecounter_t)0;
  7608  042B  0825               	movf	Button_State_Pressed@button,w
  7609  042C  3E0A               	addlw	10
  7610  042D  0086               	movwf	6
  7611  042E  0187               	clrf	7
  7612  042F  3000               	movlw	0
  7613  0430  3FC0               	movwi [0]fsr1
  7614  0431  3FC1               	movwi [1]fsr1
  7615                           
  7616                           ;mcc_generated_files/mtouch/mtouch_button.c: 314:         Button_Reburst_Request(button)
      +                          ;
  7617  0432  0825               	movf	Button_State_Pressed@button,w
  7618  0433  318D  259E         	fcall	_Button_Reburst_Request
  7619  0435  0008               	return
  7620  0436                     __end_of_Button_State_Pressed:
  7621                           
  7622                           	psect	text54
  7623  0332                     __ptext54:	
  7624 ;; *************** function _Button_State_PressDebounce *****************
  7625 ;; Defined at:
  7626 ;;		line 318 in file "mcc_generated_files/mtouch/mtouch_button.c"
  7627 ;; Parameters:    Size  Location     Type
  7628 ;;  button          1    5[BANK0 ] PTR struct .
  7629 ;;		 -> mtouch_button(51), 
  7630 ;; Auto vars:     Size  Location     Type
  7631 ;;		None
  7632 ;; Return value:  Size  Location     Type
  7633 ;;                  1    wreg      void 
  7634 ;; Registers used:
  7635 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7636 ;; Tracked objects:
  7637 ;;		On entry : 1F/0
  7638 ;;		On exit  : 1F/0
  7639 ;;		Unchanged: 0/0
  7640 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7641 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7642 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7643 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7644 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7645 ;;Total ram usage:        3 bytes
  7646 ;; Hardware stack levels used: 1
  7647 ;; Hardware stack levels required when called: 5
  7648 ;; This function calls:
  7649 ;;		_Button_DefaultCallback
  7650 ;;		_Button_Reburst_Request
  7651 ;; This function is called by:
  7652 ;;		_Button_Service
  7653 ;; This function uses a non-reentrant model
  7654 ;;
  7655                           
  7656                           
  7657                           ;psect for function _Button_State_PressDebounce
  7658  0332                     _Button_State_PressDebounce:
  7659                           
  7660                           ;mcc_generated_files/mtouch/mtouch_button.c: 318: static void Button_State_PressDebounce
      +                           (mtouch_button_t* button);mcc_generated_files/mtouch/mtouch_button.c: 319: {;mcc_genera
      +                          ted_files/mtouch/mtouch_button.c: 321:     if((button->deviation) > (button->threshold))
  7661                           
  7662                           ;incstack = 0
  7663                           ; Regs used in _Button_State_PressDebounce: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
  7664  0332  0825               	movf	Button_State_PressDebounce@button,w
  7665  0333  3E09               	addlw	9
  7666  0334  0086               	movwf	6
  7667  0335  0187               	clrf	7
  7668  0336  0801               	movf	1,w
  7669  0337  00A6               	movwf	??_Button_State_PressDebounce
  7670  0338  01A7               	clrf	??_Button_State_PressDebounce+1
  7671  0339  1BA6               	btfsc	??_Button_State_PressDebounce,7
  7672  033A  03A7               	decf	??_Button_State_PressDebounce+1,f
  7673  033B  0825               	movf	Button_State_PressDebounce@button,w
  7674  033C  3E0E               	addlw	14
  7675  033D  0086               	movwf	6
  7676  033E  0187               	clrf	7
  7677  033F  0827               	movf	??_Button_State_PressDebounce+1,w
  7678  0340  3A80               	xorlw	128
  7679  0341  3C80               	sublw	128
  7680  0342  1D03               	skipz
  7681  0343  2B46               	goto	u2045
  7682  0344  0826               	movf	??_Button_State_PressDebounce,w
  7683  0345  0201               	subwf	1,w
  7684  0346                     u2045:
  7685  0346  1803               	skipnc
  7686  0347  2B7E               	goto	l3420
  7687                           
  7688                           ;mcc_generated_files/mtouch/mtouch_button.c: 322:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 323:         (button->counter)++;
  7689  0348  0020               	movlb	0	; select bank0
  7690  0349  0825               	movf	Button_State_PressDebounce@button,w
  7691  034A  3E0A               	addlw	10
  7692  034B  0086               	movwf	6
  7693  034C  0187               	clrf	7
  7694  034D  3001               	movlw	1
  7695  034E  0781               	addwf	1,f
  7696  034F  3141               	addfsr 1,1
  7697  0350  1803               	skipnc
  7698  0351  0A81               	incf	1,f
  7699                           
  7700                           ;mcc_generated_files/mtouch/mtouch_button.c: 324:         if ((button->counter) >= (4u))
  7701  0352  0825               	movf	Button_State_PressDebounce@button,w
  7702  0353  3E0A               	addlw	10
  7703  0354  0086               	movwf	6
  7704  0355  0187               	clrf	7
  7705  0356  3F40               	moviw [0]fsr1
  7706  0357  00A6               	movwf	??_Button_State_PressDebounce
  7707  0358  3F41               	moviw [1]fsr1
  7708  0359  00A7               	movwf	??_Button_State_PressDebounce+1
  7709  035A  3000               	movlw	0
  7710  035B  0227               	subwf	??_Button_State_PressDebounce+1,w
  7711  035C  3004               	movlw	4
  7712  035D  1903               	skipnz
  7713  035E  0226               	subwf	??_Button_State_PressDebounce,w
  7714  035F  1C03               	skipc
  7715  0360  2B7A               	goto	l3418
  7716                           
  7717                           ;mcc_generated_files/mtouch/mtouch_button.c: 325:         {;mcc_generated_files/mtouch/m
      +                          touch_button.c: 326:             button->state = MTOUCH_BUTTON_STATE_pressed;
  7718  0361  3003               	movlw	3
  7719  0362  00A6               	movwf	??_Button_State_PressDebounce
  7720  0363  0825               	movf	Button_State_PressDebounce@button,w
  7721  0364  3E02               	addlw	2
  7722  0365  0086               	movwf	6
  7723  0366  0187               	clrf	7
  7724  0367  0826               	movf	??_Button_State_PressDebounce,w
  7725  0368  0081               	movwf	1
  7726                           
  7727                           ;mcc_generated_files/mtouch/mtouch_button.c: 327:             button->counter = (mtouch_
      +                          button_statecounter_t)0;
  7728  0369  0825               	movf	Button_State_PressDebounce@button,w
  7729  036A  3E0A               	addlw	10
  7730  036B  0086               	movwf	6
  7731  036C  0187               	clrf	7
  7732  036D  3000               	movlw	0
  7733  036E  3FC0               	movwi [0]fsr1
  7734  036F  3FC1               	movwi [1]fsr1
  7735                           
  7736                           ;mcc_generated_files/mtouch/mtouch_button.c: 328:             callback_pressed(button->n
      +                          ame);
  7737  0370  0825               	movf	Button_State_PressDebounce@button,w
  7738  0371  0086               	movwf	6
  7739  0372  0187               	clrf	7
  7740  0373  0801               	movf	1,w
  7741  0374  00A6               	movwf	??_Button_State_PressDebounce
  7742  0375  0826               	movf	??_Button_State_PressDebounce,w
  7743  0376  00F2               	movwf	Button_DefaultCallback@button
  7744  0377  318D  2598  3183   	fcall	_Button_DefaultCallback
  7745  037A                     l3418:
  7746                           
  7747                           ;mcc_generated_files/mtouch/mtouch_button.c: 330:         Button_Reburst_Request(button)
      +                          ;
  7748  037A  0825               	movf	Button_State_PressDebounce@button,w
  7749  037B  318D  259E         	fcall	_Button_Reburst_Request
  7750                           
  7751                           ;mcc_generated_files/mtouch/mtouch_button.c: 331:     }
  7752  037D  0008               	return
  7753  037E                     l3420:
  7754                           
  7755                           ;mcc_generated_files/mtouch/mtouch_button.c: 333:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 334:         button->state = MTOUCH_BUTTON_STATE_notPressed;
  7756  037E  0020               	movlb	0	; select bank0
  7757  037F  0825               	movf	Button_State_PressDebounce@button,w
  7758  0380  3E02               	addlw	2
  7759  0381  0086               	movwf	6
  7760  0382  0187               	clrf	7
  7761  0383  0181               	clrf	1
  7762  0384  0A81               	incf	1,f
  7763                           
  7764                           ;mcc_generated_files/mtouch/mtouch_button.c: 335:         button->counter = (mtouch_butt
      +                          on_statecounter_t)0;
  7765  0385  0825               	movf	Button_State_PressDebounce@button,w
  7766  0386  3E0A               	addlw	10
  7767  0387  0086               	movwf	6
  7768  0388  0187               	clrf	7
  7769  0389  3000               	movlw	0
  7770  038A  3FC0               	movwi [0]fsr1
  7771  038B  3FC1               	movwi [1]fsr1
  7772  038C  0008               	return
  7773  038D                     __end_of_Button_State_PressDebounce:
  7774                           
  7775                           	psect	text55
  7776  00D2                     __ptext55:	
  7777 ;; *************** function _Button_State_NotPressed *****************
  7778 ;; Defined at:
  7779 ;;		line 263 in file "mcc_generated_files/mtouch/mtouch_button.c"
  7780 ;; Parameters:    Size  Location     Type
  7781 ;;  button          1    5[BANK0 ] PTR struct .
  7782 ;;		 -> mtouch_button(51), 
  7783 ;; Auto vars:     Size  Location     Type
  7784 ;;		None
  7785 ;; Return value:  Size  Location     Type
  7786 ;;                  1    wreg      void 
  7787 ;; Registers used:
  7788 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7789 ;; Tracked objects:
  7790 ;;		On entry : 1F/0
  7791 ;;		On exit  : 1F/0
  7792 ;;		Unchanged: 0/0
  7793 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7794 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7795 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7796 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7797 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7798 ;;Total ram usage:        3 bytes
  7799 ;; Hardware stack levels used: 1
  7800 ;; Hardware stack levels required when called: 6
  7801 ;; This function calls:
  7802 ;;		_Button_Baseline_Update
  7803 ;;		_Button_Reburst_Request
  7804 ;;		_MTOUCH_Button_Initialize
  7805 ;; This function is called by:
  7806 ;;		_Button_Service
  7807 ;; This function uses a non-reentrant model
  7808 ;;
  7809                           
  7810                           
  7811                           ;psect for function _Button_State_NotPressed
  7812  00D2                     _Button_State_NotPressed:
  7813                           
  7814                           ;mcc_generated_files/mtouch/mtouch_button.c: 263: static void Button_State_NotPressed(mt
      +                          ouch_button_t* button);mcc_generated_files/mtouch/mtouch_button.c: 264: {;mcc_generated_
      +                          files/mtouch/mtouch_button.c: 266:     if ((button->deviation) < (mtouch_button_deviatio
      +                          n_t)(-button->threshold))
  7815                           
  7816                           ;incstack = 0
  7817                           ; Regs used in _Button_State_NotPressed: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+csta
      +                          ck]
  7818  00D2  0825               	movf	Button_State_NotPressed@button,w
  7819  00D3  3E09               	addlw	9
  7820  00D4  0086               	movwf	6
  7821  00D5  0187               	clrf	7
  7822  00D6  0801               	movf	1,w
  7823  00D7  3A80               	xorlw	128
  7824  00D8  00A6               	movwf	??_Button_State_NotPressed
  7825  00D9  0825               	movf	Button_State_NotPressed@button,w
  7826  00DA  3E0E               	addlw	14
  7827  00DB  0086               	movwf	6
  7828  00DC  0187               	clrf	7
  7829  00DD  0301               	decf	1,w
  7830  00DE  3AFF               	xorlw	255
  7831  00DF  3A80               	xorlw	128
  7832  00E0  02A6               	subwf	??_Button_State_NotPressed,f
  7833  00E1  1803               	skipnc
  7834  00E2  290F               	goto	l3388
  7835                           
  7836                           ;mcc_generated_files/mtouch/mtouch_button.c: 267:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 268:         (button->counter)++;
  7837  00E3  0825               	movf	Button_State_NotPressed@button,w
  7838  00E4  3E0A               	addlw	10
  7839  00E5  0086               	movwf	6
  7840  00E6  0187               	clrf	7
  7841  00E7  3001               	movlw	1
  7842  00E8  0781               	addwf	1,f
  7843  00E9  3141               	addfsr 1,1
  7844  00EA  1803               	skipnc
  7845  00EB  0A81               	incf	1,f
  7846                           
  7847                           ;mcc_generated_files/mtouch/mtouch_button.c: 269:         if ((button->counter) > (mtouc
      +                          h_button_statecounter_t)((mtouch_button_statecounter_t)8u))
  7848  00EC  0825               	movf	Button_State_NotPressed@button,w
  7849  00ED  3E0A               	addlw	10
  7850  00EE  0086               	movwf	6
  7851  00EF  0187               	clrf	7
  7852  00F0  3F40               	moviw [0]fsr1
  7853  00F1  00A6               	movwf	??_Button_State_NotPressed
  7854  00F2  3F41               	moviw [1]fsr1
  7855  00F3  00A7               	movwf	??_Button_State_NotPressed+1
  7856  00F4  3000               	movlw	0
  7857  00F5  0227               	subwf	??_Button_State_NotPressed+1,w
  7858  00F6  3009               	movlw	9
  7859  00F7  1903               	skipnz
  7860  00F8  0226               	subwf	??_Button_State_NotPressed,w
  7861  00F9  1C03               	skipc
  7862  00FA  2942               	goto	l704
  7863                           
  7864                           ;mcc_generated_files/mtouch/mtouch_button.c: 270:         {;mcc_generated_files/mtouch/m
      +                          touch_button.c: 271:             button->counter = (mtouch_button_statecounter_t)0;
  7865  00FB  0825               	movf	Button_State_NotPressed@button,w
  7866  00FC  3E0A               	addlw	10
  7867  00FD  0086               	movwf	6
  7868  00FE  0187               	clrf	7
  7869  00FF  3000               	movlw	0
  7870  0100  3FC0               	movwi [0]fsr1
  7871  0101  3FC1               	movwi [1]fsr1
  7872                           
  7873                           ;mcc_generated_files/mtouch/mtouch_button.c: 272:             MTOUCH_Button_Initialize(b
      +                          utton->name);
  7874  0102  0825               	movf	Button_State_NotPressed@button,w
  7875  0103  0086               	movwf	6
  7876  0104  0187               	clrf	7
  7877  0105  0801               	movf	1,w
  7878  0106  3186  2627  3180   	fcall	_MTOUCH_Button_Initialize
  7879                           
  7880                           ;mcc_generated_files/mtouch/mtouch_button.c: 273:             Button_Reburst_Request(but
      +                          ton);
  7881  0109  0020               	movlb	0	; select bank0
  7882  010A  0825               	movf	Button_State_NotPressed@button,w
  7883  010B  318D  259E  3180   	fcall	_Button_Reburst_Request
  7884  010E  2942               	goto	l704
  7885  010F                     l3388:
  7886  010F  0825               	movf	Button_State_NotPressed@button,w
  7887  0110  3E09               	addlw	9
  7888  0111  0086               	movwf	6
  7889  0112  0187               	clrf	7
  7890  0113  0801               	movf	1,w
  7891  0114  00A6               	movwf	??_Button_State_NotPressed
  7892  0115  01A7               	clrf	??_Button_State_NotPressed+1
  7893  0116  1BA6               	btfsc	??_Button_State_NotPressed,7
  7894  0117  03A7               	decf	??_Button_State_NotPressed+1,f
  7895  0118  0825               	movf	Button_State_NotPressed@button,w
  7896  0119  3E0E               	addlw	14
  7897  011A  0086               	movwf	6
  7898  011B  0187               	clrf	7
  7899  011C  0827               	movf	??_Button_State_NotPressed+1,w
  7900  011D  3A80               	xorlw	128
  7901  011E  3C80               	sublw	128
  7902  011F  1D03               	skipz
  7903  0120  2923               	goto	u1995
  7904  0121  0826               	movf	??_Button_State_NotPressed,w
  7905  0122  0201               	subwf	1,w
  7906  0123                     u1995:
  7907  0123  1803               	skipnc
  7908  0124  293A               	goto	l3394
  7909                           
  7910                           ;mcc_generated_files/mtouch/mtouch_button.c: 278:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 280:         button->state = MTOUCH_BUTTON_STATE_pressDebounce;
  7911  0125  3002               	movlw	2
  7912  0126  0020               	movlb	0	; select bank0
  7913  0127  00A6               	movwf	??_Button_State_NotPressed
  7914  0128  0825               	movf	Button_State_NotPressed@button,w
  7915  0129  3E02               	addlw	2
  7916  012A  0086               	movwf	6
  7917  012B  0187               	clrf	7
  7918  012C  0826               	movf	??_Button_State_NotPressed,w
  7919  012D  0081               	movwf	1
  7920                           
  7921                           ;mcc_generated_files/mtouch/mtouch_button.c: 281:         button->counter = (mtouch_butt
      +                          on_statecounter_t)0;
  7922  012E  0825               	movf	Button_State_NotPressed@button,w
  7923  012F  3E0A               	addlw	10
  7924  0130  0086               	movwf	6
  7925  0131  0187               	clrf	7
  7926  0132  3000               	movlw	0
  7927  0133  3FC0               	movwi [0]fsr1
  7928  0134  3FC1               	movwi [1]fsr1
  7929                           
  7930                           ;mcc_generated_files/mtouch/mtouch_button.c: 282:         Button_Reburst_Request(button)
      +                          ;
  7931  0135  0825               	movf	Button_State_NotPressed@button,w
  7932  0136  318D  259E  3180   	fcall	_Button_Reburst_Request
  7933                           
  7934                           ;mcc_generated_files/mtouch/mtouch_button.c: 283:     }
  7935  0139  2942               	goto	l704
  7936  013A                     l3394:
  7937                           
  7938                           ;mcc_generated_files/mtouch/mtouch_button.c: 285:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 287:         button->counter = (mtouch_button_statecounter_t)0;
  7939  013A  0020               	movlb	0	; select bank0
  7940  013B  0825               	movf	Button_State_NotPressed@button,w
  7941  013C  3E0A               	addlw	10
  7942  013D  0086               	movwf	6
  7943  013E  0187               	clrf	7
  7944  013F  3000               	movlw	0
  7945  0140  3FC0               	movwi [0]fsr1
  7946  0141  3FC1               	movwi [1]fsr1
  7947  0142                     l704:
  7948                           
  7949                           ;mcc_generated_files/mtouch/mtouch_button.c: 292:     (button->baseline_count)++;
  7950  0142  0825               	movf	Button_State_NotPressed@button,w
  7951  0143  3E0C               	addlw	12
  7952  0144  0086               	movwf	6
  7953  0145  0187               	clrf	7
  7954  0146  3001               	movlw	1
  7955  0147  0781               	addwf	1,f
  7956  0148  3141               	addfsr 1,1
  7957  0149  1803               	skipnc
  7958  014A  0A81               	incf	1,f
  7959                           
  7960                           ;mcc_generated_files/mtouch/mtouch_button.c: 293:     if ((button->baseline_count) == ((
      +                          mtouch_button_baselinecounter_t)64u))
  7961  014B  0825               	movf	Button_State_NotPressed@button,w
  7962  014C  3E0C               	addlw	12
  7963  014D  0086               	movwf	6
  7964  014E  0187               	clrf	7
  7965  014F  0016               	moviw fsr1++
  7966  0150  3A40               	xorlw	64
  7967  0151  00A6               	movwf	??_Button_State_NotPressed
  7968  0152  0016               	moviw fsr1++
  7969  0153  04A6               	iorwf	??_Button_State_NotPressed,f
  7970  0154  1D03               	btfss	3,2
  7971  0155  0008               	return
  7972                           
  7973                           ;mcc_generated_files/mtouch/mtouch_button.c: 294:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 295:         button->baseline_count = (mtouch_button_baselinecounter_t)0;
  7974  0156  0825               	movf	Button_State_NotPressed@button,w
  7975  0157  3E0C               	addlw	12
  7976  0158  0086               	movwf	6
  7977  0159  0187               	clrf	7
  7978  015A  3000               	movlw	0
  7979  015B  3FC0               	movwi [0]fsr1
  7980  015C  3FC1               	movwi [1]fsr1
  7981                           
  7982                           ;mcc_generated_files/mtouch/mtouch_button.c: 296:         Button_Baseline_Update(button)
      +                          ;
  7983  015D  0825               	movf	Button_State_NotPressed@button,w
  7984  015E  3181  2161         	fcall	_Button_Baseline_Update
  7985  0160  0008               	return
  7986  0161                     __end_of_Button_State_NotPressed:
  7987                           
  7988                           	psect	text56
  7989  02D6                     __ptext56:	
  7990 ;; *************** function _Button_State_Initializing *****************
  7991 ;; Defined at:
  7992 ;;		line 242 in file "mcc_generated_files/mtouch/mtouch_button.c"
  7993 ;; Parameters:    Size  Location     Type
  7994 ;;  button          1    5[BANK0 ] PTR struct .
  7995 ;;		 -> mtouch_button(51), 
  7996 ;; Auto vars:     Size  Location     Type
  7997 ;;		None
  7998 ;; Return value:  Size  Location     Type
  7999 ;;                  1    wreg      void 
  8000 ;; Registers used:
  8001 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8002 ;; Tracked objects:
  8003 ;;		On entry : 1F/0
  8004 ;;		On exit  : 1F/0
  8005 ;;		Unchanged: 0/0
  8006 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8007 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8008 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8009 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8010 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8011 ;;Total ram usage:        5 bytes
  8012 ;; Hardware stack levels used: 1
  8013 ;; Hardware stack levels required when called: 7
  8014 ;; This function calls:
  8015 ;;		_Button_Baseline_Initialize
  8016 ;;		_Button_Baseline_Update
  8017 ;;		_Button_Reburst_Request
  8018 ;; This function is called by:
  8019 ;;		_Button_Service
  8020 ;; This function uses a non-reentrant model
  8021 ;;
  8022                           
  8023                           
  8024                           ;psect for function _Button_State_Initializing
  8025  02D6                     _Button_State_Initializing:
  8026                           
  8027                           ;mcc_generated_files/mtouch/mtouch_button.c: 242: static void Button_State_Initializing(
      +                          mtouch_button_t* button);mcc_generated_files/mtouch/mtouch_button.c: 243: {;mcc_generate
      +                          d_files/mtouch/mtouch_button.c: 245:     if ((button->counter) <= (mtouch_button_stateco
      +                          unter_t)((mtouch_button_baselinecounter_t)16u)/2)
  8028                           
  8029                           ;incstack = 0
  8030                           ; Regs used in _Button_State_Initializing: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cs
      +                          tack]
  8031  02D6  0825               	movf	Button_State_Initializing@button,w
  8032  02D7  3E0A               	addlw	10
  8033  02D8  0086               	movwf	6
  8034  02D9  0187               	clrf	7
  8035  02DA  3F40               	moviw [0]fsr1
  8036  02DB  00A6               	movwf	??_Button_State_Initializing
  8037  02DC  3F41               	moviw [1]fsr1
  8038  02DD  00A7               	movwf	??_Button_State_Initializing+1
  8039  02DE  3000               	movlw	0
  8040  02DF  0227               	subwf	??_Button_State_Initializing+1,w
  8041  02E0  3009               	movlw	9
  8042  02E1  1903               	skipnz
  8043  02E2  0226               	subwf	??_Button_State_Initializing,w
  8044  02E3  1803               	skipnc
  8045  02E4  2AEA               	goto	l3368
  8046                           
  8047                           ;mcc_generated_files/mtouch/mtouch_button.c: 246:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 247:         Button_Baseline_Initialize(button);
  8048  02E5  0825               	movf	Button_State_Initializing@button,w
  8049  02E6  3186  2653  3182   	fcall	_Button_Baseline_Initialize
  8050                           
  8051                           ;mcc_generated_files/mtouch/mtouch_button.c: 248:     } else {
  8052  02E9  2AEE               	goto	l3370
  8053  02EA                     l3368:
  8054                           
  8055                           ;mcc_generated_files/mtouch/mtouch_button.c: 249:         Button_Baseline_Update(button)
      +                          ;
  8056  02EA  0825               	movf	Button_State_Initializing@button,w
  8057  02EB  3181  2161  3182   	fcall	_Button_Baseline_Update
  8058  02EE                     l3370:
  8059                           
  8060                           ;mcc_generated_files/mtouch/mtouch_button.c: 253:     (button->counter)++;
  8061  02EE  0825               	movf	Button_State_Initializing@button,w
  8062  02EF  3E0A               	addlw	10
  8063  02F0  0086               	movwf	6
  8064  02F1  0187               	clrf	7
  8065  02F2  3001               	movlw	1
  8066  02F3  0781               	addwf	1,f
  8067  02F4  3141               	addfsr 1,1
  8068  02F5  1803               	skipnc
  8069  02F6  0A81               	incf	1,f
  8070                           
  8071                           ;mcc_generated_files/mtouch/mtouch_button.c: 254:     if ((button->counter) >= (mtouch_b
      +                          utton_statecounter_t)((mtouch_button_baselinecounter_t)16u))
  8072  02F7  0825               	movf	Button_State_Initializing@button,w
  8073  02F8  3E0A               	addlw	10
  8074  02F9  0086               	movwf	6
  8075  02FA  0187               	clrf	7
  8076  02FB  3F40               	moviw [0]fsr1
  8077  02FC  00A6               	movwf	??_Button_State_Initializing
  8078  02FD  3F41               	moviw [1]fsr1
  8079  02FE  00A7               	movwf	??_Button_State_Initializing+1
  8080  02FF  3000               	movlw	0
  8081  0300  0227               	subwf	??_Button_State_Initializing+1,w
  8082  0301  3010               	movlw	16
  8083  0302  1903               	skipnz
  8084  0303  0226               	subwf	??_Button_State_Initializing,w
  8085  0304  1C03               	skipc
  8086  0305  2B2E               	goto	l3376
  8087                           
  8088                           ;mcc_generated_files/mtouch/mtouch_button.c: 255:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 256:         button->reading = (mtouch_button_reading_t)((button->baseline)>
      +                          >((uint8_t)4u));
  8089  0306  0825               	movf	Button_State_Initializing@button,w
  8090  0307  3E05               	addlw	5
  8091  0308  0086               	movwf	6
  8092  0309  0187               	clrf	7
  8093  030A  3F40               	moviw [0]fsr1
  8094  030B  00A6               	movwf	??_Button_State_Initializing
  8095  030C  3F41               	moviw [1]fsr1
  8096  030D  00A7               	movwf	??_Button_State_Initializing+1
  8097  030E  3F42               	moviw [2]fsr1
  8098  030F  00A8               	movwf	??_Button_State_Initializing+2
  8099  0310  3F43               	moviw [3]fsr1
  8100  0311  00A9               	movwf	??_Button_State_Initializing+3
  8101  0312  3004               	movlw	4
  8102  0313                     u1965:
  8103  0313  36A9               	lsrf	??_Button_State_Initializing+3,f
  8104  0314  0CA8               	rrf	??_Button_State_Initializing+2,f
  8105  0315  0CA7               	rrf	??_Button_State_Initializing+1,f
  8106  0316  0CA6               	rrf	??_Button_State_Initializing,f
  8107  0317  0B89               	decfsz	9,f
  8108  0318  2B13               	goto	u1965
  8109  0319  0825               	movf	Button_State_Initializing@button,w
  8110  031A  3E03               	addlw	3
  8111  031B  0086               	movwf	6
  8112  031C  0187               	clrf	7
  8113  031D  0826               	movf	??_Button_State_Initializing,w
  8114  031E  3FC0               	movwi [0]fsr1
  8115  031F  0827               	movf	??_Button_State_Initializing+1,w
  8116  0320  3FC1               	movwi [1]fsr1
  8117                           
  8118                           ;mcc_generated_files/mtouch/mtouch_button.c: 257:         button->state = MTOUCH_BUTTON_
      +                          STATE_notPressed;
  8119  0321  0825               	movf	Button_State_Initializing@button,w
  8120  0322  3E02               	addlw	2
  8121  0323  0086               	movwf	6
  8122  0324  0187               	clrf	7
  8123  0325  0181               	clrf	1
  8124  0326  0A81               	incf	1,f
  8125                           
  8126                           ;mcc_generated_files/mtouch/mtouch_button.c: 258:         button->counter = (mtouch_butt
      +                          on_statecounter_t)0;
  8127  0327  0825               	movf	Button_State_Initializing@button,w
  8128  0328  3E0A               	addlw	10
  8129  0329  0086               	movwf	6
  8130  032A  0187               	clrf	7
  8131  032B  3000               	movlw	0
  8132  032C  3FC0               	movwi [0]fsr1
  8133  032D  3FC1               	movwi [1]fsr1
  8134  032E                     l3376:
  8135                           
  8136                           ;mcc_generated_files/mtouch/mtouch_button.c: 261:     Button_Reburst_Request(button);
  8137  032E  0825               	movf	Button_State_Initializing@button,w
  8138  032F  318D  259E         	fcall	_Button_Reburst_Request
  8139  0331  0008               	return
  8140  0332                     __end_of_Button_State_Initializing:
  8141                           
  8142                           	psect	text57
  8143  0ED4                     __ptext57:	
  8144 ;; *************** function _Button_State_Suspended *****************
  8145 ;; Defined at:
  8146 ;;		line 359 in file "mcc_generated_files/mtouch/mtouch_button.c"
  8147 ;; Parameters:    Size  Location     Type
  8148 ;;  button          1    5[BANK0 ] PTR struct .
  8149 ;;		 -> mtouch_button(51), 
  8150 ;; Auto vars:     Size  Location     Type
  8151 ;;		None
  8152 ;; Return value:  Size  Location     Type
  8153 ;;                  1    wreg      void 
  8154 ;; Registers used:
  8155 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8156 ;; Tracked objects:
  8157 ;;		On entry : 1F/0
  8158 ;;		On exit  : 0/0
  8159 ;;		Unchanged: 0/0
  8160 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8161 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8162 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8163 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8164 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8165 ;;Total ram usage:        1 bytes
  8166 ;; Hardware stack levels used: 1
  8167 ;; Hardware stack levels required when called: 6
  8168 ;; This function calls:
  8169 ;;		_Button_Baseline_Update
  8170 ;;		_MTOUCH_Sensor_Disable
  8171 ;; This function is called by:
  8172 ;;		_Button_Service
  8173 ;; This function uses a non-reentrant model
  8174 ;;
  8175                           
  8176                           
  8177                           ;psect for function _Button_State_Suspended
  8178  0ED4                     _Button_State_Suspended:
  8179                           
  8180                           ;mcc_generated_files/mtouch/mtouch_button.c: 359: static void Button_State_Suspended(mto
      +                          uch_button_t* button);mcc_generated_files/mtouch/mtouch_button.c: 360: {;mcc_generated_f
      +                          iles/mtouch/mtouch_button.c: 362:     Button_Baseline_Update(button);
  8181                           
  8182                           ;incstack = 0
  8183                           ; Regs used in _Button_State_Suspended: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstac
      +                          k]
  8184  0ED4  0825               	movf	Button_State_Suspended@button,w
  8185  0ED5  3181  2161  318E   	fcall	_Button_Baseline_Update
  8186                           
  8187                           ;mcc_generated_files/mtouch/mtouch_button.c: 363:     button->counter = (mtouch_button_s
      +                          tatecounter_t)0;
  8188  0ED8  0825               	movf	Button_State_Suspended@button,w
  8189  0ED9  3E0A               	addlw	10
  8190  0EDA  0086               	movwf	6
  8191  0EDB  0187               	clrf	7
  8192  0EDC  3000               	movlw	0
  8193  0EDD  3FC0               	movwi [0]fsr1
  8194  0EDE  3FC1               	movwi [1]fsr1
  8195                           
  8196                           ;mcc_generated_files/mtouch/mtouch_button.c: 366:     MTOUCH_Sensor_Disable(button->sens
      +                          or);
  8197  0EDF  0A25               	incf	Button_State_Suspended@button,w
  8198  0EE0  0086               	movwf	6
  8199  0EE1  0187               	clrf	7
  8200  0EE2  0801               	movf	1,w
  8201  0EE3  318E  266C         	fcall	_MTOUCH_Sensor_Disable
  8202  0EE5  0008               	return
  8203  0EE6                     __end_of_Button_State_Suspended:
  8204                           
  8205                           	psect	text58
  8206  0E6C                     __ptext58:	
  8207 ;; *************** function _MTOUCH_Sensor_Disable *****************
  8208 ;; Defined at:
  8209 ;;		line 476 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  8210 ;; Parameters:    Size  Location     Type
  8211 ;;  sensor          1    wreg     enum E2707
  8212 ;; Auto vars:     Size  Location     Type
  8213 ;;  sensor          1    7[COMMON] enum E2707
  8214 ;; Return value:  Size  Location     Type
  8215 ;;                  1    wreg      void 
  8216 ;; Registers used:
  8217 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8218 ;; Tracked objects:
  8219 ;;		On entry : 1F/0
  8220 ;;		On exit  : 0/0
  8221 ;;		Unchanged: 0/0
  8222 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8223 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8224 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8225 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8226 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8227 ;;Total ram usage:        2 bytes
  8228 ;; Hardware stack levels used: 1
  8229 ;; Hardware stack levels required when called: 5
  8230 ;; This function calls:
  8231 ;;		___bmul
  8232 ;; This function is called by:
  8233 ;;		_Button_State_Suspended
  8234 ;; This function uses a non-reentrant model
  8235 ;;
  8236                           
  8237                           
  8238                           ;psect for function _MTOUCH_Sensor_Disable
  8239  0E6C                     _MTOUCH_Sensor_Disable:
  8240                           
  8241                           ;incstack = 0
  8242                           ; Regs used in _MTOUCH_Sensor_Disable: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
  8243                           ;MTOUCH_Sensor_Disable@sensor stored from wreg
  8244  0E6C  00F7               	movwf	MTOUCH_Sensor_Disable@sensor
  8245                           
  8246                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 476: void MTOUCH_Sensor_Disable(enum mtouch
      +                          _sensor_names sensor);mcc_generated_files/mtouch/mtouch_sensor.c: 477: {;mcc_generated_f
      +                          iles/mtouch/mtouch_sensor.c: 478:     if(sensor < 3u)
  8247  0E6D  3003               	movlw	3
  8248  0E6E  0277               	subwf	MTOUCH_Sensor_Disable@sensor,w
  8249  0E6F  1803               	skipnc
  8250  0E70  0008               	return
  8251                           
  8252                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 479:         mtouch_sensor[sensor].enabled 
      +                          = 0;
  8253  0E71  3009               	movlw	9
  8254  0E72  00F6               	movwf	??_MTOUCH_Sensor_Disable
  8255  0E73  0876               	movf	??_MTOUCH_Sensor_Disable,w
  8256  0E74  00F2               	movwf	___bmul@multiplicand
  8257  0E75  0877               	movf	MTOUCH_Sensor_Disable@sensor,w
  8258  0E76  318E  265B         	fcall	___bmul
  8259  0E78  3EDB               	addlw	(low ((_mtouch_sensor| 0+8)))& (0+255)
  8260  0E79  0086               	movwf	6
  8261  0E7A  0187               	clrf	7
  8262  0E7B  1001               	bcf	1,0
  8263  0E7C  0008               	return
  8264  0E7D                     __end_of_MTOUCH_Sensor_Disable:
  8265                           
  8266                           	psect	text59
  8267  0D98                     __ptext59:	
  8268 ;; *************** function _Button_DefaultCallback *****************
  8269 ;; Defined at:
  8270 ;;		line 689 in file "mcc_generated_files/mtouch/mtouch_button.c"
  8271 ;; Parameters:    Size  Location     Type
  8272 ;;  button          1    2[COMMON] enum E2928
  8273 ;; Auto vars:     Size  Location     Type
  8274 ;;		None
  8275 ;; Return value:  Size  Location     Type
  8276 ;;                  1    wreg      void 
  8277 ;; Registers used:
  8278 ;;		None
  8279 ;; Tracked objects:
  8280 ;;		On entry : 1F/0
  8281 ;;		On exit  : 1F/0
  8282 ;;		Unchanged: 1F/0
  8283 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8284 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8285 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8286 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8287 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8288 ;;Total ram usage:        1 bytes
  8289 ;; Hardware stack levels used: 1
  8290 ;; Hardware stack levels required when called: 4
  8291 ;; This function calls:
  8292 ;;		Nothing
  8293 ;; This function is called by:
  8294 ;;		_Button_State_Pressed
  8295 ;;		_Button_State_PressDebounce
  8296 ;;		_Button_State_ReleaseDebounce
  8297 ;; This function uses a non-reentrant model
  8298 ;;
  8299                           
  8300                           
  8301                           ;psect for function _Button_DefaultCallback
  8302  0D98                     _Button_DefaultCallback:
  8303                           
  8304                           ;incstack = 0
  8305                           ; Regs used in _Button_DefaultCallback: []
  8306  0D98  0008               	return
  8307  0D99                     __end_of_Button_DefaultCallback:
  8308                           
  8309                           	psect	text60
  8310  0627                     __ptext60:	
  8311 ;; *************** function _MTOUCH_Button_Initialize *****************
  8312 ;; Defined at:
  8313 ;;		line 183 in file "mcc_generated_files/mtouch/mtouch_button.c"
  8314 ;; Parameters:    Size  Location     Type
  8315 ;;  name            1    wreg     enum E2928
  8316 ;; Auto vars:     Size  Location     Type
  8317 ;;  name            1    3[COMMON] enum E2928
  8318 ;;  button          1    4[COMMON] PTR struct .
  8319 ;;		 -> mtouch_button(51), 
  8320 ;; Return value:  Size  Location     Type
  8321 ;;                  1    wreg      void 
  8322 ;; Registers used:
  8323 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8324 ;; Tracked objects:
  8325 ;;		On entry : 0/0
  8326 ;;		On exit  : 0/0
  8327 ;;		Unchanged: 0/0
  8328 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8329 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8330 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8331 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8332 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8333 ;;Total ram usage:        3 bytes
  8334 ;; Hardware stack levels used: 1
  8335 ;; Hardware stack levels required when called: 5
  8336 ;; This function calls:
  8337 ;;		_MTOUCH_Sensor_Calibrate
  8338 ;; This function is called by:
  8339 ;;		_MTOUCH_Button_InitializeAll
  8340 ;;		_Button_Service
  8341 ;;		_Button_State_NotPressed
  8342 ;;		_Button_State_Pressed
  8343 ;; This function uses a non-reentrant model
  8344 ;;
  8345                           
  8346                           
  8347                           ;psect for function _MTOUCH_Button_Initialize
  8348  0627                     _MTOUCH_Button_Initialize:
  8349                           
  8350                           ;incstack = 0
  8351                           ; Regs used in _MTOUCH_Button_Initialize: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cst
      +                          ack]
  8352                           ;MTOUCH_Button_Initialize@name stored from wreg
  8353  0627  00F3               	movwf	MTOUCH_Button_Initialize@name
  8354                           
  8355                           ;mcc_generated_files/mtouch/mtouch_button.c: 183: void MTOUCH_Button_Initialize(enum mto
      +                          uch_button_names name);mcc_generated_files/mtouch/mtouch_button.c: 184: {;mcc_generated_
      +                          files/mtouch/mtouch_button.c: 185:     mtouch_button_t* button = &mtouch_button[name];
  8356  0628  0E73               	swapf	MTOUCH_Button_Initialize@name,w
  8357  0629  39F0               	andlw	240
  8358  062A  0773               	addwf	MTOUCH_Button_Initialize@name,w
  8359  062B  3EA0               	addlw	(low (_mtouch_button| 0))& (0+255)
  8360  062C  00F2               	movwf	??_MTOUCH_Button_Initialize
  8361  062D  0872               	movf	??_MTOUCH_Button_Initialize,w
  8362  062E  00F4               	movwf	MTOUCH_Button_Initialize@button
  8363                           
  8364                           ;mcc_generated_files/mtouch/mtouch_button.c: 187:     button->state = MTOUCH_BUTTON_STAT
      +                          E_initializing;
  8365  062F  0874               	movf	MTOUCH_Button_Initialize@button,w
  8366  0630  3E02               	addlw	2
  8367  0631  0086               	movwf	6
  8368  0632  0187               	clrf	7
  8369  0633  0181               	clrf	1
  8370                           
  8371                           ;mcc_generated_files/mtouch/mtouch_button.c: 188:     button->baseline = (mtouch_button_
      +                          baseline_t)0;
  8372  0634  0874               	movf	MTOUCH_Button_Initialize@button,w
  8373  0635  3E05               	addlw	5
  8374  0636  0086               	movwf	6
  8375  0637  0187               	clrf	7
  8376  0638  3000               	movlw	0
  8377  0639  3FC0               	movwi [0]fsr1
  8378  063A  3000               	movlw	0
  8379  063B  3FC1               	movwi [1]fsr1
  8380  063C  3FC2               	movwi [2]fsr1
  8381  063D  3FC3               	movwi [3]fsr1
  8382                           
  8383                           ;mcc_generated_files/mtouch/mtouch_button.c: 189:     button->counter = (mtouch_button_s
      +                          tatecounter_t)0;
  8384  063E  0874               	movf	MTOUCH_Button_Initialize@button,w
  8385  063F  3E0A               	addlw	10
  8386  0640  0086               	movwf	6
  8387  0641  0187               	clrf	7
  8388  0642  3000               	movlw	0
  8389  0643  3FC0               	movwi [0]fsr1
  8390  0644  3FC1               	movwi [1]fsr1
  8391                           
  8392                           ;mcc_generated_files/mtouch/mtouch_button.c: 190:     button->baseline_count = (mtouch_b
      +                          utton_baselinecounter_t)0;
  8393  0645  0874               	movf	MTOUCH_Button_Initialize@button,w
  8394  0646  3E0C               	addlw	12
  8395  0647  0086               	movwf	6
  8396  0648  0187               	clrf	7
  8397  0649  3000               	movlw	0
  8398  064A  3FC0               	movwi [0]fsr1
  8399  064B  3FC1               	movwi [1]fsr1
  8400                           
  8401                           ;mcc_generated_files/mtouch/mtouch_button.c: 192:     MTOUCH_Sensor_Calibrate(button->se
      +                          nsor);
  8402  064C  0A74               	incf	MTOUCH_Button_Initialize@button,w
  8403  064D  0086               	movwf	6
  8404  064E  0187               	clrf	7
  8405  064F  0801               	movf	1,w
  8406  0650  318D  2597         	fcall	_MTOUCH_Sensor_Calibrate
  8407  0652  0008               	return
  8408  0653                     __end_of_MTOUCH_Button_Initialize:
  8409                           
  8410                           	psect	text61
  8411  0D97                     __ptext61:	
  8412 ;; *************** function _MTOUCH_Sensor_Calibrate *****************
  8413 ;; Defined at:
  8414 ;;		line 536 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  8415 ;; Parameters:    Size  Location     Type
  8416 ;;  sensor          1    wreg     enum E2707
  8417 ;; Auto vars:     Size  Location     Type
  8418 ;;  sensor          1    0[COMMON] enum E2707
  8419 ;; Return value:  Size  Location     Type
  8420 ;;                  1    wreg      void 
  8421 ;; Registers used:
  8422 ;;		wreg
  8423 ;; Tracked objects:
  8424 ;;		On entry : 0/0
  8425 ;;		On exit  : 0/0
  8426 ;;		Unchanged: 0/0
  8427 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8428 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8429 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8430 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8431 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8432 ;;Total ram usage:        0 bytes
  8433 ;; Hardware stack levels used: 1
  8434 ;; Hardware stack levels required when called: 4
  8435 ;; This function calls:
  8436 ;;		Nothing
  8437 ;; This function is called by:
  8438 ;;		_MTOUCH_Button_Initialize
  8439 ;; This function uses a non-reentrant model
  8440 ;;
  8441                           
  8442                           
  8443                           ;psect for function _MTOUCH_Sensor_Calibrate
  8444  0D97                     _MTOUCH_Sensor_Calibrate:
  8445                           
  8446                           ;incstack = 0
  8447                           ; Regs used in _MTOUCH_Sensor_Calibrate: [wreg]
  8448  0D97  0008               	return
  8449  0D98                     __end_of_MTOUCH_Sensor_Calibrate:
  8450                           
  8451                           	psect	text62
  8452  0D9E                     __ptext62:	
  8453 ;; *************** function _Button_Reburst_Request *****************
  8454 ;; Defined at:
  8455 ;;		line 662 in file "mcc_generated_files/mtouch/mtouch_button.c"
  8456 ;; Parameters:    Size  Location     Type
  8457 ;;  button          1    wreg     PTR struct .
  8458 ;;		 -> mtouch_button(51), 
  8459 ;; Auto vars:     Size  Location     Type
  8460 ;;  button          1    2[COMMON] PTR struct .
  8461 ;;		 -> mtouch_button(51), 
  8462 ;; Return value:  Size  Location     Type
  8463 ;;                  1    wreg      void 
  8464 ;; Registers used:
  8465 ;;		wreg
  8466 ;; Tracked objects:
  8467 ;;		On entry : 1F/0
  8468 ;;		On exit  : 1F/0
  8469 ;;		Unchanged: 0/0
  8470 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8471 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8472 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8473 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8474 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8475 ;;Total ram usage:        1 bytes
  8476 ;; Hardware stack levels used: 1
  8477 ;; Hardware stack levels required when called: 4
  8478 ;; This function calls:
  8479 ;;		Nothing
  8480 ;; This function is called by:
  8481 ;;		_Button_State_Initializing
  8482 ;;		_Button_State_NotPressed
  8483 ;;		_Button_State_Pressed
  8484 ;;		_Button_State_PressDebounce
  8485 ;;		_Button_State_ReleaseDebounce
  8486 ;; This function uses a non-reentrant model
  8487 ;;
  8488                           
  8489                           
  8490                           ;psect for function _Button_Reburst_Request
  8491  0D9E                     _Button_Reburst_Request:
  8492                           
  8493                           ;mcc_generated_files/mtouch/mtouch_button.c: 662: static __attribute__((inline)) void Bu
      +                          tton_Reburst_Request(mtouch_button_t* button);mcc_generated_files/mtouch/mtouch_button.c
      +                          : 663: {;mcc_generated_files/mtouch/mtouch_button.c: 664:     button_reburst_request = 1
      +                          ;
  8494                           
  8495                           ;incstack = 0
  8496                           ; Regs used in _Button_Reburst_Request: [wreg]
  8497  0D9E  01E7               	clrf	_button_reburst_request
  8498  0D9F  0AE7               	incf	_button_reburst_request,f
  8499  0DA0  0008               	return
  8500  0DA1                     __end_of_Button_Reburst_Request:
  8501                           
  8502                           	psect	text63
  8503  0161                     __ptext63:	
  8504 ;; *************** function _Button_Baseline_Update *****************
  8505 ;; Defined at:
  8506 ;;		line 617 in file "mcc_generated_files/mtouch/mtouch_button.c"
  8507 ;; Parameters:    Size  Location     Type
  8508 ;;  button          1    wreg     PTR struct .
  8509 ;;		 -> mtouch_button(51), 
  8510 ;; Auto vars:     Size  Location     Type
  8511 ;;  button          1    8[COMMON] PTR struct .
  8512 ;;		 -> mtouch_button(51), 
  8513 ;; Return value:  Size  Location     Type
  8514 ;;                  1    wreg      void 
  8515 ;; Registers used:
  8516 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  8517 ;; Tracked objects:
  8518 ;;		On entry : 1F/0
  8519 ;;		On exit  : 1F/0
  8520 ;;		Unchanged: 1F/0
  8521 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8522 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8523 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8524 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8525 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8526 ;;Total ram usage:        7 bytes
  8527 ;; Hardware stack levels used: 1
  8528 ;; Hardware stack levels required when called: 4
  8529 ;; This function calls:
  8530 ;;		Nothing
  8531 ;; This function is called by:
  8532 ;;		_Button_State_Initializing
  8533 ;;		_Button_State_NotPressed
  8534 ;;		_Button_State_Suspended
  8535 ;; This function uses a non-reentrant model
  8536 ;;
  8537                           
  8538                           
  8539                           ;psect for function _Button_Baseline_Update
  8540  0161                     _Button_Baseline_Update:
  8541                           
  8542                           ;incstack = 0
  8543                           ; Regs used in _Button_Baseline_Update: [wreg+fsr1l+fsr1h+status,2+status,0]
  8544                           ;Button_Baseline_Update@button stored from wreg
  8545  0161  00F8               	movwf	Button_Baseline_Update@button
  8546                           
  8547                           ;mcc_generated_files/mtouch/mtouch_button.c: 617: static void Button_Baseline_Update(mto
      +                          uch_button_t* button);mcc_generated_files/mtouch/mtouch_button.c: 618: {;mcc_generated_f
      +                          iles/mtouch/mtouch_button.c: 619:     if (GIE == (uint8_t)1)
  8548  0162  1F8B               	btfss	11,7	;volatile
  8549  0163  29A7               	goto	l2556
  8550                           
  8551                           ;mcc_generated_files/mtouch/mtouch_button.c: 620:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 621:         GIE = (uint8_t)0;
  8552  0164  138B               	bcf	11,7	;volatile
  8553                           
  8554                           ;mcc_generated_files/mtouch/mtouch_button.c: 622:         button->baseline -= (button->b
      +                          aseline) >> ((uint8_t)4u);
  8555  0165  0878               	movf	Button_Baseline_Update@button,w
  8556  0166  3E05               	addlw	5
  8557  0167  0086               	movwf	6
  8558  0168  0187               	clrf	7
  8559  0169  3F40               	moviw [0]fsr1
  8560  016A  00F2               	movwf	??_Button_Baseline_Update
  8561  016B  3F41               	moviw [1]fsr1
  8562  016C  00F3               	movwf	??_Button_Baseline_Update+1
  8563  016D  3F42               	moviw [2]fsr1
  8564  016E  00F4               	movwf	??_Button_Baseline_Update+2
  8565  016F  3F43               	moviw [3]fsr1
  8566  0170  00F5               	movwf	??_Button_Baseline_Update+3
  8567  0171  3004               	movlw	4
  8568  0172                     u1035:
  8569  0172  36F5               	lsrf	??_Button_Baseline_Update+3,f
  8570  0173  0CF4               	rrf	??_Button_Baseline_Update+2,f
  8571  0174  0CF3               	rrf	??_Button_Baseline_Update+1,f
  8572  0175  0CF2               	rrf	??_Button_Baseline_Update,f
  8573  0176  0B89               	decfsz	9,f
  8574  0177  2972               	goto	u1035
  8575  0178  0878               	movf	Button_Baseline_Update@button,w
  8576  0179  3E05               	addlw	5
  8577  017A  0086               	movwf	6
  8578  017B  0187               	clrf	7
  8579  017C  0872               	movf	??_Button_Baseline_Update,w
  8580  017D  0281               	subwf	1,f
  8581  017E  3141               	addfsr 1,1
  8582  017F  0873               	movf	??_Button_Baseline_Update+1,w
  8583  0180  3B81               	subwfb	1,f
  8584  0181  3141               	addfsr 1,1
  8585  0182  0874               	movf	??_Button_Baseline_Update+2,w
  8586  0183  3B81               	subwfb	1,f
  8587  0184  3141               	addfsr 1,1
  8588  0185  0875               	movf	??_Button_Baseline_Update+3,w
  8589  0186  3B81               	subwfb	1,f
  8590  0187  317D               	addfsr 1,-3
  8591                           
  8592                           ;mcc_generated_files/mtouch/mtouch_button.c: 623:         button->baseline += button->re
      +                          ading;
  8593  0188  0878               	movf	Button_Baseline_Update@button,w
  8594  0189  3E03               	addlw	3
  8595  018A  0086               	movwf	6
  8596  018B  0187               	clrf	7
  8597  018C  3F40               	moviw [0]fsr1
  8598  018D  00F2               	movwf	??_Button_Baseline_Update
  8599  018E  3F41               	moviw [1]fsr1
  8600  018F  00F3               	movwf	??_Button_Baseline_Update+1
  8601  0190  0872               	movf	??_Button_Baseline_Update,w
  8602  0191  00F4               	movwf	??_Button_Baseline_Update+2
  8603  0192  0873               	movf	??_Button_Baseline_Update+1,w
  8604  0193  00F5               	movwf	??_Button_Baseline_Update+3
  8605  0194  01F6               	clrf	??_Button_Baseline_Update+4
  8606  0195  01F7               	clrf	??_Button_Baseline_Update+5
  8607  0196  0878               	movf	Button_Baseline_Update@button,w
  8608  0197  3E05               	addlw	5
  8609  0198  0086               	movwf	6
  8610  0199  0187               	clrf	7
  8611  019A  0874               	movf	??_Button_Baseline_Update+2,w
  8612  019B  0781               	addwf	1,f
  8613  019C  3141               	addfsr 1,1
  8614  019D  0875               	movf	??_Button_Baseline_Update+3,w
  8615  019E  3D81               	addwfc	1,f
  8616  019F  3141               	addfsr 1,1
  8617  01A0  0876               	movf	??_Button_Baseline_Update+4,w
  8618  01A1  3D81               	addwfc	1,f
  8619  01A2  3141               	addfsr 1,1
  8620  01A3  0877               	movf	??_Button_Baseline_Update+5,w
  8621  01A4  3D81               	addwfc	1,f
  8622                           
  8623                           ;mcc_generated_files/mtouch/mtouch_button.c: 624:         GIE = (uint8_t)1;
  8624  01A5  178B               	bsf	11,7	;volatile
  8625                           
  8626                           ;mcc_generated_files/mtouch/mtouch_button.c: 625:     }
  8627  01A6  0008               	return
  8628  01A7                     l2556:
  8629                           
  8630                           ;mcc_generated_files/mtouch/mtouch_button.c: 627:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 628:         button->baseline -= (button->baseline) >> ((uint8_t)4u);
  8631  01A7  0878               	movf	Button_Baseline_Update@button,w
  8632  01A8  3E05               	addlw	5
  8633  01A9  0086               	movwf	6
  8634  01AA  0187               	clrf	7
  8635  01AB  3F40               	moviw [0]fsr1
  8636  01AC  00F2               	movwf	??_Button_Baseline_Update
  8637  01AD  3F41               	moviw [1]fsr1
  8638  01AE  00F3               	movwf	??_Button_Baseline_Update+1
  8639  01AF  3F42               	moviw [2]fsr1
  8640  01B0  00F4               	movwf	??_Button_Baseline_Update+2
  8641  01B1  3F43               	moviw [3]fsr1
  8642  01B2  00F5               	movwf	??_Button_Baseline_Update+3
  8643  01B3  3004               	movlw	4
  8644  01B4                     u1045:
  8645  01B4  36F5               	lsrf	??_Button_Baseline_Update+3,f
  8646  01B5  0CF4               	rrf	??_Button_Baseline_Update+2,f
  8647  01B6  0CF3               	rrf	??_Button_Baseline_Update+1,f
  8648  01B7  0CF2               	rrf	??_Button_Baseline_Update,f
  8649  01B8  0B89               	decfsz	9,f
  8650  01B9  29B4               	goto	u1045
  8651  01BA  0878               	movf	Button_Baseline_Update@button,w
  8652  01BB  3E05               	addlw	5
  8653  01BC  0086               	movwf	6
  8654  01BD  0187               	clrf	7
  8655  01BE  0872               	movf	??_Button_Baseline_Update,w
  8656  01BF  0281               	subwf	1,f
  8657  01C0  3141               	addfsr 1,1
  8658  01C1  0873               	movf	??_Button_Baseline_Update+1,w
  8659  01C2  3B81               	subwfb	1,f
  8660  01C3  3141               	addfsr 1,1
  8661  01C4  0874               	movf	??_Button_Baseline_Update+2,w
  8662  01C5  3B81               	subwfb	1,f
  8663  01C6  3141               	addfsr 1,1
  8664  01C7  0875               	movf	??_Button_Baseline_Update+3,w
  8665  01C8  3B81               	subwfb	1,f
  8666  01C9  317D               	addfsr 1,-3
  8667                           
  8668                           ;mcc_generated_files/mtouch/mtouch_button.c: 629:         button->baseline += button->re
      +                          ading;
  8669  01CA  0878               	movf	Button_Baseline_Update@button,w
  8670  01CB  3E03               	addlw	3
  8671  01CC  0086               	movwf	6
  8672  01CD  0187               	clrf	7
  8673  01CE  3F40               	moviw [0]fsr1
  8674  01CF  00F2               	movwf	??_Button_Baseline_Update
  8675  01D0  3F41               	moviw [1]fsr1
  8676  01D1  00F3               	movwf	??_Button_Baseline_Update+1
  8677  01D2  0872               	movf	??_Button_Baseline_Update,w
  8678  01D3  00F4               	movwf	??_Button_Baseline_Update+2
  8679  01D4  0873               	movf	??_Button_Baseline_Update+1,w
  8680  01D5  00F5               	movwf	??_Button_Baseline_Update+3
  8681  01D6  01F6               	clrf	??_Button_Baseline_Update+4
  8682  01D7  01F7               	clrf	??_Button_Baseline_Update+5
  8683  01D8  0878               	movf	Button_Baseline_Update@button,w
  8684  01D9  3E05               	addlw	5
  8685  01DA  0086               	movwf	6
  8686  01DB  0187               	clrf	7
  8687  01DC  0874               	movf	??_Button_Baseline_Update+2,w
  8688  01DD  0781               	addwf	1,f
  8689  01DE  3141               	addfsr 1,1
  8690  01DF  0875               	movf	??_Button_Baseline_Update+3,w
  8691  01E0  3D81               	addwfc	1,f
  8692  01E1  3141               	addfsr 1,1
  8693  01E2  0876               	movf	??_Button_Baseline_Update+4,w
  8694  01E3  3D81               	addwfc	1,f
  8695  01E4  3141               	addfsr 1,1
  8696  01E5  0877               	movf	??_Button_Baseline_Update+5,w
  8697  01E6  3D81               	addwfc	1,f
  8698  01E7  0008               	return
  8699  01E8                     __end_of_Button_Baseline_Update:
  8700                           
  8701                           	psect	text64
  8702  0653                     __ptext64:	
  8703 ;; *************** function _Button_Baseline_Initialize *****************
  8704 ;; Defined at:
  8705 ;;		line 611 in file "mcc_generated_files/mtouch/mtouch_button.c"
  8706 ;; Parameters:    Size  Location     Type
  8707 ;;  button          1    wreg     PTR struct .
  8708 ;;		 -> mtouch_button(51), 
  8709 ;; Auto vars:     Size  Location     Type
  8710 ;;  button          1    4[BANK0 ] PTR struct .
  8711 ;;		 -> mtouch_button(51), 
  8712 ;; Return value:  Size  Location     Type
  8713 ;;                  1    wreg      void 
  8714 ;; Registers used:
  8715 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8716 ;; Tracked objects:
  8717 ;;		On entry : 1F/0
  8718 ;;		On exit  : 1F/0
  8719 ;;		Unchanged: 0/0
  8720 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8721 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8722 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8723 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8724 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8725 ;;Total ram usage:        5 bytes
  8726 ;; Hardware stack levels used: 1
  8727 ;; Hardware stack levels required when called: 6
  8728 ;; This function calls:
  8729 ;;		_MTOUCH_Sensor_RawSample_Get
  8730 ;; This function is called by:
  8731 ;;		_Button_State_Initializing
  8732 ;; This function uses a non-reentrant model
  8733 ;;
  8734                           
  8735                           
  8736                           ;psect for function _Button_Baseline_Initialize
  8737  0653                     _Button_Baseline_Initialize:
  8738                           
  8739                           ;incstack = 0
  8740                           ; Regs used in _Button_Baseline_Initialize: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
  8741                           ;Button_Baseline_Initialize@button stored from wreg
  8742  0653  00A4               	movwf	Button_Baseline_Initialize@button
  8743                           
  8744                           ;mcc_generated_files/mtouch/mtouch_button.c: 611: static void Button_Baseline_Initialize
      +                          (mtouch_button_t* button);mcc_generated_files/mtouch/mtouch_button.c: 612: {;mcc_generat
      +                          ed_files/mtouch/mtouch_button.c: 613:     button->baseline = MTOUCH_Sensor_RawSample_Get
      +                          (button->sensor);
  8745  0654  0A24               	incf	Button_Baseline_Initialize@button,w
  8746  0655  0086               	movwf	6
  8747  0656  0187               	clrf	7
  8748  0657  0801               	movf	1,w
  8749  0658  318F  276D  3186   	fcall	_MTOUCH_Sensor_RawSample_Get
  8750  065B  0876               	movf	?_MTOUCH_Sensor_RawSample_Get,w
  8751  065C  0020               	movlb	0	; select bank0
  8752  065D  00A0               	movwf	??_Button_Baseline_Initialize
  8753  065E  0877               	movf	?_MTOUCH_Sensor_RawSample_Get+1,w
  8754  065F  00A1               	movwf	??_Button_Baseline_Initialize+1
  8755  0660  01A2               	clrf	??_Button_Baseline_Initialize+2
  8756  0661  01A3               	clrf	??_Button_Baseline_Initialize+3
  8757  0662  0824               	movf	Button_Baseline_Initialize@button,w
  8758  0663  3E05               	addlw	5
  8759  0664  0086               	movwf	6
  8760  0665  0187               	clrf	7
  8761  0666  0820               	movf	??_Button_Baseline_Initialize,w
  8762  0667  3FC0               	movwi [0]fsr1
  8763  0668  0821               	movf	??_Button_Baseline_Initialize+1,w
  8764  0669  3FC1               	movwi [1]fsr1
  8765  066A  0822               	movf	??_Button_Baseline_Initialize+2,w
  8766  066B  3FC2               	movwi [2]fsr1
  8767  066C  0823               	movf	??_Button_Baseline_Initialize+3,w
  8768  066D  3FC3               	movwi [3]fsr1
  8769                           
  8770                           ;mcc_generated_files/mtouch/mtouch_button.c: 614:     button->baseline <<= ((uint8_t)4u)
      +                          ;
  8771  066E  0824               	movf	Button_Baseline_Initialize@button,w
  8772  066F  3E05               	addlw	5
  8773  0670  0086               	movwf	6
  8774  0671  0187               	clrf	7
  8775  0672  3004               	movlw	4
  8776  0673                     u1795:
  8777  0673  3581               	lslf	1,f
  8778  0674  3141               	addfsr 1,1
  8779  0675  0D81               	rlf	1,f
  8780  0676  3141               	addfsr 1,1
  8781  0677  0D81               	rlf	1,f
  8782  0678  3141               	addfsr 1,1
  8783  0679  0D81               	rlf	1,f
  8784  067A  317D               	addfsr 1,-3
  8785  067B  0B89               	decfsz	9,f
  8786  067C  2E73               	goto	u1795
  8787  067D  0008               	return
  8788  067E                     __end_of_Button_Baseline_Initialize:
  8789                           
  8790                           	psect	text65
  8791  0E14                     __ptext65:	
  8792 ;; *************** function _Button_Reading_Update *****************
  8793 ;; Defined at:
  8794 ;;		line 584 in file "mcc_generated_files/mtouch/mtouch_button.c"
  8795 ;; Parameters:    Size  Location     Type
  8796 ;;  button          1    wreg     PTR struct .
  8797 ;;		 -> mtouch_button(51), 
  8798 ;; Auto vars:     Size  Location     Type
  8799 ;;  button          1    3[BANK0 ] PTR struct .
  8800 ;;		 -> mtouch_button(51), 
  8801 ;; Return value:  Size  Location     Type
  8802 ;;                  1    wreg      void 
  8803 ;; Registers used:
  8804 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8805 ;; Tracked objects:
  8806 ;;		On entry : 1F/0
  8807 ;;		On exit  : 1F/0
  8808 ;;		Unchanged: 0/0
  8809 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8810 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8811 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8812 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8813 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8814 ;;Total ram usage:        1 bytes
  8815 ;; Hardware stack levels used: 1
  8816 ;; Hardware stack levels required when called: 7
  8817 ;; This function calls:
  8818 ;;		_Button_Reading_Update_Helper
  8819 ;; This function is called by:
  8820 ;;		_Button_Service
  8821 ;; This function uses a non-reentrant model
  8822 ;;
  8823                           
  8824                           
  8825                           ;psect for function _Button_Reading_Update
  8826  0E14                     _Button_Reading_Update:
  8827                           
  8828                           ;incstack = 0
  8829                           ; Regs used in _Button_Reading_Update: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
  8830                           ;Button_Reading_Update@button stored from wreg
  8831  0E14  00A3               	movwf	Button_Reading_Update@button
  8832                           
  8833                           ;mcc_generated_files/mtouch/mtouch_button.c: 584: static void Button_Reading_Update(mtou
      +                          ch_button_t* button);mcc_generated_files/mtouch/mtouch_button.c: 585: {;mcc_generated_fi
      +                          les/mtouch/mtouch_button.c: 586:     if (GIE == (uint8_t) 1)
  8834  0E15  1F8B               	btfss	11,7	;volatile
  8835  0E16  2E1D               	goto	l3350
  8836                           
  8837                           ;mcc_generated_files/mtouch/mtouch_button.c: 587:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 588:         GIE = (uint8_t) 0;
  8838  0E17  138B               	bcf	11,7	;volatile
  8839                           
  8840                           ;mcc_generated_files/mtouch/mtouch_button.c: 589:         Button_Reading_Update_Helper(b
      +                          utton);
  8841  0E18  0823               	movf	Button_Reading_Update@button,w
  8842  0E19  3185  2526         	fcall	_Button_Reading_Update_Helper
  8843                           
  8844                           ;mcc_generated_files/mtouch/mtouch_button.c: 590:         GIE = (uint8_t) 1;
  8845  0E1B  178B               	bsf	11,7	;volatile
  8846                           
  8847                           ;mcc_generated_files/mtouch/mtouch_button.c: 591:     }
  8848  0E1C  0008               	return
  8849  0E1D                     l3350:
  8850                           
  8851                           ;mcc_generated_files/mtouch/mtouch_button.c: 593:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 594:         Button_Reading_Update_Helper(button);
  8852  0E1D  0823               	movf	Button_Reading_Update@button,w
  8853  0E1E  3185  2526         	fcall	_Button_Reading_Update_Helper
  8854  0E20  0008               	return
  8855  0E21                     __end_of_Button_Reading_Update:
  8856                           
  8857                           	psect	text66
  8858  0526                     __ptext66:	
  8859 ;; *************** function _Button_Reading_Update_Helper *****************
  8860 ;; Defined at:
  8861 ;;		line 598 in file "mcc_generated_files/mtouch/mtouch_button.c"
  8862 ;; Parameters:    Size  Location     Type
  8863 ;;  button          1    wreg     PTR struct .
  8864 ;;		 -> mtouch_button(51), 
  8865 ;; Auto vars:     Size  Location     Type
  8866 ;;  button          1    2[BANK0 ] PTR struct .
  8867 ;;		 -> mtouch_button(51), 
  8868 ;; Return value:  Size  Location     Type
  8869 ;;                  1    wreg      void 
  8870 ;; Registers used:
  8871 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8872 ;; Tracked objects:
  8873 ;;		On entry : 1F/0
  8874 ;;		On exit  : 1F/0
  8875 ;;		Unchanged: 0/0
  8876 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8877 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8878 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8879 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8880 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8881 ;;Total ram usage:        3 bytes
  8882 ;; Hardware stack levels used: 1
  8883 ;; Hardware stack levels required when called: 6
  8884 ;; This function calls:
  8885 ;;		_MTOUCH_Sensor_RawSample_Get
  8886 ;; This function is called by:
  8887 ;;		_Button_Reading_Update
  8888 ;; This function uses a non-reentrant model
  8889 ;;
  8890                           
  8891                           
  8892                           ;psect for function _Button_Reading_Update_Helper
  8893  0526                     _Button_Reading_Update_Helper:
  8894                           
  8895                           ;incstack = 0
  8896                           ; Regs used in _Button_Reading_Update_Helper: [wreg+fsr1l+fsr1h+status,2+status,0+pclath
      +                          +cstack]
  8897                           ;Button_Reading_Update_Helper@button stored from wreg
  8898  0526  00A2               	movwf	Button_Reading_Update_Helper@button
  8899                           
  8900                           ;mcc_generated_files/mtouch/mtouch_button.c: 598: static void Button_Reading_Update_Help
      +                          er(mtouch_button_t* button);mcc_generated_files/mtouch/mtouch_button.c: 599: {;mcc_gener
      +                          ated_files/mtouch/mtouch_button.c: 600:     if (button->state != MTOUCH_BUTTON_STATE_ini
      +                          tializing)
  8901  0527  0822               	movf	Button_Reading_Update_Helper@button,w
  8902  0528  3E02               	addlw	2
  8903  0529  0086               	movwf	6
  8904  052A  0187               	clrf	7
  8905  052B  0801               	movf	1,w
  8906  052C  1903               	btfsc	3,2
  8907  052D  2D61               	goto	l3286
  8908                           
  8909                           ;mcc_generated_files/mtouch/mtouch_button.c: 601:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 602:         button->reading -= button->reading>>((uint8_t)4u);
  8910  052E  0822               	movf	Button_Reading_Update_Helper@button,w
  8911  052F  3E03               	addlw	3
  8912  0530  0086               	movwf	6
  8913  0531  0187               	clrf	7
  8914  0532  3F40               	moviw [0]fsr1
  8915  0533  00A0               	movwf	??_Button_Reading_Update_Helper
  8916  0534  3F41               	moviw [1]fsr1
  8917  0535  00A1               	movwf	??_Button_Reading_Update_Helper+1
  8918  0536  3004               	movlw	4
  8919  0537                     u1815:
  8920  0537  36A1               	lsrf	??_Button_Reading_Update_Helper+1,f
  8921  0538  0CA0               	rrf	??_Button_Reading_Update_Helper,f
  8922  0539  0B89               	decfsz	9,f
  8923  053A  2D37               	goto	u1815
  8924  053B  0822               	movf	Button_Reading_Update_Helper@button,w
  8925  053C  3E03               	addlw	3
  8926  053D  0086               	movwf	6
  8927  053E  0187               	clrf	7
  8928  053F  0820               	movf	??_Button_Reading_Update_Helper,w
  8929  0540  0281               	subwf	1,f
  8930  0541  3141               	addfsr 1,1
  8931  0542  0821               	movf	??_Button_Reading_Update_Helper+1,w
  8932  0543  3B81               	subwfb	1,f
  8933  0544  317F               	addfsr 1,-1
  8934                           
  8935                           ;mcc_generated_files/mtouch/mtouch_button.c: 603:         button->reading += MTOUCH_Sens
      +                          or_RawSample_Get(button->sensor) >> ((uint8_t)4u);
  8936  0545  0A22               	incf	Button_Reading_Update_Helper@button,w
  8937  0546  0086               	movwf	6
  8938  0547  0187               	clrf	7
  8939  0548  0801               	movf	1,w
  8940  0549  318F  276D  3185   	fcall	_MTOUCH_Sensor_RawSample_Get
  8941  054C  0876               	movf	?_MTOUCH_Sensor_RawSample_Get,w
  8942  054D  0020               	movlb	0	; select bank0
  8943  054E  00A0               	movwf	??_Button_Reading_Update_Helper
  8944  054F  0877               	movf	?_MTOUCH_Sensor_RawSample_Get+1,w
  8945  0550  00A1               	movwf	??_Button_Reading_Update_Helper+1
  8946  0551  3004               	movlw	4
  8947  0552                     u1825:
  8948  0552  36A1               	lsrf	??_Button_Reading_Update_Helper+1,f
  8949  0553  0CA0               	rrf	??_Button_Reading_Update_Helper,f
  8950  0554  0B89               	decfsz	9,f
  8951  0555  2D52               	goto	u1825
  8952  0556  0822               	movf	Button_Reading_Update_Helper@button,w
  8953  0557  3E03               	addlw	3
  8954  0558  0086               	movwf	6
  8955  0559  0187               	clrf	7
  8956  055A  0820               	movf	??_Button_Reading_Update_Helper,w
  8957  055B  0781               	addwf	1,f
  8958  055C  3141               	addfsr 1,1
  8959  055D  0821               	movf	??_Button_Reading_Update_Helper+1,w
  8960  055E  3D81               	addwfc	1,f
  8961  055F  317F               	addfsr 1,-1
  8962                           
  8963                           ;mcc_generated_files/mtouch/mtouch_button.c: 604:     }
  8964  0560  0008               	return
  8965  0561                     l3286:
  8966                           
  8967                           ;mcc_generated_files/mtouch/mtouch_button.c: 606:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 607:         button->reading = MTOUCH_Sensor_RawSample_Get(button->sensor);
  8968  0561  0A22               	incf	Button_Reading_Update_Helper@button,w
  8969  0562  0086               	movwf	6
  8970  0563  0187               	clrf	7
  8971  0564  0801               	movf	1,w
  8972  0565  318F  276D         	fcall	_MTOUCH_Sensor_RawSample_Get
  8973  0567  0020               	movlb	0	; select bank0
  8974  0568  0822               	movf	Button_Reading_Update_Helper@button,w
  8975  0569  3E03               	addlw	3
  8976  056A  0086               	movwf	6
  8977  056B  0187               	clrf	7
  8978  056C  0876               	movf	?_MTOUCH_Sensor_RawSample_Get,w
  8979  056D  3FC0               	movwi [0]fsr1
  8980  056E  0877               	movf	?_MTOUCH_Sensor_RawSample_Get+1,w
  8981  056F  3FC1               	movwi [1]fsr1
  8982  0570  0008               	return
  8983  0571                     __end_of_Button_Reading_Update_Helper:
  8984                           
  8985                           	psect	text67
  8986  0F6D                     __ptext67:	
  8987 ;; *************** function _MTOUCH_Sensor_RawSample_Get *****************
  8988 ;; Defined at:
  8989 ;;		line 421 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  8990 ;; Parameters:    Size  Location     Type
  8991 ;;  name            1    wreg     enum E2707
  8992 ;; Auto vars:     Size  Location     Type
  8993 ;;  name            1    9[COMMON] enum E2707
  8994 ;; Return value:  Size  Location     Type
  8995 ;;                  2    6[COMMON] unsigned short 
  8996 ;; Registers used:
  8997 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8998 ;; Tracked objects:
  8999 ;;		On entry : 1F/0
  9000 ;;		On exit  : 0/0
  9001 ;;		Unchanged: 0/0
  9002 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9003 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9004 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9005 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9006 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9007 ;;Total ram usage:        4 bytes
  9008 ;; Hardware stack levels used: 1
  9009 ;; Hardware stack levels required when called: 5
  9010 ;; This function calls:
  9011 ;;		___bmul
  9012 ;; This function is called by:
  9013 ;;		_main
  9014 ;;		_Button_Reading_Update_Helper
  9015 ;;		_Button_Baseline_Initialize
  9016 ;; This function uses a non-reentrant model
  9017 ;;
  9018                           
  9019                           
  9020                           ;psect for function _MTOUCH_Sensor_RawSample_Get
  9021  0F6D                     _MTOUCH_Sensor_RawSample_Get:
  9022                           
  9023                           ;incstack = 0
  9024                           ; Regs used in _MTOUCH_Sensor_RawSample_Get: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
  9025                           ;MTOUCH_Sensor_RawSample_Get@name stored from wreg
  9026  0F6D  00F9               	movwf	MTOUCH_Sensor_RawSample_Get@name
  9027  0F6E  3003               	movlw	3
  9028  0F6F  0279               	subwf	MTOUCH_Sensor_RawSample_Get@name,w
  9029  0F70  1803               	skipnc
  9030  0F71  2F81               	goto	l3212
  9031  0F72  3009               	movlw	9
  9032  0F73  00F8               	movwf	??_MTOUCH_Sensor_RawSample_Get
  9033  0F74  0878               	movf	??_MTOUCH_Sensor_RawSample_Get,w
  9034  0F75  00F2               	movwf	___bmul@multiplicand
  9035  0F76  0879               	movf	MTOUCH_Sensor_RawSample_Get@name,w
  9036  0F77  318E  265B         	fcall	___bmul
  9037  0F79  3ED9               	addlw	(low ((_mtouch_sensor| 0+6)))& (0+255)
  9038  0F7A  0086               	movwf	6
  9039  0F7B  0187               	clrf	7
  9040  0F7C  3F40               	moviw [0]fsr1
  9041  0F7D  00F6               	movwf	?_MTOUCH_Sensor_RawSample_Get
  9042  0F7E  3F41               	moviw [1]fsr1
  9043  0F7F  00F7               	movwf	?_MTOUCH_Sensor_RawSample_Get+1
  9044  0F80  0008               	return
  9045  0F81                     l3212:
  9046  0F81  01F6               	clrf	?_MTOUCH_Sensor_RawSample_Get
  9047  0F82  01F7               	clrf	?_MTOUCH_Sensor_RawSample_Get+1
  9048  0F83  0008               	return
  9049  0F84                     __end_of_MTOUCH_Sensor_RawSample_Get:
  9050                           
  9051                           	psect	text68
  9052  0E5B                     __ptext68:	
  9053 ;; *************** function ___bmul *****************
  9054 ;; Defined at:
  9055 ;;		line 4 in file "/Applications/microchip/xc8/v2.32/pic/sources/c99/common/Umul8.c"
  9056 ;; Parameters:    Size  Location     Type
  9057 ;;  multiplier      1    wreg     unsigned char 
  9058 ;;  multiplicand    1    2[COMMON] unsigned char 
  9059 ;; Auto vars:     Size  Location     Type
  9060 ;;  multiplier      1    5[COMMON] unsigned char 
  9061 ;;  product         1    4[COMMON] unsigned char 
  9062 ;; Return value:  Size  Location     Type
  9063 ;;                  1    wreg      unsigned char 
  9064 ;; Registers used:
  9065 ;;		wreg, status,2, status,0
  9066 ;; Tracked objects:
  9067 ;;		On entry : 0/0
  9068 ;;		On exit  : 0/0
  9069 ;;		Unchanged: 0/0
  9070 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9071 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9072 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9073 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9074 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9075 ;;Total ram usage:        4 bytes
  9076 ;; Hardware stack levels used: 1
  9077 ;; Hardware stack levels required when called: 4
  9078 ;; This function calls:
  9079 ;;		Nothing
  9080 ;; This function is called by:
  9081 ;;		_MTOUCH_Sensor_Initialize
  9082 ;;		_Sensor_Service
  9083 ;;		_Sensor_Acq_ExecuteScan
  9084 ;;		_MTOUCH_Sensor_RawSample_Get
  9085 ;;		_MTOUCH_Sensor_Disable
  9086 ;;		_MTOUCH_Sensor_Enable
  9087 ;;		_MTOUCH_Sensor_wasSampled
  9088 ;; This function uses a non-reentrant model
  9089 ;;
  9090                           
  9091                           
  9092                           ;psect for function ___bmul
  9093  0E5B                     ___bmul:
  9094                           
  9095                           ;incstack = 0
  9096                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  9097                           ;___bmul@multiplier stored from wreg
  9098  0E5B  00F5               	movwf	___bmul@multiplier
  9099  0E5C  01F4               	clrf	___bmul@product
  9100  0E5D                     l3156:
  9101  0E5D  1C75               	btfss	___bmul@multiplier,0
  9102  0E5E  2E63               	goto	l3160
  9103  0E5F  0872               	movf	___bmul@multiplicand,w
  9104  0E60  00F3               	movwf	??___bmul
  9105  0E61  0873               	movf	??___bmul,w
  9106  0E62  07F4               	addwf	___bmul@product,f
  9107  0E63                     l3160:
  9108  0E63  1003               	clrc
  9109  0E64  0DF2               	rlf	___bmul@multiplicand,f
  9110  0E65  1003               	clrc
  9111  0E66  0CF5               	rrf	___bmul@multiplier,f
  9112  0E67  0875               	movf	___bmul@multiplier,w
  9113  0E68  1D03               	btfss	3,2
  9114  0E69  2E5D               	goto	l3156
  9115  0E6A  0874               	movf	___bmul@product,w
  9116  0E6B  0008               	return
  9117  0E6C                     __end_of___bmul:
  9118                           
  9119                           	psect	text69
  9120  01E8                     __ptext69:	
  9121 ;; *************** function _Button_Deviation_Update *****************
  9122 ;; Defined at:
  9123 ;;		line 535 in file "mcc_generated_files/mtouch/mtouch_button.c"
  9124 ;; Parameters:    Size  Location     Type
  9125 ;;  button          1    wreg     PTR struct .
  9126 ;;		 -> mtouch_button(51), 
  9127 ;; Auto vars:     Size  Location     Type
  9128 ;;  button          1    2[COMMON] PTR struct .
  9129 ;;		 -> mtouch_button(51), 
  9130 ;;  deviation       4    3[COMMON] long 
  9131 ;; Return value:  Size  Location     Type
  9132 ;;                  1    wreg      void 
  9133 ;; Registers used:
  9134 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  9135 ;; Tracked objects:
  9136 ;;		On entry : 1F/0
  9137 ;;		On exit  : 1F/0
  9138 ;;		Unchanged: 0/0
  9139 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9140 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9141 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9142 ;;      Temps:          0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9143 ;;      Totals:         5      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9144 ;;Total ram usage:       15 bytes
  9145 ;; Hardware stack levels used: 1
  9146 ;; Hardware stack levels required when called: 4
  9147 ;; This function calls:
  9148 ;;		Nothing
  9149 ;; This function is called by:
  9150 ;;		_Button_Service
  9151 ;; This function uses a non-reentrant model
  9152 ;;
  9153                           
  9154                           
  9155                           ;psect for function _Button_Deviation_Update
  9156  01E8                     _Button_Deviation_Update:
  9157                           
  9158                           ;incstack = 0
  9159                           ; Regs used in _Button_Deviation_Update: [wreg+fsr1l+fsr1h+status,2+status,0]
  9160                           ;Button_Deviation_Update@button stored from wreg
  9161  01E8  00F2               	movwf	Button_Deviation_Update@button
  9162                           
  9163                           ;mcc_generated_files/mtouch/mtouch_button.c: 535: static void Button_Deviation_Update(mt
      +                          ouch_button_t* button);mcc_generated_files/mtouch/mtouch_button.c: 536: {;mcc_generated_
      +                          files/mtouch/mtouch_button.c: 537:     int32_t deviation;;mcc_generated_files/mtouch/mto
      +                          uch_button.c: 539:     deviation = (int32_t)((int32_t)(button->reading) - (int32_t)((but
      +                          ton->baseline)>>((uint8_t)4u)));
  9164  01E9  0872               	movf	Button_Deviation_Update@button,w
  9165  01EA  3E05               	addlw	5
  9166  01EB  0086               	movwf	6
  9167  01EC  0187               	clrf	7
  9168  01ED  3F40               	moviw [0]fsr1
  9169  01EE  00A0               	movwf	??_Button_Deviation_Update
  9170  01EF  3F41               	moviw [1]fsr1
  9171  01F0  00A1               	movwf	??_Button_Deviation_Update+1
  9172  01F1  3F42               	moviw [2]fsr1
  9173  01F2  00A2               	movwf	??_Button_Deviation_Update+2
  9174  01F3  3F43               	moviw [3]fsr1
  9175  01F4  00A3               	movwf	??_Button_Deviation_Update+3
  9176  01F5  3004               	movlw	4
  9177  01F6                     u1905:
  9178  01F6  36A3               	lsrf	??_Button_Deviation_Update+3,f
  9179  01F7  0CA2               	rrf	??_Button_Deviation_Update+2,f
  9180  01F8  0CA1               	rrf	??_Button_Deviation_Update+1,f
  9181  01F9  0CA0               	rrf	??_Button_Deviation_Update,f
  9182  01FA  0B89               	decfsz	9,f
  9183  01FB  29F6               	goto	u1905
  9184  01FC  0872               	movf	Button_Deviation_Update@button,w
  9185  01FD  3E03               	addlw	3
  9186  01FE  0086               	movwf	6
  9187  01FF  0187               	clrf	7
  9188  0200  3F40               	moviw [0]fsr1
  9189  0201  00A4               	movwf	??_Button_Deviation_Update+4
  9190  0202  3F41               	moviw [1]fsr1
  9191  0203  00A5               	movwf	??_Button_Deviation_Update+5
  9192  0204  0824               	movf	??_Button_Deviation_Update+4,w
  9193  0205  00A6               	movwf	??_Button_Deviation_Update+6
  9194  0206  0825               	movf	??_Button_Deviation_Update+5,w
  9195  0207  00A7               	movwf	??_Button_Deviation_Update+7
  9196  0208  01A8               	clrf	??_Button_Deviation_Update+8
  9197  0209  01A9               	clrf	??_Button_Deviation_Update+9
  9198  020A  0820               	movf	??_Button_Deviation_Update,w
  9199  020B  02A6               	subwf	??_Button_Deviation_Update+6,f
  9200  020C  0821               	movf	??_Button_Deviation_Update+1,w
  9201  020D  3BA7               	subwfb	??_Button_Deviation_Update+7,f
  9202  020E  0822               	movf	??_Button_Deviation_Update+2,w
  9203  020F  3BA8               	subwfb	??_Button_Deviation_Update+8,f
  9204  0210  0823               	movf	??_Button_Deviation_Update+3,w
  9205  0211  3BA9               	subwfb	??_Button_Deviation_Update+9,f
  9206  0212  0829               	movf	??_Button_Deviation_Update+9,w
  9207  0213  00F6               	movwf	Button_Deviation_Update@deviation+3
  9208  0214  0828               	movf	??_Button_Deviation_Update+8,w
  9209  0215  00F5               	movwf	Button_Deviation_Update@deviation+2
  9210  0216  0827               	movf	??_Button_Deviation_Update+7,w
  9211  0217  00F4               	movwf	Button_Deviation_Update@deviation+1
  9212  0218  0826               	movf	??_Button_Deviation_Update+6,w
  9213  0219  00F3               	movwf	Button_Deviation_Update@deviation
  9214                           
  9215                           ;mcc_generated_files/mtouch/mtouch_button.c: 542:     deviation = deviation >> (button->
      +                          scaling);
  9216  021A  0873               	movf	Button_Deviation_Update@deviation,w
  9217  021B  00A0               	movwf	??_Button_Deviation_Update
  9218  021C  0874               	movf	Button_Deviation_Update@deviation+1,w
  9219  021D  00A1               	movwf	??_Button_Deviation_Update+1
  9220  021E  0875               	movf	Button_Deviation_Update@deviation+2,w
  9221  021F  00A2               	movwf	??_Button_Deviation_Update+2
  9222  0220  0876               	movf	Button_Deviation_Update@deviation+3,w
  9223  0221  00A3               	movwf	??_Button_Deviation_Update+3
  9224  0222  0872               	movf	Button_Deviation_Update@button,w
  9225  0223  3E0F               	addlw	15
  9226  0224  0086               	movwf	6
  9227  0225  0187               	clrf	7
  9228  0226  0A01               	incf	1,w
  9229  0227  2A2C               	goto	u1910
  9230  0228                     u1915:
  9231  0228  37A3               	asrf	??_Button_Deviation_Update+3,f
  9232  0229  0CA2               	rrf	??_Button_Deviation_Update+2,f
  9233  022A  0CA1               	rrf	??_Button_Deviation_Update+1,f
  9234  022B  0CA0               	rrf	??_Button_Deviation_Update,f
  9235  022C                     u1910:
  9236  022C  0B89               	decfsz	9,f
  9237  022D  2A28               	goto	u1915
  9238  022E  0823               	movf	??_Button_Deviation_Update+3,w
  9239  022F  00F6               	movwf	Button_Deviation_Update@deviation+3
  9240  0230  0822               	movf	??_Button_Deviation_Update+2,w
  9241  0231  00F5               	movwf	Button_Deviation_Update@deviation+2
  9242  0232  0821               	movf	??_Button_Deviation_Update+1,w
  9243  0233  00F4               	movwf	Button_Deviation_Update@deviation+1
  9244  0234  0820               	movf	??_Button_Deviation_Update,w
  9245  0235  00F3               	movwf	Button_Deviation_Update@deviation
  9246                           
  9247                           ;mcc_generated_files/mtouch/mtouch_button.c: 545:     if (deviation > ((0x7f)))
  9248  0236  1BF6               	btfsc	Button_Deviation_Update@deviation+3,7
  9249  0237  2A4D               	goto	l3358
  9250  0238  0876               	movf	Button_Deviation_Update@deviation+3,w
  9251  0239  1D03               	btfss	3,2
  9252  023A  2A45               	goto	l3356
  9253  023B  0875               	movf	Button_Deviation_Update@deviation+2,w
  9254  023C  1D03               	btfss	3,2
  9255  023D  2A45               	goto	l3356
  9256  023E  0874               	movf	Button_Deviation_Update@deviation+1,w
  9257  023F  1D03               	btfss	3,2
  9258  0240  2A45               	goto	l3356
  9259  0241  3080               	movlw	128
  9260  0242  0273               	subwf	Button_Deviation_Update@deviation,w
  9261  0243  1C03               	btfss	3,0
  9262  0244  2A4D               	goto	l3358
  9263  0245                     l3356:
  9264                           
  9265                           ;mcc_generated_files/mtouch/mtouch_button.c: 546:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 547:         deviation = ((0x7f));
  9266  0245  3000               	movlw	0
  9267  0246  00F6               	movwf	Button_Deviation_Update@deviation+3
  9268  0247  3000               	movlw	0
  9269  0248  00F5               	movwf	Button_Deviation_Update@deviation+2
  9270  0249  3000               	movlw	0
  9271  024A  00F4               	movwf	Button_Deviation_Update@deviation+1
  9272  024B  307F               	movlw	127
  9273  024C  00F3               	movwf	Button_Deviation_Update@deviation
  9274  024D                     l3358:
  9275                           
  9276                           ;mcc_generated_files/mtouch/mtouch_button.c: 549:     if (deviation < ((-1-0x7f)))
  9277  024D  1FF6               	btfss	Button_Deviation_Update@deviation+3,7
  9278  024E  2A61               	goto	l3362
  9279  024F  3080               	movlw	128
  9280  0250  0273               	subwf	Button_Deviation_Update@deviation,w
  9281  0251  30FF               	movlw	255
  9282  0252  3B74               	subwfb	Button_Deviation_Update@deviation+1,w
  9283  0253  30FF               	movlw	255
  9284  0254  3B75               	subwfb	Button_Deviation_Update@deviation+2,w
  9285  0255  30FF               	movlw	255
  9286  0256  3B76               	subwfb	Button_Deviation_Update@deviation+3,w
  9287  0257  1803               	btfsc	3,0
  9288  0258  2A61               	goto	l3362
  9289                           
  9290                           ;mcc_generated_files/mtouch/mtouch_button.c: 550:     {;mcc_generated_files/mtouch/mtouc
      +                          h_button.c: 551:         deviation = ((-1-0x7f));
  9291  0259  30FF               	movlw	255
  9292  025A  00F6               	movwf	Button_Deviation_Update@deviation+3
  9293  025B  30FF               	movlw	255
  9294  025C  00F5               	movwf	Button_Deviation_Update@deviation+2
  9295  025D  30FF               	movlw	255
  9296  025E  00F4               	movwf	Button_Deviation_Update@deviation+1
  9297  025F  3080               	movlw	128
  9298  0260  00F3               	movwf	Button_Deviation_Update@deviation
  9299  0261                     l3362:
  9300                           
  9301                           ;mcc_generated_files/mtouch/mtouch_button.c: 554:     button->deviation = (mtouch_button
      +                          _deviation_t)deviation;
  9302  0261  0873               	movf	Button_Deviation_Update@deviation,w
  9303  0262  0020               	movlb	0	; select bank0
  9304  0263  00A0               	movwf	??_Button_Deviation_Update
  9305  0264  0872               	movf	Button_Deviation_Update@button,w
  9306  0265  3E09               	addlw	9
  9307  0266  0086               	movwf	6
  9308  0267  0187               	clrf	7
  9309  0268  0820               	movf	??_Button_Deviation_Update,w
  9310  0269  0081               	movwf	1
  9311  026A  0008               	return
  9312  026B                     __end_of_Button_Deviation_Update:
  9313                           
  9314                           	psect	text70
  9315  0D9A                     __ptext70:	
  9316 ;; *************** function _Button_Reburst_Clear *****************
  9317 ;; Defined at:
  9318 ;;		line 667 in file "mcc_generated_files/mtouch/mtouch_button.c"
  9319 ;; Parameters:    Size  Location     Type
  9320 ;;		None
  9321 ;; Auto vars:     Size  Location     Type
  9322 ;;		None
  9323 ;; Return value:  Size  Location     Type
  9324 ;;                  1    wreg      void 
  9325 ;; Registers used:
  9326 ;;		status,2
  9327 ;; Tracked objects:
  9328 ;;		On entry : 1F/0
  9329 ;;		On exit  : 1F/0
  9330 ;;		Unchanged: 0/0
  9331 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9332 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9333 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9334 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9335 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9336 ;;Total ram usage:        0 bytes
  9337 ;; Hardware stack levels used: 1
  9338 ;; Hardware stack levels required when called: 4
  9339 ;; This function calls:
  9340 ;;		Nothing
  9341 ;; This function is called by:
  9342 ;;		_MTOUCH_Button_ServiceAll
  9343 ;; This function uses a non-reentrant model
  9344 ;;
  9345                           
  9346                           
  9347                           ;psect for function _Button_Reburst_Clear
  9348  0D9A                     _Button_Reburst_Clear:
  9349                           
  9350                           ;mcc_generated_files/mtouch/mtouch_button.c: 669:     button_reburst_request = 0;
  9351                           
  9352                           ;incstack = 0
  9353                           ; Regs used in _Button_Reburst_Clear: [status,2]
  9354  0D9A  01E7               	clrf	_button_reburst_request
  9355  0D9B  0008               	return
  9356  0D9C                     __end_of_Button_Reburst_Clear:
  9357                           
  9358                           	psect	text71
  9359  07B1                     __ptext71:	
  9360 ;; *************** function _MTOUCH_Button_isPressed *****************
  9361 ;; Defined at:
  9362 ;;		line 462 in file "mcc_generated_files/mtouch/mtouch_button.c"
  9363 ;; Parameters:    Size  Location     Type
  9364 ;;  name            1    wreg     enum E2928
  9365 ;; Auto vars:     Size  Location     Type
  9366 ;;  name            1    3[COMMON] enum E2928
  9367 ;; Return value:  Size  Location     Type
  9368 ;;                  1    wreg      _Bool 
  9369 ;; Registers used:
  9370 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  9371 ;; Tracked objects:
  9372 ;;		On entry : 1F/0
  9373 ;;		On exit  : 1F/0
  9374 ;;		Unchanged: 1F/0
  9375 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9376 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9377 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9378 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9379 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9380 ;;Total ram usage:        2 bytes
  9381 ;; Hardware stack levels used: 1
  9382 ;; Hardware stack levels required when called: 4
  9383 ;; This function calls:
  9384 ;;		Nothing
  9385 ;; This function is called by:
  9386 ;;		_main
  9387 ;; This function uses a non-reentrant model
  9388 ;;
  9389                           
  9390                           
  9391                           ;psect for function _MTOUCH_Button_isPressed
  9392  07B1                     _MTOUCH_Button_isPressed:
  9393                           
  9394                           ;incstack = 0
  9395                           ; Regs used in _MTOUCH_Button_isPressed: [wreg+fsr1l+fsr1h+status,2+status,0]
  9396                           ;MTOUCH_Button_isPressed@name stored from wreg
  9397  07B1  00F3               	movwf	MTOUCH_Button_isPressed@name
  9398                           
  9399                           ;mcc_generated_files/mtouch/mtouch_button.c: 462: _Bool MTOUCH_Button_isPressed(enum mto
      +                          uch_button_names name);mcc_generated_files/mtouch/mtouch_button.c: 463: {;mcc_generated_
      +                          files/mtouch/mtouch_button.c: 464:     if(name < 3u)
  9400  07B2  3003               	movlw	3
  9401  07B3  0273               	subwf	MTOUCH_Button_isPressed@name,w
  9402  07B4  1803               	skipnc
  9403  07B5  2FCE               	goto	l3024
  9404                           
  9405                           ;mcc_generated_files/mtouch/mtouch_button.c: 465:         return (_Bool)((mtouch_button[
      +                          name].state == MTOUCH_BUTTON_STATE_pressed || mtouch_button[name].state == MTOUCH_BUTTON
      +                          _STATE_releaseDebounce) ? 1 : 0);
  9406  07B6  01F2               	clrf	_MTOUCH_Button_isPressed$1382
  9407  07B7  0AF2               	incf	_MTOUCH_Button_isPressed$1382,f
  9408  07B8  0E73               	swapf	MTOUCH_Button_isPressed@name,w
  9409  07B9  39F0               	andlw	240
  9410  07BA  0773               	addwf	MTOUCH_Button_isPressed@name,w
  9411  07BB  3EA2               	addlw	(low ((_mtouch_button| 0+2)))& (0+255)
  9412  07BC  0086               	movwf	6
  9413  07BD  0187               	clrf	7
  9414  07BE  3003               	movlw	3
  9415  07BF  0601               	xorwf	1,w
  9416  07C0  1903               	btfsc	3,2
  9417  07C1  2FCC               	goto	l3018
  9418  07C2  0E73               	swapf	MTOUCH_Button_isPressed@name,w
  9419  07C3  39F0               	andlw	240
  9420  07C4  0773               	addwf	MTOUCH_Button_isPressed@name,w
  9421  07C5  3EA2               	addlw	(low ((_mtouch_button| 0+2)))& (0+255)
  9422  07C6  0086               	movwf	6
  9423  07C7  0187               	clrf	7
  9424  07C8  3004               	movlw	4
  9425  07C9  0601               	xorwf	1,w
  9426  07CA  1D03               	btfss	3,2
  9427  07CB  01F2               	clrf	_MTOUCH_Button_isPressed$1382
  9428  07CC                     l3018:
  9429  07CC  0872               	movf	_MTOUCH_Button_isPressed$1382,w
  9430  07CD  0008               	return
  9431  07CE                     l3024:
  9432                           
  9433                           ;mcc_generated_files/mtouch/mtouch_button.c: 467:         return 0;
  9434  07CE  3000               	movlw	0
  9435  07CF  0008               	return
  9436  07D0                     __end_of_MTOUCH_Button_isPressed:
  9437                           
  9438                           	psect	text72
  9439  0DCF                     __ptext72:	
  9440 ;; *************** function _EUSART_Write *****************
  9441 ;; Defined at:
  9442 ;;		line 132 in file "mcc_generated_files/eusart.c"
  9443 ;; Parameters:    Size  Location     Type
  9444 ;;  txData          1    wreg     unsigned char 
  9445 ;; Auto vars:     Size  Location     Type
  9446 ;;  txData          1    2[COMMON] unsigned char 
  9447 ;; Return value:  Size  Location     Type
  9448 ;;                  1    wreg      void 
  9449 ;; Registers used:
  9450 ;;		wreg
  9451 ;; Tracked objects:
  9452 ;;		On entry : 1F/0
  9453 ;;		On exit  : 1F/3
  9454 ;;		Unchanged: 0/0
  9455 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9456 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9457 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9458 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9459 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9460 ;;Total ram usage:        1 bytes
  9461 ;; Hardware stack levels used: 1
  9462 ;; Hardware stack levels required when called: 4
  9463 ;; This function calls:
  9464 ;;		Nothing
  9465 ;; This function is called by:
  9466 ;;		_main
  9467 ;; This function uses a non-reentrant model
  9468 ;;
  9469                           
  9470                           
  9471                           ;psect for function _EUSART_Write
  9472  0DCF                     _EUSART_Write:
  9473                           
  9474                           ;incstack = 0
  9475                           ; Regs used in _EUSART_Write: [wreg]
  9476                           ;EUSART_Write@txData stored from wreg
  9477  0DCF  00F2               	movwf	EUSART_Write@txData
  9478  0DD0                     l476:	
  9479                           ;mcc_generated_files/eusart.c: 135:     {;mcc_generated_files/eusart.c: 136:     }
  9480                           
  9481                           
  9482                           ;mcc_generated_files/eusart.c: 134:     while(0 == PIR1bits.TXIF)
  9483  0DD0  1E11               	btfss	17,4	;volatile
  9484  0DD1  2DD0               	goto	l476
  9485                           
  9486                           ;mcc_generated_files/eusart.c: 138:     TXREG = txData;
  9487  0DD2  0872               	movf	EUSART_Write@txData,w
  9488  0DD3  0023               	movlb	3	; select bank3
  9489  0DD4  009A               	movwf	26	;volatile
  9490  0DD5  0008               	return
  9491  0DD6                     __end_of_EUSART_Write:
  9492                           
  9493                           	psect	text73
  9494  0EC2                     __ptext73:	
  9495 ;; *************** function _DELAY_milliseconds *****************
  9496 ;; Defined at:
  9497 ;;		line 38 in file "mcc_generated_files/delay.c"
  9498 ;; Parameters:    Size  Location     Type
  9499 ;;  milliseconds    2    2[COMMON] unsigned short 
  9500 ;; Auto vars:     Size  Location     Type
  9501 ;;		None
  9502 ;; Return value:  Size  Location     Type
  9503 ;;                  1    wreg      void 
  9504 ;; Registers used:
  9505 ;;		wreg, status,2, status,0
  9506 ;; Tracked objects:
  9507 ;;		On entry : 1E/2
  9508 ;;		On exit  : 0/0
  9509 ;;		Unchanged: 0/0
  9510 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9511 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9512 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9513 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9514 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9515 ;;Total ram usage:        3 bytes
  9516 ;; Hardware stack levels used: 1
  9517 ;; Hardware stack levels required when called: 4
  9518 ;; This function calls:
  9519 ;;		Nothing
  9520 ;; This function is called by:
  9521 ;;		_main
  9522 ;; This function uses a non-reentrant model
  9523 ;;
  9524                           
  9525                           
  9526                           ;psect for function _DELAY_milliseconds
  9527  0EC2                     _DELAY_milliseconds:
  9528  0EC2                     l3036:	
  9529                           ;mcc_generated_files/delay.c: 39:     while(milliseconds--){
  9530                           
  9531                           ;incstack = 0
  9532                           ; Regs used in _DELAY_milliseconds: [wreg+status,2+status,0]
  9533                           
  9534                           
  9535                           ;mcc_generated_files/delay.c: 39:     while(milliseconds--){
  9536  0EC2  3001               	movlw	1
  9537  0EC3  02F2               	subwf	DELAY_milliseconds@milliseconds,f
  9538  0EC4  3000               	movlw	0
  9539  0EC5  3BF3               	subwfb	DELAY_milliseconds@milliseconds+1,f
  9540  0EC6  0A72               	incf	DELAY_milliseconds@milliseconds,w
  9541  0EC7  1903               	btfsc	3,2
  9542  0EC8  0A73               	incf	DELAY_milliseconds@milliseconds+1,w
  9543  0EC9  1903               	btfsc	3,2
  9544  0ECA  0008               	return
  9545                           
  9546                           ;mcc_generated_files/delay.c: 40:         _delay((unsigned long)((1)*(32000000/4000.0)))
      +                          ;
  9547  0ECB  300B               	movlw	11
  9548  0ECC  00F4               	movwf	??_DELAY_milliseconds
  9549  0ECD  3062               	movlw	98
  9550  0ECE                     u2437:
  9551  0ECE  0B89               	decfsz	9,f
  9552  0ECF  2ECE               	goto	u2437
  9553  0ED0  0BF4               	decfsz	??_DELAY_milliseconds,f
  9554  0ED1  2ECE               	goto	u2437
  9555  0ED2  3200               	nop2
  9556  0ED3  2EC2               	goto	l3036
  9557  0ED4                     __end_of_DELAY_milliseconds:
  9558                           
  9559                           	psect	intentry
  9560  0004                     __pintentry:	
  9561 ;; *************** function _INTERRUPT_InterruptManager *****************
  9562 ;; Defined at:
  9563 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  9564 ;; Parameters:    Size  Location     Type
  9565 ;;		None
  9566 ;; Auto vars:     Size  Location     Type
  9567 ;;		None
  9568 ;; Return value:  Size  Location     Type
  9569 ;;                  1    wreg      void 
  9570 ;; Registers used:
  9571 ;;		wreg, status,2, status,0, pclath, cstack
  9572 ;; Tracked objects:
  9573 ;;		On entry : 0/0
  9574 ;;		On exit  : 0/0
  9575 ;;		Unchanged: 0/0
  9576 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9577 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9578 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9579 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9580 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9581 ;;Total ram usage:        0 bytes
  9582 ;; Hardware stack levels used: 1
  9583 ;; Hardware stack levels required when called: 3
  9584 ;; This function calls:
  9585 ;;		_TMR1_ISR
  9586 ;; This function is called by:
  9587 ;;		Interrupt level 1
  9588 ;; This function uses a non-reentrant model
  9589 ;;
  9590                           
  9591  0004                     _INTERRUPT_InterruptManager:
  9592                           
  9593                           ;incstack = 0
  9594  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  9595                           
  9596                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+status,2+status,0+pclath+cstack]
  9597  0005  3180               	pagesel	$
  9598                           
  9599                           ;mcc_generated_files/interrupt_manager.c: 55:     if(INTCONbits.PEIE == 1)
  9600  0006  1F0B               	btfss	11,6	;volatile
  9601  0007  2810               	goto	i1l574
  9602                           
  9603                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         if(PIE1bits.TMR1IE == 1 && PIR1bits.TMR1IF == 1)
  9604  0008  0021               	movlb	1	; select bank1
  9605  0009  1C11               	btfss	17,0	;volatile
  9606  000A  2810               	goto	i1l574
  9607  000B  0020               	movlb	0	; select bank0
  9608  000C  1C11               	btfss	17,0	;volatile
  9609  000D  2810               	goto	i1l574
  9610                           
  9611                           ;mcc_generated_files/interrupt_manager.c: 58:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 59:             TMR1_ISR();
  9612  000E  318E  26B0         	fcall	_TMR1_ISR
  9613  0010                     i1l574:	
  9614                           ;mcc_generated_files/interrupt_manager.c: 60:         }
  9615                           
  9616  0010  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  9617  0011  0009               	retfie
  9618  0012                     __end_of_INTERRUPT_InterruptManager:
  9619                           
  9620                           	psect	text75
  9621  0EB0                     __ptext75:	
  9622 ;; *************** function _TMR1_ISR *****************
  9623 ;; Defined at:
  9624 ;;		line 157 in file "mcc_generated_files/tmr1.c"
  9625 ;; Parameters:    Size  Location     Type
  9626 ;;		None
  9627 ;; Auto vars:     Size  Location     Type
  9628 ;;		None
  9629 ;; Return value:  Size  Location     Type
  9630 ;;                  1    wreg      void 
  9631 ;; Registers used:
  9632 ;;		wreg, status,2, status,0, pclath, cstack
  9633 ;; Tracked objects:
  9634 ;;		On entry : 1F/0
  9635 ;;		On exit  : 0/0
  9636 ;;		Unchanged: 0/0
  9637 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9638 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9639 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9640 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9641 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9642 ;;Total ram usage:        0 bytes
  9643 ;; Hardware stack levels used: 1
  9644 ;; Hardware stack levels required when called: 2
  9645 ;; This function calls:
  9646 ;;		Absolute function
  9647 ;;		_MTOUCH_ScanScheduler
  9648 ;;		_TMR1_DefaultInterruptHandler
  9649 ;;		_TMR1_WriteTimer
  9650 ;; This function is called by:
  9651 ;;		_INTERRUPT_InterruptManager
  9652 ;; This function uses a non-reentrant model
  9653 ;;
  9654                           
  9655                           
  9656                           ;psect for function _TMR1_ISR
  9657  0EB0                     _TMR1_ISR:
  9658                           
  9659                           ;mcc_generated_files/tmr1.c: 161:     PIR1bits.TMR1IF = 0;
  9660                           
  9661                           ;incstack = 0
  9662                           ; Regs used in _TMR1_ISR: [wreg+status,2+status,0+pclath+cstack]
  9663  0EB0  1011               	bcf	17,0	;volatile
  9664                           
  9665                           ;mcc_generated_files/tmr1.c: 162:     TMR1_WriteTimer(timer1ReloadVal);
  9666  0EB1  085E               	movf	_timer1ReloadVal+1,w	;volatile
  9667  0EB2  00F1               	movwf	TMR1_WriteTimer@timerVal+1
  9668  0EB3  085D               	movf	_timer1ReloadVal,w	;volatile
  9669  0EB4  00F0               	movwf	TMR1_WriteTimer@timerVal
  9670  0EB5  318E  262E  318E   	fcall	_TMR1_WriteTimer
  9671                           
  9672                           ;mcc_generated_files/tmr1.c: 164:     if(TMR1_InterruptHandler)
  9673  0EB8  085B               	movf	_TMR1_InterruptHandler,w
  9674  0EB9  045C               	iorwf	_TMR1_InterruptHandler+1,w
  9675  0EBA  1903               	btfsc	3,2
  9676  0EBB  0008               	return
  9677                           
  9678                           ;mcc_generated_files/tmr1.c: 165:     {;mcc_generated_files/tmr1.c: 166:         TMR1_In
      +                          terruptHandler();
  9679  0EBC  085C               	movf	_TMR1_InterruptHandler+1,w
  9680  0EBD  008A               	movwf	10
  9681  0EBE  085B               	movf	_TMR1_InterruptHandler,w
  9682  0EBF  000A               	callw
  9683  0EC0  318E               	pagesel	$
  9684  0EC1  0008               	return
  9685  0EC2                     __end_of_TMR1_ISR:
  9686                           
  9687                           	psect	text76
  9688  0E01                     __ptext76:	
  9689 ;; *************** function _MTOUCH_ScanScheduler *****************
  9690 ;; Defined at:
  9691 ;;		line 72 in file "mcc_generated_files/mtouch/mtouch.c"
  9692 ;; Parameters:    Size  Location     Type
  9693 ;;		None
  9694 ;; Auto vars:     Size  Location     Type
  9695 ;;		None
  9696 ;; Return value:  Size  Location     Type
  9697 ;;                  1    wreg      void 
  9698 ;; Registers used:
  9699 ;;		wreg, status,2, status,0, pclath, cstack
  9700 ;; Tracked objects:
  9701 ;;		On entry : 1F/0
  9702 ;;		On exit  : 1F/0
  9703 ;;		Unchanged: 0/0
  9704 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9705 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9706 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9707 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9708 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9709 ;;Total ram usage:        0 bytes
  9710 ;; Hardware stack levels used: 1
  9711 ;; Hardware stack levels required when called: 1
  9712 ;; This function calls:
  9713 ;;		_TMR1_WriteTimer
  9714 ;; This function is called by:
  9715 ;;		_MTOUCH_Initialize
  9716 ;;		_TMR1_ISR
  9717 ;; This function uses a non-reentrant model
  9718 ;;
  9719                           
  9720                           
  9721                           ;psect for function _MTOUCH_ScanScheduler
  9722  0E01                     _MTOUCH_ScanScheduler:
  9723                           
  9724                           ;mcc_generated_files/mtouch/mtouch.c: 76:     TMR1_WriteTimer(mTouchScanReload);
  9725                           
  9726                           ;incstack = 0
  9727                           ; Regs used in _MTOUCH_ScanScheduler: [wreg+status,2+status,0+pclath+cstack]
  9728  0E01  085A               	movf	_mTouchScanReload+1,w
  9729  0E02  00F1               	movwf	TMR1_WriteTimer@timerVal+1
  9730  0E03  0859               	movf	_mTouchScanReload,w
  9731  0E04  00F0               	movwf	TMR1_WriteTimer@timerVal
  9732  0E05  318E  262E         	fcall	_TMR1_WriteTimer
  9733                           
  9734                           ;mcc_generated_files/mtouch/mtouch.c: 79:     mtouch_time_toScan = 1;
  9735  0E07  01EE               	clrf	_mtouch_time_toScan
  9736  0E08  0AEE               	incf	_mtouch_time_toScan,f
  9737  0E09  0008               	return
  9738  0E0A                     __end_of_MTOUCH_ScanScheduler:
  9739                           
  9740                           	psect	text77
  9741  0D96                     __ptext77:	
  9742 ;; *************** function _TMR1_DefaultInterruptHandler *****************
  9743 ;; Defined at:
  9744 ;;		line 175 in file "mcc_generated_files/tmr1.c"
  9745 ;; Parameters:    Size  Location     Type
  9746 ;;		None
  9747 ;; Auto vars:     Size  Location     Type
  9748 ;;		None
  9749 ;; Return value:  Size  Location     Type
  9750 ;;                  1    wreg      void 
  9751 ;; Registers used:
  9752 ;;		None
  9753 ;; Tracked objects:
  9754 ;;		On entry : 1F/0
  9755 ;;		On exit  : 1F/0
  9756 ;;		Unchanged: 1F/0
  9757 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9758 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9759 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9760 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9761 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9762 ;;Total ram usage:        0 bytes
  9763 ;; Hardware stack levels used: 1
  9764 ;; This function calls:
  9765 ;;		Nothing
  9766 ;; This function is called by:
  9767 ;;		_TMR1_Initialize
  9768 ;;		_TMR1_ISR
  9769 ;; This function uses a non-reentrant model
  9770 ;;
  9771                           
  9772                           
  9773                           ;psect for function _TMR1_DefaultInterruptHandler
  9774  0D96                     _TMR1_DefaultInterruptHandler:
  9775                           
  9776                           ;incstack = 0
  9777                           ; Regs used in _TMR1_DefaultInterruptHandler: []
  9778  0D96  0008               	return
  9779  0D97                     __end_of_TMR1_DefaultInterruptHandler:
  9780                           
  9781                           	psect	text78
  9782  0E2E                     __ptext78:	
  9783 ;; *************** function _TMR1_WriteTimer *****************
  9784 ;; Defined at:
  9785 ;;		line 120 in file "mcc_generated_files/tmr1.c"
  9786 ;; Parameters:    Size  Location     Type
  9787 ;;  timerVal        2    0[COMMON] unsigned short 
  9788 ;; Auto vars:     Size  Location     Type
  9789 ;;		None
  9790 ;; Return value:  Size  Location     Type
  9791 ;;                  1    wreg      void 
  9792 ;; Registers used:
  9793 ;;		wreg
  9794 ;; Tracked objects:
  9795 ;;		On entry : 1F/0
  9796 ;;		On exit  : 1F/0
  9797 ;;		Unchanged: 0/0
  9798 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9799 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9800 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9801 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9802 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9803 ;;Total ram usage:        2 bytes
  9804 ;; Hardware stack levels used: 1
  9805 ;; This function calls:
  9806 ;;		Nothing
  9807 ;; This function is called by:
  9808 ;;		_MTOUCH_ScanScheduler
  9809 ;;		_TMR1_ISR
  9810 ;; This function uses a non-reentrant model
  9811 ;;
  9812                           
  9813                           
  9814                           ;psect for function _TMR1_WriteTimer
  9815  0E2E                     _TMR1_WriteTimer:
  9816                           
  9817                           ;mcc_generated_files/tmr1.c: 120: void TMR1_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr1.c: 121: {;mcc_generated_files/tmr1.c: 122:     if (T1CONbits.nT1SYNC == 1)
  9818                           
  9819                           ;incstack = 0
  9820                           ; Regs used in _TMR1_WriteTimer: [wreg]
  9821  0E2E  1D18               	btfss	24,2	;volatile
  9822  0E2F  2E37               	goto	i1l2758
  9823                           
  9824                           ;mcc_generated_files/tmr1.c: 123:     {;mcc_generated_files/tmr1.c: 125:         T1CONbi
      +                          ts.TMR1ON = 0;
  9825  0E30  1018               	bcf	24,0	;volatile
  9826                           
  9827                           ;mcc_generated_files/tmr1.c: 128:         TMR1H = (uint8_t)(timerVal >> 8);
  9828  0E31  0871               	movf	TMR1_WriteTimer@timerVal+1,w
  9829  0E32  0097               	movwf	23	;volatile
  9830                           
  9831                           ;mcc_generated_files/tmr1.c: 129:         TMR1L = (uint8_t)timerVal;
  9832  0E33  0870               	movf	TMR1_WriteTimer@timerVal,w
  9833  0E34  0096               	movwf	22	;volatile
  9834                           
  9835                           ;mcc_generated_files/tmr1.c: 132:         T1CONbits.TMR1ON =1;
  9836  0E35  1418               	bsf	24,0	;volatile
  9837                           
  9838                           ;mcc_generated_files/tmr1.c: 133:     }
  9839  0E36  0008               	return
  9840  0E37                     i1l2758:
  9841                           
  9842                           ;mcc_generated_files/tmr1.c: 135:     {;mcc_generated_files/tmr1.c: 137:         TMR1H =
      +                           (uint8_t)(timerVal >> 8);
  9843  0E37  0871               	movf	TMR1_WriteTimer@timerVal+1,w
  9844  0E38  0097               	movwf	23	;volatile
  9845                           
  9846                           ;mcc_generated_files/tmr1.c: 138:         TMR1L = (uint8_t)timerVal;
  9847  0E39  0870               	movf	TMR1_WriteTimer@timerVal,w
  9848  0E3A  0096               	movwf	22	;volatile
  9849  0E3B  0008               	return
  9850  0E3C                     __end_of_TMR1_WriteTimer:
  9851  007E                     btemp	set	126	;btemp
  9852  007E                     int$flags	set	126
  9853  007E                     wtemp0	set	126
  9854                           
  9855                           	psect	idloc
  9856                           
  9857                           ;Config register IDLOC0 @ 0x8000
  9858                           ;	unspecified, using default values
  9859  8000                     	org	32768
  9860  8000  3FFF               	dw	16383
  9861                           
  9862                           ;Config register IDLOC1 @ 0x8001
  9863                           ;	unspecified, using default values
  9864  8001                     	org	32769
  9865  8001  3FFF               	dw	16383
  9866                           
  9867                           ;Config register IDLOC2 @ 0x8002
  9868                           ;	unspecified, using default values
  9869  8002                     	org	32770
  9870  8002  3FFF               	dw	16383
  9871                           
  9872                           ;Config register IDLOC3 @ 0x8003
  9873                           ;	unspecified, using default values
  9874  8003                     	org	32771
  9875  8003  3FFF               	dw	16383
  9876                           
  9877                           	psect	config
  9878                           
  9879                           ;Config register CONFIG1 @ 0x8007
  9880                           ;	Oscillator Selection
  9881                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  9882                           ;	Watchdog Timer Enable
  9883                           ;	WDTE = OFF, WDT disabled
  9884                           ;	Power-up Timer Enable
  9885                           ;	PWRTE = OFF, PWRT disabled
  9886                           ;	MCLR Pin Function Select
  9887                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  9888                           ;	Flash Program Memory Code Protection
  9889                           ;	CP = OFF, Program memory code protection is disabled
  9890                           ;	Data Memory Code Protection
  9891                           ;	CPD = OFF, Data memory code protection is disabled
  9892                           ;	Brown-out Reset Enable
  9893                           ;	BOREN = NSLEEP, Brown-out Reset enabled while running and disabled in Sleep
  9894                           ;	Clock Out Enable
  9895                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  9896                           ;	Internal/External Switchover
  9897                           ;	IESO = ON, Internal/External Switchover mode is enabled
  9898                           ;	Fail-Safe Clock Monitor Enable
  9899                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  9900  8007                     	org	32775
  9901  8007  3DE4               	dw	15844
  9902                           
  9903                           ;Config register CONFIG2 @ 0x8008
  9904                           ;	Flash Memory Self-Write Protection
  9905                           ;	WRT = OFF, Write protection off
  9906                           ;	Voltage Regulator Capacitor Enable
  9907                           ;	VCAPEN = OFF, All VCAP pin functionality is disabled
  9908                           ;	PLL Enable
  9909                           ;	PLLEN = ON, 4x PLL enabled
  9910                           ;	Stack Overflow/Underflow Reset Enable
  9911                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  9912                           ;	Brown-out Reset Voltage Selection
  9913                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  9914                           ;	Low-Voltage Programming Enable
  9915                           ;	LVP = ON, Low-voltage programming enabled
  9916  8008                     	org	32776
  9917  8008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    51
    Data        53
    BSS         63
    Persistent  42
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      12
    BANK0            80     33      79
    BANK1            80      0      78
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    Button_Service$2275$0	PTR struct . size(1) Largest target is 51
		 -> mtouch_button(BANK1[51]), 

    Button_Service$2275	PTR FTN(PTR struct .,)void  size(2) Largest target is 1
		 -> Button_State_Disabled(), Button_State_Suspended(), Button_State_ReleaseDebounce(), Button_State_Pressed(), 
		 -> Button_State_PressDebounce(), Button_State_NotPressed(), Button_State_Initializing(), 

    Button_State_Disabled@button	PTR struct . size(1) Largest target is 51
		 -> mtouch_button(BANK1[51]), 

    MTOUCH_Button_Tick$2273	PTR struct . size(1) Largest target is 51
		 -> mtouch_button(BANK1[51]), 

    Button_Reburst_Request@button	PTR struct . size(1) Largest target is 51
		 -> mtouch_button(BANK1[51]), 

    Button_StateMachine$0	PTR struct . size(1) Largest target is 51
		 -> mtouch_button(BANK1[51]), 

    memcpy@d1	PTR void  size(1) Largest target is 51
		 -> mtouch_button(BANK1[51]), 

    memcpy@d	PTR unsigned char  size(1) Largest target is 51
		 -> mtouch_button(BANK1[51]), 

    memcpy@s1	PTR const void  size(2) Largest target is 51
		 -> mtouch_button_init(CODE[51]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 51
		 -> mtouch_button_init(CODE[51]), 

    Button_Baseline_Update@button	PTR struct . size(1) Largest target is 51
		 -> mtouch_button(BANK1[51]), 

    Button_Baseline_Initialize@button	PTR struct . size(1) Largest target is 51
		 -> mtouch_button(BANK1[51]), 

    Button_Reading_Update_Helper@button	PTR struct . size(1) Largest target is 51
		 -> mtouch_button(BANK1[51]), 

    Button_Reading_Update@button	PTR struct . size(1) Largest target is 51
		 -> mtouch_button(BANK1[51]), 

    Button_Deviation_Update@button	PTR struct . size(1) Largest target is 51
		 -> mtouch_button(BANK1[51]), 

    Button_Tick_helper@button	PTR struct . size(1) Largest target is 51
		 -> mtouch_button(BANK1[51]), 

    Button_State_Suspended@button	PTR struct . size(1) Largest target is 51
		 -> mtouch_button(BANK1[51]), 

    Button_State_ReleaseDebounce@button	PTR struct . size(1) Largest target is 51
		 -> mtouch_button(BANK1[51]), 

    Button_State_PressDebounce@button	PTR struct . size(1) Largest target is 51
		 -> mtouch_button(BANK1[51]), 

    Button_State_Pressed@button	PTR struct . size(1) Largest target is 51
		 -> mtouch_button(BANK1[51]), 

    Button_State_NotPressed@button	PTR struct . size(1) Largest target is 51
		 -> mtouch_button(BANK1[51]), 

    Button_State_Initializing@button	PTR struct . size(1) Largest target is 51
		 -> mtouch_button(BANK1[51]), 

    Button_Service@button	PTR struct . size(1) Largest target is 51
		 -> mtouch_button(BANK1[51]), 

    sp__memcpy	PTR void  size(1) Largest target is 51
		 -> mtouch_button(BANK1[51]), 

    MTOUCH_Button_Initialize@button	PTR struct . size(1) Largest target is 51
		 -> mtouch_button(BANK1[51]), 

    Button_StateMachine	PTR FTN(PTR struct .,)void [7] size(2) Largest target is 1
		 -> Button_State_Disabled(), Button_State_Suspended(), Button_State_ReleaseDebounce(), Button_State_Pressed(), 
		 -> Button_State_PressDebounce(), Button_State_NotPressed(), Button_State_Initializing(), 

    callback_notPressed	PTR FTN(enum E2928,)void  size(2) Largest target is 1
		 -> Button_DefaultCallback(), 

    callback_pressed	PTR FTN(enum E2928,)void  size(2) Largest target is 1
		 -> Button_DefaultCallback(), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_DefaultInterruptHandler(), MTOUCH_ScanScheduler(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), TMR1_DefaultInterruptHandler(), MTOUCH_ScanScheduler(), 

    EUSART_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), 

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultErrorHandler(), 

    EUSART_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultOverrunErrorHandler(), 

    EUSART_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultFramingErrorHandler(), 

    Sensor_setSampled@sensor.scanB	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanB_2(), MTOUCH_CVD_ScanB_1(), MTOUCH_CVD_ScanB_0(), 

    Sensor_setSampled@sensor.scanA	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanA_2(), MTOUCH_CVD_ScanA_1(), MTOUCH_CVD_ScanA_0(), 

    Sensor_setSampled@sensor	PTR struct . size(1) Largest target is 27
		 -> mtouch_sensor(BANK1[27]), 

    Sensor_Sampled_Reset@sensor.scanB	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanB_2(), MTOUCH_CVD_ScanB_1(), MTOUCH_CVD_ScanB_0(), 

    Sensor_Sampled_Reset@sensor.scanA	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanA_2(), MTOUCH_CVD_ScanA_1(), MTOUCH_CVD_ScanA_0(), 

    Sensor_Sampled_Reset@sensor	PTR struct . size(1) Largest target is 27
		 -> mtouch_sensor(BANK1[27]), 

    MTOUCH_Sensor_Sampled_ResetAll@sensor	PTR struct . size(1) Largest target is 27
		 -> mtouch_sensor(BANK1[27]), 

    Sensor_setInactive@sensor.scanB	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanB_2(), MTOUCH_CVD_ScanB_1(), MTOUCH_CVD_ScanB_0(), 

    Sensor_setInactive@sensor.scanA	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanA_2(), MTOUCH_CVD_ScanA_1(), MTOUCH_CVD_ScanA_0(), 

    Sensor_setInactive@sensor	PTR struct . size(1) Largest target is 27
		 -> mtouch_sensor(BANK1[27]), 

    Sensor_setActive@sensor.scanB	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanB_2(), MTOUCH_CVD_ScanB_1(), MTOUCH_CVD_ScanB_0(), 

    Sensor_setActive@sensor.scanA	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanA_2(), MTOUCH_CVD_ScanA_1(), MTOUCH_CVD_ScanA_0(), 

    Sensor_setActive@sensor	PTR struct . size(1) Largest target is 27
		 -> mtouch_sensor(BANK1[27]), 

    Sensor_isEnabled@sensor.scanB	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanB_2(), MTOUCH_CVD_ScanB_1(), MTOUCH_CVD_ScanB_0(), 

    Sensor_isEnabled@sensor.scanA	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanA_2(), MTOUCH_CVD_ScanA_1(), MTOUCH_CVD_ScanA_0(), 

    Sensor_isEnabled@sensor	PTR struct . size(1) Largest target is 27
		 -> mtouch_sensor(BANK1[27]), 

    Sensor_setScanFunction@sensor.scanB	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanB_2(), MTOUCH_CVD_ScanB_1(), MTOUCH_CVD_ScanB_0(), 

    Sensor_setScanFunction@sensor.scanA	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanA_2(), MTOUCH_CVD_ScanA_1(), MTOUCH_CVD_ScanA_0(), 

    Sensor_setScanFunction@sensor	PTR struct . size(1) Largest target is 27
		 -> mtouch_sensor(BANK1[27]), 

    Sensor_RawSample_Update@sensor.scanB	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanB_2(), MTOUCH_CVD_ScanB_1(), MTOUCH_CVD_ScanB_0(), 

    Sensor_RawSample_Update@sensor.scanA	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanA_2(), MTOUCH_CVD_ScanA_1(), MTOUCH_CVD_ScanA_0(), 

    Sensor_RawSample_Update@sensor	PTR struct . size(1) Largest target is 27
		 -> mtouch_sensor(BANK1[27]), 

    Sensor_Acq_ExecutePacket@sensor.scanB	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanB_2(), MTOUCH_CVD_ScanB_1(), MTOUCH_CVD_ScanB_0(), 

    Sensor_Acq_ExecutePacket@sensor.scanA	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanA_2(), MTOUCH_CVD_ScanA_1(), MTOUCH_CVD_ScanA_0(), 

    Sensor_Acq_ExecutePacket@sensor	PTR struct . size(1) Largest target is 27
		 -> mtouch_sensor(BANK1[27]), 

    Sensor_Acquisition@sensor.scanB	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanB_2(), MTOUCH_CVD_ScanB_1(), MTOUCH_CVD_ScanB_0(), 

    Sensor_Acquisition@sensor.scanA	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanA_2(), MTOUCH_CVD_ScanA_1(), MTOUCH_CVD_ScanA_0(), 

    Sensor_Acquisition@sensor	PTR struct . size(1) Largest target is 27
		 -> mtouch_sensor(BANK1[27]), 

    Sensor_Service@sensor	PTR struct . size(1) Largest target is 27
		 -> mtouch_sensor(BANK1[27]), 

    S131$scanB	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanB_2(), MTOUCH_CVD_ScanB_1(), MTOUCH_CVD_ScanB_0(), 

    mtouch_sensor.scanB	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanB_2(), MTOUCH_CVD_ScanB_1(), MTOUCH_CVD_ScanB_0(), 

    S131$scanA	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanA_2(), MTOUCH_CVD_ScanA_1(), MTOUCH_CVD_ScanA_0(), 

    mtouch_sensor.scanA	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanA_2(), MTOUCH_CVD_ScanA_1(), MTOUCH_CVD_ScanA_0(), 

    Sensor_scanB	PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanB_2(), MTOUCH_CVD_ScanB_1(), MTOUCH_CVD_ScanB_0(), 

    Sensor_scanA	PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanA_2(), MTOUCH_CVD_ScanA_1(), MTOUCH_CVD_ScanA_0(), 

    callback_sampled	PTR FTN(enum E2707,)void  size(2) Largest target is 1
		 -> Sensor_DefaultCallback(), 


Critical Paths under _main in COMMON

    _main->_MTOUCH_Sensor_RawSample_Get
    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _EUSART_Initialize->_EUSART_SetErrorHandler
    _EUSART_Initialize->_EUSART_SetFramingErrorHandler
    _EUSART_Initialize->_EUSART_SetOverrunErrorHandler
    _MTOUCH_Button_Tick->_Button_Tick_helper
    _Button_Tick_helper->_MTOUCH_Sensor_Enable
    _Sensor_Acq_ExecutePacket->_Sensor_Acq_ExecuteScan
    _Sensor_Acq_ExecuteScan->___bmul
    _MTOUCH_Sensor_Sampled_ResetAll->_Sensor_Sampled_Reset
    _MTOUCH_Sensor_InitializeAll->_MTOUCH_Sensor_Initialize
    _MTOUCH_Sensor_Initialize->_MTOUCH_Sensor_Enable
    _MTOUCH_Sensor_Enable->___bmul
    _MTOUCH_Button_InitializeAll->_memcpy
    _MTOUCH_Sensor_wasSampled->___bmul
    _MTOUCH_Sensor_Disable->___bmul
    _Button_Baseline_Initialize->_MTOUCH_Sensor_RawSample_Get
    _Button_Reading_Update_Helper->_MTOUCH_Sensor_RawSample_Get
    _MTOUCH_Sensor_RawSample_Get->___bmul

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _TMR1_ISR->_TMR1_WriteTimer
    _MTOUCH_ScanScheduler->_TMR1_WriteTimer

Critical Paths under _main in BANK0

    _main->_MTOUCH_Service_Mainloop
    _MTOUCH_Service_Mainloop->_MTOUCH_Sensor_SampleAll
    _MTOUCH_Tick->_MTOUCH_Button_Tick
    _MTOUCH_Button_Tick->_Button_Tick_helper
    _MTOUCH_Sensor_SampleAll->_Sensor_Service
    _Sensor_Service->_Sensor_Acquisition
    _Sensor_Acquisition->_Sensor_Acq_ExecutePacket
    _MTOUCH_Button_InitializeAll->_memcpy
    _MTOUCH_Button_ServiceAll->_Button_Service
    _Button_Service->_Button_Deviation_Update
    _Button_Service->_Button_State_Initializing
    _Button_State_Initializing->_Button_Baseline_Initialize
    _Button_Reading_Update->_Button_Reading_Update_Helper

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                16    16      0   19665
                                             17 BANK0     16    16      0
                 _DELAY_milliseconds
                       _EUSART_Write
            _MTOUCH_Button_isPressed
        _MTOUCH_Sensor_RawSample_Get
            _MTOUCH_Service_Mainloop
                  _SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0    2794
                  _EUSART_Initialize
                  _MTOUCH_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR1_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0     174
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0     294
             _EUSART_SetErrorHandler
      _EUSART_SetFramingErrorHandler
      _EUSART_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetOverrunErrorHandler                        2     0      2      98
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetFramingErrorHandler                        2     0      2      98
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetErrorHandler                               2     0      2      98
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _MTOUCH_Service_Mainloop                              1     1      0   15357
                                             16 BANK0      1     1      0
           _MTOUCH_Button_ServiceAll
                  _MTOUCH_Initialize
            _MTOUCH_Sensor_SampleAll
     _MTOUCH_Sensor_Sampled_ResetAll
                        _MTOUCH_Tick
                 _MTOUCH_needReburst
 ---------------------------------------------------------------------------------
 (2) _MTOUCH_needReburst                                   2     2      0      24
                                              2 COMMON     2     2      0
      _MTOUCH_Button_Reburst_Service
 ---------------------------------------------------------------------------------
 (3) _MTOUCH_Button_Reburst_Service                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _MTOUCH_Tick                                          0     0      0     932
                 _MTOUCH_Button_Tick
 ---------------------------------------------------------------------------------
 (3) _MTOUCH_Button_Tick                                   2     2      0     932
                                              1 BANK0      2     2      0
                 _Button_Tick_helper
 ---------------------------------------------------------------------------------
 (4) _Button_Tick_helper                                   3     3      0     833
                                              8 COMMON     2     2      0
                                              0 BANK0      1     1      0
               _MTOUCH_Sensor_Enable
 ---------------------------------------------------------------------------------
 (2) _MTOUCH_Sensor_SampleAll                              2     2      0    2640
                                             14 BANK0      2     2      0
                     _Sensor_Service
 ---------------------------------------------------------------------------------
 (3) _Sensor_Service                                       5     5      0    2541
                                              9 BANK0      5     5      0
                 _Sensor_Acquisition
             _Sensor_DefaultCallback
            _Sensor_RawSample_Update
                   _Sensor_isEnabled
                  _Sensor_setSampled
                             ___bmul
 ---------------------------------------------------------------------------------
 (4) _Sensor_setSampled                                    1     1      0      55
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _Sensor_RawSample_Update                              1     1      0      77
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _Sensor_DefaultCallback                               1     0      1      53
                                              2 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (4) _Sensor_Acquisition                                   3     3      0    1536
                                              6 BANK0      3     3      0
           _Sensor_Acq_ExecutePacket
                   _Sensor_isEnabled
                   _Sensor_setActive
                 _Sensor_setInactive
                                _abs
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                              2 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (5) _Sensor_setInactive                                   1     1      0      55
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (5) _Sensor_setActive                                     1     1      0      55
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _Sensor_isEnabled                                     1     1      0     110
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (5) _Sensor_Acq_ExecutePacket                             6     6      0     946
                                              0 BANK0      6     6      0
                       _MTOUCH_Delay
                      _MTOUCH_Random
      _MTOUCH_Sensor_Scan_Initialize
             _Sensor_Acq_ExecuteScan
             _Sensor_setScanFunction
 ---------------------------------------------------------------------------------
 (6) _Sensor_setScanFunction                               1     1      0      77
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (6) _Sensor_Acq_ExecuteScan                               4     4      0     555
                                              6 COMMON     4     4      0
                 _MTOUCH_CVD_ScanA_0 *
                 _MTOUCH_CVD_ScanA_1 *
                 _MTOUCH_CVD_ScanA_2 *
                 _MTOUCH_CVD_ScanB_0 *
                 _MTOUCH_CVD_ScanB_1 *
                 _MTOUCH_CVD_ScanB_2 *
                             ___bmul
 ---------------------------------------------------------------------------------
 (7) _MTOUCH_CVD_ScanB_2                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _MTOUCH_CVD_ScanB_1                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _MTOUCH_CVD_ScanB_0                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _MTOUCH_CVD_ScanA_2                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _MTOUCH_CVD_ScanA_1                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _MTOUCH_CVD_ScanA_0                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _MTOUCH_Random                                        1     1      0       0
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (6) _MTOUCH_Delay                                         2     2      0      46
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _MTOUCH_Initialize                                    0     0      0    2326
        _MTOUCH_Button_InitializeAll
        _MTOUCH_Sensor_InitializeAll
     _MTOUCH_Sensor_Sampled_ResetAll
      _MTOUCH_Sensor_Scan_Initialize
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR1_SetInterruptHandler                             2     0      2     174
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _MTOUCH_Sensor_Scan_Initialize                        0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _MTOUCH_Sensor_Sampled_ResetAll                       2     2      0     202
                                              3 COMMON     2     2      0
               _Sensor_Sampled_Reset
 ---------------------------------------------------------------------------------
 (3) _MTOUCH_Sensor_InitializeAll                          2     2      0    1238
                                              0 BANK0      2     2      0
           _MTOUCH_Sensor_Initialize
 ---------------------------------------------------------------------------------
 (4) _MTOUCH_Sensor_Initialize                             2     2      0    1139
                                              8 COMMON     2     2      0
               _MTOUCH_Sensor_Enable
               _Sensor_Sampled_Reset
                             ___bmul
 ---------------------------------------------------------------------------------
 (4) _Sensor_Sampled_Reset                                 1     1      0     103
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (5) _MTOUCH_Sensor_Enable                                 2     2      0     518
                                              6 COMMON     2     2      0
                             ___bmul
 ---------------------------------------------------------------------------------
 (3) _MTOUCH_Button_InitializeAll                          2     2      0     712
                                              7 COMMON     2     2      0
           _MTOUCH_Button_Initialize
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) _memcpy                                              10     6      4     424
                                              2 COMMON     5     1      4
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (2) _MTOUCH_Button_ServiceAll                             2     2      0    9233
                                             13 BANK0      2     2      0
               _Button_Reburst_Clear
                     _Button_Service
 ---------------------------------------------------------------------------------
 (3) _Button_Service                                       3     3      0    9134
                                             10 BANK0      3     3      0
            _Button_Deviation_Update
              _Button_Reading_Update
              _Button_State_Disabled *
          _Button_State_Initializing *
            _Button_State_NotPressed *
         _Button_State_PressDebounce *
               _Button_State_Pressed *
       _Button_State_ReleaseDebounce *
             _Button_State_Suspended *
           _MTOUCH_Button_Initialize
         _MTOUCH_Sensor_isCalibrated
           _MTOUCH_Sensor_wasSampled
 ---------------------------------------------------------------------------------
 (4) _MTOUCH_Sensor_wasSampled                             2     2      0     518
                                              6 COMMON     2     2      0
                             ___bmul
 ---------------------------------------------------------------------------------
 (4) _MTOUCH_Sensor_isCalibrated                           1     1      0       0
 ---------------------------------------------------------------------------------
 (4) _Button_State_Suspended                               1     0      1     913
                                              5 BANK0      1     0      1
             _Button_Baseline_Update
              _MTOUCH_Sensor_Disable
 ---------------------------------------------------------------------------------
 (5) _MTOUCH_Sensor_Disable                                2     2      0     518
                                              6 COMMON     2     2      0
                             ___bmul
 ---------------------------------------------------------------------------------
 (4) _Button_State_ReleaseDebounce                         3     2      1     992
                                              5 BANK0      3     2      1
             _Button_DefaultCallback
             _Button_Reburst_Request
 ---------------------------------------------------------------------------------
 (4) _Button_State_Pressed                                 3     2      1    1088
                                              5 BANK0      3     2      1
             _Button_DefaultCallback
             _Button_Reburst_Request
           _MTOUCH_Button_Initialize
 ---------------------------------------------------------------------------------
 (4) _Button_State_PressDebounce                           3     2      1     899
                                              5 BANK0      3     2      1
             _Button_DefaultCallback
             _Button_Reburst_Request
 ---------------------------------------------------------------------------------
 (5) _Button_DefaultCallback                               1     0      1     239
                                              2 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (4) _Button_State_NotPressed                              3     2      1    1368
                                              5 BANK0      3     2      1
             _Button_Baseline_Update
             _Button_Reburst_Request
           _MTOUCH_Button_Initialize
 ---------------------------------------------------------------------------------
 (4) _MTOUCH_Button_Initialize                             3     3      0     189
                                              2 COMMON     3     3      0
            _MTOUCH_Sensor_Calibrate
 ---------------------------------------------------------------------------------
 (5) _MTOUCH_Sensor_Calibrate                              1     1      0       0
 ---------------------------------------------------------------------------------
 (4) _Button_State_Initializing                            5     4      1    1619
                                              5 BANK0      5     4      1
         _Button_Baseline_Initialize
             _Button_Baseline_Update
             _Button_Reburst_Request
 ---------------------------------------------------------------------------------
 (5) _Button_Reburst_Request                               1     1      0     350
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (5) _Button_Baseline_Update                               7     7      0     302
                                              2 COMMON     7     7      0
 ---------------------------------------------------------------------------------
 (5) _Button_Baseline_Initialize                           5     5      0     657
                                              0 BANK0      5     5      0
        _MTOUCH_Sensor_RawSample_Get
 ---------------------------------------------------------------------------------
 (4) _Button_State_Disabled                                1     0      1      65
                                              5 BANK0      1     0      1
 ---------------------------------------------------------------------------------
 (4) _Button_Reading_Update                                1     1      0     905
                                              3 BANK0      1     1      0
       _Button_Reading_Update_Helper
 ---------------------------------------------------------------------------------
 (5) _Button_Reading_Update_Helper                         3     3      0     807
                                              0 BANK0      3     3      0
        _MTOUCH_Sensor_RawSample_Get
 ---------------------------------------------------------------------------------
 (6) _MTOUCH_Sensor_RawSample_Get                          4     2      2     518
                                              6 COMMON     4     2      2
                             ___bmul
 ---------------------------------------------------------------------------------
 (5) ___bmul                                               4     3      1     456
                                              2 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (4) _Button_Deviation_Update                             15    15      0     296
                                              2 COMMON     5     5      0
                                              0 BANK0     10    10      0
 ---------------------------------------------------------------------------------
 (3) _Button_Reburst_Clear                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _MTOUCH_Button_isPressed                              2     2      0      90
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _EUSART_Write                                         1     1      0      22
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _DELAY_milliseconds                                   3     1      2     250
                                              2 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _INTERRUPT_InterruptManager                           0     0      0     610
                           _TMR1_ISR
 ---------------------------------------------------------------------------------
 (9) _TMR1_ISR                                             0     0      0     610
                   Absolute function *
               _MTOUCH_ScanScheduler *
       _TMR1_DefaultInterruptHandler *
                    _TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (10) _TMR1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _MTOUCH_ScanScheduler                                0     0      0     305
                    _TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (10) _TMR1_WriteTimer                                     2     0      2     305
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (10) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DELAY_milliseconds
   _EUSART_Write
   _MTOUCH_Button_isPressed
   _MTOUCH_Sensor_RawSample_Get
     ___bmul
   _MTOUCH_Service_Mainloop
     _MTOUCH_Button_ServiceAll
       _Button_Reburst_Clear
       _Button_Service
         _Button_Deviation_Update
         _Button_Reading_Update
           _Button_Reading_Update_Helper
             _MTOUCH_Sensor_RawSample_Get
         _Button_State_Disabled *
         _Button_State_Initializing *
           _Button_Baseline_Initialize
             _MTOUCH_Sensor_RawSample_Get
           _Button_Baseline_Update
           _Button_Reburst_Request
         _Button_State_NotPressed *
           _Button_Baseline_Update
           _Button_Reburst_Request
           _MTOUCH_Button_Initialize
             _MTOUCH_Sensor_Calibrate
         _Button_State_PressDebounce *
           _Button_DefaultCallback
           _Button_Reburst_Request
         _Button_State_Pressed *
           _Button_DefaultCallback
           _Button_Reburst_Request
           _MTOUCH_Button_Initialize
         _Button_State_ReleaseDebounce *
           _Button_DefaultCallback
           _Button_Reburst_Request
         _Button_State_Suspended *
           _Button_Baseline_Update
           _MTOUCH_Sensor_Disable
             ___bmul
         _MTOUCH_Button_Initialize *
         _MTOUCH_Sensor_isCalibrated *
         _MTOUCH_Sensor_wasSampled *
           ___bmul
     _MTOUCH_Initialize
       _MTOUCH_Button_InitializeAll
         _MTOUCH_Button_Initialize
         _memcpy
       _MTOUCH_Sensor_InitializeAll
         _MTOUCH_Sensor_Initialize
           _MTOUCH_Sensor_Enable
             ___bmul
           _Sensor_Sampled_Reset
           ___bmul
       _MTOUCH_Sensor_Sampled_ResetAll
         _Sensor_Sampled_Reset
       _MTOUCH_Sensor_Scan_Initialize
       _TMR1_SetInterruptHandler
     _MTOUCH_Sensor_SampleAll
       _Sensor_Service
         _Sensor_Acquisition
           _Sensor_Acq_ExecutePacket
             _MTOUCH_Delay
             _MTOUCH_Random
             _MTOUCH_Sensor_Scan_Initialize
             _Sensor_Acq_ExecuteScan
               _MTOUCH_CVD_ScanA_0 *
               _MTOUCH_CVD_ScanA_1 *
               _MTOUCH_CVD_ScanA_2 *
               _MTOUCH_CVD_ScanB_0 *
               _MTOUCH_CVD_ScanB_1 *
               _MTOUCH_CVD_ScanB_2 *
               ___bmul *
             _Sensor_setScanFunction
           _Sensor_isEnabled
           _Sensor_setActive
           _Sensor_setInactive
           _abs
         _Sensor_DefaultCallback
         _Sensor_RawSample_Update
         _Sensor_isEnabled
         _Sensor_setSampled
         ___bmul
     _MTOUCH_Sensor_Sampled_ResetAll
     _MTOUCH_Tick
       _MTOUCH_Button_Tick
         _Button_Tick_helper
           _MTOUCH_Sensor_Enable
     _MTOUCH_needReburst
       _MTOUCH_Button_Reburst_Service
   _SYSTEM_Initialize
     _EUSART_Initialize
       _EUSART_SetErrorHandler
       _EUSART_SetFramingErrorHandler
       _EUSART_SetOverrunErrorHandler
     _MTOUCH_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
     _WDT_Initialize

 _INTERRUPT_InterruptManager (ROOT)
   _TMR1_ISR
     Absolute function(Fake) *
     _MTOUCH_ScanScheduler *
       _TMR1_WriteTimer
     _TMR1_DefaultInterruptHandler *
     _TMR1_WriteTimer *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      A       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     21      4F       5       98.8%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0      4E       7       97.5%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      A9      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      A9      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Thu Nov 10 20:58:29 2022

                 ?_MTOUCH_Sensor_RawSample_Get 0076                                 ___bmul@product 0074  
                       _Sensor_setScanFunction 0E9F                __size_of_Sensor_Acq_ExecuteScan 0053  
                   __end_of_Sensor_setInactive 0DEB                                            LATA 010C  
                                          LATB 010D                                            l221 03CC  
                                          l225 03E0                                            l704 0142  
                                          l476 0DD0                                            l597 0048  
                                          _GIE 005F                                            u995 0F8D  
                   __end_of_DELAY_milliseconds 0ED4                                _timer1ReloadVal 005D  
                                          _abs 0F84                 ?_EUSART_SetFramingErrorHandler 0072  
                                          wreg 0009               ??_MTOUCH_Sensor_Sampled_ResetAll 0073  
              ?_MTOUCH_Sensor_Sampled_ResetAll 0070               __size_of_MTOUCH_Sensor_SampleAll 0014  
            __size_of_MTOUCH_Sensor_Initialize 0011                      ?_MTOUCH_Sensor_Initialize 0070  
                                         INDF0 0000                                           INDF1 0001  
                                         FSR0H 0005                                           FSR1H 0007  
                                         FSR0L 0004                                           FSR1L 0006  
                           _MTOUCH_CVD_ScanA_0 074F                             _MTOUCH_CVD_ScanA_1 072E  
                           _MTOUCH_CVD_ScanA_2 0770                             _MTOUCH_CVD_ScanB_0 06EC  
                           _MTOUCH_CVD_ScanB_1 06CB                             _MTOUCH_CVD_ScanB_2 070D  
               ??_Button_State_ReleaseDebounce 0026                                           ?_abs 0072  
                                         l3024 07CE                                           l3018 07CC  
                                         l3036 0EC2                                           l3212 0F81  
                                         l3300 05C6                                           l3160 0E63  
                                         l3312 05EE                                           l3306 05CD  
                                         l3156 0E5D                                           l3420 037E  
                                         l3404 0403                                           l3340 0687  
                                         l3180 0448                                           l3244 03BF  
                                         l3350 0E1D                                           l3430 02C2  
                                         l3326 0F55                                           l2606 0FA9  
                                         l3432 02C6                                           l3192 047B  
                                         l3184 044E                                           l3362 0261  
                                         l3370 02EE                                           l3418 037A  
                                         l3194 0480                                           l3186 045F  
                                         l3178 0442                                           l3506 04F0  
                                         l3514 0507                                           l3602 06BB  
                                         l3356 0245                                           l2556 01A7  
                                         l3540 05A5                                           l3460 0E3D  
                                         l3196 0483                                           l3516 0524  
                                         l3358 024D                                           l3286 0561  
                                         l2398 0E4F                                           l2478 0E2C  
                                         l3446 04AC                                           l3376 032E  
                                         l3368 02EA                                           l3296 05C4  
                                         l3720 0514                                           l3394 013A  
                                         l3474 0FBF                                           l3722 0519  
                                         l3388 010F                                           l3580 0EEA  
                                         l3724 0457                                           l3564 07F5  
                                         l3652 0072                                           l3644 006A  
                                         l3558 07EC                                           l3496 0F32  
                                         l3594 06B0                                           l3598 06B9  
                                         TRISA 008C                                           TRISB 008D  
                ?_Button_Reading_Update_Helper 0070                                           u1035 0172  
                                         u1045 01B4                                           u2024 041B  
                                         u2025 041A                                           u2045 0346  
                                         _LATA 010C                                           _LATB 010D  
                                         _LATC 010E                                           u2064 0283  
                                         u2065 0282                                           u2305 009B  
                                         _LATE 0110                                           u2317 06D1  
                                         u2407 0765                                           u2327 06E1  
                                         u2417 0776                                           u2337 06F2  
                                         u2427 0786                                           u2347 0702  
                                         u2437 0ECE                                           u2357 0713  
                                         u2285 0068                                           u1910 022C  
                                         u1815 0537                                           u2367 0723  
                                         u1905 01F6                                           u1825 0552  
                                         u2377 0734                                           u1915 0228  
                                         u2387 0744                                           u2397 0755  
                                         u1795 0673                                           u1965 0313  
                                         u1995 0123                     Button_State_Pressed@button 0025  
                                         _WPUB 020D                                           _WPUE 0210  
            __size_of_Sensor_Acq_ExecutePacket 0055                      ?_Sensor_Acq_ExecutePacket 0070  
                        _Button_State_Disabled 0D99                             _MTOUCH_needReburst 0DF9  
                                         abs@a 0072          __end_of_MTOUCH_Button_Reburst_Service 0004  
       __size_of_MTOUCH_Button_Reburst_Service 0002                  _MTOUCH_Button_Reburst_Service 0002  
                                         _main 0041           __size_of_MTOUCH_Button_InitializeAll 001A  
                                         fsr0h 0005                                           fsr1h 0007  
                                         indf0 0000                                           fsr0l 0004  
                                         indf1 0001                                           fsr1l 0006  
         __size_of_MTOUCH_Sensor_InitializeAll 000F                                           btemp 007E  
                          ?_MTOUCH_CVD_ScanA_0 0070                            ?_MTOUCH_CVD_ScanA_1 0070  
                          ?_MTOUCH_CVD_ScanA_2 0070                            ?_MTOUCH_CVD_ScanB_0 0070  
                          ?_MTOUCH_CVD_ScanB_1 0070                            ?_MTOUCH_CVD_ScanB_2 0070  
                                         start 0012                     ??_TMR1_SetInterruptHandler 0074  
                            ___bmul@multiplier 0075                            ?_MTOUCH_needReburst 0070  
                                        ADCON0 009D                       ?_MTOUCH_Service_Mainloop 0070  
             __size_of_MTOUCH_Button_isPressed 001F                  __size_of_Button_State_Pressed 0054  
                                        ??_abs 0074                    ?_Button_Baseline_Initialize 0070  
                ??_MTOUCH_Sensor_RawSample_Get 0078                  Sensor_RawSample_Update@sensor 0072  
                    __size_of_Sensor_isEnabled 000D                                  ?_EUSART_Write 0070  
               __size_of_OSCILLATOR_Initialize 0007                    ?_Button_State_PressDebounce 0025  
                __end_of_OSCILLATOR_Initialize 0DF9                                          ?_main 0070  
                                        _ADRES 009B                           ??_MTOUCH_CVD_ScanA_0 0072  
                         ??_MTOUCH_CVD_ScanA_1 0072                           ??_MTOUCH_CVD_ScanA_2 0072  
                         ??_MTOUCH_CVD_ScanB_0 0072                           ??_MTOUCH_CVD_ScanB_1 0072  
                         ??_MTOUCH_CVD_ScanB_2 0072                                          _T1CON 0018  
                      __size_of_Button_Service 0047                                          i1l574 0010  
                                        _RCSTA 019D                                          _TMR1H 0017  
                                        _TMR1L 0016                                          _TRISA 008C  
                                        _TRISB 008D                                          _TRISC 008E  
                                        _TRISE 0090                                          _TXREG 019A  
                                        _TXSTA 019E                __size_of_Button_DefaultCallback 0001  
                  MTOUCH_Sensor_Disable@sensor 0077                           ??_MTOUCH_needReburst 0072  
                             __end_of_TMR1_ISR 0EC2                __size_of_Button_State_Suspended 0012  
              __size_of_Sensor_DefaultCallback 0001                        __size_of_Sensor_Service 004C  
        __end_of_MTOUCH_Sensor_Scan_Initialize 0DAD         __size_of_MTOUCH_Sensor_Scan_Initialize 0005  
                _MTOUCH_Sensor_Scan_Initialize 0DA8                                 _WDT_Initialize 0DA4  
                      Sensor_setSampled@sensor 0072                           _Button_Reburst_Clear 0D9A  
                       _Sensor_Acq_ExecuteScan 0436                                          main@i 003F  
             __size_of_Button_State_NotPressed 008F                        __end_of_TMR1_Initialize 0F6D  
                                        pclath 000A                           _Sensor_Sampled_Reset 0DD6  
                                        status 0003                                          wtemp0 007E  
                    __size_of_Sensor_setActive 0007                                _TMR1_WriteTimer 0E2E  
                       Sensor_isEnabled@sensor 0072                                __initialization 0014  
                                 __end_of_main 00D2                          __end_of_MTOUCH_Random 0E5B  
                               ??_EUSART_Write 0072                    ?_INTERRUPT_InterruptManager 0070  
                 __end_of_MTOUCH_ScanScheduler 0E0A               __end_of_MTOUCH_Button_Initialize 0653  
                                       ??_main 0031                        _MTOUCH_Sensor_Calibrate 0D97  
                      ??_Button_Reading_Update 007A           MTOUCH_Sensor_Sampled_ResetAll@sensor 0074  
                     ?_Button_Deviation_Update 0070                         __end_of_WDT_Initialize 0DA8  
                                 ?_MTOUCH_Tick 0070                   Button_Baseline_Update@button 0078  
                        ?_Button_Reburst_Clear 0070              _EUSART_DefaultFramingErrorHandler 0000  
                                       _ADCON0 009D                                         _ADCON1 009E  
                   _EUSART_OverrunErrorHandler 0061           __size_of_MTOUCH_Sensor_RawSample_Get 0017  
                                       _APFCON 011D                                         _ANSELA 018C  
                                       _ANSELB 018D                                         _BORCON 0116  
                                       _T1GCON 0019                         ?_Button_State_Disabled 0025  
                      TMR1_WriteTimer@timerVal 0070                                         i1l2758 0E37  
                        ?_Sensor_Sampled_Reset 0070                                         _OSCCON 0099  
                                       _SPBRGH 019C                                         _SPBRGL 019B  
                                       _WDTCON 0097              MTOUCH_Button_InitializeAll@button 0078  
               ??_Button_Reading_Update_Helper 0020                         _Button_DefaultCallback 0D98  
              __end_of_MTOUCH_Service_Mainloop 06CB                         _Button_State_Suspended 0ED4  
               ?_MTOUCH_Button_Reburst_Service 0070           __end_of_TMR1_DefaultInterruptHandler 0D97  
        __size_of_TMR1_DefaultInterruptHandler 0001                   _TMR1_DefaultInterruptHandler 0D96  
                       _Sensor_DefaultCallback 07FF                 __size_of_MTOUCH_Sensor_Disable 0011  
                                _packet_sample 0065                  __end_of_MTOUCH_Sensor_Disable 0E7D  
                                       ___bmul 0E5B                   Sensor_DefaultCallback@sensor 0072  
                     ??_Button_Reburst_Request 0072                                         _memcpy 067E  
             __end_of_MTOUCH_Button_ServiceAll 0EF8                        _MTOUCH_Sensor_SampleAll 07EB  
                 Button_DefaultCallback@button 0072                                ?_WDT_Initialize 0070  
                     ?_Sensor_RawSample_Update 0070                     __end_of_Sensor_Acquisition 05F4  
                      ?_Button_Baseline_Update 0070       TMR1_SetInterruptHandler@InterruptHandler 0072  
           Button_State_ReleaseDebounce@button 0025                        __end_of_TMR1_WriteTimer 0E3C  
              MTOUCH_Sensor_RawSample_Get@name 0079                               ?_TMR1_Initialize 0070  
                            _SYSTEM_Initialize 0EF8                        __end_of__initialization 003D  
          __size_of_Button_Baseline_Initialize 002B                 ?_MTOUCH_Sensor_Scan_Initialize 0070  
          __size_of_Button_State_PressDebounce 005B                             ?_SYSTEM_Initialize 0070  
                          _Button_StateMachine 0041                     __end_of_Button_Tick_helper 04DA  
                MTOUCH_Sensor_Calibrate@sensor 0070                            ___bmul@multiplicand 0072  
                      ?_Sensor_setScanFunction 0070                                 __pcstackCOMMON 0070  
                      _MTOUCH_Button_isPressed 07B1                                   __pidataBANK0 0FE6  
                                 __pidataBANK1 07D0                            ??_SYSTEM_Initialize 007A  
                                    ?_TMR1_ISR 0070                  ?_TMR1_DefaultInterruptHandler 0070  
                   __end_of_MTOUCH_Button_Tick 0F43               __end_of_MTOUCH_Sensor_Initialize 0E9F  
                    ??_MTOUCH_Sensor_Calibrate 0072                               _Sensor_isEnabled 0E21  
              __end_of_Button_Deviation_Update 026B                       Sensor_setInactive@sensor 0072  
                               _Button_Service 0571               __end_of_Sensor_Acq_ExecutePacket 03E2  
                   ?_Button_State_Initializing 0025                           Button_Service@button 002C  
                               _OPTION_REGbits 0095                 __end_of_Button_Baseline_Update 01E8  
                       ??_Button_Reburst_Clear 0072                           Sensor_Service@sensor 002D  
                     _MTOUCH_Button_Initialize 0627                ??_EUSART_SetOverrunErrorHandler 0074  
                               _Sensor_Service 04DA                        _Button_State_NotPressed 00D2  
                __size_of_MTOUCH_Sensor_Enable 0011                             _Sensor_setInactive 0DE4  
                    __end_of_SYSTEM_Initialize 0F0A                              _lowpowerActivated 0069  
             MTOUCH_Sensor_isCalibrated@sensor 0070                         ??_Sensor_Sampled_Reset 0072  
                                   __pbssBANK0 0065                                     __pbssBANK1 00A0  
                         __end_of_EUSART_Write 0DD6                             _DELAY_milliseconds 0EC2  
                         _MTOUCH_ScanScheduler 0E01                               _mTouchScanReload 0059  
                          ?_Sensor_setInactive 0070                               _Sensor_setActive 0DDD  
                           Sensor_Service@name 002B                     __end_of_mtouch_button_init 0627  
               __end_of_Sensor_setScanFunction 0EB0                            ?_DELAY_milliseconds 0072  
                                   __pmaintext 0041                                  ?_MTOUCH_Delay 0070  
                                      ?___bmul 0072                                     ??_TMR1_ISR 0072  
               MTOUCH_Sensor_wasSampled@sensor 0077                                     __pintentry 0004  
                       __end_of_Button_Service 05B8                                        ?_memcpy 0072  
                                      _BAUDCON 019F                __size_of_Button_Reburst_Request 0003  
          __end_of_MTOUCH_Button_InitializeAll 0FCC                    _MTOUCH_Button_InitializeAll 0FB2  
          __end_of_MTOUCH_Sensor_InitializeAll 0E4B                    _MTOUCH_Sensor_InitializeAll 0E3C  
                    ??_MTOUCH_Sensor_SampleAll 002E                   Button_Reburst_Request@button 0072  
              __end_of_Sensor_RawSample_Update 0FB2                           ??_Sensor_setInactive 0072  
            __size_of_MTOUCH_Sensor_wasSampled 0014                      ?_MTOUCH_Sensor_wasSampled 0070  
                  Button_State_Disabled@button 0025              __end_of_Button_State_Initializing 0332  
                       __end_of_Sensor_Service 0526                       _MTOUCH_Button_ServiceAll 0EE6  
                         ??_DELAY_milliseconds 0074                        ?_Sensor_Acq_ExecuteScan 0070  
                MTOUCH_Sensor_SampleAll@sensor 002F                                        _OSCTUNE 0098  
             __size_of_MTOUCH_Service_Mainloop 0023                   __end_of_Button_State_Pressed 0436  
                     ??_EUSART_SetErrorHandler 0074               Button_Baseline_Initialize@button 0024  
                             ?_TMR1_WriteTimer 0070                           __size_of_MTOUCH_Tick 0003  
                        ?_MTOUCH_ScanScheduler 0070                      ??_MTOUCH_Button_isPressed 0072  
                               ??_MTOUCH_Delay 0072                                 _packet_counter 007B  
                      Sensor_Acquisition@retry 0027                                __size_of___bmul 0011  
               MTOUCH_Button_Initialize@button 0074                                ?_Button_Service 0070  
                              __size_of_memcpy 002A                                        __ptext1 0EF8  
                                      __ptext2 0DA4                                        __ptext3 0F57  
                                      __ptext4 0FCC                                        __ptext5 0DF2  
                                      __ptext6 0791                                        __ptext7 0DB2  
                                      __ptext8 0DBD                                        __ptext9 0DAD  
                  Button_Reading_Update@button 0023                 ??_TMR1_DefaultInterruptHandler 0070  
                  __size_of_MTOUCH_CVD_ScanA_0 0021                    __size_of_MTOUCH_CVD_ScanA_1 0021  
                  __size_of_MTOUCH_CVD_ScanA_2 0021                    __size_of_MTOUCH_CVD_ScanB_0 0021  
                  __size_of_MTOUCH_CVD_ScanB_1 0021                    __size_of_MTOUCH_CVD_ScanB_2 0021  
                                    _T1CONbits 0018                       _MTOUCH_Sensor_Initialize 0E8E  
               __end_of_Sensor_Acq_ExecuteScan 0489                          _OSCILLATOR_Initialize 0DF2  
                                 __size_of_abs 0017                      ??_Button_State_NotPressed 0026  
                              ?_Sensor_Service 0070              __size_of_TMR1_SetInterruptHandler 0006  
                     ??_PIN_MANAGER_Initialize 0072                      ?_TMR1_SetInterruptHandler 0072  
                      ??_Button_State_Disabled 007A                 __size_of_Button_Reading_Update 000D  
                  __size_of_MTOUCH_needReburst 0008                  __end_of_Button_Reading_Update 0E21  
            MTOUCH_Sensor_InitializeAll@sensor 0021                       _Sensor_Acq_ExecutePacket 038D  
                             _callback_sampled 0057                     __size_of_SYSTEM_Initialize 0012  
                                      main@raw 0039                                        clrloop0 0DC4  
                             _callback_pressed 0051                 MTOUCH_Sensor_Initialize@sensor 0079  
                         end_of_initialization 003D                         _Button_Reburst_Request 0D9E  
                      ?_Button_DefaultCallback 0072          __end_of_EUSART_SetOverrunErrorHandler 0DB7  
       __size_of_EUSART_SetOverrunErrorHandler 0005                  _EUSART_SetOverrunErrorHandler 0DB2  
                                      memcpy@d 0024                                        memcpy@n 0074  
                                      memcpy@s 0021                                        init_ram 0DC9  
                                      initloop 0DCA                        ?_Button_State_Suspended 0025  
                      ?_Sensor_DefaultCallback 0072               __size_of_Button_Deviation_Update 0083  
                            _EUSART_Initialize 0791                   ??_MTOUCH_Sensor_isCalibrated 0072  
                           ?_EUSART_Initialize 0070            __end_of_MTOUCH_Sensor_RawSample_Get 0F84  
                  _MTOUCH_Sensor_RawSample_Get 0F6D                            _mtouch_request_init 006D  
                                MTOUCH_Delay@i 0073                            ??_EUSART_Initialize 0074  
                             ??_WDT_Initialize 0072                         Sensor_setActive@sensor 0072  
              ??_MTOUCH_Button_Reburst_Service 0072                  Button_Deviation_Update@button 0072  
                        __size_of_EUSART_Write 0007                     MTOUCH_Sensor_Enable@sensor 0077  
                 _MTOUCH_Button_isPressed$1382 0072                            _callback_notPressed 004F  
          __size_of_MTOUCH_Sensor_isCalibrated 0002                 __end_of_Button_DefaultCallback 0D99  
              __size_of_EUSART_SetErrorHandler 0005                         ??_MTOUCH_ScanScheduler 0072  
                       _button_reburst_request 0067                             _sensor_globalFlags 006C  
               __end_of_Button_State_Suspended 0EE6                         __size_of_MTOUCH_Random 0010  
                     __end_of_Sensor_isEnabled 0E2E                 __end_of_Sensor_DefaultCallback 0800  
                    __end_of_EUSART_Initialize 07B1                   Sensor_Acq_ExecuteScan@result 0078  
             __size_of_Sensor_RawSample_Update 0017                             _Sensor_Acquisition 05B8  
                         _Button_State_Pressed 03E2                                 __end_of___bmul 0E6C  
                   _EUSART_DefaultErrorHandler 0000                            ?_Sensor_Acquisition 0070  
                        _MTOUCH_Sensor_Disable 0E6C                     ??_MTOUCH_Button_Initialize 0072  
              ??_MTOUCH_Sensor_Scan_Initialize 0072                                   _EUSART_Write 0DCF  
                            __size_of_TMR1_ISR 0012                  Sensor_Acq_ExecutePacket@error 0024  
                           _Button_Tick_helper 0489                                 __end_of_memcpy 06A8  
                       ?_OSCILLATOR_Initialize 0070                            MTOUCH_Button_Tick@i 0022  
                     __end_of_Sensor_setActive 0DE4                    ??_Button_State_Initializing 0026  
                          start_initialization 0014                        _MTOUCH_Service_Mainloop 06A8  
              __size_of_PIN_MANAGER_Initialize 001A                           __end_of_MTOUCH_Delay 0E14  
                           _MTOUCH_Button_Tick 0F30                            ?_Button_Tick_helper 0070  
                                  __end_of_abs 0F9B                           ??_Sensor_Acquisition 0026  
                          ?_MTOUCH_Button_Tick 0070                Button_State_Initializing@button 0025  
               ?_EUSART_SetOverrunErrorHandler 0072               __end_of_MTOUCH_Sensor_wasSampled 0F57  
                         ??_Button_Tick_helper 0078                       __size_of_TMR1_Initialize 0016  
                 __end_of_MTOUCH_Sensor_Enable 0E8E                     _EUSART_FramingErrorHandler 0063  
                                     ??___bmul 0073                          ?_Button_State_Pressed 0025  
                       _EUSART_SetErrorHandler 0DAD                     ??_MTOUCH_Button_ServiceAll 002D  
                                  __pdataBANK0 0041                                    __pdataBANK1 00D3  
                                _MTOUCH_Random 0E4B                                       ??_memcpy 0076  
                 ??_Button_Baseline_Initialize 0020                           ??_MTOUCH_Button_Tick 0021  
                           _mtouch_button_init 05F4                     Sensor_Sampled_Reset@sensor 0072  
                 ??_Button_State_PressDebounce 0026                                    __pbssCOMMON 007A  
                                    ___latbits 0003                                  __pcstackBANK0 0020  
                __size_of_Button_Reburst_Clear 0002                 MTOUCH_Button_ServiceAll@button 002E  
                          Sensor_Service@error 002C                  __size_of_Sensor_Sampled_Reset 0007  
                   __size_of_EUSART_Initialize 0020                        _Button_Deviation_Update 01E8  
                    _Button_State_Initializing 02D6             __end_of_MTOUCH_Sensor_isCalibrated 0D9E  
                   _MTOUCH_Sensor_isCalibrated 0D9C                                      __pnvBANK0 005B  
                            _Sensor_setSampled 0DEB                         _PIN_MANAGER_Initialize 0FCC  
                             ??_Button_Service 002A                       ?_MTOUCH_Sensor_Calibrate 0070  
                           ?_Sensor_setSampled 0070             Button_Reading_Update_Helper@button 0022  
             __end_of_TMR1_SetInterruptHandler 0DBD                     ??_MTOUCH_Sensor_Initialize 0078  
                       ?_MTOUCH_Sensor_Disable 0070                                 ?_MTOUCH_Random 0070  
                             ??_Sensor_Service 0029                     ??_Sensor_Acq_ExecutePacket 0020  
                 ??_INTERRUPT_InterruptManager 0072                            ??_Sensor_setSampled 0072  
                    ??_MTOUCH_Service_Mainloop 0030                    __size_of_Sensor_setInactive 0007  
               Sensor_Acq_ExecutePacket@sensor 0025                        ?_Button_Reburst_Request 0070  
                  __size_of_DELAY_milliseconds 0012                                  ??_MTOUCH_Tick 007A  
               __size_of_Button_State_Disabled 0001                  __end_of_Button_State_Disabled 0D9A  
                    __end_of_Sensor_setSampled 0DF2         EUSART_SetErrorHandler@interruptHandler 0072  
                                     _LATCbits 010E                             _currentScannSensor 006B  
                      _Sensor_RawSample_Update 0F9B                                      clear_ram0 0DC3  
                                     _PIE1bits 0091                              _eusartRxLastError 0068  
                     __size_of_TMR1_WriteTimer 000E            __size_of_INTERRUPT_InterruptManager 000E  
                                     _PIR1bits 0011                ??_EUSART_SetFramingErrorHandler 0074  
                       ??_Button_State_Pressed 0026                 DELAY_milliseconds@milliseconds 0072  
       __end_of_MTOUCH_Sensor_Sampled_ResetAll 0F1D        __size_of_MTOUCH_Sensor_Sampled_ResetAll 0013  
               _MTOUCH_Sensor_Sampled_ResetAll 0F0A                       ?_MTOUCH_Sensor_SampleAll 0070  
            _EUSART_DefaultOverrunErrorHandler 0000                                       _TMR1_ISR 0EB0  
                     _MTOUCH_Sensor_wasSampled 0F43                             _mtouch_time_toScan 006E  
                   __end_of_MTOUCH_CVD_ScanA_0 0770                     __end_of_MTOUCH_CVD_ScanA_1 074F  
                   __end_of_MTOUCH_CVD_ScanA_2 0791                     __end_of_MTOUCH_CVD_ScanB_0 070D  
                   __end_of_MTOUCH_CVD_ScanB_1 06EC                     __end_of_MTOUCH_CVD_ScanB_2 072E  
                     ??_Button_Baseline_Update 0072                              ??_TMR1_Initialize 0074  
                                   _ADCON0bits 009D                          __size_of_MTOUCH_Delay 000A  
                   __end_of_MTOUCH_needReburst 0E01                 __end_of_Button_Reburst_Request 0DA1  
                                    main@touch 0033                           _MTOUCH_Sensor_Enable 0E7D  
                     Button_Tick_helper@button 0020                      ??_Button_Deviation_Update 0020  
                        _Button_Reading_Update 0E14                       ??_Sensor_setScanFunction 0072  
                     ?_MTOUCH_Button_isPressed 0070                              ?_Sensor_isEnabled 0070  
                          __end_of_MTOUCH_Tick 0DA4                              _MTOUCH_Initialize 0F1D  
              __end_of_MTOUCH_Sensor_Calibrate 0D98                             ??_Sensor_isEnabled 0072  
                           ?_MTOUCH_Initialize 0070                                      memcpy@tmp 0020  
                              ??_MTOUCH_Random 0072                                   _MTOUCH_Delay 0E0A  
                                 _sample_delay 006A                        ??_OSCILLATOR_Initialize 0072  
           __end_of_Button_Baseline_Initialize 067E                     _Button_Baseline_Initialize 0653  
                     Sensor_Acquisition@sensor 0028                            _EUSART_ErrorHandler 005F  
                          ??_MTOUCH_Initialize 007A             __end_of_Button_State_PressDebounce 038D  
                   _Button_State_PressDebounce 0332                       ?_Button_State_NotPressed 0025  
         __end_of_Button_State_ReleaseDebounce 02D6          __size_of_Button_State_ReleaseDebounce 006B  
                 _Button_State_ReleaseDebounce 026B                       _TMR1_SetInterruptHandler 0DB7  
                           Button_Service@name 002B                          _TMR1_InterruptHandler 005B  
                            ?_Sensor_setActive 0070                                   _Sensor_scanA 0055  
                                 _Sensor_scanB 0053                             ??_Sensor_setActive 0072  
                        ?_MTOUCH_Sensor_Enable 0070                                       __ptext10 06A8  
                                     __ptext11 0DF9                                       __ptext20 07FF  
                                     __ptext12 0002                                       __ptext21 05B8  
                                     __ptext13 0DA1                                       __ptext30 06EC  
                                     __ptext22 0F84                                       __ptext14 0F30  
                                     __ptext31 070D                                       __ptext23 0DE4  
                                     __ptext15 0489                                       __ptext40 0F0A  
                                     __ptext32 072E                                       __ptext24 0DDD  
                                     __ptext16 07EB                                       __ptext41 0E3C  
                                     __ptext33 074F                                       __ptext25 0E21  
                                     __ptext17 04DA                                       __ptext50 0D9C  
                                     __ptext42 0E8E                                       __ptext34 0770  
                                     __ptext26 038D                                       __ptext18 0DEB  
                                     __ptext51 0D99                                       __ptext43 0DD6  
                                     __ptext35 0E4B                                       __ptext27 0E9F  
                                     __ptext19 0F9B                                       __ptext60 0627  
                                     __ptext52 026B                                       __ptext44 0E7D  
                                     __ptext36 0E0A                                       __ptext28 0436  
                                     __ptext61 0D97                                       __ptext53 03E2  
                                     __ptext45 0FB2                                       __ptext37 0F1D  
                                     __ptext29 06CB                                       __ptext70 0D9A  
                                     __ptext62 0D9E                                       __ptext54 0332  
                                     __ptext46 067E                                       __ptext38 0DB7  
                                     __ptext71 07B1                                       __ptext63 0161  
                                     __ptext55 00D2                                       __ptext47 0EE6  
                                     __ptext39 0DA8                                       __ptext72 0DCF  
                                     __ptext64 0653                                       __ptext56 02D6  
                                     __ptext48 0571                                       __ptext73 0EC2  
                                     __ptext65 0E14                                       __ptext57 0ED4  
                                     __ptext49 0F43                                       __ptext66 0526  
                                     __ptext58 0E6C                                       __ptext75 0EB0  
                                     __ptext67 0F6D                                       __ptext59 0D98  
                                     __ptext76 0E01                                       __ptext68 0E5B  
                                     __ptext77 0D96                                       __ptext69 01E8  
                                     __ptext78 0E2E                      __end_of_MTOUCH_Initialize 0F30  
                    ??_Sensor_RawSample_Update 0072            Sensor_Acq_ExecutePacket@ADCON0_temp 0021  
          Sensor_Acq_ExecutePacket@ADCON1_temp 0022                  __size_of_MTOUCH_ScanScheduler 0009  
                   __size_of_Sensor_setSampled 0007                                  __size_of_main 0091  
              __end_of_MTOUCH_Sensor_SampleAll 07FF                   Button_State_Suspended@button 0025  
                      ?_EUSART_SetErrorHandler 0072                  MTOUCH_needReburst@needReburst 0073  
EUSART_SetOverrunErrorHandler@interruptHandler 0072                   Sensor_setScanFunction@sensor 0072  
                                     int$flags 007E                       ??_Sensor_Acq_ExecuteScan 0076  
           __size_of_Button_State_Initializing 005C             __end_of_INTERRUPT_InterruptManager 0012  
                   _INTERRUPT_InterruptManager 0004              Sensor_Acq_ExecutePacket@GIE_state 0023  
        __end_of_EUSART_SetFramingErrorHandler 0DC3         __size_of_EUSART_SetFramingErrorHandler 0006  
                _EUSART_SetFramingErrorHandler 0DBD                              ??_TMR1_WriteTimer 0072  
              __size_of_Button_Baseline_Update 0087                   ?_MTOUCH_Button_InitializeAll 0070  
                 ?_MTOUCH_Sensor_InitializeAll 0070                  ?_Button_State_ReleaseDebounce 0025  
                                _mtouch_button 00A0                                     _INTCONbits 000B  
                                _mtouch_sensor 00D3                                       memcpy@d1 0023  
                                     memcpy@s1 0072                __end_of_MTOUCH_Button_isPressed 07D0  
                                  _MTOUCH_Tick 0DA1                         ?_Button_Reading_Update 0070  
             Button_Deviation_Update@deviation 0073                        __size_of_WDT_Initialize 0004  
                 MTOUCH_Button_Initialize@name 0073              __size_of_MTOUCH_Button_Initialize 002C  
                                     intlevel1 0000                      ?_MTOUCH_Button_Initialize 0070  
                  __size_of_Sensor_Acquisition 003C                __size_of_Sensor_setScanFunction 0011  
                      ?_PIN_MANAGER_Initialize 0070                 __end_of_EUSART_SetErrorHandler 0DB2  
                  ?_MTOUCH_Sensor_isCalibrated 0070                              MTOUCH_Random@seed 007A  
                      ??_MTOUCH_Sensor_Disable 0076                    __size_of_Button_Tick_helper 0051  
                 __end_of_Button_Reburst_Clear 0D9C                __end_of_Button_State_NotPressed 0161  
EUSART_SetFramingErrorHandler@interruptHandler 0072                   __end_of_Sensor_Sampled_Reset 0DDD  
                  __size_of_MTOUCH_Button_Tick 0013                                  __pstringtext1 05F4  
                ??_MTOUCH_Button_InitializeAll 0077                       ??_Button_DefaultCallback 0073  
                ??_MTOUCH_Sensor_InitializeAll 0020               __size_of_MTOUCH_Sensor_Calibrate 0001  
                       ??_MTOUCH_Sensor_Enable 0076                       ??_Button_State_Suspended 007A  
                     ??_Sensor_DefaultCallback 0073           __end_of_Button_Reading_Update_Helper 0571  
        __size_of_Button_Reading_Update_Helper 004B                   _Button_Reading_Update_Helper 0526  
            __size_of_MTOUCH_Button_ServiceAll 0012                      ?_MTOUCH_Button_ServiceAll 0070  
                Button_State_NotPressed@button 0025                             EUSART_Write@txData 0072  
                   __size_of_MTOUCH_Initialize 0013                 __end_of_PIN_MANAGER_Initialize 0FE6  
                       _Button_Baseline_Update 0161                    MTOUCH_Button_isPressed@name 0073  
                   ??_MTOUCH_Sensor_wasSampled 0076                                _TMR1_Initialize 0F57  
             Button_State_PressDebounce@button 0025  
